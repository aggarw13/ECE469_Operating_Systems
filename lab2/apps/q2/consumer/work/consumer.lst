 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 293
    4                      ; Text size: 4540
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <synch lock number> <handle_to_page_ma"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c73796e	
   85  0000302c  6368206c	
   85  00003030  6f636b20	
   85  00003034  6e756d62	
   85  00003038  65723e20	
   85  0000303c  3c68616e	
   85  00003040  646c655f	
   85  00003044  746f5f70	
   85  00003048  6167655f	
   85  0000304c  6d61    	
   86  0000304e  70706564	.ascii "pped_semaphore>\n\000"
   86  00003052  5f73656d	
   86  00003056  6170686f	
   86  0000305a  72653e0a	
   86  0000305e  00      	
   87  0000305f          	.align 2
   88  00003060          	LC2_LF0:
   89  00003060  436f756c	.ascii "Could not map the virtual address to the memory in pid : %d\000"
   89  00003064  64206e6f	
   89  00003068  74206d61	
   89  0000306c  70207468	
   89  00003070  65207669	
   89  00003074  72747561	
   89  00003078  6c206164	
   89  0000307c  64726573	
   89  00003080  7320746f	
   89  00003084  20746865	
   89  00003088  206d656d	
   89  0000308c  6f727920	
   89  00003090  696e2070	
   89  00003094  6964203a	
   89  00003098  20256400	
   90  0000309c          	.align 2
   91  0000309c          	LC3_LF0:
   92  0000309c  2c206578	.ascii ", exiting...\n\000"
   92  000030a0  6974696e	
   92  000030a4  672e2e2e	
   92  000030a8  0a00    	
   93  000030aa          	.align 2
   94  000030ac          	LC4_LF0:
   95  000030ac  436f6e73	.ascii "Consumer %d : Removed %c\000"
   95  000030b0  756d6572	
   95  000030b4  20256420	
   95  000030b8  3a205265	
   95  000030bc  6d6f7665	
   95  000030c0  64202563	
   95  000030c4  00      	
   96  000030c5          	.align 2
   97  000030c8          	LC5_LF0:
   98  000030c8  42616420	.ascii "Bad semaphore in Consumer No : (%d) in \000"
   98  000030cc  73656d61	
   98  000030d0  70686f72	
   98  000030d4  6520696e	
   98  000030d8  20436f6e	
   98  000030dc  73756d65	
   98  000030e0  72204e6f	
   98  000030e4  203a2028	
   98  000030e8  25642920	
   98  000030ec  696e2000	
   99  000030f0          	.align 2
  100  000030f0          	LC6_LF0:
  101  000030f0  436f6e73	.ascii "Consumer ID : %d has completed its work and will die\000"
  101  000030f4  756d6572	
  101  000030f8  20494420	
  101  000030fc  3a202564	
  101  00003100  20686173	
  101  00003104  20636f6d	
  101  00003108  706c6574	
  101  0000310c  65642069	
  101  00003110  74732077	
  101  00003114  6f726b20	
  101  00003118  616e6420	
  101  0000311c  77696c6c	
  101  00003120  20646965	
  101  00003124  00      	
  102  00003125          	.text
  103  000010d4          	.align 2
  104  000010d4          	.proc _main
  105  000010d4          	.global _main
  106  000010d4          	_main:
  107                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  108  000010d4  afbefffc	sw	-4(r29),r30; push fp
  109  000010d8  001df020	add	r30,r0,r29; fp = sp
  110  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  111  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  112  000010e4  8fc20000	lw	r2,(r30)
  113  000010e8  8fc60004	lw	r6,4(r30)
  114  000010ec  0c0010c4	jal	___main
  115  000010f0  54000000	nop; not filled.
  116  000010f4  20050000	addi	r5,r0,#0
  117  000010f8  64410004	snei	r1,r2,#4
  118  000010fc  1020004c	beqz	r1,L14_LF0
  119  00001100  54000000	nop; not filled.
  120  00001104  23bdfff8	addi	r29,r29,#-8
  121  00001108  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  122  0000110c  25083000	addui	r8,r8,(LC0_LF0)&0xffff
  123  00001110  afa80000	sw	(r29),r8
  124  00001114  0c000294	jal	_Printf
  125  00001118  54000000	nop; not filled.
  126  0000111c  8cc80000	lw	r8,(r6)
  127  00001120  afa80000	sw	(r29),r8
  128  00001124  0c000284	jal	_Printf
  129  00001128  54000000	nop; not filled.
  130  0000112c  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  131  00001130  25083008	addui	r8,r8,(LC1_LF0)&0xffff
  132  00001134  afa80000	sw	(r29),r8
  133  00001138  0c000270	jal	_Printf
  134  0000113c  54000000	nop; not filled.
  135  00001140  0c00031c	jal	_Exit
  136  00001144  54000000	nop; not filled.
  137  00001148  23bd0008	addi	r29,r29,#8
  138  0000114c          	L14_LF0:
  139  0000114c  23bdfff0	addi	r29,r29,#-16
  140  00001150  8cc80004	lw	r8,4(r6)
  141  00001154  afa80000	sw	(r29),r8
  142  00001158  20080000	addi	r8,r0,#0
  143  0000115c  afa80004	sw	4(r29),r8
  144  00001160  2008000a	addi	r8,r0,#10
  145  00001164  afa80008	sw	8(r29),r8
  146  00001168  0c000ba0	jal	_dstrtol
  147  0000116c  54000000	nop; not filled.
  148  00001170  00011020	add	r2,r0,r1
  149  00001174  8cc80008	lw	r8,8(r6)
  150  00001178  afa80000	sw	(r29),r8
  151  0000117c  20080000	addi	r8,r0,#0
  152  00001180  afa80004	sw	4(r29),r8
  153  00001184  2008000a	addi	r8,r0,#10
  154  00001188  afa80008	sw	8(r29),r8
  155  0000118c  0c000b7c	jal	_dstrtol
  156  00001190  54000000	nop; not filled.
  157  00001194  00012020	add	r4,r0,r1
  158  00001198  8cc8000c	lw	r8,12(r6)
  159  0000119c  afa80000	sw	(r29),r8
  160  000011a0  20080000	addi	r8,r0,#0
  161  000011a4  afa80004	sw	4(r29),r8
  162  000011a8  2008000a	addi	r8,r0,#10
  163  000011ac  afa80008	sw	8(r29),r8
  164  000011b0  0c000b58	jal	_dstrtol
  165  000011b4  54000000	nop; not filled.
  166  000011b8  00013820	add	r7,r0,r1
  167  000011bc  afa20000	sw	(r29),r2
  168  000011c0  0c000218	jal	_shmat
  169  000011c4  54000000	nop; not filled.
  170  000011c8  00011820	add	r3,r0,r1
  171  000011cc  23bd0010	addi	r29,r29,#16
  172  000011d0  64610000	snei	r1,r3,#0
  173  000011d4  14200058	bnez	r1,L18_LF0
  174  000011d8  54000000	nop; not filled.
  175  000011dc  0c0001d8	jal	_getpid
  176  000011e0  54000000	nop; not filled.
  177  000011e4  23bdfff8	addi	r29,r29,#-8
  178  000011e8  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  179  000011ec  25083060	addui	r8,r8,(LC2_LF0)&0xffff
  180  000011f0  afa80000	sw	(r29),r8
  181  000011f4  afa10004	sw	4(r29),r1
  182  000011f8  0c0001b0	jal	_Printf
  183  000011fc  54000000	nop; not filled.
  184  00001200  8cc80000	lw	r8,(r6)
  185  00001204  afa80000	sw	(r29),r8
  186  00001208  0c0001a0	jal	_Printf
  187  0000120c  54000000	nop; not filled.
  188  00001210  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  189  00001214  2508309c	addui	r8,r8,(LC3_LF0)&0xffff
  190  00001218  afa80000	sw	(r29),r8
  191  0000121c  0c00018c	jal	_Printf
  192  00001220  54000000	nop; not filled.
  193  00001224  0c000238	jal	_Exit
  194  00001228  54000000	nop; not filled.
  195  0000122c  23bd0008	addi	r29,r29,#8
  196  00001230          	L18_LF0:
  197  00001230  23bdfff8	addi	r29,r29,#-8
  198  00001234  afa40000	sw	(r29),r4
  199  00001238  0c0001dc	jal	_lock_acquire
  200  0000123c  54000000	nop; not filled.
  201  00001240  23bd0008	addi	r29,r29,#8
  202  00001244  64210000	snei	r1,r1,#0
  203  00001248  10200068	beqz	r1,L16_LF0
  204  0000124c  54000000	nop; not filled.
  205  00001250  8c61000c	lw	r1,12(r3)
  206  00001254  8c620008	lw	r2,8(r3)
  207  00001258  00220829	sne	r1,r1,r2
  208  0000125c  10200040	beqz	r1,L20_LF0
  209  00001260  54000000	nop; not filled.
  210  00001264  0c000150	jal	_getpid
  211  00001268  54000000	nop; not filled.
  212  0000126c  23bdfff0	addi	r29,r29,#-16
  213  00001270  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  214  00001274  250830ac	addui	r8,r8,(LC4_LF0)&0xffff
  215  00001278  afa80000	sw	(r29),r8
  216  0000127c  afa10004	sw	4(r29),r1
  217  00001280  8c620008	lw	r2,8(r3)
  218  00001284  20410001	addi	r1,r2,#1
  219  00001288  ac610008	sw	8(r3),r1
  220  0000128c  afa20008	sw	8(r29),r2
  221  00001290  0c000118	jal	_Printf
  222  00001294  54000000	nop; not filled.
  223  00001298  20a50001	addi	r5,r5,#1
  224  0000129c  23bd0010	addi	r29,r29,#16
  225  000012a0          	L20_LF0:
  226  000012a0  23bdfff8	addi	r29,r29,#-8
  227  000012a4  afa40000	sw	(r29),r4
  228  000012a8  0c000178	jal	_lock_release
  229  000012ac  54000000	nop; not filled.
  230  000012b0  23bd0008	addi	r29,r29,#8
  231  000012b4          	L16_LF0:
  232  000012b4  70a1000a	slei	r1,r5,#10
  233  000012b8  1420ff74	bnez	r1,L18_LF0
  234  000012bc  54000000	nop; not filled.
  235  000012c0  23bdfff8	addi	r29,r29,#-8
  236  000012c4  afa70000	sw	(r29),r7
  237  000012c8  0c000134	jal	_sem_signal
  238  000012cc  54000000	nop; not filled.
  239  000012d0  23bd0008	addi	r29,r29,#8
  240  000012d4  64210001	snei	r1,r1,#1
  241  000012d8  10200058	beqz	r1,L22_LF0
  242  000012dc  54000000	nop; not filled.
  243  000012e0  0c0000d4	jal	_getpid
  244  000012e4  54000000	nop; not filled.
  245  000012e8  23bdfff8	addi	r29,r29,#-8
  246  000012ec  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  247  000012f0  250830c8	addui	r8,r8,(LC5_LF0)&0xffff
  248  000012f4  afa80000	sw	(r29),r8
  249  000012f8  afa10004	sw	4(r29),r1
  250  000012fc  0c0000ac	jal	_Printf
  251  00001300  54000000	nop; not filled.
  252  00001304  8cc60000	lw	r6,(r6)
  253  00001308  afa60000	sw	(r29),r6
  254  0000130c  0c00009c	jal	_Printf
  255  00001310  54000000	nop; not filled.
  256  00001314  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  257  00001318  2508309c	addui	r8,r8,(LC3_LF0)&0xffff
  258  0000131c  afa80000	sw	(r29),r8
  259  00001320  0c000088	jal	_Printf
  260  00001324  54000000	nop; not filled.
  261  00001328  0c000134	jal	_Exit
  262  0000132c  54000000	nop; not filled.
  263  00001330  23bd0008	addi	r29,r29,#8
  264  00001334          	L22_LF0:
  265  00001334  0c000080	jal	_getpid
  266  00001338  54000000	nop; not filled.
  267  0000133c  23bdfff8	addi	r29,r29,#-8
  268  00001340  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  269  00001344  250830f0	addui	r8,r8,(LC6_LF0)&0xffff
  270  00001348  afa80000	sw	(r29),r8
  271  0000134c  afa10004	sw	4(r29),r1
  272  00001350  0c000058	jal	_Printf
  273  00001354  54000000	nop; not filled.
  274  00001358  23bd0008	addi	r29,r29,#8
  275  0000135c  0c000e48	jal	_exit
  276  00001360  54000000	nop
  277  00001364          	.endproc _main
  278                      ;;;
  279                      ;;; Stub functions for DLX traps.
  280                      ;;;
  281                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  282                      ;;;
  283                      ;;; The traps such as Open and Close
  284                      ;;; (note the capital letters) are for use by user programs.  The traps
  285                      ;;; with names such as open and close (lower case) are for use by the OS.
  286                      ;;;
  289  00001364          	.align 2
  291                      ;;; The following are the traps to be used by user-level programs
  292                      ;;;
  294  00001364          	.align 2
  295  00001364          	.proc _Open
  296  00001364          	.global _Open
  297  00001364          	_Open:
  298                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  299                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  300                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  301  00001364  44000213	trap	#0x213
  302  00001368  4be00000	jr	r31
  303  0000136c  54000000	nop
  304  00001370          	.endproc _Open
  306  00001370          	.proc _Close
  307  00001370          	.global _Close
  308  00001370          	_Close:
  309  00001370  44000214	trap	#0x214
  310  00001374  4be00000	jr	r31
  311  00001378  54000000	nop
  312  0000137c          	.endproc _Close
  314  0000137c          	.proc _Read
  315  0000137c          	.global _Read
  316  0000137c          	_Read:
  317  0000137c  44000210	trap	#0x210
  318  00001380  4be00000	jr	r31
  319  00001384  54000000	nop
  320  00001388          	.endproc _Read
  322  00001388          	.proc _Write
  323  00001388          	.global _Write
  324  00001388          	_Write:
  325  00001388  44000211	trap	#0x211
  326  0000138c  4be00000	jr	r31
  327  00001390  54000000	nop
  328  00001394          	.endproc _Write
  330  00001394          	.proc _Lseek
  331  00001394          	.global _Lseek
  332  00001394          	_Lseek:
  333  00001394  44000212	trap	#0x212
  334  00001398  4be00000	jr	r31
  335  0000139c  54000000	nop
  336  000013a0          	.endproc _Lseek
  338  000013a0          	.proc _Putchar
  339  000013a0          	.global _Putchar
  340  000013a0          	_Putchar:
  341  000013a0  44000280	trap	#0x280
  342  000013a4  4be00000	jr	r31
  343  000013a8  54000000	nop
  344  000013ac          	.endproc _Putchar
  346  000013ac          	.proc _Printf
  347  000013ac          	.global _Printf
  348  000013ac          	_Printf:
  349  000013ac  44000201	trap	#0x201
  350  000013b0  4be00000	jr	r31
  351  000013b4  54000000	nop
  352  000013b8          	.endproc _Printf
  354  000013b8          	.proc _getpid
  355  000013b8          	.global _getpid
  356  000013b8          	_getpid:
  357  000013b8  44000431	trap	#0x431
  358  000013bc  4be00000	jr	r31
  359  000013c0  54000000	nop
  360  000013c4          	.endproc _getpid
  362  000013c4          	.proc _process_create
  363  000013c4          	.global _process_create
  364  000013c4          	_process_create:
  365  000013c4  44000432	trap	#0x432
  366  000013c8  4be00000	jr	r31
  367  000013cc  54000000	nop
  368  000013d0          	.endproc _process_create
  370  000013d0          	.proc _shmget
  371  000013d0          	.global _shmget
  372  000013d0          	_shmget:
  373  000013d0  44000440	trap	#0x440
  374  000013d4  4be00000	jr	r31
  375  000013d8  54000000	nop
  376  000013dc          	.endproc _shmget
  378  000013dc          	.proc _shmat
  379  000013dc          	.global _shmat
  380  000013dc          	_shmat:
  381  000013dc  44000441	trap	#0x441
  382  000013e0  4be00000	jr	r31
  383  000013e4  54000000	nop
  384  000013e8          	.endproc _shmat
  386  000013e8          	.proc _sem_create
  387  000013e8          	.global _sem_create
  388  000013e8          	_sem_create:
  389  000013e8  44000450	trap	#0x450
  390  000013ec  4be00000	jr	r31
  391  000013f0  54000000	nop
  392  000013f4          	.endproc _sem_create
  394  000013f4          	.proc _sem_wait
  395  000013f4          	.global _sem_wait
  396  000013f4          	_sem_wait:
  397  000013f4  44000451	trap	#0x451
  398  000013f8  4be00000	jr	r31
  399  000013fc  54000000	nop
  400  00001400          	.endproc _sem_wait
  402  00001400          	.proc _sem_signal
  403  00001400          	.global _sem_signal
  404  00001400          	_sem_signal:
  405  00001400  44000452	trap	#0x452
  406  00001404  4be00000	jr	r31
  407  00001408  54000000	nop
  408  0000140c          	.endproc _sem_signal
  410  0000140c          	.proc _lock_create
  411  0000140c          	.global _lock_create
  412  0000140c          	_lock_create:
  413  0000140c  44000453	trap	#0x453
  414  00001410  4be00000	jr	r31
  415  00001414  54000000	nop
  416  00001418          	.endproc _lock_create
  418  00001418          	.proc _lock_acquire
  419  00001418          	.global _lock_acquire
  420  00001418          	_lock_acquire:
  421  00001418  44000454	trap	#0x454
  422  0000141c  4be00000	jr	r31
  423  00001420  54000000	nop
  424  00001424          	.endproc _lock_acquire
  426  00001424          	.proc _lock_release
  427  00001424          	.global _lock_release
  428  00001424          	_lock_release:
  429  00001424  44000455	trap	#0x455
  430  00001428  4be00000	jr	r31
  431  0000142c  54000000	nop
  432  00001430          	.endproc _lock_release
  434  00001430          	.proc _cond_create
  435  00001430          	.global _cond_create
  436  00001430          	_cond_create:
  437  00001430  44000456	trap	#0x456
  438  00001434  4be00000	jr	r31
  439  00001438  54000000	nop
  440  0000143c          	.endproc _cond_create
  442  0000143c          	.proc _cond_wait
  443  0000143c          	.global _cond_wait
  444  0000143c          	_cond_wait:
  445  0000143c  44000457	trap	#0x457
  446  00001440  4be00000	jr	r31
  447  00001444  54000000	nop
  448  00001448          	.endproc _cond_wait
  450  00001448          	.proc _cond_signal
  451  00001448          	.global _cond_signal
  452  00001448          	_cond_signal:
  453  00001448  44000458	trap	#0x458
  454  0000144c  4be00000	jr	r31
  455  00001450  54000000	nop
  456  00001454          	.endproc _cond_signal
  458  00001454          	.proc _cond_broadcast
  459  00001454          	.global _cond_broadcast
  460  00001454          	_cond_broadcast:
  461  00001454  44000459	trap	#0x459
  462  00001458  4be00000	jr	r31
  463  0000145c  54000000	nop
  464  00001460          	.endproc _cond_broadcast
  466  00001460          	.proc _Exit
  467  00001460          	.global _Exit
  468  00001460          	_Exit:
  469  00001460  44000500	trap	#0x500
  470  00001464  4be00000	jr	r31
  471  00001468  54000000	nop
  472  0000146c          	.endproc _Exit
  473                      ; Compiled by GCC
  475  0000146c          	.align 2
  476  0000146c          	.proc _isspace
  477  0000146c          	.global _isspace
  478  0000146c          	_isspace:
  479                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  480  0000146c  afbefffc	sw	-4(r29),r30; push fp
  481  00001470  001df020	add	r30,r0,r29; fp = sp
  482  00001474  afbffff8	sw	-8(r29),r31; push ret addr
  483  00001478  2fbd0018	subui	r29,r29,#24; alloc local storage
  484  0000147c  afa20000	sw	0(r29),r2
  485  00001480  afa30004	sw	4(r29),r3
  486  00001484  afa40008	sw	8(r29),r4
  487  00001488  83c20003	lb	r2,3(r30)
  488  0000148c  20010000	addi	r1,r0,#0
  489  00001490  304300ff	andi	r3,r2,#0x00ff
  490  00001494  60640020	seqi	r4,r3,#32
  491  00001498  1480002c	bnez	r4,L3_LF2
  492  0000149c  54000000	nop; delay slot nop
  493  000014a0  304300ff	andi	r3,r2,#0x00ff
  494  000014a4  60640009	seqi	r4,r3,#9
  495  000014a8  1480001c	bnez	r4,L3_LF2
  496  000014ac  54000000	nop; delay slot nop
  497  000014b0  304300ff	andi	r3,r2,#0x00ff
  498  000014b4  6064000a	seqi	r4,r3,#10
  499  000014b8  1480000c	bnez	r4,L3_LF2
  500  000014bc  54000000	nop; delay slot nop
  501  000014c0  08000008	j	L2_LF2
  502  000014c4  54000000	nop; delay slot nop
  503  000014c8          	L3_LF2:
  504  000014c8  20010001	addi	r1,r0,#1
  505  000014cc          	L2_LF2:
  506  000014cc  08000004	j	L1_LF2
  507  000014d0  54000000	nop; delay slot nop
  508  000014d4          	L1_LF2:
  509  000014d4  8fa20000	lw	r2,0(r29)
  510  000014d8  8fa30004	lw	r3,4(r29)
  511  000014dc  8fa40008	lw	r4,8(r29)
  512  000014e0  8fdffff8	lw	r31,-8(r30)
  513  000014e4  001ee820	add	r29,r0,r30
  514  000014e8  8fdefffc	lw	r30,-4(r30)
  515  000014ec  4be00000	jr	r31
  516  000014f0  54000000	nop
  517  000014f4          	.endproc _isspace
  518  000014f4          	.align 2
  519  000014f4          	.proc _isxdigit
  520  000014f4          	.global _isxdigit
  521  000014f4          	_isxdigit:
  522                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  523  000014f4  afbefffc	sw	-4(r29),r30; push fp
  524  000014f8  001df020	add	r30,r0,r29; fp = sp
  525  000014fc  afbffff8	sw	-8(r29),r31; push ret addr
  526  00001500  2fbd0018	subui	r29,r29,#24; alloc local storage
  527  00001504  afa20000	sw	0(r29),r2
  528  00001508  afa30004	sw	4(r29),r3
  529  0000150c  afa40008	sw	8(r29),r4
  530  00001510  83c20003	lb	r2,3(r30)
  531  00001514  20010000	addi	r1,r0,#0
  532  00001518  304300ff	andi	r3,r2,#0x00ff
  533  0000151c  6c64002f	sgtui	r4,r3,#47
  534  00001520  1080001c	beqz	r4,L7_LF2
  535  00001524  54000000	nop; delay slot nop
  536  00001528  304300ff	andi	r3,r2,#0x00ff
  537  0000152c  70640039	sleui	r4,r3,#57
  538  00001530  1480005c	bnez	r4,L6_LF2
  539  00001534  54000000	nop; delay slot nop
  540  00001538  08000004	j	L7_LF2
  541  0000153c  54000000	nop; delay slot nop
  542  00001540          	L7_LF2:
  543  00001540  304300ff	andi	r3,r2,#0x00ff
  544  00001544  6c640060	sgtui	r4,r3,#96
  545  00001548  1080001c	beqz	r4,L8_LF2
  546  0000154c  54000000	nop; delay slot nop
  547  00001550  304300ff	andi	r3,r2,#0x00ff
  548  00001554  70640066	sleui	r4,r3,#102
  549  00001558  14800034	bnez	r4,L6_LF2
  550  0000155c  54000000	nop; delay slot nop
  551  00001560  08000004	j	L8_LF2
  552  00001564  54000000	nop; delay slot nop
  553  00001568          	L8_LF2:
  554  00001568  304300ff	andi	r3,r2,#0x00ff
  555  0000156c  6c640040	sgtui	r4,r3,#64
  556  00001570  10800020	beqz	r4,L5_LF2
  557  00001574  54000000	nop; delay slot nop
  558  00001578  304300ff	andi	r3,r2,#0x00ff
  559  0000157c  70640041	sleui	r4,r3,#65
  560  00001580  1480000c	bnez	r4,L6_LF2
  561  00001584  54000000	nop; delay slot nop
  562  00001588  08000008	j	L5_LF2
  563  0000158c  54000000	nop; delay slot nop
  564  00001590          	L6_LF2:
  565  00001590  20010001	addi	r1,r0,#1
  566  00001594          	L5_LF2:
  567  00001594  08000004	j	L4_LF2
  568  00001598  54000000	nop; delay slot nop
  569  0000159c          	L4_LF2:
  570  0000159c  8fa20000	lw	r2,0(r29)
  571  000015a0  8fa30004	lw	r3,4(r29)
  572  000015a4  8fa40008	lw	r4,8(r29)
  573  000015a8  8fdffff8	lw	r31,-8(r30)
  574  000015ac  001ee820	add	r29,r0,r30
  575  000015b0  8fdefffc	lw	r30,-4(r30)
  576  000015b4  4be00000	jr	r31
  577  000015b8  54000000	nop
  578  000015bc          	.endproc _isxdigit
  579  000015bc          	.align 2
  580  000015bc          	.proc _dstrcpy
  581  000015bc          	.global _dstrcpy
  582  000015bc          	_dstrcpy:
  583                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  584  000015bc  afbefffc	sw	-4(r29),r30; push fp
  585  000015c0  001df020	add	r30,r0,r29; fp = sp
  586  000015c4  afbffff8	sw	-8(r29),r31; push ret addr
  587  000015c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  588  000015cc  afa20000	sw	0(r29),r2
  589  000015d0  afa30004	sw	4(r29),r3
  590  000015d4  8fc10000	lw	r1,(r30)
  591  000015d8  afc1fff4	sw	-12(r30),r1
  592  000015dc          	L10_LF2:
  593  000015dc  8fc10000	lw	r1,(r30)
  594  000015e0  20220001	addi	r2,r1,#1
  595  000015e4  afc20000	sw	(r30),r2
  596  000015e8  8fc20004	lw	r2,4(r30)
  597  000015ec  20430001	addi	r3,r2,#1
  598  000015f0  afc30004	sw	4(r30),r3
  599  000015f4  80420000	lb	r2,(r2)
  600  000015f8  a0220000	sb	(r1),r2
  601  000015fc  a3c2fff3	sb	-13(r30),r2
  602  00001600          	L12_LF2:
  603  00001600  93c1fff3	lbu	r1,-13(r30)
  604  00001604  64220000	snei	r2,r1,#0
  605  00001608  1440000c	bnez	r2,L13_LF2
  606  0000160c  54000000	nop; delay slot nop
  607  00001610  0800000c	j	L11_LF2
  608  00001614  54000000	nop; delay slot nop
  609  00001618          	L13_LF2:
  610  00001618  0bffffc0	j	L10_LF2
  611  0000161c  54000000	nop; delay slot nop
  612  00001620          	L11_LF2:
  613  00001620  8fc1fff4	lw	r1,-12(r30)
  614  00001624  08000004	j	L9_LF2
  615  00001628  54000000	nop; delay slot nop
  616  0000162c          	L9_LF2:
  617  0000162c  8fa20000	lw	r2,0(r29)
  618  00001630  8fa30004	lw	r3,4(r29)
  619  00001634  8fdffff8	lw	r31,-8(r30)
  620  00001638  001ee820	add	r29,r0,r30
  621  0000163c  8fdefffc	lw	r30,-4(r30)
  622  00001640  4be00000	jr	r31
  623  00001644  54000000	nop
  624  00001648          	.endproc _dstrcpy
  625  00001648          	.align 2
  626  00001648          	.proc _dstrncpy
  627  00001648          	.global _dstrncpy
  628  00001648          	_dstrncpy:
  629                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  630  00001648  afbefffc	sw	-4(r29),r30; push fp
  631  0000164c  001df020	add	r30,r0,r29; fp = sp
  632  00001650  afbffff8	sw	-8(r29),r31; push ret addr
  633  00001654  2fbd0018	subui	r29,r29,#24; alloc local storage
  634  00001658  afa20000	sw	0(r29),r2
  635  0000165c  afa30004	sw	4(r29),r3
  636  00001660  8fc10000	lw	r1,(r30)
  637  00001664  afc1fff4	sw	-12(r30),r1
  638  00001668          	L15_LF2:
  639  00001668  8fc10008	lw	r1,8(r30)
  640  0000166c  2022ffff	addi	r2,r1,#-1
  641  00001670  afc20008	sw	8(r30),r2
  642  00001674  70210000	slei	r1,r1,#0
  643  00001678  1020000c	beqz	r1,L18_LF2
  644  0000167c  54000000	nop; delay slot nop
  645  00001680  08000048	j	L16_LF2
  646  00001684  54000000	nop; delay slot nop
  647  00001688          	L18_LF2:
  648  00001688  8fc10000	lw	r1,(r30)
  649  0000168c  20220001	addi	r2,r1,#1
  650  00001690  afc20000	sw	(r30),r2
  651  00001694  8fc20004	lw	r2,4(r30)
  652  00001698  20430001	addi	r3,r2,#1
  653  0000169c  afc30004	sw	4(r30),r3
  654  000016a0  80420000	lb	r2,(r2)
  655  000016a4  a0220000	sb	(r1),r2
  656  000016a8  a3c2fff3	sb	-13(r30),r2
  657  000016ac          	L17_LF2:
  658  000016ac  93c1fff3	lbu	r1,-13(r30)
  659  000016b0  64220000	snei	r2,r1,#0
  660  000016b4  1440000c	bnez	r2,L19_LF2
  661  000016b8  54000000	nop; delay slot nop
  662  000016bc  0800000c	j	L16_LF2
  663  000016c0  54000000	nop; delay slot nop
  664  000016c4          	L19_LF2:
  665  000016c4  0bffffa0	j	L15_LF2
  666  000016c8  54000000	nop; delay slot nop
  667  000016cc          	L16_LF2:
  668  000016cc  8fc1fff4	lw	r1,-12(r30)
  669  000016d0  08000004	j	L14_LF2
  670  000016d4  54000000	nop; delay slot nop
  671  000016d8          	L14_LF2:
  672  000016d8  8fa20000	lw	r2,0(r29)
  673  000016dc  8fa30004	lw	r3,4(r29)
  674  000016e0  8fdffff8	lw	r31,-8(r30)
  675  000016e4  001ee820	add	r29,r0,r30
  676  000016e8  8fdefffc	lw	r30,-4(r30)
  677  000016ec  4be00000	jr	r31
  678  000016f0  54000000	nop
  679  000016f4          	.endproc _dstrncpy
  680  000016f4          	.align 2
  681  000016f4          	.proc _dstrcat
  682  000016f4          	.global _dstrcat
  683  000016f4          	_dstrcat:
  684                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  685  000016f4  afbefffc	sw	-4(r29),r30; push fp
  686  000016f8  001df020	add	r30,r0,r29; fp = sp
  687  000016fc  afbffff8	sw	-8(r29),r31; push ret addr
  688  00001700  2fbd0018	subui	r29,r29,#24; alloc local storage
  689  00001704  afa20000	sw	0(r29),r2
  690  00001708  8fc10000	lw	r1,(r30)
  691  0000170c  afc1fff4	sw	-12(r30),r1
  692  00001710          	L21_LF2:
  693  00001710  8fc10000	lw	r1,(r30)
  694  00001714  90220000	lbu	r2,(r1)
  695  00001718  64410000	snei	r1,r2,#0
  696  0000171c  1420000c	bnez	r1,L23_LF2
  697  00001720  54000000	nop; delay slot nop
  698  00001724  0800001c	j	L22_LF2
  699  00001728  54000000	nop; delay slot nop
  700  0000172c          	L23_LF2:
  701  0000172c  8fc20000	lw	r2,(r30)
  702  00001730  20410001	addi	r1,r2,#1
  703  00001734  00011020	add	r2,r0,r1
  704  00001738  afc20000	sw	(r30),r2
  705  0000173c  0bffffd0	j	L21_LF2
  706  00001740  54000000	nop; delay slot nop
  707  00001744          	L22_LF2:
  708  00001744  23bdfff8	addi	r29,r29,#-8
  709  00001748  001d0820	add	r1,r0,r29
  710  0000174c  8fc20000	lw	r2,(r30)
  711  00001750  ac220000	sw	(r1),r2
  712  00001754  8fc20004	lw	r2,4(r30)
  713  00001758  ac220004	sw	4(r1),r2
  714  0000175c  0ffffe5c	jal	_dstrcpy
  715  00001760  54000000	nop; delay slot nop
  716  00001764  23bd0008	addi	r29,r29,#8
  717  00001768  8fc1fff4	lw	r1,-12(r30)
  718  0000176c  08000004	j	L20_LF2
  719  00001770  54000000	nop; delay slot nop
  720  00001774          	L20_LF2:
  721  00001774  8fa20000	lw	r2,0(r29)
  722  00001778  8fdffff8	lw	r31,-8(r30)
  723  0000177c  001ee820	add	r29,r0,r30
  724  00001780  8fdefffc	lw	r30,-4(r30)
  725  00001784  4be00000	jr	r31
  726  00001788  54000000	nop
  727  0000178c          	.endproc _dstrcat
  728  0000178c          	.align 2
  729  0000178c          	.proc _dstrncmp
  730  0000178c          	.global _dstrncmp
  731  0000178c          	_dstrncmp:
  732                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  733  0000178c  afbefffc	sw	-4(r29),r30; push fp
  734  00001790  001df020	add	r30,r0,r29; fp = sp
  735  00001794  afbffff8	sw	-8(r29),r31; push ret addr
  736  00001798  2fbd0018	subui	r29,r29,#24; alloc local storage
  737  0000179c  afa20000	sw	0(r29),r2
  738  000017a0  afa30004	sw	4(r29),r3
  739  000017a4  54000000	nop
  740  000017a8  20010000	addi	r1,r0,#0
  741  000017ac  afc1fff4	sw	-12(r30),r1
  742  000017b0          	L25_LF2:
  743  000017b0  8fc1fff4	lw	r1,-12(r30)
  744  000017b4  8fc20008	lw	r2,8(r30)
  745  000017b8  0022082a	slt	r1,r1,r2
  746  000017bc  1420000c	bnez	r1,L28_LF2
  747  000017c0  54000000	nop; delay slot nop
  748  000017c4  08000088	j	L26_LF2
  749  000017c8  54000000	nop; delay slot nop
  750  000017cc          	L28_LF2:
  751  000017cc  8fc10004	lw	r1,4(r30)
  752  000017d0  90220000	lbu	r2,(r1)
  753  000017d4  64410000	snei	r1,r2,#0
  754  000017d8  14200018	bnez	r1,L29_LF2
  755  000017dc  54000000	nop; delay slot nop
  756  000017e0  20010000	addi	r1,r0,#0
  757  000017e4  080000d8	j	L24_LF2
  758  000017e8  54000000	nop; delay slot nop
  759  000017ec  08000028	j	L30_LF2
  760  000017f0  54000000	nop; delay slot nop
  761  000017f4          	L29_LF2:
  762  000017f4  8fc10000	lw	r1,(r30)
  763  000017f8  8fc20004	lw	r2,4(r30)
  764  000017fc  90210000	lbu	r1,(r1)
  765  00001800  90420000	lbu	r2,(r2)
  766  00001804  00220829	sne	r1,r1,r2
  767  00001808  1020000c	beqz	r1,L30_LF2
  768  0000180c  54000000	nop; delay slot nop
  769  00001810  0800003c	j	L26_LF2
  770  00001814  54000000	nop; delay slot nop
  771  00001818          	L31_LF2:
  772  00001818          	L30_LF2:
  773  00001818  8fc20000	lw	r2,(r30)
  774  0000181c  20410001	addi	r1,r2,#1
  775  00001820  00011020	add	r2,r0,r1
  776  00001824  afc20000	sw	(r30),r2
  777  00001828  8fc20004	lw	r2,4(r30)
  778  0000182c  20410001	addi	r1,r2,#1
  779  00001830  00011020	add	r2,r0,r1
  780  00001834  afc20004	sw	4(r30),r2
  781  00001838          	L27_LF2:
  782  00001838  8fc2fff4	lw	r2,-12(r30)
  783  0000183c  20410001	addi	r1,r2,#1
  784  00001840  00011020	add	r2,r0,r1
  785  00001844  afc2fff4	sw	-12(r30),r2
  786  00001848  0bffff64	j	L25_LF2
  787  0000184c  54000000	nop; delay slot nop
  788  00001850          	L26_LF2:
  789  00001850  8fc1fff4	lw	r1,-12(r30)
  790  00001854  8fc20008	lw	r2,8(r30)
  791  00001858  00220828	seq	r1,r1,r2
  792  0000185c  10200018	beqz	r1,L32_LF2
  793  00001860  54000000	nop; delay slot nop
  794  00001864  20010000	addi	r1,r0,#0
  795  00001868  08000054	j	L24_LF2
  796  0000186c  54000000	nop; delay slot nop
  797  00001870  0800004c	j	L33_LF2
  798  00001874  54000000	nop; delay slot nop
  799  00001878          	L32_LF2:
  800  00001878  8fc20000	lw	r2,(r30)
  801  0000187c  90410000	lbu	r1,(r2)
  802  00001880  8fc20004	lw	r2,4(r30)
  803  00001884  90430000	lbu	r3,(r2)
  804  00001888  00230822	sub	r1,r1,r3
  805  0000188c  74220000	sgei	r2,r1,#0
  806  00001890  10400020	beqz	r2,L34_LF2
  807  00001894  54000000	nop; delay slot nop
  808  00001898  8fc10000	lw	r1,(r30)
  809  0000189c  8fc20004	lw	r2,4(r30)
  810  000018a0  90210000	lbu	r1,(r1)
  811  000018a4  90420000	lbu	r2,(r2)
  812  000018a8  00220829	sne	r1,r1,r2
  813  000018ac  08000008	j	L35_LF2
  814  000018b0  54000000	nop; delay slot nop
  815  000018b4          	L34_LF2:
  816  000018b4  2001ffff	addi	r1,r0,#-1
  817  000018b8          	L35_LF2:
  818  000018b8  08000004	j	L24_LF2
  819  000018bc  54000000	nop; delay slot nop
  820  000018c0          	L33_LF2:
  821  000018c0          	L24_LF2:
  822  000018c0  8fa20000	lw	r2,0(r29)
  823  000018c4  8fa30004	lw	r3,4(r29)
  824  000018c8  8fdffff8	lw	r31,-8(r30)
  825  000018cc  001ee820	add	r29,r0,r30
  826  000018d0  8fdefffc	lw	r30,-4(r30)
  827  000018d4  4be00000	jr	r31
  828  000018d8  54000000	nop
  829  000018dc          	.endproc _dstrncmp
  830  000018dc          	.align 2
  831  000018dc          	.proc _dstrlen
  832  000018dc          	.global _dstrlen
  833  000018dc          	_dstrlen:
  834                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  835  000018dc  afbefffc	sw	-4(r29),r30; push fp
  836  000018e0  001df020	add	r30,r0,r29; fp = sp
  837  000018e4  afbffff8	sw	-8(r29),r31; push ret addr
  838  000018e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  839  000018ec  afa20000	sw	0(r29),r2
  840  000018f0  20010000	addi	r1,r0,#0
  841  000018f4  afc1fff4	sw	-12(r30),r1
  842  000018f8          	L37_LF2:
  843  000018f8  8fc10000	lw	r1,(r30)
  844  000018fc  20220001	addi	r2,r1,#1
  845  00001900  afc20000	sw	(r30),r2
  846  00001904  90210000	lbu	r1,(r1)
  847  00001908  64220000	snei	r2,r1,#0
  848  0000190c  1440000c	bnez	r2,L39_LF2
  849  00001910  54000000	nop; delay slot nop
  850  00001914  0800001c	j	L38_LF2
  851  00001918  54000000	nop; delay slot nop
  852  0000191c          	L39_LF2:
  853  0000191c  8fc2fff4	lw	r2,-12(r30)
  854  00001920  20410001	addi	r1,r2,#1
  855  00001924  00011020	add	r2,r0,r1
  856  00001928  afc2fff4	sw	-12(r30),r2
  857  0000192c  0bffffc8	j	L37_LF2
  858  00001930  54000000	nop; delay slot nop
  859  00001934          	L38_LF2:
  860  00001934  8fc1fff4	lw	r1,-12(r30)
  861  00001938  08000004	j	L36_LF2
  862  0000193c  54000000	nop; delay slot nop
  863  00001940          	L36_LF2:
  864  00001940  8fa20000	lw	r2,0(r29)
  865  00001944  8fdffff8	lw	r31,-8(r30)
  866  00001948  001ee820	add	r29,r0,r30
  867  0000194c  8fdefffc	lw	r30,-4(r30)
  868  00001950  4be00000	jr	r31
  869  00001954  54000000	nop
  870  00001958          	.endproc _dstrlen
  871  00001958          	.align 2
  872  00001958          	.proc _dstrstr
  873  00001958          	.global _dstrstr
  874  00001958          	_dstrstr:
  875                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  876  00001958  afbefffc	sw	-4(r29),r30; push fp
  877  0000195c  001df020	add	r30,r0,r29; fp = sp
  878  00001960  afbffff8	sw	-8(r29),r31; push ret addr
  879  00001964  2fbd0018	subui	r29,r29,#24; alloc local storage
  880  00001968  afa20000	sw	0(r29),r2
  881  0000196c  23bdfff8	addi	r29,r29,#-8
  882  00001970  001d0820	add	r1,r0,r29
  883  00001974  8fc20004	lw	r2,4(r30)
  884  00001978  ac220000	sw	(r1),r2
  885  0000197c  0fffff5c	jal	_dstrlen
  886  00001980  54000000	nop; delay slot nop
  887  00001984  23bd0008	addi	r29,r29,#8
  888  00001988  afc1fff4	sw	-12(r30),r1
  889  0000198c          	L41_LF2:
  890  0000198c  8fc10000	lw	r1,(r30)
  891  00001990  90220000	lbu	r2,(r1)
  892  00001994  64410000	snei	r1,r2,#0
  893  00001998  1420000c	bnez	r1,L43_LF2
  894  0000199c  54000000	nop; delay slot nop
  895  000019a0  08000060	j	L42_LF2
  896  000019a4  54000000	nop; delay slot nop
  897  000019a8          	L43_LF2:
  898  000019a8  23bdfff0	addi	r29,r29,#-16
  899  000019ac  001d0820	add	r1,r0,r29
  900  000019b0  8fc20000	lw	r2,(r30)
  901  000019b4  ac220000	sw	(r1),r2
  902  000019b8  8fc20004	lw	r2,4(r30)
  903  000019bc  ac220004	sw	4(r1),r2
  904  000019c0  8fc2fff4	lw	r2,-12(r30)
  905  000019c4  ac220008	sw	8(r1),r2
  906  000019c8  0ffffdc0	jal	_dstrncmp
  907  000019cc  54000000	nop; delay slot nop
  908  000019d0  23bd0010	addi	r29,r29,#16
  909  000019d4  64220000	snei	r2,r1,#0
  910  000019d8  14400010	bnez	r2,L44_LF2
  911  000019dc  54000000	nop; delay slot nop
  912  000019e0  8fc10000	lw	r1,(r30)
  913  000019e4  08000028	j	L40_LF2
  914  000019e8  54000000	nop; delay slot nop
  915  000019ec          	L44_LF2:
  916  000019ec  8fc20000	lw	r2,(r30)
  917  000019f0  20410001	addi	r1,r2,#1
  918  000019f4  00011020	add	r2,r0,r1
  919  000019f8  afc20000	sw	(r30),r2
  920  000019fc  0bffff8c	j	L41_LF2
  921  00001a00  54000000	nop; delay slot nop
  922  00001a04          	L42_LF2:
  923  00001a04  20010000	addi	r1,r0,#0
  924  00001a08  08000004	j	L40_LF2
  925  00001a0c  54000000	nop; delay slot nop
  926  00001a10          	L40_LF2:
  927  00001a10  8fa20000	lw	r2,0(r29)
  928  00001a14  8fdffff8	lw	r31,-8(r30)
  929  00001a18  001ee820	add	r29,r0,r30
  930  00001a1c  8fdefffc	lw	r30,-4(r30)
  931  00001a20  4be00000	jr	r31
  932  00001a24  54000000	nop
  933  00001a28          	.endproc _dstrstr
  934  00001a28          	.align 2
  935  00001a28          	.proc _dmindex
  936  00001a28          	.global _dmindex
  937  00001a28          	_dmindex:
  938                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  939  00001a28  afbefffc	sw	-4(r29),r30; push fp
  940  00001a2c  001df020	add	r30,r0,r29; fp = sp
  941  00001a30  afbffff8	sw	-8(r29),r31; push ret addr
  942  00001a34  2fbd0018	subui	r29,r29,#24; alloc local storage
  943  00001a38  afa20000	sw	0(r29),r2
  944  00001a3c  54000000	nop
  945  00001a40          	L46_LF2:
  946  00001a40  8fc10000	lw	r1,(r30)
  947  00001a44  90220000	lbu	r2,(r1)
  948  00001a48  64410000	snei	r1,r2,#0
  949  00001a4c  1420000c	bnez	r1,L48_LF2
  950  00001a50  54000000	nop; delay slot nop
  951  00001a54  08000070	j	L47_LF2
  952  00001a58  54000000	nop; delay slot nop
  953  00001a5c          	L48_LF2:
  954  00001a5c  8fc10004	lw	r1,4(r30)
  955  00001a60  afc1fff4	sw	-12(r30),r1
  956  00001a64          	L49_LF2:
  957  00001a64  8fc1fff4	lw	r1,-12(r30)
  958  00001a68  90220000	lbu	r2,(r1)
  959  00001a6c  64410000	snei	r1,r2,#0
  960  00001a70  1420000c	bnez	r1,L52_LF2
  961  00001a74  54000000	nop; delay slot nop
  962  00001a78  08000044	j	L50_LF2
  963  00001a7c  54000000	nop; delay slot nop
  964  00001a80          	L52_LF2:
  965  00001a80  8fc10000	lw	r1,(r30)
  966  00001a84  8fc2fff4	lw	r2,-12(r30)
  967  00001a88  90210000	lbu	r1,(r1)
  968  00001a8c  90420000	lbu	r2,(r2)
  969  00001a90  00220828	seq	r1,r1,r2
  970  00001a94  10200010	beqz	r1,L51_LF2
  971  00001a98  54000000	nop; delay slot nop
  972  00001a9c  8fc10000	lw	r1,(r30)
  973  00001aa0  08000030	j	L45_LF2
  974  00001aa4  54000000	nop; delay slot nop
  975  00001aa8          	L53_LF2:
  976  00001aa8          	L51_LF2:
  977  00001aa8  8fc2fff4	lw	r2,-12(r30)
  978  00001aac  20410001	addi	r1,r2,#1
  979  00001ab0  00011020	add	r2,r0,r1
  980  00001ab4  afc2fff4	sw	-12(r30),r2
  981  00001ab8  0bffffa8	j	L49_LF2
  982  00001abc  54000000	nop; delay slot nop
  983  00001ac0          	L50_LF2:
  984  00001ac0  0bffff7c	j	L46_LF2
  985  00001ac4  54000000	nop; delay slot nop
  986  00001ac8          	L47_LF2:
  987  00001ac8  20010000	addi	r1,r0,#0
  988  00001acc  08000004	j	L45_LF2
  989  00001ad0  54000000	nop; delay slot nop
  990  00001ad4          	L45_LF2:
  991  00001ad4  8fa20000	lw	r2,0(r29)
  992  00001ad8  8fdffff8	lw	r31,-8(r30)
  993  00001adc  001ee820	add	r29,r0,r30
  994  00001ae0  8fdefffc	lw	r30,-4(r30)
  995  00001ae4  4be00000	jr	r31
  996  00001ae8  54000000	nop
  997  00001aec          	.endproc _dmindex
  998  00001aec          	.align 2
  999  00001aec          	.proc _dindex
 1000  00001aec          	.global _dindex
 1001  00001aec          	_dindex:
 1002                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1003  00001aec  afbefffc	sw	-4(r29),r30; push fp
 1004  00001af0  001df020	add	r30,r0,r29; fp = sp
 1005  00001af4  afbffff8	sw	-8(r29),r31; push ret addr
 1006  00001af8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1007  00001afc  afa20000	sw	0(r29),r2
 1008  00001b00  54000000	nop
 1009  00001b04          	L55_LF2:
 1010  00001b04  8fc10000	lw	r1,(r30)
 1011  00001b08  90220000	lbu	r2,(r1)
 1012  00001b0c  64410000	snei	r1,r2,#0
 1013  00001b10  1420000c	bnez	r1,L57_LF2
 1014  00001b14  54000000	nop; delay slot nop
 1015  00001b18  08000040	j	L56_LF2
 1016  00001b1c  54000000	nop; delay slot nop
 1017  00001b20          	L57_LF2:
 1018  00001b20  8fc10000	lw	r1,(r30)
 1019  00001b24  90220000	lbu	r2,(r1)
 1020  00001b28  8fc10004	lw	r1,4(r30)
 1021  00001b2c  00411028	seq	r2,r2,r1
 1022  00001b30  10400010	beqz	r2,L58_LF2
 1023  00001b34  54000000	nop; delay slot nop
 1024  00001b38  8fc10000	lw	r1,(r30)
 1025  00001b3c  08000028	j	L54_LF2
 1026  00001b40  54000000	nop; delay slot nop
 1027  00001b44          	L58_LF2:
 1028  00001b44  8fc20000	lw	r2,(r30)
 1029  00001b48  20410001	addi	r1,r2,#1
 1030  00001b4c  00011020	add	r2,r0,r1
 1031  00001b50  afc20000	sw	(r30),r2
 1032  00001b54  0bffffac	j	L55_LF2
 1033  00001b58  54000000	nop; delay slot nop
 1034  00001b5c          	L56_LF2:
 1035  00001b5c  20010000	addi	r1,r0,#0
 1036  00001b60  08000004	j	L54_LF2
 1037  00001b64  54000000	nop; delay slot nop
 1038  00001b68          	L54_LF2:
 1039  00001b68  8fa20000	lw	r2,0(r29)
 1040  00001b6c  8fdffff8	lw	r31,-8(r30)
 1041  00001b70  001ee820	add	r29,r0,r30
 1042  00001b74  8fdefffc	lw	r30,-4(r30)
 1043  00001b78  4be00000	jr	r31
 1044  00001b7c  54000000	nop
 1045  00001b80          	.endproc _dindex
 1046  00001b80          	.align 2
 1047  00001b80          	.proc _ditoa
 1048  00001b80          	.global _ditoa
 1049  00001b80          	_ditoa:
 1050                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1051  00001b80  afbefffc	sw	-4(r29),r30; push fp
 1052  00001b84  001df020	add	r30,r0,r29; fp = sp
 1053  00001b88  afbffff8	sw	-8(r29),r31; push ret addr
 1054  00001b8c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1055  00001b90  afa20000	sw	0(r29),r2
 1056  00001b94  afa30004	sw	4(r29),r3
 1057  00001b98  8fc10000	lw	r1,(r30)
 1058  00001b9c  68220000	slti	r2,r1,#0
 1059  00001ba0  1040002c	beqz	r2,L60_LF2
 1060  00001ba4  54000000	nop; delay slot nop
 1061  00001ba8  8fc10004	lw	r1,4(r30)
 1062  00001bac  20220001	addi	r2,r1,#1
 1063  00001bb0  afc20004	sw	4(r30),r2
 1064  00001bb4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1065  00001bb8  a0220000	sb	(r1),r2
 1066  00001bbc  8fc10000	lw	r1,(r30)
 1067  00001bc0  00011022	sub	r2,r0,r1
 1068  00001bc4  afc20000	sw	(r30),r2
 1069  00001bc8  08000118	j	L61_LF2
 1070  00001bcc  54000000	nop; delay slot nop
 1071  00001bd0          	L60_LF2:
 1072  00001bd0  8fc10000	lw	r1,(r30)
 1073  00001bd4  64220000	snei	r2,r1,#0
 1074  00001bd8  14400020	bnez	r2,L62_LF2
 1075  00001bdc  54000000	nop; delay slot nop
 1076  00001be0  8fc10004	lw	r1,4(r30)
 1077  00001be4  20220001	addi	r2,r1,#1
 1078  00001be8  afc20004	sw	4(r30),r2
 1079  00001bec  20020030	addi	r2,r0,(#0x30)&0xff
 1080  00001bf0  a0220000	sb	(r1),r2
 1081  00001bf4  080000ec	j	L61_LF2
 1082  00001bf8  54000000	nop; delay slot nop
 1083  00001bfc          	L62_LF2:
 1084  00001bfc  20010001	addi	r1,r0,#1
 1085  00001c00  afc1fff4	sw	-12(r30),r1
 1086  00001c04          	L64_LF2:
 1087  00001c04  8fc1fff4	lw	r1,-12(r30)
 1088  00001c08  8fc20000	lw	r2,(r30)
 1089  00001c0c  0022082c	sle	r1,r1,r2
 1090  00001c10  1420000c	bnez	r1,L66_LF2
 1091  00001c14  54000000	nop; delay slot nop
 1092  00001c18  08000024	j	L65_LF2
 1093  00001c1c  54000000	nop; delay slot nop
 1094  00001c20          	L67_LF2:
 1095  00001c20          	L66_LF2:
 1096  00001c20  8fc1fff4	lw	r1,-12(r30)
 1097  00001c24  00011820	add	r3,r0,r1
 1098  00001c28  50620002	slli	r2,r3,#0x2
 1099  00001c2c  00411020	add	r2,r2,r1
 1100  00001c30  50410001	slli	r1,r2,#0x1
 1101  00001c34  afc1fff4	sw	-12(r30),r1
 1102  00001c38  0bffffc8	j	L64_LF2
 1103  00001c3c  54000000	nop; delay slot nop
 1104  00001c40          	L65_LF2:
 1105  00001c40  54000000	nop
 1106  00001c44          	L68_LF2:
 1107  00001c44  8fc1fff4	lw	r1,-12(r30)
 1108  00001c48  2002000a	addi	r2,r0,#10
 1109  00001c4c  00200035	movi2fp	f0,r1
 1110  00001c50  00400835	movi2fp	f1,r2
 1111  00001c54  0401000f	div	f0,f0,f1
 1112  00001c58  00000834	movfp2i	r1,f0
 1113  00001c5c  afc1fff4	sw	-12(r30),r1
 1114  00001c60  8fc10004	lw	r1,4(r30)
 1115  00001c64  20220001	addi	r2,r1,#1
 1116  00001c68  afc20004	sw	4(r30),r2
 1117  00001c6c  8fc20000	lw	r2,(r30)
 1118  00001c70  8fc3fff4	lw	r3,-12(r30)
 1119  00001c74  00400035	movi2fp	f0,r2
 1120  00001c78  00600835	movi2fp	f1,r3
 1121  00001c7c  0401000f	div	f0,f0,f1
 1122  00001c80  00001034	movfp2i	r2,f0
 1123  00001c84  00021820	add	r3,r0,r2
 1124  00001c88  20620030	addi	r2,r3,#48
 1125  00001c8c  a0220000	sb	(r1),r2
 1126  00001c90  8fc10000	lw	r1,(r30)
 1127  00001c94  8fc3fff4	lw	r3,-12(r30)
 1128  00001c98  00200035	movi2fp	f0,r1
 1129  00001c9c  00600835	movi2fp	f1,r3
 1130  00001ca0  0401000f	div	f0,f0,f1
 1131  00001ca4  00001034	movfp2i	r2,f0
 1132  00001ca8  8fc3fff4	lw	r3,-12(r30)
 1133  00001cac  00400035	movi2fp	f0,r2
 1134  00001cb0  00600835	movi2fp	f1,r3
 1135  00001cb4  0401000e	mult	f0,f0,f1
 1136  00001cb8  00001034	movfp2i	r2,f0
 1137  00001cbc  00220822	sub	r1,r1,r2
 1138  00001cc0  afc10000	sw	(r30),r1
 1139  00001cc4          	L70_LF2:
 1140  00001cc4  8fc1fff4	lw	r1,-12(r30)
 1141  00001cc8  6c220001	sgti	r2,r1,#1
 1142  00001ccc  1440000c	bnez	r2,L71_LF2
 1143  00001cd0  54000000	nop; delay slot nop
 1144  00001cd4  0800000c	j	L61_LF2
 1145  00001cd8  54000000	nop; delay slot nop
 1146  00001cdc          	L71_LF2:
 1147  00001cdc  0bffff64	j	L68_LF2
 1148  00001ce0  54000000	nop; delay slot nop
 1149  00001ce4          	L69_LF2:
 1150  00001ce4          	L63_LF2:
 1151  00001ce4          	L61_LF2:
 1152  00001ce4  8fc10004	lw	r1,4(r30)
 1153  00001ce8  20020000	addi	r2,r0,(#0x0)&0xff
 1154  00001cec  a0220000	sb	(r1),r2
 1155  00001cf0          	L59_LF2:
 1156  00001cf0  8fa20000	lw	r2,0(r29)
 1157  00001cf4  8fa30004	lw	r3,4(r29)
 1158  00001cf8  8fdffff8	lw	r31,-8(r30)
 1159  00001cfc  001ee820	add	r29,r0,r30
 1160  00001d00  8fdefffc	lw	r30,-4(r30)
 1161  00001d04  4be00000	jr	r31
 1162  00001d08  54000000	nop
 1163  00001d0c          	.endproc _ditoa
 1164  00001d0c          	.align 2
 1165  00001d0c          	.proc _dstrtol
 1166  00001d0c          	.global _dstrtol
 1167  00001d0c          	_dstrtol:
 1168                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1169  00001d0c  afbefffc	sw	-4(r29),r30; push fp
 1170  00001d10  001df020	add	r30,r0,r29; fp = sp
 1171  00001d14  afbffff8	sw	-8(r29),r31; push ret addr
 1172  00001d18  2fbd0020	subui	r29,r29,#32; alloc local storage
 1173  00001d1c  afa20000	sw	0(r29),r2
 1174  00001d20  20010000	addi	r1,r0,#0
 1175  00001d24  afc1fff4	sw	-12(r30),r1
 1176  00001d28          	L73_LF2:
 1177  00001d28  8fc10000	lw	r1,(r30)
 1178  00001d2c  90220000	lbu	r2,(r1)
 1179  00001d30  60410020	seqi	r1,r2,#32
 1180  00001d34  14200034	bnez	r1,L75_LF2
 1181  00001d38  54000000	nop; delay slot nop
 1182  00001d3c  8fc10000	lw	r1,(r30)
 1183  00001d40  90220000	lbu	r2,(r1)
 1184  00001d44  60410009	seqi	r1,r2,#9
 1185  00001d48  14200020	bnez	r1,L75_LF2
 1186  00001d4c  54000000	nop; delay slot nop
 1187  00001d50  8fc10000	lw	r1,(r30)
 1188  00001d54  90220000	lbu	r2,(r1)
 1189  00001d58  6041000a	seqi	r1,r2,#10
 1190  00001d5c  1420000c	bnez	r1,L75_LF2
 1191  00001d60  54000000	nop; delay slot nop
 1192  00001d64  0800001c	j	L74_LF2
 1193  00001d68  54000000	nop; delay slot nop
 1194  00001d6c          	L75_LF2:
 1195  00001d6c  8fc20000	lw	r2,(r30)
 1196  00001d70  20410001	addi	r1,r2,#1
 1197  00001d74  00011020	add	r2,r0,r1
 1198  00001d78  afc20000	sw	(r30),r2
 1199  00001d7c  0bffffa8	j	L73_LF2
 1200  00001d80  54000000	nop; delay slot nop
 1201  00001d84          	L74_LF2:
 1202  00001d84  8fc10004	lw	r1,4(r30)
 1203  00001d88  64220000	snei	r2,r1,#0
 1204  00001d8c  10400010	beqz	r2,L76_LF2
 1205  00001d90  54000000	nop; delay slot nop
 1206  00001d94  8fc10004	lw	r1,4(r30)
 1207  00001d98  8fc20000	lw	r2,(r30)
 1208  00001d9c  ac220000	sw	(r1),r2
 1209  00001da0          	L76_LF2:
 1210  00001da0  8fc10000	lw	r1,(r30)
 1211  00001da4  90220000	lbu	r2,(r1)
 1212  00001da8  64410000	snei	r1,r2,#0
 1213  00001dac  14200010	bnez	r1,L77_LF2
 1214  00001db0  54000000	nop; delay slot nop
 1215  00001db4  8fc1fff4	lw	r1,-12(r30)
 1216  00001db8  08000294	j	L72_LF2
 1217  00001dbc  54000000	nop; delay slot nop
 1218  00001dc0          	L77_LF2:
 1219  00001dc0  8fc10000	lw	r1,(r30)
 1220  00001dc4  90220000	lbu	r2,(r1)
 1221  00001dc8  6041002d	seqi	r1,r2,#45
 1222  00001dcc  10200024	beqz	r1,L78_LF2
 1223  00001dd0  54000000	nop; delay slot nop
 1224  00001dd4  2001ffff	addi	r1,r0,#-1
 1225  00001dd8  afc1ffec	sw	-20(r30),r1
 1226  00001ddc  8fc20000	lw	r2,(r30)
 1227  00001de0  20410001	addi	r1,r2,#1
 1228  00001de4  00011020	add	r2,r0,r1
 1229  00001de8  afc20000	sw	(r30),r2
 1230  00001dec  0800000c	j	L79_LF2
 1231  00001df0  54000000	nop; delay slot nop
 1232  00001df4          	L78_LF2:
 1233  00001df4  20010001	addi	r1,r0,#1
 1234  00001df8  afc1ffec	sw	-20(r30),r1
 1235  00001dfc          	L79_LF2:
 1236  00001dfc  8fc10008	lw	r1,8(r30)
 1237  00001e00  64220000	snei	r2,r1,#0
 1238  00001e04  14400090	bnez	r2,L80_LF2
 1239  00001e08  54000000	nop; delay slot nop
 1240  00001e0c  8fc10000	lw	r1,(r30)
 1241  00001e10  90220000	lbu	r2,(r1)
 1242  00001e14  60410030	seqi	r1,r2,#48
 1243  00001e18  10200074	beqz	r1,L81_LF2
 1244  00001e1c  54000000	nop; delay slot nop
 1245  00001e20  8fc20000	lw	r2,(r30)
 1246  00001e24  20410001	addi	r1,r2,#1
 1247  00001e28  00011020	add	r2,r0,r1
 1248  00001e2c  afc20000	sw	(r30),r2
 1249  00001e30  8fc10000	lw	r1,(r30)
 1250  00001e34  90220000	lbu	r2,(r1)
 1251  00001e38  60410078	seqi	r1,r2,#120
 1252  00001e3c  14200020	bnez	r1,L83_LF2
 1253  00001e40  54000000	nop; delay slot nop
 1254  00001e44  8fc10000	lw	r1,(r30)
 1255  00001e48  90220000	lbu	r2,(r1)
 1256  00001e4c  60410058	seqi	r1,r2,#88
 1257  00001e50  1420000c	bnez	r1,L83_LF2
 1258  00001e54  54000000	nop; delay slot nop
 1259  00001e58  08000024	j	L82_LF2
 1260  00001e5c  54000000	nop; delay slot nop
 1261  00001e60          	L83_LF2:
 1262  00001e60  20010010	addi	r1,r0,#16
 1263  00001e64  afc10008	sw	8(r30),r1
 1264  00001e68  8fc20000	lw	r2,(r30)
 1265  00001e6c  20410001	addi	r1,r2,#1
 1266  00001e70  00011020	add	r2,r0,r1
 1267  00001e74  afc20000	sw	(r30),r2
 1268  00001e78  0800000c	j	L84_LF2
 1269  00001e7c  54000000	nop; delay slot nop
 1270  00001e80          	L82_LF2:
 1271  00001e80  20010008	addi	r1,r0,#8
 1272  00001e84  afc10008	sw	8(r30),r1
 1273  00001e88          	L84_LF2:
 1274  00001e88  0800000c	j	L80_LF2
 1275  00001e8c  54000000	nop; delay slot nop
 1276  00001e90          	L81_LF2:
 1277  00001e90  2001000a	addi	r1,r0,#10
 1278  00001e94  afc10008	sw	8(r30),r1
 1279  00001e98          	L85_LF2:
 1280  00001e98          	L80_LF2:
 1281  00001e98  8fc10008	lw	r1,8(r30)
 1282  00001e9c  70220000	slei	r2,r1,#0
 1283  00001ea0  1440001c	bnez	r2,L87_LF2
 1284  00001ea4  54000000	nop; delay slot nop
 1285  00001ea8  8fc10008	lw	r1,8(r30)
 1286  00001eac  6c220010	sgti	r2,r1,#16
 1287  00001eb0  1440000c	bnez	r2,L87_LF2
 1288  00001eb4  54000000	nop; delay slot nop
 1289  00001eb8  08000010	j	L86_LF2
 1290  00001ebc  54000000	nop; delay slot nop
 1291  00001ec0          	L87_LF2:
 1292  00001ec0  8fc1fff4	lw	r1,-12(r30)
 1293  00001ec4  08000188	j	L72_LF2
 1294  00001ec8  54000000	nop; delay slot nop
 1295  00001ecc          	L86_LF2:
 1296  00001ecc  54000000	nop
 1297  00001ed0          	L88_LF2:
 1298  00001ed0  8fc10000	lw	r1,(r30)
 1299  00001ed4  90220000	lbu	r2,(r1)
 1300  00001ed8  6c41002f	sgtui	r1,r2,#47
 1301  00001edc  10200030	beqz	r1,L91_LF2
 1302  00001ee0  54000000	nop; delay slot nop
 1303  00001ee4  8fc10000	lw	r1,(r30)
 1304  00001ee8  90220000	lbu	r2,(r1)
 1305  00001eec  70410039	sleui	r1,r2,#57
 1306  00001ef0  1020001c	beqz	r1,L91_LF2
 1307  00001ef4  54000000	nop; delay slot nop
 1308  00001ef8  8fc10000	lw	r1,(r30)
 1309  00001efc  90220000	lbu	r2,(r1)
 1310  00001f00  2041ffd0	addi	r1,r2,#-48
 1311  00001f04  afc1fff0	sw	-16(r30),r1
 1312  00001f08  0800008c	j	L92_LF2
 1313  00001f0c  54000000	nop; delay slot nop
 1314  00001f10          	L91_LF2:
 1315  00001f10  8fc10000	lw	r1,(r30)
 1316  00001f14  90220000	lbu	r2,(r1)
 1317  00001f18  6c410060	sgtui	r1,r2,#96
 1318  00001f1c  10200030	beqz	r1,L93_LF2
 1319  00001f20  54000000	nop; delay slot nop
 1320  00001f24  8fc10000	lw	r1,(r30)
 1321  00001f28  90220000	lbu	r2,(r1)
 1322  00001f2c  7041007a	sleui	r1,r2,#122
 1323  00001f30  1020001c	beqz	r1,L93_LF2
 1324  00001f34  54000000	nop; delay slot nop
 1325  00001f38  8fc10000	lw	r1,(r30)
 1326  00001f3c  90220000	lbu	r2,(r1)
 1327  00001f40  2041ffa9	addi	r1,r2,#-87
 1328  00001f44  afc1fff0	sw	-16(r30),r1
 1329  00001f48  0800004c	j	L92_LF2
 1330  00001f4c  54000000	nop; delay slot nop
 1331  00001f50          	L93_LF2:
 1332  00001f50  8fc10000	lw	r1,(r30)
 1333  00001f54  90220000	lbu	r2,(r1)
 1334  00001f58  6c410040	sgtui	r1,r2,#64
 1335  00001f5c  10200030	beqz	r1,L95_LF2
 1336  00001f60  54000000	nop; delay slot nop
 1337  00001f64  8fc10000	lw	r1,(r30)
 1338  00001f68  90220000	lbu	r2,(r1)
 1339  00001f6c  7041005a	sleui	r1,r2,#90
 1340  00001f70  1020001c	beqz	r1,L95_LF2
 1341  00001f74  54000000	nop; delay slot nop
 1342  00001f78  8fc10000	lw	r1,(r30)
 1343  00001f7c  90220000	lbu	r2,(r1)
 1344  00001f80  2041ffc9	addi	r1,r2,#-55
 1345  00001f84  afc1fff0	sw	-16(r30),r1
 1346  00001f88  0800000c	j	L92_LF2
 1347  00001f8c  54000000	nop; delay slot nop
 1348  00001f90          	L95_LF2:
 1349  00001f90  200103e8	addi	r1,r0,#1000
 1350  00001f94  afc1fff0	sw	-16(r30),r1
 1351  00001f98          	L96_LF2:
 1352  00001f98          	L94_LF2:
 1353  00001f98          	L92_LF2:
 1354  00001f98  8fc1fff0	lw	r1,-16(r30)
 1355  00001f9c  8fc20008	lw	r2,8(r30)
 1356  00001fa0  0022082a	slt	r1,r1,r2
 1357  00001fa4  10200040	beqz	r1,L90_LF2
 1358  00001fa8  54000000	nop; delay slot nop
 1359  00001fac  8fc1fff4	lw	r1,-12(r30)
 1360  00001fb0  8fc20008	lw	r2,8(r30)
 1361  00001fb4  00200035	movi2fp	f0,r1
 1362  00001fb8  00400835	movi2fp	f1,r2
 1363  00001fbc  0401000e	mult	f0,f0,f1
 1364  00001fc0  00000834	movfp2i	r1,f0
 1365  00001fc4  afc1fff4	sw	-12(r30),r1
 1366  00001fc8  8fc1fff4	lw	r1,-12(r30)
 1367  00001fcc  8fc2fff0	lw	r2,-16(r30)
 1368  00001fd0  00220820	add	r1,r1,r2
 1369  00001fd4  afc1fff4	sw	-12(r30),r1
 1370  00001fd8  8fc20000	lw	r2,(r30)
 1371  00001fdc  20410001	addi	r1,r2,#1
 1372  00001fe0  00011020	add	r2,r0,r1
 1373  00001fe4  afc20000	sw	(r30),r2
 1374  00001fe8          	L97_LF2:
 1375  00001fe8          	L90_LF2:
 1376  00001fe8  8fc1fff0	lw	r1,-16(r30)
 1377  00001fec  8fc20008	lw	r2,8(r30)
 1378  00001ff0  0022082a	slt	r1,r1,r2
 1379  00001ff4  1420000c	bnez	r1,L98_LF2
 1380  00001ff8  54000000	nop; delay slot nop
 1381  00001ffc  0800000c	j	L89_LF2
 1382  00002000  54000000	nop; delay slot nop
 1383  00002004          	L98_LF2:
 1384  00002004  0bfffec8	j	L88_LF2
 1385  00002008  54000000	nop; delay slot nop
 1386  0000200c          	L89_LF2:
 1387  0000200c  8fc10004	lw	r1,4(r30)
 1388  00002010  64220000	snei	r2,r1,#0
 1389  00002014  10400010	beqz	r2,L99_LF2
 1390  00002018  54000000	nop; delay slot nop
 1391  0000201c  8fc10004	lw	r1,4(r30)
 1392  00002020  8fc20000	lw	r2,(r30)
 1393  00002024  ac220000	sw	(r1),r2
 1394  00002028          	L99_LF2:
 1395  00002028  8fc1fff4	lw	r1,-12(r30)
 1396  0000202c  8fc2ffec	lw	r2,-20(r30)
 1397  00002030  00200035	movi2fp	f0,r1
 1398  00002034  00400835	movi2fp	f1,r2
 1399  00002038  0401000e	mult	f0,f0,f1
 1400  0000203c  00000834	movfp2i	r1,f0
 1401  00002040  afc1fff4	sw	-12(r30),r1
 1402  00002044  8fc1fff4	lw	r1,-12(r30)
 1403  00002048  08000004	j	L72_LF2
 1404  0000204c  54000000	nop; delay slot nop
 1405  00002050          	L72_LF2:
 1406  00002050  8fa20000	lw	r2,0(r29)
 1407  00002054  8fdffff8	lw	r31,-8(r30)
 1408  00002058  001ee820	add	r29,r0,r30
 1409  0000205c  8fdefffc	lw	r30,-4(r30)
 1410  00002060  4be00000	jr	r31
 1411  00002064  54000000	nop
 1412  00002068          	.endproc _dstrtol
 1413  00002068          	.align 2
 1414  00002068          	.proc _bcopy
 1415  00002068          	.global _bcopy
 1416  00002068          	_bcopy:
 1417                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1418  00002068  afbefffc	sw	-4(r29),r30; push fp
 1419  0000206c  001df020	add	r30,r0,r29; fp = sp
 1420  00002070  afbffff8	sw	-8(r29),r31; push ret addr
 1421  00002074  2fbd0010	subui	r29,r29,#16; alloc local storage
 1422  00002078  afa20000	sw	0(r29),r2
 1423  0000207c  afa30004	sw	4(r29),r3
 1424  00002080  54000000	nop
 1425  00002084          	L101_LF2:
 1426  00002084  8fc10008	lw	r1,8(r30)
 1427  00002088  2022ffff	addi	r2,r1,#-1
 1428  0000208c  afc20008	sw	8(r30),r2
 1429  00002090  6c210000	sgti	r1,r1,#0
 1430  00002094  1420000c	bnez	r1,L103_LF2
 1431  00002098  54000000	nop; delay slot nop
 1432  0000209c  0800002c	j	L102_LF2
 1433  000020a0  54000000	nop; delay slot nop
 1434  000020a4          	L103_LF2:
 1435  000020a4  8fc10004	lw	r1,4(r30)
 1436  000020a8  20220001	addi	r2,r1,#1
 1437  000020ac  afc20004	sw	4(r30),r2
 1438  000020b0  8fc20000	lw	r2,(r30)
 1439  000020b4  20430001	addi	r3,r2,#1
 1440  000020b8  afc30000	sw	(r30),r3
 1441  000020bc  80420000	lb	r2,(r2)
 1442  000020c0  a0220000	sb	(r1),r2
 1443  000020c4  0bffffbc	j	L101_LF2
 1444  000020c8  54000000	nop; delay slot nop
 1445  000020cc          	L102_LF2:
 1446  000020cc          	L100_LF2:
 1447  000020cc  8fa20000	lw	r2,0(r29)
 1448  000020d0  8fa30004	lw	r3,4(r29)
 1449  000020d4  8fdffff8	lw	r31,-8(r30)
 1450  000020d8  001ee820	add	r29,r0,r30
 1451  000020dc  8fdefffc	lw	r30,-4(r30)
 1452  000020e0  4be00000	jr	r31
 1453  000020e4  54000000	nop
 1454  000020e8          	.endproc _bcopy
 1455  000020e8          	.align 2
 1456  000020e8          	.proc _bzero
 1457  000020e8          	.global _bzero
 1458  000020e8          	_bzero:
 1459                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1460  000020e8  afbefffc	sw	-4(r29),r30; push fp
 1461  000020ec  001df020	add	r30,r0,r29; fp = sp
 1462  000020f0  afbffff8	sw	-8(r29),r31; push ret addr
 1463  000020f4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1464  000020f8  afa20000	sw	0(r29),r2
 1465  000020fc  54000000	nop
 1466  00002100          	L105_LF2:
 1467  00002100  8fc10004	lw	r1,4(r30)
 1468  00002104  2022ffff	addi	r2,r1,#-1
 1469  00002108  afc20004	sw	4(r30),r2
 1470  0000210c  6c210000	sgti	r1,r1,#0
 1471  00002110  1420000c	bnez	r1,L107_LF2
 1472  00002114  54000000	nop; delay slot nop
 1473  00002118  08000020	j	L106_LF2
 1474  0000211c  54000000	nop; delay slot nop
 1475  00002120          	L107_LF2:
 1476  00002120  8fc10000	lw	r1,(r30)
 1477  00002124  20220001	addi	r2,r1,#1
 1478  00002128  afc20000	sw	(r30),r2
 1479  0000212c  20020000	addi	r2,r0,(#0x0)&0xff
 1480  00002130  a0220000	sb	(r1),r2
 1481  00002134  0bffffc8	j	L105_LF2
 1482  00002138  54000000	nop; delay slot nop
 1483  0000213c          	L106_LF2:
 1484  0000213c          	L104_LF2:
 1485  0000213c  8fa20000	lw	r2,0(r29)
 1486  00002140  8fdffff8	lw	r31,-8(r30)
 1487  00002144  001ee820	add	r29,r0,r30
 1488  00002148  8fdefffc	lw	r30,-4(r30)
 1489  0000214c  4be00000	jr	r31
 1490  00002150  54000000	nop
 1491  00002154          	.endproc _bzero
 1492  00002154          	.align 2
 1493  00002154          	.proc _min
 1494  00002154          	.global _min
 1495  00002154          	_min:
 1496                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1497  00002154  afbefffc	sw	-4(r29),r30; push fp
 1498  00002158  001df020	add	r30,r0,r29; fp = sp
 1499  0000215c  afbffff8	sw	-8(r29),r31; push ret addr
 1500  00002160  2fbd0010	subui	r29,r29,#16; alloc local storage
 1501  00002164  afa20000	sw	0(r29),r2
 1502  00002168  afa30004	sw	4(r29),r3
 1503  0000216c  8fc10000	lw	r1,(r30)
 1504  00002170  8fc20004	lw	r2,4(r30)
 1505  00002174  0022182c	sle	r3,r1,r2
 1506  00002178  14600008	bnez	r3,L109_LF2
 1507  0000217c  54000000	nop; delay slot nop
 1508  00002180  8fc10004	lw	r1,4(r30)
 1509  00002184          	L109_LF2:
 1510  00002184  08000004	j	L108_LF2
 1511  00002188  54000000	nop; delay slot nop
 1512  0000218c          	L108_LF2:
 1513  0000218c  8fa20000	lw	r2,0(r29)
 1514  00002190  8fa30004	lw	r3,4(r29)
 1515  00002194  8fdffff8	lw	r31,-8(r30)
 1516  00002198  001ee820	add	r29,r0,r30
 1517  0000219c  8fdefffc	lw	r30,-4(r30)
 1518  000021a0  4be00000	jr	r31
 1519  000021a4  54000000	nop
 1520  000021a8          	.endproc _min
 1521                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1522                      ;;;
 1523                      ;;; Most of the traps are called in files from libtraps.
 1526  000021a8          	.align 2
 1527  000021a8          	.proc _exit
 1528  000021a8          	.global _exit
 1529  000021a8          	_exit:
 1530  000021a8  44000300	trap	#0x300
 1531  000021ac  4be00000	jr	r31
 1532  000021b0  54000000	nop
 1533  000021b4          	.endproc _exit
 1535                      ; for the benefit of gcc.
 1536  000021b4          	.proc ___main
 1537  000021b4          	.global ___main
 1538  000021b4          	___main:
 1539  000021b4  4be00000	jr	r31
 1540  000021b8  54000000	nop
 1541  000021bc          	.endproc ___main
 1542  000021bc          	.text
 1543  000021bc          	.global _etext
 1544  000021bc          	_etext:
 1545  000021bc          	.align 3
 1546  000021c0          	.data
 1547  00003125          	.global _edata
 1548  00003125          	_edata:
