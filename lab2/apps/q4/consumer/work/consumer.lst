 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 446
    4                      ; Text size: 4836
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <synch lock number>\n    <cond var 1 n"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c73796e	
   85  0000302c  6368206c	
   85  00003030  6f636b20	
   85  00003034  6e756d62	
   85  00003038  65723e0a	
   85  0000303c  20202020	
   85  00003040  3c636f6e	
   85  00003044  64207661	
   85  00003048  72203120	
   85  0000304c  6e      	
   86  0000304d  756d6265	.ascii "umber> <cond var 2 number> <handle_to_page_mapped_semaphore>\n\000"
   86  00003051  723e203c	
   86  00003055  636f6e64	
   86  00003059  20766172	
   86  0000305d  2032206e	
   86  00003061  756d6265	
   86  00003065  723e203c	
   86  00003069  68616e64	
   86  0000306d  6c655f74	
   86  00003071  6f5f7061	
   86  00003075  67655f6d	
   86  00003079  61707065	
   86  0000307d  645f7365	
   86  00003081  6d617068	
   86  00003085  6f72653e	
   86  00003089  0a00    	
   87  0000308b          	.align 2
   88  0000308c          	LC2_LF0:
   89  0000308c  436f756c	.ascii "Could not map the virtual address to the memory in pid : %d\n\000"
   89  00003090  64206e6f	
   89  00003094  74206d61	
   89  00003098  70207468	
   89  0000309c  65207669	
   89  000030a0  72747561	
   89  000030a4  6c206164	
   89  000030a8  64726573	
   89  000030ac  7320746f	
   89  000030b0  20746865	
   89  000030b4  206d656d	
   89  000030b8  6f727920	
   89  000030bc  696e2070	
   89  000030c0  6964203a	
   89  000030c4  2025640a	
   89  000030c8  00      	
   90  000030c9          	.align 2
   91  000030cc          	LC3_LF0:
   92  000030cc  2c206578	.ascii ", exiting...\n\000"
   92  000030d0  6974696e	
   92  000030d4  672e2e2e	
   92  000030d8  0a00    	
   93  000030da          	.align 2
   94  000030dc          	LC4_LF0:
   95  000030dc  436f6e73	.ascii "Consumer :%d is waiting on notEmpty\n\000"
   95  000030e0  756d6572	
   95  000030e4  203a2564	
   95  000030e8  20697320	
   95  000030ec  77616974	
   95  000030f0  696e6720	
   95  000030f4  6f6e206e	
   95  000030f8  6f74456d	
   95  000030fc  7074790a	
   95  00003100  00      	
   96  00003101          	.align 2
   97  00003104          	LC5_LF0:
   98  00003104  436f6e73	.ascii "Consumer %d removed: %c\n\000"
   98  00003108  756d6572	
   98  0000310c  20256420	
   98  00003110  72656d6f	
   98  00003114  7665643a	
   98  00003118  2025630a	
   98  0000311c  00      	
   99  0000311d          	.align 2
  100  00003120          	LC6_LF0:
  101  00003120  436f6e75	.ascii "Conusmer %d sends signal of buffer non-stauration (nonFull)\n\000"
  101  00003124  736d6572	
  101  00003128  20256420	
  101  0000312c  73656e64	
  101  00003130  73207369	
  101  00003134  676e616c	
  101  00003138  206f6620	
  101  0000313c  62756666	
  101  00003140  6572206e	
  101  00003144  6f6e2d73	
  101  00003148  74617572	
  101  0000314c  6174696f	
  101  00003150  6e20286e	
  101  00003154  6f6e4675	
  101  00003158  6c6c290a	
  101  0000315c  00      	
  102  0000315d          	.align 2
  103  00003160          	LC7_LF0:
  104  00003160  42616420	.ascii "Bad semaphore : %d in Consumer(%d) in \000"
  104  00003164  73656d61	
  104  00003168  70686f72	
  104  0000316c  65203a20	
  104  00003170  25642069	
  104  00003174  6e20436f	
  104  00003178  6e73756d	
  104  0000317c  65722825	
  104  00003180  64292069	
  104  00003184  6e2000  	
  105  00003187          	.align 2
  106  00003188          	LC8_LF0:
  107  00003188  436f6e73	.ascii "Consumer ID : %d has completed its work and will die\n\000"
  107  0000318c  756d6572	
  107  00003190  20494420	
  107  00003194  3a202564	
  107  00003198  20686173	
  107  0000319c  20636f6d	
  107  000031a0  706c6574	
  107  000031a4  65642069	
  107  000031a8  74732077	
  107  000031ac  6f726b20	
  107  000031b0  616e6420	
  107  000031b4  77696c6c	
  107  000031b8  20646965	
  107  000031bc  0a00    	
  108  000031be          	.text
  109  000010d4          	.align 2
  110  000010d4          	.proc _main
  111  000010d4          	.global _main
  112  000010d4          	_main:
  113                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  114  000010d4  afbefffc	sw	-4(r29),r30; push fp
  115  000010d8  001df020	add	r30,r0,r29; fp = sp
  116  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  117  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  118  000010e4  8fc20000	lw	r2,(r30)
  119  000010e8  8fc90004	lw	r9,4(r30)
  120  000010ec  0c0011ec	jal	___main
  121  000010f0  54000000	nop; not filled.
  122  000010f4  20070000	addi	r7,r0,#0
  123  000010f8  20050000	addi	r5,r0,#0
  124  000010fc  64410006	snei	r1,r2,#6
  125  00001100  1020004c	beqz	r1,L14_LF0
  126  00001104  54000000	nop; not filled.
  127  00001108  23bdfff8	addi	r29,r29,#-8
  128  0000110c  3c0c0000	lhi	r12,((LC0_LF0)>>16)&0xffff
  129  00001110  258c3000	addui	r12,r12,(LC0_LF0)&0xffff
  130  00001114  afac0000	sw	(r29),r12
  131  00001118  0c0003b8	jal	_Printf
  132  0000111c  54000000	nop; not filled.
  133  00001120  8d2c0000	lw	r12,(r9)
  134  00001124  afac0000	sw	(r29),r12
  135  00001128  0c0003a8	jal	_Printf
  136  0000112c  54000000	nop; not filled.
  137  00001130  3c0c0000	lhi	r12,((LC1_LF0)>>16)&0xffff
  138  00001134  258c3008	addui	r12,r12,(LC1_LF0)&0xffff
  139  00001138  afac0000	sw	(r29),r12
  140  0000113c  0c000394	jal	_Printf
  141  00001140  54000000	nop; not filled.
  142  00001144  0c000440	jal	_Exit
  143  00001148  54000000	nop; not filled.
  144  0000114c  23bd0008	addi	r29,r29,#8
  145  00001150          	L14_LF0:
  146  00001150  23bdfff0	addi	r29,r29,#-16
  147  00001154  8d2c0004	lw	r12,4(r9)
  148  00001158  afac0000	sw	(r29),r12
  149  0000115c  200c0000	addi	r12,r0,#0
  150  00001160  afac0004	sw	4(r29),r12
  151  00001164  200c000a	addi	r12,r0,#10
  152  00001168  afac0008	sw	8(r29),r12
  153  0000116c  0c000cc4	jal	_dstrtol
  154  00001170  54000000	nop; not filled.
  155  00001174  00011020	add	r2,r0,r1
  156  00001178  8d2c0008	lw	r12,8(r9)
  157  0000117c  afac0000	sw	(r29),r12
  158  00001180  200c0000	addi	r12,r0,#0
  159  00001184  afac0004	sw	4(r29),r12
  160  00001188  200c000a	addi	r12,r0,#10
  161  0000118c  afac0008	sw	8(r29),r12
  162  00001190  0c000ca0	jal	_dstrtol
  163  00001194  54000000	nop; not filled.
  164  00001198  00014020	add	r8,r0,r1
  165  0000119c  8d2c000c	lw	r12,12(r9)
  166  000011a0  afac0000	sw	(r29),r12
  167  000011a4  200c0000	addi	r12,r0,#0
  168  000011a8  afac0004	sw	4(r29),r12
  169  000011ac  200c000a	addi	r12,r0,#10
  170  000011b0  afac0008	sw	8(r29),r12
  171  000011b4  0c000c7c	jal	_dstrtol
  172  000011b8  54000000	nop; not filled.
  173  000011bc  8d2c0010	lw	r12,16(r9)
  174  000011c0  afac0000	sw	(r29),r12
  175  000011c4  200c0000	addi	r12,r0,#0
  176  000011c8  afac0004	sw	4(r29),r12
  177  000011cc  200c000a	addi	r12,r0,#10
  178  000011d0  afac0008	sw	8(r29),r12
  179  000011d4  0c000c5c	jal	_dstrtol
  180  000011d8  54000000	nop; not filled.
  181  000011dc  00013020	add	r6,r0,r1
  182  000011e0  8d2c0014	lw	r12,20(r9)
  183  000011e4  afac0000	sw	(r29),r12
  184  000011e8  200c0000	addi	r12,r0,#0
  185  000011ec  afac0004	sw	4(r29),r12
  186  000011f0  200c000a	addi	r12,r0,#10
  187  000011f4  afac0008	sw	8(r29),r12
  188  000011f8  0c000c38	jal	_dstrtol
  189  000011fc  54000000	nop; not filled.
  190  00001200  00015820	add	r11,r0,r1
  191  00001204  afa20000	sw	(r29),r2
  192  00001208  0c0002f8	jal	_shmat
  193  0000120c  54000000	nop; not filled.
  194  00001210  00012020	add	r4,r0,r1
  195  00001214  23bd0010	addi	r29,r29,#16
  196  00001218  64810000	snei	r1,r4,#0
  197  0000121c  14200058	bnez	r1,L15_LF0
  198  00001220  54000000	nop; not filled.
  199  00001224  0c0002b8	jal	_getpid
  200  00001228  54000000	nop; not filled.
  201  0000122c  23bdfff8	addi	r29,r29,#-8
  202  00001230  3c0c0000	lhi	r12,((LC2_LF0)>>16)&0xffff
  203  00001234  258c308c	addui	r12,r12,(LC2_LF0)&0xffff
  204  00001238  afac0000	sw	(r29),r12
  205  0000123c  afa10004	sw	4(r29),r1
  206  00001240  0c000290	jal	_Printf
  207  00001244  54000000	nop; not filled.
  208  00001248  8d2c0000	lw	r12,(r9)
  209  0000124c  afac0000	sw	(r29),r12
  210  00001250  0c000280	jal	_Printf
  211  00001254  54000000	nop; not filled.
  212  00001258  3c0c0000	lhi	r12,((LC3_LF0)>>16)&0xffff
  213  0000125c  258c30cc	addui	r12,r12,(LC3_LF0)&0xffff
  214  00001260  afac0000	sw	(r29),r12
  215  00001264  0c00026c	jal	_Printf
  216  00001268  54000000	nop; not filled.
  217  0000126c  0c000318	jal	_Exit
  218  00001270  54000000	nop; not filled.
  219  00001274  23bd0008	addi	r29,r29,#8
  220  00001278          	L15_LF0:
  221  00001278  200a0005	addi	r10,r0,#5
  222  0000127c          	L18_LF0:
  223  0000127c  23bdfff8	addi	r29,r29,#-8
  224  00001280  afa80000	sw	(r29),r8
  225  00001284  0c0002b8	jal	_lock_acquire
  226  00001288  54000000	nop; not filled.
  227  0000128c  23bd0008	addi	r29,r29,#8
  228  00001290  64210000	snei	r1,r1,#0
  229  00001294  1020012c	beqz	r1,L19_LF0
  230  00001298  54000000	nop; not filled.
  231  0000129c  8c81000c	lw	r1,12(r4)
  232  000012a0  8c820008	lw	r2,8(r4)
  233  000012a4  00220828	seq	r1,r1,r2
  234  000012a8  10200038	beqz	r1,L20_LF0
  235  000012ac  54000000	nop; not filled.
  236  000012b0  0c00022c	jal	_getpid
  237  000012b4  54000000	nop; not filled.
  238  000012b8  23bdfff8	addi	r29,r29,#-8
  239  000012bc  3c0c0000	lhi	r12,((LC4_LF0)>>16)&0xffff
  240  000012c0  258c30dc	addui	r12,r12,(LC4_LF0)&0xffff
  241  000012c4  afac0000	sw	(r29),r12
  242  000012c8  afa10004	sw	4(r29),r1
  243  000012cc  0c000204	jal	_Printf
  244  000012d0  54000000	nop; not filled.
  245  000012d4  afa60000	sw	(r29),r6
  246  000012d8  0c000288	jal	_cond_wait
  247  000012dc  54000000	nop; not filled.
  248  000012e0  23bd0008	addi	r29,r29,#8
  249  000012e4          	L20_LF0:
  250  000012e4  8c81000c	lw	r1,12(r4)
  251  000012e8  20230001	addi	r3,r1,#1
  252  000012ec  00600035	movi2fp	f0,r3
  253  000012f0  01400835	movi2fp	f1,r10
  254  000012f4  0401000f	div	f0,f0,f1
  255  000012f8  00001034	movfp2i	r2,f0
  256  000012fc  50410002	slli	r1,r2,#0x2
  257  00001300  00220820	add	r1,r1,r2
  258  00001304  00611022	sub	r2,r3,r1
  259  00001308  8c810008	lw	r1,8(r4)
  260  0000130c  00220828	seq	r1,r1,r2
  261  00001310  10200008	beqz	r1,L21_LF0
  262  00001314  54000000	nop; not filled.
  263  00001318  20050001	addi	r5,r0,#1
  264  0000131c          	L21_LF0:
  265  0000131c  0c0001c0	jal	_getpid
  266  00001320  54000000	nop; not filled.
  267  00001324  23bdfff0	addi	r29,r29,#-16
  268  00001328  3c0c0000	lhi	r12,((LC5_LF0)>>16)&0xffff
  269  0000132c  258c3104	addui	r12,r12,(LC5_LF0)&0xffff
  270  00001330  afac0000	sw	(r29),r12
  271  00001334  afa10004	sw	4(r29),r1
  272  00001338  8c810008	lw	r1,8(r4)
  273  0000133c  00810820	add	r1,r4,r1
  274  00001340  90210000	lbu	r1,(r1)
  275  00001344  afa10008	sw	8(r29),r1
  276  00001348  0c000188	jal	_Printf
  277  0000134c  54000000	nop; not filled.
  278  00001350  20e70001	addi	r7,r7,#1
  279  00001354  8c810008	lw	r1,8(r4)
  280  00001358  20230001	addi	r3,r1,#1
  281  0000135c  00600035	movi2fp	f0,r3
  282  00001360  01400835	movi2fp	f1,r10
  283  00001364  0401000f	div	f0,f0,f1
  284  00001368  00001034	movfp2i	r2,f0
  285  0000136c  50410002	slli	r1,r2,#0x2
  286  00001370  00220820	add	r1,r1,r2
  287  00001374  00610822	sub	r1,r3,r1
  288  00001378  ac810008	sw	8(r4),r1
  289  0000137c  23bd0010	addi	r29,r29,#16
  290  00001380  64a10000	snei	r1,r5,#0
  291  00001384  1020003c	beqz	r1,L19_LF0
  292  00001388  54000000	nop; not filled.
  293  0000138c  0c000150	jal	_getpid
  294  00001390  54000000	nop; not filled.
  295  00001394  23bdfff8	addi	r29,r29,#-8
  296  00001398  3c0c0000	lhi	r12,((LC6_LF0)>>16)&0xffff
  297  0000139c  258c3120	addui	r12,r12,(LC6_LF0)&0xffff
  298  000013a0  afac0000	sw	(r29),r12
  299  000013a4  afa10004	sw	4(r29),r1
  300  000013a8  0c000128	jal	_Printf
  301  000013ac  54000000	nop; not filled.
  302  000013b0  afa60000	sw	(r29),r6
  303  000013b4  0c0001c4	jal	_cond_broadcast
  304  000013b8  54000000	nop; not filled.
  305  000013bc  20050000	addi	r5,r0,#0
  306  000013c0  23bd0008	addi	r29,r29,#8
  307  000013c4          	L19_LF0:
  308  000013c4  23bdfff8	addi	r29,r29,#-8
  309  000013c8  afa80000	sw	(r29),r8
  310  000013cc  0c00017c	jal	_lock_release
  311  000013d0  54000000	nop; not filled.
  312  000013d4  23bd0008	addi	r29,r29,#8
  313  000013d8  70e1000a	slei	r1,r7,#10
  314  000013dc  1420fe9c	bnez	r1,L18_LF0
  315  000013e0  54000000	nop; not filled.
  316  000013e4  23bdfff8	addi	r29,r29,#-8
  317  000013e8  afab0000	sw	(r29),r11
  318  000013ec  0c000138	jal	_sem_signal
  319  000013f0  54000000	nop; not filled.
  320  000013f4  23bd0008	addi	r29,r29,#8
  321  000013f8  64210001	snei	r1,r1,#1
  322  000013fc  1020005c	beqz	r1,L24_LF0
  323  00001400  54000000	nop; not filled.
  324  00001404  0c0000d8	jal	_getpid
  325  00001408  54000000	nop; not filled.
  326  0000140c  23bdfff0	addi	r29,r29,#-16
  327  00001410  3c0c0000	lhi	r12,((LC7_LF0)>>16)&0xffff
  328  00001414  258c3160	addui	r12,r12,(LC7_LF0)&0xffff
  329  00001418  afac0000	sw	(r29),r12
  330  0000141c  afab0004	sw	4(r29),r11
  331  00001420  afa10008	sw	8(r29),r1
  332  00001424  0c0000ac	jal	_Printf
  333  00001428  54000000	nop; not filled.
  334  0000142c  8d290000	lw	r9,(r9)
  335  00001430  afa90000	sw	(r29),r9
  336  00001434  0c00009c	jal	_Printf
  337  00001438  54000000	nop; not filled.
  338  0000143c  3c0c0000	lhi	r12,((LC3_LF0)>>16)&0xffff
  339  00001440  258c30cc	addui	r12,r12,(LC3_LF0)&0xffff
  340  00001444  afac0000	sw	(r29),r12
  341  00001448  0c000088	jal	_Printf
  342  0000144c  54000000	nop; not filled.
  343  00001450  0c000134	jal	_Exit
  344  00001454  54000000	nop; not filled.
  345  00001458  23bd0010	addi	r29,r29,#16
  346  0000145c          	L24_LF0:
  347  0000145c  0c000080	jal	_getpid
  348  00001460  54000000	nop; not filled.
  349  00001464  23bdfff8	addi	r29,r29,#-8
  350  00001468  3c0c0000	lhi	r12,((LC8_LF0)>>16)&0xffff
  351  0000146c  258c3188	addui	r12,r12,(LC8_LF0)&0xffff
  352  00001470  afac0000	sw	(r29),r12
  353  00001474  afa10004	sw	4(r29),r1
  354  00001478  0c000058	jal	_Printf
  355  0000147c  54000000	nop; not filled.
  356  00001480  23bd0008	addi	r29,r29,#8
  357  00001484  0c000e48	jal	_exit
  358  00001488  54000000	nop
  359  0000148c          	.endproc _main
  360                      ;;;
  361                      ;;; Stub functions for DLX traps.
  362                      ;;;
  363                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  364                      ;;;
  365                      ;;; The traps such as Open and Close
  366                      ;;; (note the capital letters) are for use by user programs.  The traps
  367                      ;;; with names such as open and close (lower case) are for use by the OS.
  368                      ;;;
  371  0000148c          	.align 2
  373                      ;;; The following are the traps to be used by user-level programs
  374                      ;;;
  376  0000148c          	.align 2
  377  0000148c          	.proc _Open
  378  0000148c          	.global _Open
  379  0000148c          	_Open:
  380                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  381                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  382                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  383  0000148c  44000213	trap	#0x213
  384  00001490  4be00000	jr	r31
  385  00001494  54000000	nop
  386  00001498          	.endproc _Open
  388  00001498          	.proc _Close
  389  00001498          	.global _Close
  390  00001498          	_Close:
  391  00001498  44000214	trap	#0x214
  392  0000149c  4be00000	jr	r31
  393  000014a0  54000000	nop
  394  000014a4          	.endproc _Close
  396  000014a4          	.proc _Read
  397  000014a4          	.global _Read
  398  000014a4          	_Read:
  399  000014a4  44000210	trap	#0x210
  400  000014a8  4be00000	jr	r31
  401  000014ac  54000000	nop
  402  000014b0          	.endproc _Read
  404  000014b0          	.proc _Write
  405  000014b0          	.global _Write
  406  000014b0          	_Write:
  407  000014b0  44000211	trap	#0x211
  408  000014b4  4be00000	jr	r31
  409  000014b8  54000000	nop
  410  000014bc          	.endproc _Write
  412  000014bc          	.proc _Lseek
  413  000014bc          	.global _Lseek
  414  000014bc          	_Lseek:
  415  000014bc  44000212	trap	#0x212
  416  000014c0  4be00000	jr	r31
  417  000014c4  54000000	nop
  418  000014c8          	.endproc _Lseek
  420  000014c8          	.proc _Putchar
  421  000014c8          	.global _Putchar
  422  000014c8          	_Putchar:
  423  000014c8  44000280	trap	#0x280
  424  000014cc  4be00000	jr	r31
  425  000014d0  54000000	nop
  426  000014d4          	.endproc _Putchar
  428  000014d4          	.proc _Printf
  429  000014d4          	.global _Printf
  430  000014d4          	_Printf:
  431  000014d4  44000201	trap	#0x201
  432  000014d8  4be00000	jr	r31
  433  000014dc  54000000	nop
  434  000014e0          	.endproc _Printf
  436  000014e0          	.proc _getpid
  437  000014e0          	.global _getpid
  438  000014e0          	_getpid:
  439  000014e0  44000431	trap	#0x431
  440  000014e4  4be00000	jr	r31
  441  000014e8  54000000	nop
  442  000014ec          	.endproc _getpid
  444  000014ec          	.proc _process_create
  445  000014ec          	.global _process_create
  446  000014ec          	_process_create:
  447  000014ec  44000432	trap	#0x432
  448  000014f0  4be00000	jr	r31
  449  000014f4  54000000	nop
  450  000014f8          	.endproc _process_create
  452  000014f8          	.proc _shmget
  453  000014f8          	.global _shmget
  454  000014f8          	_shmget:
  455  000014f8  44000440	trap	#0x440
  456  000014fc  4be00000	jr	r31
  457  00001500  54000000	nop
  458  00001504          	.endproc _shmget
  460  00001504          	.proc _shmat
  461  00001504          	.global _shmat
  462  00001504          	_shmat:
  463  00001504  44000441	trap	#0x441
  464  00001508  4be00000	jr	r31
  465  0000150c  54000000	nop
  466  00001510          	.endproc _shmat
  468  00001510          	.proc _sem_create
  469  00001510          	.global _sem_create
  470  00001510          	_sem_create:
  471  00001510  44000450	trap	#0x450
  472  00001514  4be00000	jr	r31
  473  00001518  54000000	nop
  474  0000151c          	.endproc _sem_create
  476  0000151c          	.proc _sem_wait
  477  0000151c          	.global _sem_wait
  478  0000151c          	_sem_wait:
  479  0000151c  44000451	trap	#0x451
  480  00001520  4be00000	jr	r31
  481  00001524  54000000	nop
  482  00001528          	.endproc _sem_wait
  484  00001528          	.proc _sem_signal
  485  00001528          	.global _sem_signal
  486  00001528          	_sem_signal:
  487  00001528  44000452	trap	#0x452
  488  0000152c  4be00000	jr	r31
  489  00001530  54000000	nop
  490  00001534          	.endproc _sem_signal
  492  00001534          	.proc _lock_create
  493  00001534          	.global _lock_create
  494  00001534          	_lock_create:
  495  00001534  44000453	trap	#0x453
  496  00001538  4be00000	jr	r31
  497  0000153c  54000000	nop
  498  00001540          	.endproc _lock_create
  500  00001540          	.proc _lock_acquire
  501  00001540          	.global _lock_acquire
  502  00001540          	_lock_acquire:
  503  00001540  44000454	trap	#0x454
  504  00001544  4be00000	jr	r31
  505  00001548  54000000	nop
  506  0000154c          	.endproc _lock_acquire
  508  0000154c          	.proc _lock_release
  509  0000154c          	.global _lock_release
  510  0000154c          	_lock_release:
  511  0000154c  44000455	trap	#0x455
  512  00001550  4be00000	jr	r31
  513  00001554  54000000	nop
  514  00001558          	.endproc _lock_release
  516  00001558          	.proc _cond_create
  517  00001558          	.global _cond_create
  518  00001558          	_cond_create:
  519  00001558  44000456	trap	#0x456
  520  0000155c  4be00000	jr	r31
  521  00001560  54000000	nop
  522  00001564          	.endproc _cond_create
  524  00001564          	.proc _cond_wait
  525  00001564          	.global _cond_wait
  526  00001564          	_cond_wait:
  527  00001564  44000457	trap	#0x457
  528  00001568  4be00000	jr	r31
  529  0000156c  54000000	nop
  530  00001570          	.endproc _cond_wait
  532  00001570          	.proc _cond_signal
  533  00001570          	.global _cond_signal
  534  00001570          	_cond_signal:
  535  00001570  44000458	trap	#0x458
  536  00001574  4be00000	jr	r31
  537  00001578  54000000	nop
  538  0000157c          	.endproc _cond_signal
  540  0000157c          	.proc _cond_broadcast
  541  0000157c          	.global _cond_broadcast
  542  0000157c          	_cond_broadcast:
  543  0000157c  44000459	trap	#0x459
  544  00001580  4be00000	jr	r31
  545  00001584  54000000	nop
  546  00001588          	.endproc _cond_broadcast
  548  00001588          	.proc _Exit
  549  00001588          	.global _Exit
  550  00001588          	_Exit:
  551  00001588  44000500	trap	#0x500
  552  0000158c  4be00000	jr	r31
  553  00001590  54000000	nop
  554  00001594          	.endproc _Exit
  555                      ; Compiled by GCC
  557  00001594          	.align 2
  558  00001594          	.proc _isspace
  559  00001594          	.global _isspace
  560  00001594          	_isspace:
  561                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  562  00001594  afbefffc	sw	-4(r29),r30; push fp
  563  00001598  001df020	add	r30,r0,r29; fp = sp
  564  0000159c  afbffff8	sw	-8(r29),r31; push ret addr
  565  000015a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  566  000015a4  afa20000	sw	0(r29),r2
  567  000015a8  afa30004	sw	4(r29),r3
  568  000015ac  afa40008	sw	8(r29),r4
  569  000015b0  83c20003	lb	r2,3(r30)
  570  000015b4  20010000	addi	r1,r0,#0
  571  000015b8  304300ff	andi	r3,r2,#0x00ff
  572  000015bc  60640020	seqi	r4,r3,#32
  573  000015c0  1480002c	bnez	r4,L3_LF2
  574  000015c4  54000000	nop; delay slot nop
  575  000015c8  304300ff	andi	r3,r2,#0x00ff
  576  000015cc  60640009	seqi	r4,r3,#9
  577  000015d0  1480001c	bnez	r4,L3_LF2
  578  000015d4  54000000	nop; delay slot nop
  579  000015d8  304300ff	andi	r3,r2,#0x00ff
  580  000015dc  6064000a	seqi	r4,r3,#10
  581  000015e0  1480000c	bnez	r4,L3_LF2
  582  000015e4  54000000	nop; delay slot nop
  583  000015e8  08000008	j	L2_LF2
  584  000015ec  54000000	nop; delay slot nop
  585  000015f0          	L3_LF2:
  586  000015f0  20010001	addi	r1,r0,#1
  587  000015f4          	L2_LF2:
  588  000015f4  08000004	j	L1_LF2
  589  000015f8  54000000	nop; delay slot nop
  590  000015fc          	L1_LF2:
  591  000015fc  8fa20000	lw	r2,0(r29)
  592  00001600  8fa30004	lw	r3,4(r29)
  593  00001604  8fa40008	lw	r4,8(r29)
  594  00001608  8fdffff8	lw	r31,-8(r30)
  595  0000160c  001ee820	add	r29,r0,r30
  596  00001610  8fdefffc	lw	r30,-4(r30)
  597  00001614  4be00000	jr	r31
  598  00001618  54000000	nop
  599  0000161c          	.endproc _isspace
  600  0000161c          	.align 2
  601  0000161c          	.proc _isxdigit
  602  0000161c          	.global _isxdigit
  603  0000161c          	_isxdigit:
  604                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  605  0000161c  afbefffc	sw	-4(r29),r30; push fp
  606  00001620  001df020	add	r30,r0,r29; fp = sp
  607  00001624  afbffff8	sw	-8(r29),r31; push ret addr
  608  00001628  2fbd0018	subui	r29,r29,#24; alloc local storage
  609  0000162c  afa20000	sw	0(r29),r2
  610  00001630  afa30004	sw	4(r29),r3
  611  00001634  afa40008	sw	8(r29),r4
  612  00001638  83c20003	lb	r2,3(r30)
  613  0000163c  20010000	addi	r1,r0,#0
  614  00001640  304300ff	andi	r3,r2,#0x00ff
  615  00001644  6c64002f	sgtui	r4,r3,#47
  616  00001648  1080001c	beqz	r4,L7_LF2
  617  0000164c  54000000	nop; delay slot nop
  618  00001650  304300ff	andi	r3,r2,#0x00ff
  619  00001654  70640039	sleui	r4,r3,#57
  620  00001658  1480005c	bnez	r4,L6_LF2
  621  0000165c  54000000	nop; delay slot nop
  622  00001660  08000004	j	L7_LF2
  623  00001664  54000000	nop; delay slot nop
  624  00001668          	L7_LF2:
  625  00001668  304300ff	andi	r3,r2,#0x00ff
  626  0000166c  6c640060	sgtui	r4,r3,#96
  627  00001670  1080001c	beqz	r4,L8_LF2
  628  00001674  54000000	nop; delay slot nop
  629  00001678  304300ff	andi	r3,r2,#0x00ff
  630  0000167c  70640066	sleui	r4,r3,#102
  631  00001680  14800034	bnez	r4,L6_LF2
  632  00001684  54000000	nop; delay slot nop
  633  00001688  08000004	j	L8_LF2
  634  0000168c  54000000	nop; delay slot nop
  635  00001690          	L8_LF2:
  636  00001690  304300ff	andi	r3,r2,#0x00ff
  637  00001694  6c640040	sgtui	r4,r3,#64
  638  00001698  10800020	beqz	r4,L5_LF2
  639  0000169c  54000000	nop; delay slot nop
  640  000016a0  304300ff	andi	r3,r2,#0x00ff
  641  000016a4  70640041	sleui	r4,r3,#65
  642  000016a8  1480000c	bnez	r4,L6_LF2
  643  000016ac  54000000	nop; delay slot nop
  644  000016b0  08000008	j	L5_LF2
  645  000016b4  54000000	nop; delay slot nop
  646  000016b8          	L6_LF2:
  647  000016b8  20010001	addi	r1,r0,#1
  648  000016bc          	L5_LF2:
  649  000016bc  08000004	j	L4_LF2
  650  000016c0  54000000	nop; delay slot nop
  651  000016c4          	L4_LF2:
  652  000016c4  8fa20000	lw	r2,0(r29)
  653  000016c8  8fa30004	lw	r3,4(r29)
  654  000016cc  8fa40008	lw	r4,8(r29)
  655  000016d0  8fdffff8	lw	r31,-8(r30)
  656  000016d4  001ee820	add	r29,r0,r30
  657  000016d8  8fdefffc	lw	r30,-4(r30)
  658  000016dc  4be00000	jr	r31
  659  000016e0  54000000	nop
  660  000016e4          	.endproc _isxdigit
  661  000016e4          	.align 2
  662  000016e4          	.proc _dstrcpy
  663  000016e4          	.global _dstrcpy
  664  000016e4          	_dstrcpy:
  665                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  666  000016e4  afbefffc	sw	-4(r29),r30; push fp
  667  000016e8  001df020	add	r30,r0,r29; fp = sp
  668  000016ec  afbffff8	sw	-8(r29),r31; push ret addr
  669  000016f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  670  000016f4  afa20000	sw	0(r29),r2
  671  000016f8  afa30004	sw	4(r29),r3
  672  000016fc  8fc10000	lw	r1,(r30)
  673  00001700  afc1fff4	sw	-12(r30),r1
  674  00001704          	L10_LF2:
  675  00001704  8fc10000	lw	r1,(r30)
  676  00001708  20220001	addi	r2,r1,#1
  677  0000170c  afc20000	sw	(r30),r2
  678  00001710  8fc20004	lw	r2,4(r30)
  679  00001714  20430001	addi	r3,r2,#1
  680  00001718  afc30004	sw	4(r30),r3
  681  0000171c  80420000	lb	r2,(r2)
  682  00001720  a0220000	sb	(r1),r2
  683  00001724  a3c2fff3	sb	-13(r30),r2
  684  00001728          	L12_LF2:
  685  00001728  93c1fff3	lbu	r1,-13(r30)
  686  0000172c  64220000	snei	r2,r1,#0
  687  00001730  1440000c	bnez	r2,L13_LF2
  688  00001734  54000000	nop; delay slot nop
  689  00001738  0800000c	j	L11_LF2
  690  0000173c  54000000	nop; delay slot nop
  691  00001740          	L13_LF2:
  692  00001740  0bffffc0	j	L10_LF2
  693  00001744  54000000	nop; delay slot nop
  694  00001748          	L11_LF2:
  695  00001748  8fc1fff4	lw	r1,-12(r30)
  696  0000174c  08000004	j	L9_LF2
  697  00001750  54000000	nop; delay slot nop
  698  00001754          	L9_LF2:
  699  00001754  8fa20000	lw	r2,0(r29)
  700  00001758  8fa30004	lw	r3,4(r29)
  701  0000175c  8fdffff8	lw	r31,-8(r30)
  702  00001760  001ee820	add	r29,r0,r30
  703  00001764  8fdefffc	lw	r30,-4(r30)
  704  00001768  4be00000	jr	r31
  705  0000176c  54000000	nop
  706  00001770          	.endproc _dstrcpy
  707  00001770          	.align 2
  708  00001770          	.proc _dstrncpy
  709  00001770          	.global _dstrncpy
  710  00001770          	_dstrncpy:
  711                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  712  00001770  afbefffc	sw	-4(r29),r30; push fp
  713  00001774  001df020	add	r30,r0,r29; fp = sp
  714  00001778  afbffff8	sw	-8(r29),r31; push ret addr
  715  0000177c  2fbd0018	subui	r29,r29,#24; alloc local storage
  716  00001780  afa20000	sw	0(r29),r2
  717  00001784  afa30004	sw	4(r29),r3
  718  00001788  8fc10000	lw	r1,(r30)
  719  0000178c  afc1fff4	sw	-12(r30),r1
  720  00001790          	L15_LF2:
  721  00001790  8fc10008	lw	r1,8(r30)
  722  00001794  2022ffff	addi	r2,r1,#-1
  723  00001798  afc20008	sw	8(r30),r2
  724  0000179c  70210000	slei	r1,r1,#0
  725  000017a0  1020000c	beqz	r1,L18_LF2
  726  000017a4  54000000	nop; delay slot nop
  727  000017a8  08000048	j	L16_LF2
  728  000017ac  54000000	nop; delay slot nop
  729  000017b0          	L18_LF2:
  730  000017b0  8fc10000	lw	r1,(r30)
  731  000017b4  20220001	addi	r2,r1,#1
  732  000017b8  afc20000	sw	(r30),r2
  733  000017bc  8fc20004	lw	r2,4(r30)
  734  000017c0  20430001	addi	r3,r2,#1
  735  000017c4  afc30004	sw	4(r30),r3
  736  000017c8  80420000	lb	r2,(r2)
  737  000017cc  a0220000	sb	(r1),r2
  738  000017d0  a3c2fff3	sb	-13(r30),r2
  739  000017d4          	L17_LF2:
  740  000017d4  93c1fff3	lbu	r1,-13(r30)
  741  000017d8  64220000	snei	r2,r1,#0
  742  000017dc  1440000c	bnez	r2,L19_LF2
  743  000017e0  54000000	nop; delay slot nop
  744  000017e4  0800000c	j	L16_LF2
  745  000017e8  54000000	nop; delay slot nop
  746  000017ec          	L19_LF2:
  747  000017ec  0bffffa0	j	L15_LF2
  748  000017f0  54000000	nop; delay slot nop
  749  000017f4          	L16_LF2:
  750  000017f4  8fc1fff4	lw	r1,-12(r30)
  751  000017f8  08000004	j	L14_LF2
  752  000017fc  54000000	nop; delay slot nop
  753  00001800          	L14_LF2:
  754  00001800  8fa20000	lw	r2,0(r29)
  755  00001804  8fa30004	lw	r3,4(r29)
  756  00001808  8fdffff8	lw	r31,-8(r30)
  757  0000180c  001ee820	add	r29,r0,r30
  758  00001810  8fdefffc	lw	r30,-4(r30)
  759  00001814  4be00000	jr	r31
  760  00001818  54000000	nop
  761  0000181c          	.endproc _dstrncpy
  762  0000181c          	.align 2
  763  0000181c          	.proc _dstrcat
  764  0000181c          	.global _dstrcat
  765  0000181c          	_dstrcat:
  766                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  767  0000181c  afbefffc	sw	-4(r29),r30; push fp
  768  00001820  001df020	add	r30,r0,r29; fp = sp
  769  00001824  afbffff8	sw	-8(r29),r31; push ret addr
  770  00001828  2fbd0018	subui	r29,r29,#24; alloc local storage
  771  0000182c  afa20000	sw	0(r29),r2
  772  00001830  8fc10000	lw	r1,(r30)
  773  00001834  afc1fff4	sw	-12(r30),r1
  774  00001838          	L21_LF2:
  775  00001838  8fc10000	lw	r1,(r30)
  776  0000183c  90220000	lbu	r2,(r1)
  777  00001840  64410000	snei	r1,r2,#0
  778  00001844  1420000c	bnez	r1,L23_LF2
  779  00001848  54000000	nop; delay slot nop
  780  0000184c  0800001c	j	L22_LF2
  781  00001850  54000000	nop; delay slot nop
  782  00001854          	L23_LF2:
  783  00001854  8fc20000	lw	r2,(r30)
  784  00001858  20410001	addi	r1,r2,#1
  785  0000185c  00011020	add	r2,r0,r1
  786  00001860  afc20000	sw	(r30),r2
  787  00001864  0bffffd0	j	L21_LF2
  788  00001868  54000000	nop; delay slot nop
  789  0000186c          	L22_LF2:
  790  0000186c  23bdfff8	addi	r29,r29,#-8
  791  00001870  001d0820	add	r1,r0,r29
  792  00001874  8fc20000	lw	r2,(r30)
  793  00001878  ac220000	sw	(r1),r2
  794  0000187c  8fc20004	lw	r2,4(r30)
  795  00001880  ac220004	sw	4(r1),r2
  796  00001884  0ffffe5c	jal	_dstrcpy
  797  00001888  54000000	nop; delay slot nop
  798  0000188c  23bd0008	addi	r29,r29,#8
  799  00001890  8fc1fff4	lw	r1,-12(r30)
  800  00001894  08000004	j	L20_LF2
  801  00001898  54000000	nop; delay slot nop
  802  0000189c          	L20_LF2:
  803  0000189c  8fa20000	lw	r2,0(r29)
  804  000018a0  8fdffff8	lw	r31,-8(r30)
  805  000018a4  001ee820	add	r29,r0,r30
  806  000018a8  8fdefffc	lw	r30,-4(r30)
  807  000018ac  4be00000	jr	r31
  808  000018b0  54000000	nop
  809  000018b4          	.endproc _dstrcat
  810  000018b4          	.align 2
  811  000018b4          	.proc _dstrncmp
  812  000018b4          	.global _dstrncmp
  813  000018b4          	_dstrncmp:
  814                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  815  000018b4  afbefffc	sw	-4(r29),r30; push fp
  816  000018b8  001df020	add	r30,r0,r29; fp = sp
  817  000018bc  afbffff8	sw	-8(r29),r31; push ret addr
  818  000018c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  819  000018c4  afa20000	sw	0(r29),r2
  820  000018c8  afa30004	sw	4(r29),r3
  821  000018cc  54000000	nop
  822  000018d0  20010000	addi	r1,r0,#0
  823  000018d4  afc1fff4	sw	-12(r30),r1
  824  000018d8          	L25_LF2:
  825  000018d8  8fc1fff4	lw	r1,-12(r30)
  826  000018dc  8fc20008	lw	r2,8(r30)
  827  000018e0  0022082a	slt	r1,r1,r2
  828  000018e4  1420000c	bnez	r1,L28_LF2
  829  000018e8  54000000	nop; delay slot nop
  830  000018ec  08000088	j	L26_LF2
  831  000018f0  54000000	nop; delay slot nop
  832  000018f4          	L28_LF2:
  833  000018f4  8fc10004	lw	r1,4(r30)
  834  000018f8  90220000	lbu	r2,(r1)
  835  000018fc  64410000	snei	r1,r2,#0
  836  00001900  14200018	bnez	r1,L29_LF2
  837  00001904  54000000	nop; delay slot nop
  838  00001908  20010000	addi	r1,r0,#0
  839  0000190c  080000d8	j	L24_LF2
  840  00001910  54000000	nop; delay slot nop
  841  00001914  08000028	j	L30_LF2
  842  00001918  54000000	nop; delay slot nop
  843  0000191c          	L29_LF2:
  844  0000191c  8fc10000	lw	r1,(r30)
  845  00001920  8fc20004	lw	r2,4(r30)
  846  00001924  90210000	lbu	r1,(r1)
  847  00001928  90420000	lbu	r2,(r2)
  848  0000192c  00220829	sne	r1,r1,r2
  849  00001930  1020000c	beqz	r1,L30_LF2
  850  00001934  54000000	nop; delay slot nop
  851  00001938  0800003c	j	L26_LF2
  852  0000193c  54000000	nop; delay slot nop
  853  00001940          	L31_LF2:
  854  00001940          	L30_LF2:
  855  00001940  8fc20000	lw	r2,(r30)
  856  00001944  20410001	addi	r1,r2,#1
  857  00001948  00011020	add	r2,r0,r1
  858  0000194c  afc20000	sw	(r30),r2
  859  00001950  8fc20004	lw	r2,4(r30)
  860  00001954  20410001	addi	r1,r2,#1
  861  00001958  00011020	add	r2,r0,r1
  862  0000195c  afc20004	sw	4(r30),r2
  863  00001960          	L27_LF2:
  864  00001960  8fc2fff4	lw	r2,-12(r30)
  865  00001964  20410001	addi	r1,r2,#1
  866  00001968  00011020	add	r2,r0,r1
  867  0000196c  afc2fff4	sw	-12(r30),r2
  868  00001970  0bffff64	j	L25_LF2
  869  00001974  54000000	nop; delay slot nop
  870  00001978          	L26_LF2:
  871  00001978  8fc1fff4	lw	r1,-12(r30)
  872  0000197c  8fc20008	lw	r2,8(r30)
  873  00001980  00220828	seq	r1,r1,r2
  874  00001984  10200018	beqz	r1,L32_LF2
  875  00001988  54000000	nop; delay slot nop
  876  0000198c  20010000	addi	r1,r0,#0
  877  00001990  08000054	j	L24_LF2
  878  00001994  54000000	nop; delay slot nop
  879  00001998  0800004c	j	L33_LF2
  880  0000199c  54000000	nop; delay slot nop
  881  000019a0          	L32_LF2:
  882  000019a0  8fc20000	lw	r2,(r30)
  883  000019a4  90410000	lbu	r1,(r2)
  884  000019a8  8fc20004	lw	r2,4(r30)
  885  000019ac  90430000	lbu	r3,(r2)
  886  000019b0  00230822	sub	r1,r1,r3
  887  000019b4  74220000	sgei	r2,r1,#0
  888  000019b8  10400020	beqz	r2,L34_LF2
  889  000019bc  54000000	nop; delay slot nop
  890  000019c0  8fc10000	lw	r1,(r30)
  891  000019c4  8fc20004	lw	r2,4(r30)
  892  000019c8  90210000	lbu	r1,(r1)
  893  000019cc  90420000	lbu	r2,(r2)
  894  000019d0  00220829	sne	r1,r1,r2
  895  000019d4  08000008	j	L35_LF2
  896  000019d8  54000000	nop; delay slot nop
  897  000019dc          	L34_LF2:
  898  000019dc  2001ffff	addi	r1,r0,#-1
  899  000019e0          	L35_LF2:
  900  000019e0  08000004	j	L24_LF2
  901  000019e4  54000000	nop; delay slot nop
  902  000019e8          	L33_LF2:
  903  000019e8          	L24_LF2:
  904  000019e8  8fa20000	lw	r2,0(r29)
  905  000019ec  8fa30004	lw	r3,4(r29)
  906  000019f0  8fdffff8	lw	r31,-8(r30)
  907  000019f4  001ee820	add	r29,r0,r30
  908  000019f8  8fdefffc	lw	r30,-4(r30)
  909  000019fc  4be00000	jr	r31
  910  00001a00  54000000	nop
  911  00001a04          	.endproc _dstrncmp
  912  00001a04          	.align 2
  913  00001a04          	.proc _dstrlen
  914  00001a04          	.global _dstrlen
  915  00001a04          	_dstrlen:
  916                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  917  00001a04  afbefffc	sw	-4(r29),r30; push fp
  918  00001a08  001df020	add	r30,r0,r29; fp = sp
  919  00001a0c  afbffff8	sw	-8(r29),r31; push ret addr
  920  00001a10  2fbd0018	subui	r29,r29,#24; alloc local storage
  921  00001a14  afa20000	sw	0(r29),r2
  922  00001a18  20010000	addi	r1,r0,#0
  923  00001a1c  afc1fff4	sw	-12(r30),r1
  924  00001a20          	L37_LF2:
  925  00001a20  8fc10000	lw	r1,(r30)
  926  00001a24  20220001	addi	r2,r1,#1
  927  00001a28  afc20000	sw	(r30),r2
  928  00001a2c  90210000	lbu	r1,(r1)
  929  00001a30  64220000	snei	r2,r1,#0
  930  00001a34  1440000c	bnez	r2,L39_LF2
  931  00001a38  54000000	nop; delay slot nop
  932  00001a3c  0800001c	j	L38_LF2
  933  00001a40  54000000	nop; delay slot nop
  934  00001a44          	L39_LF2:
  935  00001a44  8fc2fff4	lw	r2,-12(r30)
  936  00001a48  20410001	addi	r1,r2,#1
  937  00001a4c  00011020	add	r2,r0,r1
  938  00001a50  afc2fff4	sw	-12(r30),r2
  939  00001a54  0bffffc8	j	L37_LF2
  940  00001a58  54000000	nop; delay slot nop
  941  00001a5c          	L38_LF2:
  942  00001a5c  8fc1fff4	lw	r1,-12(r30)
  943  00001a60  08000004	j	L36_LF2
  944  00001a64  54000000	nop; delay slot nop
  945  00001a68          	L36_LF2:
  946  00001a68  8fa20000	lw	r2,0(r29)
  947  00001a6c  8fdffff8	lw	r31,-8(r30)
  948  00001a70  001ee820	add	r29,r0,r30
  949  00001a74  8fdefffc	lw	r30,-4(r30)
  950  00001a78  4be00000	jr	r31
  951  00001a7c  54000000	nop
  952  00001a80          	.endproc _dstrlen
  953  00001a80          	.align 2
  954  00001a80          	.proc _dstrstr
  955  00001a80          	.global _dstrstr
  956  00001a80          	_dstrstr:
  957                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  958  00001a80  afbefffc	sw	-4(r29),r30; push fp
  959  00001a84  001df020	add	r30,r0,r29; fp = sp
  960  00001a88  afbffff8	sw	-8(r29),r31; push ret addr
  961  00001a8c  2fbd0018	subui	r29,r29,#24; alloc local storage
  962  00001a90  afa20000	sw	0(r29),r2
  963  00001a94  23bdfff8	addi	r29,r29,#-8
  964  00001a98  001d0820	add	r1,r0,r29
  965  00001a9c  8fc20004	lw	r2,4(r30)
  966  00001aa0  ac220000	sw	(r1),r2
  967  00001aa4  0fffff5c	jal	_dstrlen
  968  00001aa8  54000000	nop; delay slot nop
  969  00001aac  23bd0008	addi	r29,r29,#8
  970  00001ab0  afc1fff4	sw	-12(r30),r1
  971  00001ab4          	L41_LF2:
  972  00001ab4  8fc10000	lw	r1,(r30)
  973  00001ab8  90220000	lbu	r2,(r1)
  974  00001abc  64410000	snei	r1,r2,#0
  975  00001ac0  1420000c	bnez	r1,L43_LF2
  976  00001ac4  54000000	nop; delay slot nop
  977  00001ac8  08000060	j	L42_LF2
  978  00001acc  54000000	nop; delay slot nop
  979  00001ad0          	L43_LF2:
  980  00001ad0  23bdfff0	addi	r29,r29,#-16
  981  00001ad4  001d0820	add	r1,r0,r29
  982  00001ad8  8fc20000	lw	r2,(r30)
  983  00001adc  ac220000	sw	(r1),r2
  984  00001ae0  8fc20004	lw	r2,4(r30)
  985  00001ae4  ac220004	sw	4(r1),r2
  986  00001ae8  8fc2fff4	lw	r2,-12(r30)
  987  00001aec  ac220008	sw	8(r1),r2
  988  00001af0  0ffffdc0	jal	_dstrncmp
  989  00001af4  54000000	nop; delay slot nop
  990  00001af8  23bd0010	addi	r29,r29,#16
  991  00001afc  64220000	snei	r2,r1,#0
  992  00001b00  14400010	bnez	r2,L44_LF2
  993  00001b04  54000000	nop; delay slot nop
  994  00001b08  8fc10000	lw	r1,(r30)
  995  00001b0c  08000028	j	L40_LF2
  996  00001b10  54000000	nop; delay slot nop
  997  00001b14          	L44_LF2:
  998  00001b14  8fc20000	lw	r2,(r30)
  999  00001b18  20410001	addi	r1,r2,#1
 1000  00001b1c  00011020	add	r2,r0,r1
 1001  00001b20  afc20000	sw	(r30),r2
 1002  00001b24  0bffff8c	j	L41_LF2
 1003  00001b28  54000000	nop; delay slot nop
 1004  00001b2c          	L42_LF2:
 1005  00001b2c  20010000	addi	r1,r0,#0
 1006  00001b30  08000004	j	L40_LF2
 1007  00001b34  54000000	nop; delay slot nop
 1008  00001b38          	L40_LF2:
 1009  00001b38  8fa20000	lw	r2,0(r29)
 1010  00001b3c  8fdffff8	lw	r31,-8(r30)
 1011  00001b40  001ee820	add	r29,r0,r30
 1012  00001b44  8fdefffc	lw	r30,-4(r30)
 1013  00001b48  4be00000	jr	r31
 1014  00001b4c  54000000	nop
 1015  00001b50          	.endproc _dstrstr
 1016  00001b50          	.align 2
 1017  00001b50          	.proc _dmindex
 1018  00001b50          	.global _dmindex
 1019  00001b50          	_dmindex:
 1020                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1021  00001b50  afbefffc	sw	-4(r29),r30; push fp
 1022  00001b54  001df020	add	r30,r0,r29; fp = sp
 1023  00001b58  afbffff8	sw	-8(r29),r31; push ret addr
 1024  00001b5c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1025  00001b60  afa20000	sw	0(r29),r2
 1026  00001b64  54000000	nop
 1027  00001b68          	L46_LF2:
 1028  00001b68  8fc10000	lw	r1,(r30)
 1029  00001b6c  90220000	lbu	r2,(r1)
 1030  00001b70  64410000	snei	r1,r2,#0
 1031  00001b74  1420000c	bnez	r1,L48_LF2
 1032  00001b78  54000000	nop; delay slot nop
 1033  00001b7c  08000070	j	L47_LF2
 1034  00001b80  54000000	nop; delay slot nop
 1035  00001b84          	L48_LF2:
 1036  00001b84  8fc10004	lw	r1,4(r30)
 1037  00001b88  afc1fff4	sw	-12(r30),r1
 1038  00001b8c          	L49_LF2:
 1039  00001b8c  8fc1fff4	lw	r1,-12(r30)
 1040  00001b90  90220000	lbu	r2,(r1)
 1041  00001b94  64410000	snei	r1,r2,#0
 1042  00001b98  1420000c	bnez	r1,L52_LF2
 1043  00001b9c  54000000	nop; delay slot nop
 1044  00001ba0  08000044	j	L50_LF2
 1045  00001ba4  54000000	nop; delay slot nop
 1046  00001ba8          	L52_LF2:
 1047  00001ba8  8fc10000	lw	r1,(r30)
 1048  00001bac  8fc2fff4	lw	r2,-12(r30)
 1049  00001bb0  90210000	lbu	r1,(r1)
 1050  00001bb4  90420000	lbu	r2,(r2)
 1051  00001bb8  00220828	seq	r1,r1,r2
 1052  00001bbc  10200010	beqz	r1,L51_LF2
 1053  00001bc0  54000000	nop; delay slot nop
 1054  00001bc4  8fc10000	lw	r1,(r30)
 1055  00001bc8  08000030	j	L45_LF2
 1056  00001bcc  54000000	nop; delay slot nop
 1057  00001bd0          	L53_LF2:
 1058  00001bd0          	L51_LF2:
 1059  00001bd0  8fc2fff4	lw	r2,-12(r30)
 1060  00001bd4  20410001	addi	r1,r2,#1
 1061  00001bd8  00011020	add	r2,r0,r1
 1062  00001bdc  afc2fff4	sw	-12(r30),r2
 1063  00001be0  0bffffa8	j	L49_LF2
 1064  00001be4  54000000	nop; delay slot nop
 1065  00001be8          	L50_LF2:
 1066  00001be8  0bffff7c	j	L46_LF2
 1067  00001bec  54000000	nop; delay slot nop
 1068  00001bf0          	L47_LF2:
 1069  00001bf0  20010000	addi	r1,r0,#0
 1070  00001bf4  08000004	j	L45_LF2
 1071  00001bf8  54000000	nop; delay slot nop
 1072  00001bfc          	L45_LF2:
 1073  00001bfc  8fa20000	lw	r2,0(r29)
 1074  00001c00  8fdffff8	lw	r31,-8(r30)
 1075  00001c04  001ee820	add	r29,r0,r30
 1076  00001c08  8fdefffc	lw	r30,-4(r30)
 1077  00001c0c  4be00000	jr	r31
 1078  00001c10  54000000	nop
 1079  00001c14          	.endproc _dmindex
 1080  00001c14          	.align 2
 1081  00001c14          	.proc _dindex
 1082  00001c14          	.global _dindex
 1083  00001c14          	_dindex:
 1084                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1085  00001c14  afbefffc	sw	-4(r29),r30; push fp
 1086  00001c18  001df020	add	r30,r0,r29; fp = sp
 1087  00001c1c  afbffff8	sw	-8(r29),r31; push ret addr
 1088  00001c20  2fbd0010	subui	r29,r29,#16; alloc local storage
 1089  00001c24  afa20000	sw	0(r29),r2
 1090  00001c28  54000000	nop
 1091  00001c2c          	L55_LF2:
 1092  00001c2c  8fc10000	lw	r1,(r30)
 1093  00001c30  90220000	lbu	r2,(r1)
 1094  00001c34  64410000	snei	r1,r2,#0
 1095  00001c38  1420000c	bnez	r1,L57_LF2
 1096  00001c3c  54000000	nop; delay slot nop
 1097  00001c40  08000040	j	L56_LF2
 1098  00001c44  54000000	nop; delay slot nop
 1099  00001c48          	L57_LF2:
 1100  00001c48  8fc10000	lw	r1,(r30)
 1101  00001c4c  90220000	lbu	r2,(r1)
 1102  00001c50  8fc10004	lw	r1,4(r30)
 1103  00001c54  00411028	seq	r2,r2,r1
 1104  00001c58  10400010	beqz	r2,L58_LF2
 1105  00001c5c  54000000	nop; delay slot nop
 1106  00001c60  8fc10000	lw	r1,(r30)
 1107  00001c64  08000028	j	L54_LF2
 1108  00001c68  54000000	nop; delay slot nop
 1109  00001c6c          	L58_LF2:
 1110  00001c6c  8fc20000	lw	r2,(r30)
 1111  00001c70  20410001	addi	r1,r2,#1
 1112  00001c74  00011020	add	r2,r0,r1
 1113  00001c78  afc20000	sw	(r30),r2
 1114  00001c7c  0bffffac	j	L55_LF2
 1115  00001c80  54000000	nop; delay slot nop
 1116  00001c84          	L56_LF2:
 1117  00001c84  20010000	addi	r1,r0,#0
 1118  00001c88  08000004	j	L54_LF2
 1119  00001c8c  54000000	nop; delay slot nop
 1120  00001c90          	L54_LF2:
 1121  00001c90  8fa20000	lw	r2,0(r29)
 1122  00001c94  8fdffff8	lw	r31,-8(r30)
 1123  00001c98  001ee820	add	r29,r0,r30
 1124  00001c9c  8fdefffc	lw	r30,-4(r30)
 1125  00001ca0  4be00000	jr	r31
 1126  00001ca4  54000000	nop
 1127  00001ca8          	.endproc _dindex
 1128  00001ca8          	.align 2
 1129  00001ca8          	.proc _ditoa
 1130  00001ca8          	.global _ditoa
 1131  00001ca8          	_ditoa:
 1132                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1133  00001ca8  afbefffc	sw	-4(r29),r30; push fp
 1134  00001cac  001df020	add	r30,r0,r29; fp = sp
 1135  00001cb0  afbffff8	sw	-8(r29),r31; push ret addr
 1136  00001cb4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1137  00001cb8  afa20000	sw	0(r29),r2
 1138  00001cbc  afa30004	sw	4(r29),r3
 1139  00001cc0  8fc10000	lw	r1,(r30)
 1140  00001cc4  68220000	slti	r2,r1,#0
 1141  00001cc8  1040002c	beqz	r2,L60_LF2
 1142  00001ccc  54000000	nop; delay slot nop
 1143  00001cd0  8fc10004	lw	r1,4(r30)
 1144  00001cd4  20220001	addi	r2,r1,#1
 1145  00001cd8  afc20004	sw	4(r30),r2
 1146  00001cdc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1147  00001ce0  a0220000	sb	(r1),r2
 1148  00001ce4  8fc10000	lw	r1,(r30)
 1149  00001ce8  00011022	sub	r2,r0,r1
 1150  00001cec  afc20000	sw	(r30),r2
 1151  00001cf0  08000118	j	L61_LF2
 1152  00001cf4  54000000	nop; delay slot nop
 1153  00001cf8          	L60_LF2:
 1154  00001cf8  8fc10000	lw	r1,(r30)
 1155  00001cfc  64220000	snei	r2,r1,#0
 1156  00001d00  14400020	bnez	r2,L62_LF2
 1157  00001d04  54000000	nop; delay slot nop
 1158  00001d08  8fc10004	lw	r1,4(r30)
 1159  00001d0c  20220001	addi	r2,r1,#1
 1160  00001d10  afc20004	sw	4(r30),r2
 1161  00001d14  20020030	addi	r2,r0,(#0x30)&0xff
 1162  00001d18  a0220000	sb	(r1),r2
 1163  00001d1c  080000ec	j	L61_LF2
 1164  00001d20  54000000	nop; delay slot nop
 1165  00001d24          	L62_LF2:
 1166  00001d24  20010001	addi	r1,r0,#1
 1167  00001d28  afc1fff4	sw	-12(r30),r1
 1168  00001d2c          	L64_LF2:
 1169  00001d2c  8fc1fff4	lw	r1,-12(r30)
 1170  00001d30  8fc20000	lw	r2,(r30)
 1171  00001d34  0022082c	sle	r1,r1,r2
 1172  00001d38  1420000c	bnez	r1,L66_LF2
 1173  00001d3c  54000000	nop; delay slot nop
 1174  00001d40  08000024	j	L65_LF2
 1175  00001d44  54000000	nop; delay slot nop
 1176  00001d48          	L67_LF2:
 1177  00001d48          	L66_LF2:
 1178  00001d48  8fc1fff4	lw	r1,-12(r30)
 1179  00001d4c  00011820	add	r3,r0,r1
 1180  00001d50  50620002	slli	r2,r3,#0x2
 1181  00001d54  00411020	add	r2,r2,r1
 1182  00001d58  50410001	slli	r1,r2,#0x1
 1183  00001d5c  afc1fff4	sw	-12(r30),r1
 1184  00001d60  0bffffc8	j	L64_LF2
 1185  00001d64  54000000	nop; delay slot nop
 1186  00001d68          	L65_LF2:
 1187  00001d68  54000000	nop
 1188  00001d6c          	L68_LF2:
 1189  00001d6c  8fc1fff4	lw	r1,-12(r30)
 1190  00001d70  2002000a	addi	r2,r0,#10
 1191  00001d74  00200035	movi2fp	f0,r1
 1192  00001d78  00400835	movi2fp	f1,r2
 1193  00001d7c  0401000f	div	f0,f0,f1
 1194  00001d80  00000834	movfp2i	r1,f0
 1195  00001d84  afc1fff4	sw	-12(r30),r1
 1196  00001d88  8fc10004	lw	r1,4(r30)
 1197  00001d8c  20220001	addi	r2,r1,#1
 1198  00001d90  afc20004	sw	4(r30),r2
 1199  00001d94  8fc20000	lw	r2,(r30)
 1200  00001d98  8fc3fff4	lw	r3,-12(r30)
 1201  00001d9c  00400035	movi2fp	f0,r2
 1202  00001da0  00600835	movi2fp	f1,r3
 1203  00001da4  0401000f	div	f0,f0,f1
 1204  00001da8  00001034	movfp2i	r2,f0
 1205  00001dac  00021820	add	r3,r0,r2
 1206  00001db0  20620030	addi	r2,r3,#48
 1207  00001db4  a0220000	sb	(r1),r2
 1208  00001db8  8fc10000	lw	r1,(r30)
 1209  00001dbc  8fc3fff4	lw	r3,-12(r30)
 1210  00001dc0  00200035	movi2fp	f0,r1
 1211  00001dc4  00600835	movi2fp	f1,r3
 1212  00001dc8  0401000f	div	f0,f0,f1
 1213  00001dcc  00001034	movfp2i	r2,f0
 1214  00001dd0  8fc3fff4	lw	r3,-12(r30)
 1215  00001dd4  00400035	movi2fp	f0,r2
 1216  00001dd8  00600835	movi2fp	f1,r3
 1217  00001ddc  0401000e	mult	f0,f0,f1
 1218  00001de0  00001034	movfp2i	r2,f0
 1219  00001de4  00220822	sub	r1,r1,r2
 1220  00001de8  afc10000	sw	(r30),r1
 1221  00001dec          	L70_LF2:
 1222  00001dec  8fc1fff4	lw	r1,-12(r30)
 1223  00001df0  6c220001	sgti	r2,r1,#1
 1224  00001df4  1440000c	bnez	r2,L71_LF2
 1225  00001df8  54000000	nop; delay slot nop
 1226  00001dfc  0800000c	j	L61_LF2
 1227  00001e00  54000000	nop; delay slot nop
 1228  00001e04          	L71_LF2:
 1229  00001e04  0bffff64	j	L68_LF2
 1230  00001e08  54000000	nop; delay slot nop
 1231  00001e0c          	L69_LF2:
 1232  00001e0c          	L63_LF2:
 1233  00001e0c          	L61_LF2:
 1234  00001e0c  8fc10004	lw	r1,4(r30)
 1235  00001e10  20020000	addi	r2,r0,(#0x0)&0xff
 1236  00001e14  a0220000	sb	(r1),r2
 1237  00001e18          	L59_LF2:
 1238  00001e18  8fa20000	lw	r2,0(r29)
 1239  00001e1c  8fa30004	lw	r3,4(r29)
 1240  00001e20  8fdffff8	lw	r31,-8(r30)
 1241  00001e24  001ee820	add	r29,r0,r30
 1242  00001e28  8fdefffc	lw	r30,-4(r30)
 1243  00001e2c  4be00000	jr	r31
 1244  00001e30  54000000	nop
 1245  00001e34          	.endproc _ditoa
 1246  00001e34          	.align 2
 1247  00001e34          	.proc _dstrtol
 1248  00001e34          	.global _dstrtol
 1249  00001e34          	_dstrtol:
 1250                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1251  00001e34  afbefffc	sw	-4(r29),r30; push fp
 1252  00001e38  001df020	add	r30,r0,r29; fp = sp
 1253  00001e3c  afbffff8	sw	-8(r29),r31; push ret addr
 1254  00001e40  2fbd0020	subui	r29,r29,#32; alloc local storage
 1255  00001e44  afa20000	sw	0(r29),r2
 1256  00001e48  20010000	addi	r1,r0,#0
 1257  00001e4c  afc1fff4	sw	-12(r30),r1
 1258  00001e50          	L73_LF2:
 1259  00001e50  8fc10000	lw	r1,(r30)
 1260  00001e54  90220000	lbu	r2,(r1)
 1261  00001e58  60410020	seqi	r1,r2,#32
 1262  00001e5c  14200034	bnez	r1,L75_LF2
 1263  00001e60  54000000	nop; delay slot nop
 1264  00001e64  8fc10000	lw	r1,(r30)
 1265  00001e68  90220000	lbu	r2,(r1)
 1266  00001e6c  60410009	seqi	r1,r2,#9
 1267  00001e70  14200020	bnez	r1,L75_LF2
 1268  00001e74  54000000	nop; delay slot nop
 1269  00001e78  8fc10000	lw	r1,(r30)
 1270  00001e7c  90220000	lbu	r2,(r1)
 1271  00001e80  6041000a	seqi	r1,r2,#10
 1272  00001e84  1420000c	bnez	r1,L75_LF2
 1273  00001e88  54000000	nop; delay slot nop
 1274  00001e8c  0800001c	j	L74_LF2
 1275  00001e90  54000000	nop; delay slot nop
 1276  00001e94          	L75_LF2:
 1277  00001e94  8fc20000	lw	r2,(r30)
 1278  00001e98  20410001	addi	r1,r2,#1
 1279  00001e9c  00011020	add	r2,r0,r1
 1280  00001ea0  afc20000	sw	(r30),r2
 1281  00001ea4  0bffffa8	j	L73_LF2
 1282  00001ea8  54000000	nop; delay slot nop
 1283  00001eac          	L74_LF2:
 1284  00001eac  8fc10004	lw	r1,4(r30)
 1285  00001eb0  64220000	snei	r2,r1,#0
 1286  00001eb4  10400010	beqz	r2,L76_LF2
 1287  00001eb8  54000000	nop; delay slot nop
 1288  00001ebc  8fc10004	lw	r1,4(r30)
 1289  00001ec0  8fc20000	lw	r2,(r30)
 1290  00001ec4  ac220000	sw	(r1),r2
 1291  00001ec8          	L76_LF2:
 1292  00001ec8  8fc10000	lw	r1,(r30)
 1293  00001ecc  90220000	lbu	r2,(r1)
 1294  00001ed0  64410000	snei	r1,r2,#0
 1295  00001ed4  14200010	bnez	r1,L77_LF2
 1296  00001ed8  54000000	nop; delay slot nop
 1297  00001edc  8fc1fff4	lw	r1,-12(r30)
 1298  00001ee0  08000294	j	L72_LF2
 1299  00001ee4  54000000	nop; delay slot nop
 1300  00001ee8          	L77_LF2:
 1301  00001ee8  8fc10000	lw	r1,(r30)
 1302  00001eec  90220000	lbu	r2,(r1)
 1303  00001ef0  6041002d	seqi	r1,r2,#45
 1304  00001ef4  10200024	beqz	r1,L78_LF2
 1305  00001ef8  54000000	nop; delay slot nop
 1306  00001efc  2001ffff	addi	r1,r0,#-1
 1307  00001f00  afc1ffec	sw	-20(r30),r1
 1308  00001f04  8fc20000	lw	r2,(r30)
 1309  00001f08  20410001	addi	r1,r2,#1
 1310  00001f0c  00011020	add	r2,r0,r1
 1311  00001f10  afc20000	sw	(r30),r2
 1312  00001f14  0800000c	j	L79_LF2
 1313  00001f18  54000000	nop; delay slot nop
 1314  00001f1c          	L78_LF2:
 1315  00001f1c  20010001	addi	r1,r0,#1
 1316  00001f20  afc1ffec	sw	-20(r30),r1
 1317  00001f24          	L79_LF2:
 1318  00001f24  8fc10008	lw	r1,8(r30)
 1319  00001f28  64220000	snei	r2,r1,#0
 1320  00001f2c  14400090	bnez	r2,L80_LF2
 1321  00001f30  54000000	nop; delay slot nop
 1322  00001f34  8fc10000	lw	r1,(r30)
 1323  00001f38  90220000	lbu	r2,(r1)
 1324  00001f3c  60410030	seqi	r1,r2,#48
 1325  00001f40  10200074	beqz	r1,L81_LF2
 1326  00001f44  54000000	nop; delay slot nop
 1327  00001f48  8fc20000	lw	r2,(r30)
 1328  00001f4c  20410001	addi	r1,r2,#1
 1329  00001f50  00011020	add	r2,r0,r1
 1330  00001f54  afc20000	sw	(r30),r2
 1331  00001f58  8fc10000	lw	r1,(r30)
 1332  00001f5c  90220000	lbu	r2,(r1)
 1333  00001f60  60410078	seqi	r1,r2,#120
 1334  00001f64  14200020	bnez	r1,L83_LF2
 1335  00001f68  54000000	nop; delay slot nop
 1336  00001f6c  8fc10000	lw	r1,(r30)
 1337  00001f70  90220000	lbu	r2,(r1)
 1338  00001f74  60410058	seqi	r1,r2,#88
 1339  00001f78  1420000c	bnez	r1,L83_LF2
 1340  00001f7c  54000000	nop; delay slot nop
 1341  00001f80  08000024	j	L82_LF2
 1342  00001f84  54000000	nop; delay slot nop
 1343  00001f88          	L83_LF2:
 1344  00001f88  20010010	addi	r1,r0,#16
 1345  00001f8c  afc10008	sw	8(r30),r1
 1346  00001f90  8fc20000	lw	r2,(r30)
 1347  00001f94  20410001	addi	r1,r2,#1
 1348  00001f98  00011020	add	r2,r0,r1
 1349  00001f9c  afc20000	sw	(r30),r2
 1350  00001fa0  0800000c	j	L84_LF2
 1351  00001fa4  54000000	nop; delay slot nop
 1352  00001fa8          	L82_LF2:
 1353  00001fa8  20010008	addi	r1,r0,#8
 1354  00001fac  afc10008	sw	8(r30),r1
 1355  00001fb0          	L84_LF2:
 1356  00001fb0  0800000c	j	L80_LF2
 1357  00001fb4  54000000	nop; delay slot nop
 1358  00001fb8          	L81_LF2:
 1359  00001fb8  2001000a	addi	r1,r0,#10
 1360  00001fbc  afc10008	sw	8(r30),r1
 1361  00001fc0          	L85_LF2:
 1362  00001fc0          	L80_LF2:
 1363  00001fc0  8fc10008	lw	r1,8(r30)
 1364  00001fc4  70220000	slei	r2,r1,#0
 1365  00001fc8  1440001c	bnez	r2,L87_LF2
 1366  00001fcc  54000000	nop; delay slot nop
 1367  00001fd0  8fc10008	lw	r1,8(r30)
 1368  00001fd4  6c220010	sgti	r2,r1,#16
 1369  00001fd8  1440000c	bnez	r2,L87_LF2
 1370  00001fdc  54000000	nop; delay slot nop
 1371  00001fe0  08000010	j	L86_LF2
 1372  00001fe4  54000000	nop; delay slot nop
 1373  00001fe8          	L87_LF2:
 1374  00001fe8  8fc1fff4	lw	r1,-12(r30)
 1375  00001fec  08000188	j	L72_LF2
 1376  00001ff0  54000000	nop; delay slot nop
 1377  00001ff4          	L86_LF2:
 1378  00001ff4  54000000	nop
 1379  00001ff8          	L88_LF2:
 1380  00001ff8  8fc10000	lw	r1,(r30)
 1381  00001ffc  90220000	lbu	r2,(r1)
 1382  00002000  6c41002f	sgtui	r1,r2,#47
 1383  00002004  10200030	beqz	r1,L91_LF2
 1384  00002008  54000000	nop; delay slot nop
 1385  0000200c  8fc10000	lw	r1,(r30)
 1386  00002010  90220000	lbu	r2,(r1)
 1387  00002014  70410039	sleui	r1,r2,#57
 1388  00002018  1020001c	beqz	r1,L91_LF2
 1389  0000201c  54000000	nop; delay slot nop
 1390  00002020  8fc10000	lw	r1,(r30)
 1391  00002024  90220000	lbu	r2,(r1)
 1392  00002028  2041ffd0	addi	r1,r2,#-48
 1393  0000202c  afc1fff0	sw	-16(r30),r1
 1394  00002030  0800008c	j	L92_LF2
 1395  00002034  54000000	nop; delay slot nop
 1396  00002038          	L91_LF2:
 1397  00002038  8fc10000	lw	r1,(r30)
 1398  0000203c  90220000	lbu	r2,(r1)
 1399  00002040  6c410060	sgtui	r1,r2,#96
 1400  00002044  10200030	beqz	r1,L93_LF2
 1401  00002048  54000000	nop; delay slot nop
 1402  0000204c  8fc10000	lw	r1,(r30)
 1403  00002050  90220000	lbu	r2,(r1)
 1404  00002054  7041007a	sleui	r1,r2,#122
 1405  00002058  1020001c	beqz	r1,L93_LF2
 1406  0000205c  54000000	nop; delay slot nop
 1407  00002060  8fc10000	lw	r1,(r30)
 1408  00002064  90220000	lbu	r2,(r1)
 1409  00002068  2041ffa9	addi	r1,r2,#-87
 1410  0000206c  afc1fff0	sw	-16(r30),r1
 1411  00002070  0800004c	j	L92_LF2
 1412  00002074  54000000	nop; delay slot nop
 1413  00002078          	L93_LF2:
 1414  00002078  8fc10000	lw	r1,(r30)
 1415  0000207c  90220000	lbu	r2,(r1)
 1416  00002080  6c410040	sgtui	r1,r2,#64
 1417  00002084  10200030	beqz	r1,L95_LF2
 1418  00002088  54000000	nop; delay slot nop
 1419  0000208c  8fc10000	lw	r1,(r30)
 1420  00002090  90220000	lbu	r2,(r1)
 1421  00002094  7041005a	sleui	r1,r2,#90
 1422  00002098  1020001c	beqz	r1,L95_LF2
 1423  0000209c  54000000	nop; delay slot nop
 1424  000020a0  8fc10000	lw	r1,(r30)
 1425  000020a4  90220000	lbu	r2,(r1)
 1426  000020a8  2041ffc9	addi	r1,r2,#-55
 1427  000020ac  afc1fff0	sw	-16(r30),r1
 1428  000020b0  0800000c	j	L92_LF2
 1429  000020b4  54000000	nop; delay slot nop
 1430  000020b8          	L95_LF2:
 1431  000020b8  200103e8	addi	r1,r0,#1000
 1432  000020bc  afc1fff0	sw	-16(r30),r1
 1433  000020c0          	L96_LF2:
 1434  000020c0          	L94_LF2:
 1435  000020c0          	L92_LF2:
 1436  000020c0  8fc1fff0	lw	r1,-16(r30)
 1437  000020c4  8fc20008	lw	r2,8(r30)
 1438  000020c8  0022082a	slt	r1,r1,r2
 1439  000020cc  10200040	beqz	r1,L90_LF2
 1440  000020d0  54000000	nop; delay slot nop
 1441  000020d4  8fc1fff4	lw	r1,-12(r30)
 1442  000020d8  8fc20008	lw	r2,8(r30)
 1443  000020dc  00200035	movi2fp	f0,r1
 1444  000020e0  00400835	movi2fp	f1,r2
 1445  000020e4  0401000e	mult	f0,f0,f1
 1446  000020e8  00000834	movfp2i	r1,f0
 1447  000020ec  afc1fff4	sw	-12(r30),r1
 1448  000020f0  8fc1fff4	lw	r1,-12(r30)
 1449  000020f4  8fc2fff0	lw	r2,-16(r30)
 1450  000020f8  00220820	add	r1,r1,r2
 1451  000020fc  afc1fff4	sw	-12(r30),r1
 1452  00002100  8fc20000	lw	r2,(r30)
 1453  00002104  20410001	addi	r1,r2,#1
 1454  00002108  00011020	add	r2,r0,r1
 1455  0000210c  afc20000	sw	(r30),r2
 1456  00002110          	L97_LF2:
 1457  00002110          	L90_LF2:
 1458  00002110  8fc1fff0	lw	r1,-16(r30)
 1459  00002114  8fc20008	lw	r2,8(r30)
 1460  00002118  0022082a	slt	r1,r1,r2
 1461  0000211c  1420000c	bnez	r1,L98_LF2
 1462  00002120  54000000	nop; delay slot nop
 1463  00002124  0800000c	j	L89_LF2
 1464  00002128  54000000	nop; delay slot nop
 1465  0000212c          	L98_LF2:
 1466  0000212c  0bfffec8	j	L88_LF2
 1467  00002130  54000000	nop; delay slot nop
 1468  00002134          	L89_LF2:
 1469  00002134  8fc10004	lw	r1,4(r30)
 1470  00002138  64220000	snei	r2,r1,#0
 1471  0000213c  10400010	beqz	r2,L99_LF2
 1472  00002140  54000000	nop; delay slot nop
 1473  00002144  8fc10004	lw	r1,4(r30)
 1474  00002148  8fc20000	lw	r2,(r30)
 1475  0000214c  ac220000	sw	(r1),r2
 1476  00002150          	L99_LF2:
 1477  00002150  8fc1fff4	lw	r1,-12(r30)
 1478  00002154  8fc2ffec	lw	r2,-20(r30)
 1479  00002158  00200035	movi2fp	f0,r1
 1480  0000215c  00400835	movi2fp	f1,r2
 1481  00002160  0401000e	mult	f0,f0,f1
 1482  00002164  00000834	movfp2i	r1,f0
 1483  00002168  afc1fff4	sw	-12(r30),r1
 1484  0000216c  8fc1fff4	lw	r1,-12(r30)
 1485  00002170  08000004	j	L72_LF2
 1486  00002174  54000000	nop; delay slot nop
 1487  00002178          	L72_LF2:
 1488  00002178  8fa20000	lw	r2,0(r29)
 1489  0000217c  8fdffff8	lw	r31,-8(r30)
 1490  00002180  001ee820	add	r29,r0,r30
 1491  00002184  8fdefffc	lw	r30,-4(r30)
 1492  00002188  4be00000	jr	r31
 1493  0000218c  54000000	nop
 1494  00002190          	.endproc _dstrtol
 1495  00002190          	.align 2
 1496  00002190          	.proc _bcopy
 1497  00002190          	.global _bcopy
 1498  00002190          	_bcopy:
 1499                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1500  00002190  afbefffc	sw	-4(r29),r30; push fp
 1501  00002194  001df020	add	r30,r0,r29; fp = sp
 1502  00002198  afbffff8	sw	-8(r29),r31; push ret addr
 1503  0000219c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1504  000021a0  afa20000	sw	0(r29),r2
 1505  000021a4  afa30004	sw	4(r29),r3
 1506  000021a8  54000000	nop
 1507  000021ac          	L101_LF2:
 1508  000021ac  8fc10008	lw	r1,8(r30)
 1509  000021b0  2022ffff	addi	r2,r1,#-1
 1510  000021b4  afc20008	sw	8(r30),r2
 1511  000021b8  6c210000	sgti	r1,r1,#0
 1512  000021bc  1420000c	bnez	r1,L103_LF2
 1513  000021c0  54000000	nop; delay slot nop
 1514  000021c4  0800002c	j	L102_LF2
 1515  000021c8  54000000	nop; delay slot nop
 1516  000021cc          	L103_LF2:
 1517  000021cc  8fc10004	lw	r1,4(r30)
 1518  000021d0  20220001	addi	r2,r1,#1
 1519  000021d4  afc20004	sw	4(r30),r2
 1520  000021d8  8fc20000	lw	r2,(r30)
 1521  000021dc  20430001	addi	r3,r2,#1
 1522  000021e0  afc30000	sw	(r30),r3
 1523  000021e4  80420000	lb	r2,(r2)
 1524  000021e8  a0220000	sb	(r1),r2
 1525  000021ec  0bffffbc	j	L101_LF2
 1526  000021f0  54000000	nop; delay slot nop
 1527  000021f4          	L102_LF2:
 1528  000021f4          	L100_LF2:
 1529  000021f4  8fa20000	lw	r2,0(r29)
 1530  000021f8  8fa30004	lw	r3,4(r29)
 1531  000021fc  8fdffff8	lw	r31,-8(r30)
 1532  00002200  001ee820	add	r29,r0,r30
 1533  00002204  8fdefffc	lw	r30,-4(r30)
 1534  00002208  4be00000	jr	r31
 1535  0000220c  54000000	nop
 1536  00002210          	.endproc _bcopy
 1537  00002210          	.align 2
 1538  00002210          	.proc _bzero
 1539  00002210          	.global _bzero
 1540  00002210          	_bzero:
 1541                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1542  00002210  afbefffc	sw	-4(r29),r30; push fp
 1543  00002214  001df020	add	r30,r0,r29; fp = sp
 1544  00002218  afbffff8	sw	-8(r29),r31; push ret addr
 1545  0000221c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1546  00002220  afa20000	sw	0(r29),r2
 1547  00002224  54000000	nop
 1548  00002228          	L105_LF2:
 1549  00002228  8fc10004	lw	r1,4(r30)
 1550  0000222c  2022ffff	addi	r2,r1,#-1
 1551  00002230  afc20004	sw	4(r30),r2
 1552  00002234  6c210000	sgti	r1,r1,#0
 1553  00002238  1420000c	bnez	r1,L107_LF2
 1554  0000223c  54000000	nop; delay slot nop
 1555  00002240  08000020	j	L106_LF2
 1556  00002244  54000000	nop; delay slot nop
 1557  00002248          	L107_LF2:
 1558  00002248  8fc10000	lw	r1,(r30)
 1559  0000224c  20220001	addi	r2,r1,#1
 1560  00002250  afc20000	sw	(r30),r2
 1561  00002254  20020000	addi	r2,r0,(#0x0)&0xff
 1562  00002258  a0220000	sb	(r1),r2
 1563  0000225c  0bffffc8	j	L105_LF2
 1564  00002260  54000000	nop; delay slot nop
 1565  00002264          	L106_LF2:
 1566  00002264          	L104_LF2:
 1567  00002264  8fa20000	lw	r2,0(r29)
 1568  00002268  8fdffff8	lw	r31,-8(r30)
 1569  0000226c  001ee820	add	r29,r0,r30
 1570  00002270  8fdefffc	lw	r30,-4(r30)
 1571  00002274  4be00000	jr	r31
 1572  00002278  54000000	nop
 1573  0000227c          	.endproc _bzero
 1574  0000227c          	.align 2
 1575  0000227c          	.proc _min
 1576  0000227c          	.global _min
 1577  0000227c          	_min:
 1578                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1579  0000227c  afbefffc	sw	-4(r29),r30; push fp
 1580  00002280  001df020	add	r30,r0,r29; fp = sp
 1581  00002284  afbffff8	sw	-8(r29),r31; push ret addr
 1582  00002288  2fbd0010	subui	r29,r29,#16; alloc local storage
 1583  0000228c  afa20000	sw	0(r29),r2
 1584  00002290  afa30004	sw	4(r29),r3
 1585  00002294  8fc10000	lw	r1,(r30)
 1586  00002298  8fc20004	lw	r2,4(r30)
 1587  0000229c  0022182c	sle	r3,r1,r2
 1588  000022a0  14600008	bnez	r3,L109_LF2
 1589  000022a4  54000000	nop; delay slot nop
 1590  000022a8  8fc10004	lw	r1,4(r30)
 1591  000022ac          	L109_LF2:
 1592  000022ac  08000004	j	L108_LF2
 1593  000022b0  54000000	nop; delay slot nop
 1594  000022b4          	L108_LF2:
 1595  000022b4  8fa20000	lw	r2,0(r29)
 1596  000022b8  8fa30004	lw	r3,4(r29)
 1597  000022bc  8fdffff8	lw	r31,-8(r30)
 1598  000022c0  001ee820	add	r29,r0,r30
 1599  000022c4  8fdefffc	lw	r30,-4(r30)
 1600  000022c8  4be00000	jr	r31
 1601  000022cc  54000000	nop
 1602  000022d0          	.endproc _min
 1603                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1604                      ;;;
 1605                      ;;; Most of the traps are called in files from libtraps.
 1608  000022d0          	.align 2
 1609  000022d0          	.proc _exit
 1610  000022d0          	.global _exit
 1611  000022d0          	_exit:
 1612  000022d0  44000300	trap	#0x300
 1613  000022d4  4be00000	jr	r31
 1614  000022d8  54000000	nop
 1615  000022dc          	.endproc _exit
 1617                      ; for the benefit of gcc.
 1618  000022dc          	.proc ___main
 1619  000022dc          	.global ___main
 1620  000022dc          	___main:
 1621  000022dc  4be00000	jr	r31
 1622  000022e0  54000000	nop
 1623  000022e4          	.endproc ___main
 1624  000022e4          	.text
 1625  000022e4          	.global _etext
 1626  000022e4          	_etext:
 1627  000022e4          	.align 3
 1628  000022e8          	.data
 1629  000031be          	.global _edata
 1630  000031be          	_edata:
