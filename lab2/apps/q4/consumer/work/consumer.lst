 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 402
    4                      ; Text size: 4912
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <synch lock number>\n    <cond var 1 n"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c73796e	
   85  0000302c  6368206c	
   85  00003030  6f636b20	
   85  00003034  6e756d62	
   85  00003038  65723e0a	
   85  0000303c  20202020	
   85  00003040  3c636f6e	
   85  00003044  64207661	
   85  00003048  72203120	
   85  0000304c  6e      	
   86  0000304d  756d6265	.ascii "umber> <cond var 2 number> <handle_to_page_mapped_semaphore>\n\000"
   86  00003051  723e203c	
   86  00003055  636f6e64	
   86  00003059  20766172	
   86  0000305d  2032206e	
   86  00003061  756d6265	
   86  00003065  723e203c	
   86  00003069  68616e64	
   86  0000306d  6c655f74	
   86  00003071  6f5f7061	
   86  00003075  67655f6d	
   86  00003079  61707065	
   86  0000307d  645f7365	
   86  00003081  6d617068	
   86  00003085  6f72653e	
   86  00003089  0a00    	
   87  0000308b          	.align 2
   88  0000308c          	LC2_LF0:
   89  0000308c  436f756c	.ascii "Could not map the virtual address to the memory in pid : %d\n\000"
   89  00003090  64206e6f	
   89  00003094  74206d61	
   89  00003098  70207468	
   89  0000309c  65207669	
   89  000030a0  72747561	
   89  000030a4  6c206164	
   89  000030a8  64726573	
   89  000030ac  7320746f	
   89  000030b0  20746865	
   89  000030b4  206d656d	
   89  000030b8  6f727920	
   89  000030bc  696e2070	
   89  000030c0  6964203a	
   89  000030c4  2025640a	
   89  000030c8  00      	
   90  000030c9          	.align 2
   91  000030cc          	LC3_LF0:
   92  000030cc  2c206578	.ascii ", exiting...\n\000"
   92  000030d0  6974696e	
   92  000030d4  672e2e2e	
   92  000030d8  0a00    	
   93  000030da          	.align 2
   94  000030dc          	LC4_LF0:
   95  000030dc  42616420	.ascii "Bad cond wait in consumer \000"
   95  000030e0  636f6e64	
   95  000030e4  20776169	
   95  000030e8  7420696e	
   95  000030ec  20636f6e	
   95  000030f0  73756d65	
   95  000030f4  722000  	
   96  000030f7          	.align 2
   97  000030f8          	LC5_LF0:
   98  000030f8  436f6e73	.ascii "Consumer %d removed: %c\n\000"
   98  000030fc  756d6572	
   98  00003100  20256420	
   98  00003104  72656d6f	
   98  00003108  7665643a	
   98  0000310c  2025630a	
   98  00003110  00      	
   99  00003111          	.align 2
  100  00003114          	LC6_LF0:
  101  00003114  42616420	.ascii "Bad cond broadcast in consumer\000"
  101  00003118  636f6e64	
  101  0000311c  2062726f	
  101  00003120  61646361	
  101  00003124  73742069	
  101  00003128  6e20636f	
  101  0000312c  6e73756d	
  101  00003130  657200  	
  102  00003133          	.align 2
  103  00003134          	LC7_LF0:
  104  00003134  42616420	.ascii "Bad semaphore : %d in Consumer(%d) in \000"
  104  00003138  73656d61	
  104  0000313c  70686f72	
  104  00003140  65203a20	
  104  00003144  25642069	
  104  00003148  6e20436f	
  104  0000314c  6e73756d	
  104  00003150  65722825	
  104  00003154  64292069	
  104  00003158  6e2000  	
  105  0000315b          	.align 2
  106  0000315c          	LC8_LF0:
  107  0000315c  436f6e73	.ascii "Consumer ID : %d has completed its work and will die\n\000"
  107  00003160  756d6572	
  107  00003164  20494420	
  107  00003168  3a202564	
  107  0000316c  20686173	
  107  00003170  20636f6d	
  107  00003174  706c6574	
  107  00003178  65642069	
  107  0000317c  74732077	
  107  00003180  6f726b20	
  107  00003184  616e6420	
  107  00003188  77696c6c	
  107  0000318c  20646965	
  107  00003190  0a00    	
  108  00003192          	.text
  109  000010d4          	.align 2
  110  000010d4          	.proc _main
  111  000010d4          	.global _main
  112  000010d4          	_main:
  113                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  114  000010d4  afbefffc	sw	-4(r29),r30; push fp
  115  000010d8  001df020	add	r30,r0,r29; fp = sp
  116  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  117  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  118  000010e4  8fc20000	lw	r2,(r30)
  119  000010e8  8fc50004	lw	r5,4(r30)
  120  000010ec  0c001238	jal	___main
  121  000010f0  54000000	nop; not filled.
  122  000010f4  20070000	addi	r7,r0,#0
  123  000010f8  20060000	addi	r6,r0,#0
  124  000010fc  64410006	snei	r1,r2,#6
  125  00001100  1020004c	beqz	r1,L14_LF0
  126  00001104  54000000	nop; not filled.
  127  00001108  23bdfff8	addi	r29,r29,#-8
  128  0000110c  3c0d0000	lhi	r13,((LC0_LF0)>>16)&0xffff
  129  00001110  25ad3000	addui	r13,r13,(LC0_LF0)&0xffff
  130  00001114  afad0000	sw	(r29),r13
  131  00001118  0c000404	jal	_Printf
  132  0000111c  54000000	nop; not filled.
  133  00001120  8cad0000	lw	r13,(r5)
  134  00001124  afad0000	sw	(r29),r13
  135  00001128  0c0003f4	jal	_Printf
  136  0000112c  54000000	nop; not filled.
  137  00001130  3c0d0000	lhi	r13,((LC1_LF0)>>16)&0xffff
  138  00001134  25ad3008	addui	r13,r13,(LC1_LF0)&0xffff
  139  00001138  afad0000	sw	(r29),r13
  140  0000113c  0c0003e0	jal	_Printf
  141  00001140  54000000	nop; not filled.
  142  00001144  0c00048c	jal	_Exit
  143  00001148  54000000	nop; not filled.
  144  0000114c  23bd0008	addi	r29,r29,#8
  145  00001150          	L14_LF0:
  146  00001150  23bdfff0	addi	r29,r29,#-16
  147  00001154  8cad0004	lw	r13,4(r5)
  148  00001158  afad0000	sw	(r29),r13
  149  0000115c  200d0000	addi	r13,r0,#0
  150  00001160  afad0004	sw	4(r29),r13
  151  00001164  200d000a	addi	r13,r0,#10
  152  00001168  afad0008	sw	8(r29),r13
  153  0000116c  0c000d10	jal	_dstrtol
  154  00001170  54000000	nop; not filled.
  155  00001174  00011020	add	r2,r0,r1
  156  00001178  8cad0008	lw	r13,8(r5)
  157  0000117c  afad0000	sw	(r29),r13
  158  00001180  200d0000	addi	r13,r0,#0
  159  00001184  afad0004	sw	4(r29),r13
  160  00001188  200d000a	addi	r13,r0,#10
  161  0000118c  afad0008	sw	8(r29),r13
  162  00001190  0c000cec	jal	_dstrtol
  163  00001194  54000000	nop; not filled.
  164  00001198  00014020	add	r8,r0,r1
  165  0000119c  8cad000c	lw	r13,12(r5)
  166  000011a0  afad0000	sw	(r29),r13
  167  000011a4  200d0000	addi	r13,r0,#0
  168  000011a8  afad0004	sw	4(r29),r13
  169  000011ac  200d000a	addi	r13,r0,#10
  170  000011b0  afad0008	sw	8(r29),r13
  171  000011b4  0c000cc8	jal	_dstrtol
  172  000011b8  54000000	nop; not filled.
  173  000011bc  00014820	add	r9,r0,r1
  174  000011c0  8cad0010	lw	r13,16(r5)
  175  000011c4  afad0000	sw	(r29),r13
  176  000011c8  200d0000	addi	r13,r0,#0
  177  000011cc  afad0004	sw	4(r29),r13
  178  000011d0  200d000a	addi	r13,r0,#10
  179  000011d4  afad0008	sw	8(r29),r13
  180  000011d8  0c000ca4	jal	_dstrtol
  181  000011dc  54000000	nop; not filled.
  182  000011e0  00015820	add	r11,r0,r1
  183  000011e4  8cad0014	lw	r13,20(r5)
  184  000011e8  afad0000	sw	(r29),r13
  185  000011ec  200d0000	addi	r13,r0,#0
  186  000011f0  afad0004	sw	4(r29),r13
  187  000011f4  200d000a	addi	r13,r0,#10
  188  000011f8  afad0008	sw	8(r29),r13
  189  000011fc  0c000c80	jal	_dstrtol
  190  00001200  54000000	nop; not filled.
  191  00001204  00016020	add	r12,r0,r1
  192  00001208  afa20000	sw	(r29),r2
  193  0000120c  0c000340	jal	_shmat
  194  00001210  54000000	nop; not filled.
  195  00001214  00012020	add	r4,r0,r1
  196  00001218  23bd0010	addi	r29,r29,#16
  197  0000121c  64810000	snei	r1,r4,#0
  198  00001220  14200058	bnez	r1,L15_LF0
  199  00001224  54000000	nop; not filled.
  200  00001228  0c000300	jal	_getpid
  201  0000122c  54000000	nop; not filled.
  202  00001230  23bdfff8	addi	r29,r29,#-8
  203  00001234  3c0d0000	lhi	r13,((LC2_LF0)>>16)&0xffff
  204  00001238  25ad308c	addui	r13,r13,(LC2_LF0)&0xffff
  205  0000123c  afad0000	sw	(r29),r13
  206  00001240  afa10004	sw	4(r29),r1
  207  00001244  0c0002d8	jal	_Printf
  208  00001248  54000000	nop; not filled.
  209  0000124c  8cad0000	lw	r13,(r5)
  210  00001250  afad0000	sw	(r29),r13
  211  00001254  0c0002c8	jal	_Printf
  212  00001258  54000000	nop; not filled.
  213  0000125c  3c0d0000	lhi	r13,((LC3_LF0)>>16)&0xffff
  214  00001260  25ad30cc	addui	r13,r13,(LC3_LF0)&0xffff
  215  00001264  afad0000	sw	(r29),r13
  216  00001268  0c0002b4	jal	_Printf
  217  0000126c  54000000	nop; not filled.
  218  00001270  0c000360	jal	_Exit
  219  00001274  54000000	nop; not filled.
  220  00001278  23bd0008	addi	r29,r29,#8
  221  0000127c          	L15_LF0:
  222  0000127c  200a0005	addi	r10,r0,#5
  223  00001280          	L18_LF0:
  224  00001280  23bdfff8	addi	r29,r29,#-8
  225  00001284  afa80000	sw	(r29),r8
  226  00001288  0c000300	jal	_lock_acquire
  227  0000128c  54000000	nop; not filled.
  228  00001290  23bd0008	addi	r29,r29,#8
  229  00001294  64210000	snei	r1,r1,#0
  230  00001298  10200174	beqz	r1,L19_LF0
  231  0000129c  54000000	nop; not filled.
  232  000012a0  08000058	j	L20_LF0
  233  000012a4  54000000	nop; not filled.
  234  000012a8          	L22_LF0:
  235  000012a8  23bdfff8	addi	r29,r29,#-8
  236  000012ac  afa90000	sw	(r29),r9
  237  000012b0  0c0002fc	jal	_cond_wait
  238  000012b4  54000000	nop; not filled.
  239  000012b8  23bd0008	addi	r29,r29,#8
  240  000012bc  6021ffff	seqi	r1,r1,#-1
  241  000012c0  10200038	beqz	r1,L20_LF0
  242  000012c4  54000000	nop; not filled.
  243  000012c8  23bdfff8	addi	r29,r29,#-8
  244  000012cc  3c0d0000	lhi	r13,((LC4_LF0)>>16)&0xffff
  245  000012d0  25ad30dc	addui	r13,r13,(LC4_LF0)&0xffff
  246  000012d4  afad0000	sw	(r29),r13
  247  000012d8  0c000244	jal	_Printf
  248  000012dc  54000000	nop; not filled.
  249  000012e0  8cad0000	lw	r13,(r5)
  250  000012e4  afad0000	sw	(r29),r13
  251  000012e8  0c000234	jal	_Printf
  252  000012ec  54000000	nop; not filled.
  253  000012f0  0c0002e0	jal	_Exit
  254  000012f4  54000000	nop; not filled.
  255  000012f8  23bd0008	addi	r29,r29,#8
  256  000012fc          	L20_LF0:
  257  000012fc  8c81000c	lw	r1,12(r4)
  258  00001300  8c820008	lw	r2,8(r4)
  259  00001304  00220828	seq	r1,r1,r2
  260  00001308  1420ff9c	bnez	r1,L22_LF0
  261  0000130c  54000000	nop; not filled.
  262  00001310  8c81000c	lw	r1,12(r4)
  263  00001314  20230001	addi	r3,r1,#1
  264  00001318  00600035	movi2fp	f0,r3
  265  0000131c  01400835	movi2fp	f1,r10
  266  00001320  0401000f	div	f0,f0,f1
  267  00001324  00001034	movfp2i	r2,f0
  268  00001328  50410002	slli	r1,r2,#0x2
  269  0000132c  00220820	add	r1,r1,r2
  270  00001330  00611022	sub	r2,r3,r1
  271  00001334  8c810008	lw	r1,8(r4)
  272  00001338  00220828	seq	r1,r1,r2
  273  0000133c  10200008	beqz	r1,L25_LF0
  274  00001340  54000000	nop; not filled.
  275  00001344  20060001	addi	r6,r0,#1
  276  00001348          	L25_LF0:
  277  00001348  0c0001e0	jal	_getpid
  278  0000134c  54000000	nop; not filled.
  279  00001350  23bdfff0	addi	r29,r29,#-16
  280  00001354  3c0d0000	lhi	r13,((LC5_LF0)>>16)&0xffff
  281  00001358  25ad30f8	addui	r13,r13,(LC5_LF0)&0xffff
  282  0000135c  afad0000	sw	(r29),r13
  283  00001360  afa10004	sw	4(r29),r1
  284  00001364  8c810008	lw	r1,8(r4)
  285  00001368  00810820	add	r1,r4,r1
  286  0000136c  90210000	lbu	r1,(r1)
  287  00001370  afa10008	sw	8(r29),r1
  288  00001374  0c0001a8	jal	_Printf
  289  00001378  54000000	nop; not filled.
  290  0000137c  20e70001	addi	r7,r7,#1
  291  00001380  8c810008	lw	r1,8(r4)
  292  00001384  20230001	addi	r3,r1,#1
  293  00001388  00600035	movi2fp	f0,r3
  294  0000138c  01400835	movi2fp	f1,r10
  295  00001390  0401000f	div	f0,f0,f1
  296  00001394  00001034	movfp2i	r2,f0
  297  00001398  50410002	slli	r1,r2,#0x2
  298  0000139c  00220820	add	r1,r1,r2
  299  000013a0  00610822	sub	r1,r3,r1
  300  000013a4  ac810008	sw	8(r4),r1
  301  000013a8  23bd0010	addi	r29,r29,#16
  302  000013ac  64c10000	snei	r1,r6,#0
  303  000013b0  1020005c	beqz	r1,L19_LF0
  304  000013b4  54000000	nop; not filled.
  305  000013b8  23bdfff8	addi	r29,r29,#-8
  306  000013bc  afab0000	sw	(r29),r11
  307  000013c0  0c0001f8	jal	_cond_signal
  308  000013c4  54000000	nop; not filled.
  309  000013c8  23bd0008	addi	r29,r29,#8
  310  000013cc  6021ffff	seqi	r1,r1,#-1
  311  000013d0  10200038	beqz	r1,L27_LF0
  312  000013d4  54000000	nop; not filled.
  313  000013d8  23bdfff8	addi	r29,r29,#-8
  314  000013dc  3c0d0000	lhi	r13,((LC6_LF0)>>16)&0xffff
  315  000013e0  25ad3114	addui	r13,r13,(LC6_LF0)&0xffff
  316  000013e4  afad0000	sw	(r29),r13
  317  000013e8  0c000134	jal	_Printf
  318  000013ec  54000000	nop; not filled.
  319  000013f0  8cad0000	lw	r13,(r5)
  320  000013f4  afad0000	sw	(r29),r13
  321  000013f8  0c000124	jal	_Printf
  322  000013fc  54000000	nop; not filled.
  323  00001400  0c0001d0	jal	_Exit
  324  00001404  54000000	nop; not filled.
  325  00001408  23bd0008	addi	r29,r29,#8
  326  0000140c          	L27_LF0:
  327  0000140c  20060000	addi	r6,r0,#0
  328  00001410          	L19_LF0:
  329  00001410  23bdfff8	addi	r29,r29,#-8
  330  00001414  afa80000	sw	(r29),r8
  331  00001418  0c00017c	jal	_lock_release
  332  0000141c  54000000	nop; not filled.
  333  00001420  23bd0008	addi	r29,r29,#8
  334  00001424  70e1000a	slei	r1,r7,#10
  335  00001428  1420fe54	bnez	r1,L18_LF0
  336  0000142c  54000000	nop; not filled.
  337  00001430  23bdfff8	addi	r29,r29,#-8
  338  00001434  afac0000	sw	(r29),r12
  339  00001438  0c000138	jal	_sem_signal
  340  0000143c  54000000	nop; not filled.
  341  00001440  23bd0008	addi	r29,r29,#8
  342  00001444  64210001	snei	r1,r1,#1
  343  00001448  1020005c	beqz	r1,L29_LF0
  344  0000144c  54000000	nop; not filled.
  345  00001450  0c0000d8	jal	_getpid
  346  00001454  54000000	nop; not filled.
  347  00001458  23bdfff0	addi	r29,r29,#-16
  348  0000145c  3c0d0000	lhi	r13,((LC7_LF0)>>16)&0xffff
  349  00001460  25ad3134	addui	r13,r13,(LC7_LF0)&0xffff
  350  00001464  afad0000	sw	(r29),r13
  351  00001468  afac0004	sw	4(r29),r12
  352  0000146c  afa10008	sw	8(r29),r1
  353  00001470  0c0000ac	jal	_Printf
  354  00001474  54000000	nop; not filled.
  355  00001478  8ca50000	lw	r5,(r5)
  356  0000147c  afa50000	sw	(r29),r5
  357  00001480  0c00009c	jal	_Printf
  358  00001484  54000000	nop; not filled.
  359  00001488  3c0d0000	lhi	r13,((LC3_LF0)>>16)&0xffff
  360  0000148c  25ad30cc	addui	r13,r13,(LC3_LF0)&0xffff
  361  00001490  afad0000	sw	(r29),r13
  362  00001494  0c000088	jal	_Printf
  363  00001498  54000000	nop; not filled.
  364  0000149c  0c000134	jal	_Exit
  365  000014a0  54000000	nop; not filled.
  366  000014a4  23bd0010	addi	r29,r29,#16
  367  000014a8          	L29_LF0:
  368  000014a8  0c000080	jal	_getpid
  369  000014ac  54000000	nop; not filled.
  370  000014b0  23bdfff8	addi	r29,r29,#-8
  371  000014b4  3c0d0000	lhi	r13,((LC8_LF0)>>16)&0xffff
  372  000014b8  25ad315c	addui	r13,r13,(LC8_LF0)&0xffff
  373  000014bc  afad0000	sw	(r29),r13
  374  000014c0  afa10004	sw	4(r29),r1
  375  000014c4  0c000058	jal	_Printf
  376  000014c8  54000000	nop; not filled.
  377  000014cc  23bd0008	addi	r29,r29,#8
  378  000014d0  0c000e48	jal	_exit
  379  000014d4  54000000	nop
  380  000014d8          	.endproc _main
  381                      ;;;
  382                      ;;; Stub functions for DLX traps.
  383                      ;;;
  384                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  385                      ;;;
  386                      ;;; The traps such as Open and Close
  387                      ;;; (note the capital letters) are for use by user programs.  The traps
  388                      ;;; with names such as open and close (lower case) are for use by the OS.
  389                      ;;;
  392  000014d8          	.align 2
  394                      ;;; The following are the traps to be used by user-level programs
  395                      ;;;
  397  000014d8          	.align 2
  398  000014d8          	.proc _Open
  399  000014d8          	.global _Open
  400  000014d8          	_Open:
  401                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  402                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  403                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  404  000014d8  44000213	trap	#0x213
  405  000014dc  4be00000	jr	r31
  406  000014e0  54000000	nop
  407  000014e4          	.endproc _Open
  409  000014e4          	.proc _Close
  410  000014e4          	.global _Close
  411  000014e4          	_Close:
  412  000014e4  44000214	trap	#0x214
  413  000014e8  4be00000	jr	r31
  414  000014ec  54000000	nop
  415  000014f0          	.endproc _Close
  417  000014f0          	.proc _Read
  418  000014f0          	.global _Read
  419  000014f0          	_Read:
  420  000014f0  44000210	trap	#0x210
  421  000014f4  4be00000	jr	r31
  422  000014f8  54000000	nop
  423  000014fc          	.endproc _Read
  425  000014fc          	.proc _Write
  426  000014fc          	.global _Write
  427  000014fc          	_Write:
  428  000014fc  44000211	trap	#0x211
  429  00001500  4be00000	jr	r31
  430  00001504  54000000	nop
  431  00001508          	.endproc _Write
  433  00001508          	.proc _Lseek
  434  00001508          	.global _Lseek
  435  00001508          	_Lseek:
  436  00001508  44000212	trap	#0x212
  437  0000150c  4be00000	jr	r31
  438  00001510  54000000	nop
  439  00001514          	.endproc _Lseek
  441  00001514          	.proc _Putchar
  442  00001514          	.global _Putchar
  443  00001514          	_Putchar:
  444  00001514  44000280	trap	#0x280
  445  00001518  4be00000	jr	r31
  446  0000151c  54000000	nop
  447  00001520          	.endproc _Putchar
  449  00001520          	.proc _Printf
  450  00001520          	.global _Printf
  451  00001520          	_Printf:
  452  00001520  44000201	trap	#0x201
  453  00001524  4be00000	jr	r31
  454  00001528  54000000	nop
  455  0000152c          	.endproc _Printf
  457  0000152c          	.proc _getpid
  458  0000152c          	.global _getpid
  459  0000152c          	_getpid:
  460  0000152c  44000431	trap	#0x431
  461  00001530  4be00000	jr	r31
  462  00001534  54000000	nop
  463  00001538          	.endproc _getpid
  465  00001538          	.proc _process_create
  466  00001538          	.global _process_create
  467  00001538          	_process_create:
  468  00001538  44000432	trap	#0x432
  469  0000153c  4be00000	jr	r31
  470  00001540  54000000	nop
  471  00001544          	.endproc _process_create
  473  00001544          	.proc _shmget
  474  00001544          	.global _shmget
  475  00001544          	_shmget:
  476  00001544  44000440	trap	#0x440
  477  00001548  4be00000	jr	r31
  478  0000154c  54000000	nop
  479  00001550          	.endproc _shmget
  481  00001550          	.proc _shmat
  482  00001550          	.global _shmat
  483  00001550          	_shmat:
  484  00001550  44000441	trap	#0x441
  485  00001554  4be00000	jr	r31
  486  00001558  54000000	nop
  487  0000155c          	.endproc _shmat
  489  0000155c          	.proc _sem_create
  490  0000155c          	.global _sem_create
  491  0000155c          	_sem_create:
  492  0000155c  44000450	trap	#0x450
  493  00001560  4be00000	jr	r31
  494  00001564  54000000	nop
  495  00001568          	.endproc _sem_create
  497  00001568          	.proc _sem_wait
  498  00001568          	.global _sem_wait
  499  00001568          	_sem_wait:
  500  00001568  44000451	trap	#0x451
  501  0000156c  4be00000	jr	r31
  502  00001570  54000000	nop
  503  00001574          	.endproc _sem_wait
  505  00001574          	.proc _sem_signal
  506  00001574          	.global _sem_signal
  507  00001574          	_sem_signal:
  508  00001574  44000452	trap	#0x452
  509  00001578  4be00000	jr	r31
  510  0000157c  54000000	nop
  511  00001580          	.endproc _sem_signal
  513  00001580          	.proc _lock_create
  514  00001580          	.global _lock_create
  515  00001580          	_lock_create:
  516  00001580  44000453	trap	#0x453
  517  00001584  4be00000	jr	r31
  518  00001588  54000000	nop
  519  0000158c          	.endproc _lock_create
  521  0000158c          	.proc _lock_acquire
  522  0000158c          	.global _lock_acquire
  523  0000158c          	_lock_acquire:
  524  0000158c  44000454	trap	#0x454
  525  00001590  4be00000	jr	r31
  526  00001594  54000000	nop
  527  00001598          	.endproc _lock_acquire
  529  00001598          	.proc _lock_release
  530  00001598          	.global _lock_release
  531  00001598          	_lock_release:
  532  00001598  44000455	trap	#0x455
  533  0000159c  4be00000	jr	r31
  534  000015a0  54000000	nop
  535  000015a4          	.endproc _lock_release
  537  000015a4          	.proc _cond_create
  538  000015a4          	.global _cond_create
  539  000015a4          	_cond_create:
  540  000015a4  44000456	trap	#0x456
  541  000015a8  4be00000	jr	r31
  542  000015ac  54000000	nop
  543  000015b0          	.endproc _cond_create
  545  000015b0          	.proc _cond_wait
  546  000015b0          	.global _cond_wait
  547  000015b0          	_cond_wait:
  548  000015b0  44000457	trap	#0x457
  549  000015b4  4be00000	jr	r31
  550  000015b8  54000000	nop
  551  000015bc          	.endproc _cond_wait
  553  000015bc          	.proc _cond_signal
  554  000015bc          	.global _cond_signal
  555  000015bc          	_cond_signal:
  556  000015bc  44000458	trap	#0x458
  557  000015c0  4be00000	jr	r31
  558  000015c4  54000000	nop
  559  000015c8          	.endproc _cond_signal
  561  000015c8          	.proc _cond_broadcast
  562  000015c8          	.global _cond_broadcast
  563  000015c8          	_cond_broadcast:
  564  000015c8  44000459	trap	#0x459
  565  000015cc  4be00000	jr	r31
  566  000015d0  54000000	nop
  567  000015d4          	.endproc _cond_broadcast
  569  000015d4          	.proc _Exit
  570  000015d4          	.global _Exit
  571  000015d4          	_Exit:
  572  000015d4  44000500	trap	#0x500
  573  000015d8  4be00000	jr	r31
  574  000015dc  54000000	nop
  575  000015e0          	.endproc _Exit
  576                      ; Compiled by GCC
  578  000015e0          	.align 2
  579  000015e0          	.proc _isspace
  580  000015e0          	.global _isspace
  581  000015e0          	_isspace:
  582                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  583  000015e0  afbefffc	sw	-4(r29),r30; push fp
  584  000015e4  001df020	add	r30,r0,r29; fp = sp
  585  000015e8  afbffff8	sw	-8(r29),r31; push ret addr
  586  000015ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  587  000015f0  afa20000	sw	0(r29),r2
  588  000015f4  afa30004	sw	4(r29),r3
  589  000015f8  afa40008	sw	8(r29),r4
  590  000015fc  83c20003	lb	r2,3(r30)
  591  00001600  20010000	addi	r1,r0,#0
  592  00001604  304300ff	andi	r3,r2,#0x00ff
  593  00001608  60640020	seqi	r4,r3,#32
  594  0000160c  1480002c	bnez	r4,L3_LF2
  595  00001610  54000000	nop; delay slot nop
  596  00001614  304300ff	andi	r3,r2,#0x00ff
  597  00001618  60640009	seqi	r4,r3,#9
  598  0000161c  1480001c	bnez	r4,L3_LF2
  599  00001620  54000000	nop; delay slot nop
  600  00001624  304300ff	andi	r3,r2,#0x00ff
  601  00001628  6064000a	seqi	r4,r3,#10
  602  0000162c  1480000c	bnez	r4,L3_LF2
  603  00001630  54000000	nop; delay slot nop
  604  00001634  08000008	j	L2_LF2
  605  00001638  54000000	nop; delay slot nop
  606  0000163c          	L3_LF2:
  607  0000163c  20010001	addi	r1,r0,#1
  608  00001640          	L2_LF2:
  609  00001640  08000004	j	L1_LF2
  610  00001644  54000000	nop; delay slot nop
  611  00001648          	L1_LF2:
  612  00001648  8fa20000	lw	r2,0(r29)
  613  0000164c  8fa30004	lw	r3,4(r29)
  614  00001650  8fa40008	lw	r4,8(r29)
  615  00001654  8fdffff8	lw	r31,-8(r30)
  616  00001658  001ee820	add	r29,r0,r30
  617  0000165c  8fdefffc	lw	r30,-4(r30)
  618  00001660  4be00000	jr	r31
  619  00001664  54000000	nop
  620  00001668          	.endproc _isspace
  621  00001668          	.align 2
  622  00001668          	.proc _isxdigit
  623  00001668          	.global _isxdigit
  624  00001668          	_isxdigit:
  625                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  626  00001668  afbefffc	sw	-4(r29),r30; push fp
  627  0000166c  001df020	add	r30,r0,r29; fp = sp
  628  00001670  afbffff8	sw	-8(r29),r31; push ret addr
  629  00001674  2fbd0018	subui	r29,r29,#24; alloc local storage
  630  00001678  afa20000	sw	0(r29),r2
  631  0000167c  afa30004	sw	4(r29),r3
  632  00001680  afa40008	sw	8(r29),r4
  633  00001684  83c20003	lb	r2,3(r30)
  634  00001688  20010000	addi	r1,r0,#0
  635  0000168c  304300ff	andi	r3,r2,#0x00ff
  636  00001690  6c64002f	sgtui	r4,r3,#47
  637  00001694  1080001c	beqz	r4,L7_LF2
  638  00001698  54000000	nop; delay slot nop
  639  0000169c  304300ff	andi	r3,r2,#0x00ff
  640  000016a0  70640039	sleui	r4,r3,#57
  641  000016a4  1480005c	bnez	r4,L6_LF2
  642  000016a8  54000000	nop; delay slot nop
  643  000016ac  08000004	j	L7_LF2
  644  000016b0  54000000	nop; delay slot nop
  645  000016b4          	L7_LF2:
  646  000016b4  304300ff	andi	r3,r2,#0x00ff
  647  000016b8  6c640060	sgtui	r4,r3,#96
  648  000016bc  1080001c	beqz	r4,L8_LF2
  649  000016c0  54000000	nop; delay slot nop
  650  000016c4  304300ff	andi	r3,r2,#0x00ff
  651  000016c8  70640066	sleui	r4,r3,#102
  652  000016cc  14800034	bnez	r4,L6_LF2
  653  000016d0  54000000	nop; delay slot nop
  654  000016d4  08000004	j	L8_LF2
  655  000016d8  54000000	nop; delay slot nop
  656  000016dc          	L8_LF2:
  657  000016dc  304300ff	andi	r3,r2,#0x00ff
  658  000016e0  6c640040	sgtui	r4,r3,#64
  659  000016e4  10800020	beqz	r4,L5_LF2
  660  000016e8  54000000	nop; delay slot nop
  661  000016ec  304300ff	andi	r3,r2,#0x00ff
  662  000016f0  70640041	sleui	r4,r3,#65
  663  000016f4  1480000c	bnez	r4,L6_LF2
  664  000016f8  54000000	nop; delay slot nop
  665  000016fc  08000008	j	L5_LF2
  666  00001700  54000000	nop; delay slot nop
  667  00001704          	L6_LF2:
  668  00001704  20010001	addi	r1,r0,#1
  669  00001708          	L5_LF2:
  670  00001708  08000004	j	L4_LF2
  671  0000170c  54000000	nop; delay slot nop
  672  00001710          	L4_LF2:
  673  00001710  8fa20000	lw	r2,0(r29)
  674  00001714  8fa30004	lw	r3,4(r29)
  675  00001718  8fa40008	lw	r4,8(r29)
  676  0000171c  8fdffff8	lw	r31,-8(r30)
  677  00001720  001ee820	add	r29,r0,r30
  678  00001724  8fdefffc	lw	r30,-4(r30)
  679  00001728  4be00000	jr	r31
  680  0000172c  54000000	nop
  681  00001730          	.endproc _isxdigit
  682  00001730          	.align 2
  683  00001730          	.proc _dstrcpy
  684  00001730          	.global _dstrcpy
  685  00001730          	_dstrcpy:
  686                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  687  00001730  afbefffc	sw	-4(r29),r30; push fp
  688  00001734  001df020	add	r30,r0,r29; fp = sp
  689  00001738  afbffff8	sw	-8(r29),r31; push ret addr
  690  0000173c  2fbd0018	subui	r29,r29,#24; alloc local storage
  691  00001740  afa20000	sw	0(r29),r2
  692  00001744  afa30004	sw	4(r29),r3
  693  00001748  8fc10000	lw	r1,(r30)
  694  0000174c  afc1fff4	sw	-12(r30),r1
  695  00001750          	L10_LF2:
  696  00001750  8fc10000	lw	r1,(r30)
  697  00001754  20220001	addi	r2,r1,#1
  698  00001758  afc20000	sw	(r30),r2
  699  0000175c  8fc20004	lw	r2,4(r30)
  700  00001760  20430001	addi	r3,r2,#1
  701  00001764  afc30004	sw	4(r30),r3
  702  00001768  80420000	lb	r2,(r2)
  703  0000176c  a0220000	sb	(r1),r2
  704  00001770  a3c2fff3	sb	-13(r30),r2
  705  00001774          	L12_LF2:
  706  00001774  93c1fff3	lbu	r1,-13(r30)
  707  00001778  64220000	snei	r2,r1,#0
  708  0000177c  1440000c	bnez	r2,L13_LF2
  709  00001780  54000000	nop; delay slot nop
  710  00001784  0800000c	j	L11_LF2
  711  00001788  54000000	nop; delay slot nop
  712  0000178c          	L13_LF2:
  713  0000178c  0bffffc0	j	L10_LF2
  714  00001790  54000000	nop; delay slot nop
  715  00001794          	L11_LF2:
  716  00001794  8fc1fff4	lw	r1,-12(r30)
  717  00001798  08000004	j	L9_LF2
  718  0000179c  54000000	nop; delay slot nop
  719  000017a0          	L9_LF2:
  720  000017a0  8fa20000	lw	r2,0(r29)
  721  000017a4  8fa30004	lw	r3,4(r29)
  722  000017a8  8fdffff8	lw	r31,-8(r30)
  723  000017ac  001ee820	add	r29,r0,r30
  724  000017b0  8fdefffc	lw	r30,-4(r30)
  725  000017b4  4be00000	jr	r31
  726  000017b8  54000000	nop
  727  000017bc          	.endproc _dstrcpy
  728  000017bc          	.align 2
  729  000017bc          	.proc _dstrncpy
  730  000017bc          	.global _dstrncpy
  731  000017bc          	_dstrncpy:
  732                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  733  000017bc  afbefffc	sw	-4(r29),r30; push fp
  734  000017c0  001df020	add	r30,r0,r29; fp = sp
  735  000017c4  afbffff8	sw	-8(r29),r31; push ret addr
  736  000017c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  737  000017cc  afa20000	sw	0(r29),r2
  738  000017d0  afa30004	sw	4(r29),r3
  739  000017d4  8fc10000	lw	r1,(r30)
  740  000017d8  afc1fff4	sw	-12(r30),r1
  741  000017dc          	L15_LF2:
  742  000017dc  8fc10008	lw	r1,8(r30)
  743  000017e0  2022ffff	addi	r2,r1,#-1
  744  000017e4  afc20008	sw	8(r30),r2
  745  000017e8  70210000	slei	r1,r1,#0
  746  000017ec  1020000c	beqz	r1,L18_LF2
  747  000017f0  54000000	nop; delay slot nop
  748  000017f4  08000048	j	L16_LF2
  749  000017f8  54000000	nop; delay slot nop
  750  000017fc          	L18_LF2:
  751  000017fc  8fc10000	lw	r1,(r30)
  752  00001800  20220001	addi	r2,r1,#1
  753  00001804  afc20000	sw	(r30),r2
  754  00001808  8fc20004	lw	r2,4(r30)
  755  0000180c  20430001	addi	r3,r2,#1
  756  00001810  afc30004	sw	4(r30),r3
  757  00001814  80420000	lb	r2,(r2)
  758  00001818  a0220000	sb	(r1),r2
  759  0000181c  a3c2fff3	sb	-13(r30),r2
  760  00001820          	L17_LF2:
  761  00001820  93c1fff3	lbu	r1,-13(r30)
  762  00001824  64220000	snei	r2,r1,#0
  763  00001828  1440000c	bnez	r2,L19_LF2
  764  0000182c  54000000	nop; delay slot nop
  765  00001830  0800000c	j	L16_LF2
  766  00001834  54000000	nop; delay slot nop
  767  00001838          	L19_LF2:
  768  00001838  0bffffa0	j	L15_LF2
  769  0000183c  54000000	nop; delay slot nop
  770  00001840          	L16_LF2:
  771  00001840  8fc1fff4	lw	r1,-12(r30)
  772  00001844  08000004	j	L14_LF2
  773  00001848  54000000	nop; delay slot nop
  774  0000184c          	L14_LF2:
  775  0000184c  8fa20000	lw	r2,0(r29)
  776  00001850  8fa30004	lw	r3,4(r29)
  777  00001854  8fdffff8	lw	r31,-8(r30)
  778  00001858  001ee820	add	r29,r0,r30
  779  0000185c  8fdefffc	lw	r30,-4(r30)
  780  00001860  4be00000	jr	r31
  781  00001864  54000000	nop
  782  00001868          	.endproc _dstrncpy
  783  00001868          	.align 2
  784  00001868          	.proc _dstrcat
  785  00001868          	.global _dstrcat
  786  00001868          	_dstrcat:
  787                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  788  00001868  afbefffc	sw	-4(r29),r30; push fp
  789  0000186c  001df020	add	r30,r0,r29; fp = sp
  790  00001870  afbffff8	sw	-8(r29),r31; push ret addr
  791  00001874  2fbd0018	subui	r29,r29,#24; alloc local storage
  792  00001878  afa20000	sw	0(r29),r2
  793  0000187c  8fc10000	lw	r1,(r30)
  794  00001880  afc1fff4	sw	-12(r30),r1
  795  00001884          	L21_LF2:
  796  00001884  8fc10000	lw	r1,(r30)
  797  00001888  90220000	lbu	r2,(r1)
  798  0000188c  64410000	snei	r1,r2,#0
  799  00001890  1420000c	bnez	r1,L23_LF2
  800  00001894  54000000	nop; delay slot nop
  801  00001898  0800001c	j	L22_LF2
  802  0000189c  54000000	nop; delay slot nop
  803  000018a0          	L23_LF2:
  804  000018a0  8fc20000	lw	r2,(r30)
  805  000018a4  20410001	addi	r1,r2,#1
  806  000018a8  00011020	add	r2,r0,r1
  807  000018ac  afc20000	sw	(r30),r2
  808  000018b0  0bffffd0	j	L21_LF2
  809  000018b4  54000000	nop; delay slot nop
  810  000018b8          	L22_LF2:
  811  000018b8  23bdfff8	addi	r29,r29,#-8
  812  000018bc  001d0820	add	r1,r0,r29
  813  000018c0  8fc20000	lw	r2,(r30)
  814  000018c4  ac220000	sw	(r1),r2
  815  000018c8  8fc20004	lw	r2,4(r30)
  816  000018cc  ac220004	sw	4(r1),r2
  817  000018d0  0ffffe5c	jal	_dstrcpy
  818  000018d4  54000000	nop; delay slot nop
  819  000018d8  23bd0008	addi	r29,r29,#8
  820  000018dc  8fc1fff4	lw	r1,-12(r30)
  821  000018e0  08000004	j	L20_LF2
  822  000018e4  54000000	nop; delay slot nop
  823  000018e8          	L20_LF2:
  824  000018e8  8fa20000	lw	r2,0(r29)
  825  000018ec  8fdffff8	lw	r31,-8(r30)
  826  000018f0  001ee820	add	r29,r0,r30
  827  000018f4  8fdefffc	lw	r30,-4(r30)
  828  000018f8  4be00000	jr	r31
  829  000018fc  54000000	nop
  830  00001900          	.endproc _dstrcat
  831  00001900          	.align 2
  832  00001900          	.proc _dstrncmp
  833  00001900          	.global _dstrncmp
  834  00001900          	_dstrncmp:
  835                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  836  00001900  afbefffc	sw	-4(r29),r30; push fp
  837  00001904  001df020	add	r30,r0,r29; fp = sp
  838  00001908  afbffff8	sw	-8(r29),r31; push ret addr
  839  0000190c  2fbd0018	subui	r29,r29,#24; alloc local storage
  840  00001910  afa20000	sw	0(r29),r2
  841  00001914  afa30004	sw	4(r29),r3
  842  00001918  54000000	nop
  843  0000191c  20010000	addi	r1,r0,#0
  844  00001920  afc1fff4	sw	-12(r30),r1
  845  00001924          	L25_LF2:
  846  00001924  8fc1fff4	lw	r1,-12(r30)
  847  00001928  8fc20008	lw	r2,8(r30)
  848  0000192c  0022082a	slt	r1,r1,r2
  849  00001930  1420000c	bnez	r1,L28_LF2
  850  00001934  54000000	nop; delay slot nop
  851  00001938  08000088	j	L26_LF2
  852  0000193c  54000000	nop; delay slot nop
  853  00001940          	L28_LF2:
  854  00001940  8fc10004	lw	r1,4(r30)
  855  00001944  90220000	lbu	r2,(r1)
  856  00001948  64410000	snei	r1,r2,#0
  857  0000194c  14200018	bnez	r1,L29_LF2
  858  00001950  54000000	nop; delay slot nop
  859  00001954  20010000	addi	r1,r0,#0
  860  00001958  080000d8	j	L24_LF2
  861  0000195c  54000000	nop; delay slot nop
  862  00001960  08000028	j	L30_LF2
  863  00001964  54000000	nop; delay slot nop
  864  00001968          	L29_LF2:
  865  00001968  8fc10000	lw	r1,(r30)
  866  0000196c  8fc20004	lw	r2,4(r30)
  867  00001970  90210000	lbu	r1,(r1)
  868  00001974  90420000	lbu	r2,(r2)
  869  00001978  00220829	sne	r1,r1,r2
  870  0000197c  1020000c	beqz	r1,L30_LF2
  871  00001980  54000000	nop; delay slot nop
  872  00001984  0800003c	j	L26_LF2
  873  00001988  54000000	nop; delay slot nop
  874  0000198c          	L31_LF2:
  875  0000198c          	L30_LF2:
  876  0000198c  8fc20000	lw	r2,(r30)
  877  00001990  20410001	addi	r1,r2,#1
  878  00001994  00011020	add	r2,r0,r1
  879  00001998  afc20000	sw	(r30),r2
  880  0000199c  8fc20004	lw	r2,4(r30)
  881  000019a0  20410001	addi	r1,r2,#1
  882  000019a4  00011020	add	r2,r0,r1
  883  000019a8  afc20004	sw	4(r30),r2
  884  000019ac          	L27_LF2:
  885  000019ac  8fc2fff4	lw	r2,-12(r30)
  886  000019b0  20410001	addi	r1,r2,#1
  887  000019b4  00011020	add	r2,r0,r1
  888  000019b8  afc2fff4	sw	-12(r30),r2
  889  000019bc  0bffff64	j	L25_LF2
  890  000019c0  54000000	nop; delay slot nop
  891  000019c4          	L26_LF2:
  892  000019c4  8fc1fff4	lw	r1,-12(r30)
  893  000019c8  8fc20008	lw	r2,8(r30)
  894  000019cc  00220828	seq	r1,r1,r2
  895  000019d0  10200018	beqz	r1,L32_LF2
  896  000019d4  54000000	nop; delay slot nop
  897  000019d8  20010000	addi	r1,r0,#0
  898  000019dc  08000054	j	L24_LF2
  899  000019e0  54000000	nop; delay slot nop
  900  000019e4  0800004c	j	L33_LF2
  901  000019e8  54000000	nop; delay slot nop
  902  000019ec          	L32_LF2:
  903  000019ec  8fc20000	lw	r2,(r30)
  904  000019f0  90410000	lbu	r1,(r2)
  905  000019f4  8fc20004	lw	r2,4(r30)
  906  000019f8  90430000	lbu	r3,(r2)
  907  000019fc  00230822	sub	r1,r1,r3
  908  00001a00  74220000	sgei	r2,r1,#0
  909  00001a04  10400020	beqz	r2,L34_LF2
  910  00001a08  54000000	nop; delay slot nop
  911  00001a0c  8fc10000	lw	r1,(r30)
  912  00001a10  8fc20004	lw	r2,4(r30)
  913  00001a14  90210000	lbu	r1,(r1)
  914  00001a18  90420000	lbu	r2,(r2)
  915  00001a1c  00220829	sne	r1,r1,r2
  916  00001a20  08000008	j	L35_LF2
  917  00001a24  54000000	nop; delay slot nop
  918  00001a28          	L34_LF2:
  919  00001a28  2001ffff	addi	r1,r0,#-1
  920  00001a2c          	L35_LF2:
  921  00001a2c  08000004	j	L24_LF2
  922  00001a30  54000000	nop; delay slot nop
  923  00001a34          	L33_LF2:
  924  00001a34          	L24_LF2:
  925  00001a34  8fa20000	lw	r2,0(r29)
  926  00001a38  8fa30004	lw	r3,4(r29)
  927  00001a3c  8fdffff8	lw	r31,-8(r30)
  928  00001a40  001ee820	add	r29,r0,r30
  929  00001a44  8fdefffc	lw	r30,-4(r30)
  930  00001a48  4be00000	jr	r31
  931  00001a4c  54000000	nop
  932  00001a50          	.endproc _dstrncmp
  933  00001a50          	.align 2
  934  00001a50          	.proc _dstrlen
  935  00001a50          	.global _dstrlen
  936  00001a50          	_dstrlen:
  937                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  938  00001a50  afbefffc	sw	-4(r29),r30; push fp
  939  00001a54  001df020	add	r30,r0,r29; fp = sp
  940  00001a58  afbffff8	sw	-8(r29),r31; push ret addr
  941  00001a5c  2fbd0018	subui	r29,r29,#24; alloc local storage
  942  00001a60  afa20000	sw	0(r29),r2
  943  00001a64  20010000	addi	r1,r0,#0
  944  00001a68  afc1fff4	sw	-12(r30),r1
  945  00001a6c          	L37_LF2:
  946  00001a6c  8fc10000	lw	r1,(r30)
  947  00001a70  20220001	addi	r2,r1,#1
  948  00001a74  afc20000	sw	(r30),r2
  949  00001a78  90210000	lbu	r1,(r1)
  950  00001a7c  64220000	snei	r2,r1,#0
  951  00001a80  1440000c	bnez	r2,L39_LF2
  952  00001a84  54000000	nop; delay slot nop
  953  00001a88  0800001c	j	L38_LF2
  954  00001a8c  54000000	nop; delay slot nop
  955  00001a90          	L39_LF2:
  956  00001a90  8fc2fff4	lw	r2,-12(r30)
  957  00001a94  20410001	addi	r1,r2,#1
  958  00001a98  00011020	add	r2,r0,r1
  959  00001a9c  afc2fff4	sw	-12(r30),r2
  960  00001aa0  0bffffc8	j	L37_LF2
  961  00001aa4  54000000	nop; delay slot nop
  962  00001aa8          	L38_LF2:
  963  00001aa8  8fc1fff4	lw	r1,-12(r30)
  964  00001aac  08000004	j	L36_LF2
  965  00001ab0  54000000	nop; delay slot nop
  966  00001ab4          	L36_LF2:
  967  00001ab4  8fa20000	lw	r2,0(r29)
  968  00001ab8  8fdffff8	lw	r31,-8(r30)
  969  00001abc  001ee820	add	r29,r0,r30
  970  00001ac0  8fdefffc	lw	r30,-4(r30)
  971  00001ac4  4be00000	jr	r31
  972  00001ac8  54000000	nop
  973  00001acc          	.endproc _dstrlen
  974  00001acc          	.align 2
  975  00001acc          	.proc _dstrstr
  976  00001acc          	.global _dstrstr
  977  00001acc          	_dstrstr:
  978                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  979  00001acc  afbefffc	sw	-4(r29),r30; push fp
  980  00001ad0  001df020	add	r30,r0,r29; fp = sp
  981  00001ad4  afbffff8	sw	-8(r29),r31; push ret addr
  982  00001ad8  2fbd0018	subui	r29,r29,#24; alloc local storage
  983  00001adc  afa20000	sw	0(r29),r2
  984  00001ae0  23bdfff8	addi	r29,r29,#-8
  985  00001ae4  001d0820	add	r1,r0,r29
  986  00001ae8  8fc20004	lw	r2,4(r30)
  987  00001aec  ac220000	sw	(r1),r2
  988  00001af0  0fffff5c	jal	_dstrlen
  989  00001af4  54000000	nop; delay slot nop
  990  00001af8  23bd0008	addi	r29,r29,#8
  991  00001afc  afc1fff4	sw	-12(r30),r1
  992  00001b00          	L41_LF2:
  993  00001b00  8fc10000	lw	r1,(r30)
  994  00001b04  90220000	lbu	r2,(r1)
  995  00001b08  64410000	snei	r1,r2,#0
  996  00001b0c  1420000c	bnez	r1,L43_LF2
  997  00001b10  54000000	nop; delay slot nop
  998  00001b14  08000060	j	L42_LF2
  999  00001b18  54000000	nop; delay slot nop
 1000  00001b1c          	L43_LF2:
 1001  00001b1c  23bdfff0	addi	r29,r29,#-16
 1002  00001b20  001d0820	add	r1,r0,r29
 1003  00001b24  8fc20000	lw	r2,(r30)
 1004  00001b28  ac220000	sw	(r1),r2
 1005  00001b2c  8fc20004	lw	r2,4(r30)
 1006  00001b30  ac220004	sw	4(r1),r2
 1007  00001b34  8fc2fff4	lw	r2,-12(r30)
 1008  00001b38  ac220008	sw	8(r1),r2
 1009  00001b3c  0ffffdc0	jal	_dstrncmp
 1010  00001b40  54000000	nop; delay slot nop
 1011  00001b44  23bd0010	addi	r29,r29,#16
 1012  00001b48  64220000	snei	r2,r1,#0
 1013  00001b4c  14400010	bnez	r2,L44_LF2
 1014  00001b50  54000000	nop; delay slot nop
 1015  00001b54  8fc10000	lw	r1,(r30)
 1016  00001b58  08000028	j	L40_LF2
 1017  00001b5c  54000000	nop; delay slot nop
 1018  00001b60          	L44_LF2:
 1019  00001b60  8fc20000	lw	r2,(r30)
 1020  00001b64  20410001	addi	r1,r2,#1
 1021  00001b68  00011020	add	r2,r0,r1
 1022  00001b6c  afc20000	sw	(r30),r2
 1023  00001b70  0bffff8c	j	L41_LF2
 1024  00001b74  54000000	nop; delay slot nop
 1025  00001b78          	L42_LF2:
 1026  00001b78  20010000	addi	r1,r0,#0
 1027  00001b7c  08000004	j	L40_LF2
 1028  00001b80  54000000	nop; delay slot nop
 1029  00001b84          	L40_LF2:
 1030  00001b84  8fa20000	lw	r2,0(r29)
 1031  00001b88  8fdffff8	lw	r31,-8(r30)
 1032  00001b8c  001ee820	add	r29,r0,r30
 1033  00001b90  8fdefffc	lw	r30,-4(r30)
 1034  00001b94  4be00000	jr	r31
 1035  00001b98  54000000	nop
 1036  00001b9c          	.endproc _dstrstr
 1037  00001b9c          	.align 2
 1038  00001b9c          	.proc _dmindex
 1039  00001b9c          	.global _dmindex
 1040  00001b9c          	_dmindex:
 1041                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1042  00001b9c  afbefffc	sw	-4(r29),r30; push fp
 1043  00001ba0  001df020	add	r30,r0,r29; fp = sp
 1044  00001ba4  afbffff8	sw	-8(r29),r31; push ret addr
 1045  00001ba8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1046  00001bac  afa20000	sw	0(r29),r2
 1047  00001bb0  54000000	nop
 1048  00001bb4          	L46_LF2:
 1049  00001bb4  8fc10000	lw	r1,(r30)
 1050  00001bb8  90220000	lbu	r2,(r1)
 1051  00001bbc  64410000	snei	r1,r2,#0
 1052  00001bc0  1420000c	bnez	r1,L48_LF2
 1053  00001bc4  54000000	nop; delay slot nop
 1054  00001bc8  08000070	j	L47_LF2
 1055  00001bcc  54000000	nop; delay slot nop
 1056  00001bd0          	L48_LF2:
 1057  00001bd0  8fc10004	lw	r1,4(r30)
 1058  00001bd4  afc1fff4	sw	-12(r30),r1
 1059  00001bd8          	L49_LF2:
 1060  00001bd8  8fc1fff4	lw	r1,-12(r30)
 1061  00001bdc  90220000	lbu	r2,(r1)
 1062  00001be0  64410000	snei	r1,r2,#0
 1063  00001be4  1420000c	bnez	r1,L52_LF2
 1064  00001be8  54000000	nop; delay slot nop
 1065  00001bec  08000044	j	L50_LF2
 1066  00001bf0  54000000	nop; delay slot nop
 1067  00001bf4          	L52_LF2:
 1068  00001bf4  8fc10000	lw	r1,(r30)
 1069  00001bf8  8fc2fff4	lw	r2,-12(r30)
 1070  00001bfc  90210000	lbu	r1,(r1)
 1071  00001c00  90420000	lbu	r2,(r2)
 1072  00001c04  00220828	seq	r1,r1,r2
 1073  00001c08  10200010	beqz	r1,L51_LF2
 1074  00001c0c  54000000	nop; delay slot nop
 1075  00001c10  8fc10000	lw	r1,(r30)
 1076  00001c14  08000030	j	L45_LF2
 1077  00001c18  54000000	nop; delay slot nop
 1078  00001c1c          	L53_LF2:
 1079  00001c1c          	L51_LF2:
 1080  00001c1c  8fc2fff4	lw	r2,-12(r30)
 1081  00001c20  20410001	addi	r1,r2,#1
 1082  00001c24  00011020	add	r2,r0,r1
 1083  00001c28  afc2fff4	sw	-12(r30),r2
 1084  00001c2c  0bffffa8	j	L49_LF2
 1085  00001c30  54000000	nop; delay slot nop
 1086  00001c34          	L50_LF2:
 1087  00001c34  0bffff7c	j	L46_LF2
 1088  00001c38  54000000	nop; delay slot nop
 1089  00001c3c          	L47_LF2:
 1090  00001c3c  20010000	addi	r1,r0,#0
 1091  00001c40  08000004	j	L45_LF2
 1092  00001c44  54000000	nop; delay slot nop
 1093  00001c48          	L45_LF2:
 1094  00001c48  8fa20000	lw	r2,0(r29)
 1095  00001c4c  8fdffff8	lw	r31,-8(r30)
 1096  00001c50  001ee820	add	r29,r0,r30
 1097  00001c54  8fdefffc	lw	r30,-4(r30)
 1098  00001c58  4be00000	jr	r31
 1099  00001c5c  54000000	nop
 1100  00001c60          	.endproc _dmindex
 1101  00001c60          	.align 2
 1102  00001c60          	.proc _dindex
 1103  00001c60          	.global _dindex
 1104  00001c60          	_dindex:
 1105                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1106  00001c60  afbefffc	sw	-4(r29),r30; push fp
 1107  00001c64  001df020	add	r30,r0,r29; fp = sp
 1108  00001c68  afbffff8	sw	-8(r29),r31; push ret addr
 1109  00001c6c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1110  00001c70  afa20000	sw	0(r29),r2
 1111  00001c74  54000000	nop
 1112  00001c78          	L55_LF2:
 1113  00001c78  8fc10000	lw	r1,(r30)
 1114  00001c7c  90220000	lbu	r2,(r1)
 1115  00001c80  64410000	snei	r1,r2,#0
 1116  00001c84  1420000c	bnez	r1,L57_LF2
 1117  00001c88  54000000	nop; delay slot nop
 1118  00001c8c  08000040	j	L56_LF2
 1119  00001c90  54000000	nop; delay slot nop
 1120  00001c94          	L57_LF2:
 1121  00001c94  8fc10000	lw	r1,(r30)
 1122  00001c98  90220000	lbu	r2,(r1)
 1123  00001c9c  8fc10004	lw	r1,4(r30)
 1124  00001ca0  00411028	seq	r2,r2,r1
 1125  00001ca4  10400010	beqz	r2,L58_LF2
 1126  00001ca8  54000000	nop; delay slot nop
 1127  00001cac  8fc10000	lw	r1,(r30)
 1128  00001cb0  08000028	j	L54_LF2
 1129  00001cb4  54000000	nop; delay slot nop
 1130  00001cb8          	L58_LF2:
 1131  00001cb8  8fc20000	lw	r2,(r30)
 1132  00001cbc  20410001	addi	r1,r2,#1
 1133  00001cc0  00011020	add	r2,r0,r1
 1134  00001cc4  afc20000	sw	(r30),r2
 1135  00001cc8  0bffffac	j	L55_LF2
 1136  00001ccc  54000000	nop; delay slot nop
 1137  00001cd0          	L56_LF2:
 1138  00001cd0  20010000	addi	r1,r0,#0
 1139  00001cd4  08000004	j	L54_LF2
 1140  00001cd8  54000000	nop; delay slot nop
 1141  00001cdc          	L54_LF2:
 1142  00001cdc  8fa20000	lw	r2,0(r29)
 1143  00001ce0  8fdffff8	lw	r31,-8(r30)
 1144  00001ce4  001ee820	add	r29,r0,r30
 1145  00001ce8  8fdefffc	lw	r30,-4(r30)
 1146  00001cec  4be00000	jr	r31
 1147  00001cf0  54000000	nop
 1148  00001cf4          	.endproc _dindex
 1149  00001cf4          	.align 2
 1150  00001cf4          	.proc _ditoa
 1151  00001cf4          	.global _ditoa
 1152  00001cf4          	_ditoa:
 1153                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1154  00001cf4  afbefffc	sw	-4(r29),r30; push fp
 1155  00001cf8  001df020	add	r30,r0,r29; fp = sp
 1156  00001cfc  afbffff8	sw	-8(r29),r31; push ret addr
 1157  00001d00  2fbd0018	subui	r29,r29,#24; alloc local storage
 1158  00001d04  afa20000	sw	0(r29),r2
 1159  00001d08  afa30004	sw	4(r29),r3
 1160  00001d0c  8fc10000	lw	r1,(r30)
 1161  00001d10  68220000	slti	r2,r1,#0
 1162  00001d14  1040002c	beqz	r2,L60_LF2
 1163  00001d18  54000000	nop; delay slot nop
 1164  00001d1c  8fc10004	lw	r1,4(r30)
 1165  00001d20  20220001	addi	r2,r1,#1
 1166  00001d24  afc20004	sw	4(r30),r2
 1167  00001d28  2002002d	addi	r2,r0,(#0x2d)&0xff
 1168  00001d2c  a0220000	sb	(r1),r2
 1169  00001d30  8fc10000	lw	r1,(r30)
 1170  00001d34  00011022	sub	r2,r0,r1
 1171  00001d38  afc20000	sw	(r30),r2
 1172  00001d3c  08000118	j	L61_LF2
 1173  00001d40  54000000	nop; delay slot nop
 1174  00001d44          	L60_LF2:
 1175  00001d44  8fc10000	lw	r1,(r30)
 1176  00001d48  64220000	snei	r2,r1,#0
 1177  00001d4c  14400020	bnez	r2,L62_LF2
 1178  00001d50  54000000	nop; delay slot nop
 1179  00001d54  8fc10004	lw	r1,4(r30)
 1180  00001d58  20220001	addi	r2,r1,#1
 1181  00001d5c  afc20004	sw	4(r30),r2
 1182  00001d60  20020030	addi	r2,r0,(#0x30)&0xff
 1183  00001d64  a0220000	sb	(r1),r2
 1184  00001d68  080000ec	j	L61_LF2
 1185  00001d6c  54000000	nop; delay slot nop
 1186  00001d70          	L62_LF2:
 1187  00001d70  20010001	addi	r1,r0,#1
 1188  00001d74  afc1fff4	sw	-12(r30),r1
 1189  00001d78          	L64_LF2:
 1190  00001d78  8fc1fff4	lw	r1,-12(r30)
 1191  00001d7c  8fc20000	lw	r2,(r30)
 1192  00001d80  0022082c	sle	r1,r1,r2
 1193  00001d84  1420000c	bnez	r1,L66_LF2
 1194  00001d88  54000000	nop; delay slot nop
 1195  00001d8c  08000024	j	L65_LF2
 1196  00001d90  54000000	nop; delay slot nop
 1197  00001d94          	L67_LF2:
 1198  00001d94          	L66_LF2:
 1199  00001d94  8fc1fff4	lw	r1,-12(r30)
 1200  00001d98  00011820	add	r3,r0,r1
 1201  00001d9c  50620002	slli	r2,r3,#0x2
 1202  00001da0  00411020	add	r2,r2,r1
 1203  00001da4  50410001	slli	r1,r2,#0x1
 1204  00001da8  afc1fff4	sw	-12(r30),r1
 1205  00001dac  0bffffc8	j	L64_LF2
 1206  00001db0  54000000	nop; delay slot nop
 1207  00001db4          	L65_LF2:
 1208  00001db4  54000000	nop
 1209  00001db8          	L68_LF2:
 1210  00001db8  8fc1fff4	lw	r1,-12(r30)
 1211  00001dbc  2002000a	addi	r2,r0,#10
 1212  00001dc0  00200035	movi2fp	f0,r1
 1213  00001dc4  00400835	movi2fp	f1,r2
 1214  00001dc8  0401000f	div	f0,f0,f1
 1215  00001dcc  00000834	movfp2i	r1,f0
 1216  00001dd0  afc1fff4	sw	-12(r30),r1
 1217  00001dd4  8fc10004	lw	r1,4(r30)
 1218  00001dd8  20220001	addi	r2,r1,#1
 1219  00001ddc  afc20004	sw	4(r30),r2
 1220  00001de0  8fc20000	lw	r2,(r30)
 1221  00001de4  8fc3fff4	lw	r3,-12(r30)
 1222  00001de8  00400035	movi2fp	f0,r2
 1223  00001dec  00600835	movi2fp	f1,r3
 1224  00001df0  0401000f	div	f0,f0,f1
 1225  00001df4  00001034	movfp2i	r2,f0
 1226  00001df8  00021820	add	r3,r0,r2
 1227  00001dfc  20620030	addi	r2,r3,#48
 1228  00001e00  a0220000	sb	(r1),r2
 1229  00001e04  8fc10000	lw	r1,(r30)
 1230  00001e08  8fc3fff4	lw	r3,-12(r30)
 1231  00001e0c  00200035	movi2fp	f0,r1
 1232  00001e10  00600835	movi2fp	f1,r3
 1233  00001e14  0401000f	div	f0,f0,f1
 1234  00001e18  00001034	movfp2i	r2,f0
 1235  00001e1c  8fc3fff4	lw	r3,-12(r30)
 1236  00001e20  00400035	movi2fp	f0,r2
 1237  00001e24  00600835	movi2fp	f1,r3
 1238  00001e28  0401000e	mult	f0,f0,f1
 1239  00001e2c  00001034	movfp2i	r2,f0
 1240  00001e30  00220822	sub	r1,r1,r2
 1241  00001e34  afc10000	sw	(r30),r1
 1242  00001e38          	L70_LF2:
 1243  00001e38  8fc1fff4	lw	r1,-12(r30)
 1244  00001e3c  6c220001	sgti	r2,r1,#1
 1245  00001e40  1440000c	bnez	r2,L71_LF2
 1246  00001e44  54000000	nop; delay slot nop
 1247  00001e48  0800000c	j	L61_LF2
 1248  00001e4c  54000000	nop; delay slot nop
 1249  00001e50          	L71_LF2:
 1250  00001e50  0bffff64	j	L68_LF2
 1251  00001e54  54000000	nop; delay slot nop
 1252  00001e58          	L69_LF2:
 1253  00001e58          	L63_LF2:
 1254  00001e58          	L61_LF2:
 1255  00001e58  8fc10004	lw	r1,4(r30)
 1256  00001e5c  20020000	addi	r2,r0,(#0x0)&0xff
 1257  00001e60  a0220000	sb	(r1),r2
 1258  00001e64          	L59_LF2:
 1259  00001e64  8fa20000	lw	r2,0(r29)
 1260  00001e68  8fa30004	lw	r3,4(r29)
 1261  00001e6c  8fdffff8	lw	r31,-8(r30)
 1262  00001e70  001ee820	add	r29,r0,r30
 1263  00001e74  8fdefffc	lw	r30,-4(r30)
 1264  00001e78  4be00000	jr	r31
 1265  00001e7c  54000000	nop
 1266  00001e80          	.endproc _ditoa
 1267  00001e80          	.align 2
 1268  00001e80          	.proc _dstrtol
 1269  00001e80          	.global _dstrtol
 1270  00001e80          	_dstrtol:
 1271                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1272  00001e80  afbefffc	sw	-4(r29),r30; push fp
 1273  00001e84  001df020	add	r30,r0,r29; fp = sp
 1274  00001e88  afbffff8	sw	-8(r29),r31; push ret addr
 1275  00001e8c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1276  00001e90  afa20000	sw	0(r29),r2
 1277  00001e94  20010000	addi	r1,r0,#0
 1278  00001e98  afc1fff4	sw	-12(r30),r1
 1279  00001e9c          	L73_LF2:
 1280  00001e9c  8fc10000	lw	r1,(r30)
 1281  00001ea0  90220000	lbu	r2,(r1)
 1282  00001ea4  60410020	seqi	r1,r2,#32
 1283  00001ea8  14200034	bnez	r1,L75_LF2
 1284  00001eac  54000000	nop; delay slot nop
 1285  00001eb0  8fc10000	lw	r1,(r30)
 1286  00001eb4  90220000	lbu	r2,(r1)
 1287  00001eb8  60410009	seqi	r1,r2,#9
 1288  00001ebc  14200020	bnez	r1,L75_LF2
 1289  00001ec0  54000000	nop; delay slot nop
 1290  00001ec4  8fc10000	lw	r1,(r30)
 1291  00001ec8  90220000	lbu	r2,(r1)
 1292  00001ecc  6041000a	seqi	r1,r2,#10
 1293  00001ed0  1420000c	bnez	r1,L75_LF2
 1294  00001ed4  54000000	nop; delay slot nop
 1295  00001ed8  0800001c	j	L74_LF2
 1296  00001edc  54000000	nop; delay slot nop
 1297  00001ee0          	L75_LF2:
 1298  00001ee0  8fc20000	lw	r2,(r30)
 1299  00001ee4  20410001	addi	r1,r2,#1
 1300  00001ee8  00011020	add	r2,r0,r1
 1301  00001eec  afc20000	sw	(r30),r2
 1302  00001ef0  0bffffa8	j	L73_LF2
 1303  00001ef4  54000000	nop; delay slot nop
 1304  00001ef8          	L74_LF2:
 1305  00001ef8  8fc10004	lw	r1,4(r30)
 1306  00001efc  64220000	snei	r2,r1,#0
 1307  00001f00  10400010	beqz	r2,L76_LF2
 1308  00001f04  54000000	nop; delay slot nop
 1309  00001f08  8fc10004	lw	r1,4(r30)
 1310  00001f0c  8fc20000	lw	r2,(r30)
 1311  00001f10  ac220000	sw	(r1),r2
 1312  00001f14          	L76_LF2:
 1313  00001f14  8fc10000	lw	r1,(r30)
 1314  00001f18  90220000	lbu	r2,(r1)
 1315  00001f1c  64410000	snei	r1,r2,#0
 1316  00001f20  14200010	bnez	r1,L77_LF2
 1317  00001f24  54000000	nop; delay slot nop
 1318  00001f28  8fc1fff4	lw	r1,-12(r30)
 1319  00001f2c  08000294	j	L72_LF2
 1320  00001f30  54000000	nop; delay slot nop
 1321  00001f34          	L77_LF2:
 1322  00001f34  8fc10000	lw	r1,(r30)
 1323  00001f38  90220000	lbu	r2,(r1)
 1324  00001f3c  6041002d	seqi	r1,r2,#45
 1325  00001f40  10200024	beqz	r1,L78_LF2
 1326  00001f44  54000000	nop; delay slot nop
 1327  00001f48  2001ffff	addi	r1,r0,#-1
 1328  00001f4c  afc1ffec	sw	-20(r30),r1
 1329  00001f50  8fc20000	lw	r2,(r30)
 1330  00001f54  20410001	addi	r1,r2,#1
 1331  00001f58  00011020	add	r2,r0,r1
 1332  00001f5c  afc20000	sw	(r30),r2
 1333  00001f60  0800000c	j	L79_LF2
 1334  00001f64  54000000	nop; delay slot nop
 1335  00001f68          	L78_LF2:
 1336  00001f68  20010001	addi	r1,r0,#1
 1337  00001f6c  afc1ffec	sw	-20(r30),r1
 1338  00001f70          	L79_LF2:
 1339  00001f70  8fc10008	lw	r1,8(r30)
 1340  00001f74  64220000	snei	r2,r1,#0
 1341  00001f78  14400090	bnez	r2,L80_LF2
 1342  00001f7c  54000000	nop; delay slot nop
 1343  00001f80  8fc10000	lw	r1,(r30)
 1344  00001f84  90220000	lbu	r2,(r1)
 1345  00001f88  60410030	seqi	r1,r2,#48
 1346  00001f8c  10200074	beqz	r1,L81_LF2
 1347  00001f90  54000000	nop; delay slot nop
 1348  00001f94  8fc20000	lw	r2,(r30)
 1349  00001f98  20410001	addi	r1,r2,#1
 1350  00001f9c  00011020	add	r2,r0,r1
 1351  00001fa0  afc20000	sw	(r30),r2
 1352  00001fa4  8fc10000	lw	r1,(r30)
 1353  00001fa8  90220000	lbu	r2,(r1)
 1354  00001fac  60410078	seqi	r1,r2,#120
 1355  00001fb0  14200020	bnez	r1,L83_LF2
 1356  00001fb4  54000000	nop; delay slot nop
 1357  00001fb8  8fc10000	lw	r1,(r30)
 1358  00001fbc  90220000	lbu	r2,(r1)
 1359  00001fc0  60410058	seqi	r1,r2,#88
 1360  00001fc4  1420000c	bnez	r1,L83_LF2
 1361  00001fc8  54000000	nop; delay slot nop
 1362  00001fcc  08000024	j	L82_LF2
 1363  00001fd0  54000000	nop; delay slot nop
 1364  00001fd4          	L83_LF2:
 1365  00001fd4  20010010	addi	r1,r0,#16
 1366  00001fd8  afc10008	sw	8(r30),r1
 1367  00001fdc  8fc20000	lw	r2,(r30)
 1368  00001fe0  20410001	addi	r1,r2,#1
 1369  00001fe4  00011020	add	r2,r0,r1
 1370  00001fe8  afc20000	sw	(r30),r2
 1371  00001fec  0800000c	j	L84_LF2
 1372  00001ff0  54000000	nop; delay slot nop
 1373  00001ff4          	L82_LF2:
 1374  00001ff4  20010008	addi	r1,r0,#8
 1375  00001ff8  afc10008	sw	8(r30),r1
 1376  00001ffc          	L84_LF2:
 1377  00001ffc  0800000c	j	L80_LF2
 1378  00002000  54000000	nop; delay slot nop
 1379  00002004          	L81_LF2:
 1380  00002004  2001000a	addi	r1,r0,#10
 1381  00002008  afc10008	sw	8(r30),r1
 1382  0000200c          	L85_LF2:
 1383  0000200c          	L80_LF2:
 1384  0000200c  8fc10008	lw	r1,8(r30)
 1385  00002010  70220000	slei	r2,r1,#0
 1386  00002014  1440001c	bnez	r2,L87_LF2
 1387  00002018  54000000	nop; delay slot nop
 1388  0000201c  8fc10008	lw	r1,8(r30)
 1389  00002020  6c220010	sgti	r2,r1,#16
 1390  00002024  1440000c	bnez	r2,L87_LF2
 1391  00002028  54000000	nop; delay slot nop
 1392  0000202c  08000010	j	L86_LF2
 1393  00002030  54000000	nop; delay slot nop
 1394  00002034          	L87_LF2:
 1395  00002034  8fc1fff4	lw	r1,-12(r30)
 1396  00002038  08000188	j	L72_LF2
 1397  0000203c  54000000	nop; delay slot nop
 1398  00002040          	L86_LF2:
 1399  00002040  54000000	nop
 1400  00002044          	L88_LF2:
 1401  00002044  8fc10000	lw	r1,(r30)
 1402  00002048  90220000	lbu	r2,(r1)
 1403  0000204c  6c41002f	sgtui	r1,r2,#47
 1404  00002050  10200030	beqz	r1,L91_LF2
 1405  00002054  54000000	nop; delay slot nop
 1406  00002058  8fc10000	lw	r1,(r30)
 1407  0000205c  90220000	lbu	r2,(r1)
 1408  00002060  70410039	sleui	r1,r2,#57
 1409  00002064  1020001c	beqz	r1,L91_LF2
 1410  00002068  54000000	nop; delay slot nop
 1411  0000206c  8fc10000	lw	r1,(r30)
 1412  00002070  90220000	lbu	r2,(r1)
 1413  00002074  2041ffd0	addi	r1,r2,#-48
 1414  00002078  afc1fff0	sw	-16(r30),r1
 1415  0000207c  0800008c	j	L92_LF2
 1416  00002080  54000000	nop; delay slot nop
 1417  00002084          	L91_LF2:
 1418  00002084  8fc10000	lw	r1,(r30)
 1419  00002088  90220000	lbu	r2,(r1)
 1420  0000208c  6c410060	sgtui	r1,r2,#96
 1421  00002090  10200030	beqz	r1,L93_LF2
 1422  00002094  54000000	nop; delay slot nop
 1423  00002098  8fc10000	lw	r1,(r30)
 1424  0000209c  90220000	lbu	r2,(r1)
 1425  000020a0  7041007a	sleui	r1,r2,#122
 1426  000020a4  1020001c	beqz	r1,L93_LF2
 1427  000020a8  54000000	nop; delay slot nop
 1428  000020ac  8fc10000	lw	r1,(r30)
 1429  000020b0  90220000	lbu	r2,(r1)
 1430  000020b4  2041ffa9	addi	r1,r2,#-87
 1431  000020b8  afc1fff0	sw	-16(r30),r1
 1432  000020bc  0800004c	j	L92_LF2
 1433  000020c0  54000000	nop; delay slot nop
 1434  000020c4          	L93_LF2:
 1435  000020c4  8fc10000	lw	r1,(r30)
 1436  000020c8  90220000	lbu	r2,(r1)
 1437  000020cc  6c410040	sgtui	r1,r2,#64
 1438  000020d0  10200030	beqz	r1,L95_LF2
 1439  000020d4  54000000	nop; delay slot nop
 1440  000020d8  8fc10000	lw	r1,(r30)
 1441  000020dc  90220000	lbu	r2,(r1)
 1442  000020e0  7041005a	sleui	r1,r2,#90
 1443  000020e4  1020001c	beqz	r1,L95_LF2
 1444  000020e8  54000000	nop; delay slot nop
 1445  000020ec  8fc10000	lw	r1,(r30)
 1446  000020f0  90220000	lbu	r2,(r1)
 1447  000020f4  2041ffc9	addi	r1,r2,#-55
 1448  000020f8  afc1fff0	sw	-16(r30),r1
 1449  000020fc  0800000c	j	L92_LF2
 1450  00002100  54000000	nop; delay slot nop
 1451  00002104          	L95_LF2:
 1452  00002104  200103e8	addi	r1,r0,#1000
 1453  00002108  afc1fff0	sw	-16(r30),r1
 1454  0000210c          	L96_LF2:
 1455  0000210c          	L94_LF2:
 1456  0000210c          	L92_LF2:
 1457  0000210c  8fc1fff0	lw	r1,-16(r30)
 1458  00002110  8fc20008	lw	r2,8(r30)
 1459  00002114  0022082a	slt	r1,r1,r2
 1460  00002118  10200040	beqz	r1,L90_LF2
 1461  0000211c  54000000	nop; delay slot nop
 1462  00002120  8fc1fff4	lw	r1,-12(r30)
 1463  00002124  8fc20008	lw	r2,8(r30)
 1464  00002128  00200035	movi2fp	f0,r1
 1465  0000212c  00400835	movi2fp	f1,r2
 1466  00002130  0401000e	mult	f0,f0,f1
 1467  00002134  00000834	movfp2i	r1,f0
 1468  00002138  afc1fff4	sw	-12(r30),r1
 1469  0000213c  8fc1fff4	lw	r1,-12(r30)
 1470  00002140  8fc2fff0	lw	r2,-16(r30)
 1471  00002144  00220820	add	r1,r1,r2
 1472  00002148  afc1fff4	sw	-12(r30),r1
 1473  0000214c  8fc20000	lw	r2,(r30)
 1474  00002150  20410001	addi	r1,r2,#1
 1475  00002154  00011020	add	r2,r0,r1
 1476  00002158  afc20000	sw	(r30),r2
 1477  0000215c          	L97_LF2:
 1478  0000215c          	L90_LF2:
 1479  0000215c  8fc1fff0	lw	r1,-16(r30)
 1480  00002160  8fc20008	lw	r2,8(r30)
 1481  00002164  0022082a	slt	r1,r1,r2
 1482  00002168  1420000c	bnez	r1,L98_LF2
 1483  0000216c  54000000	nop; delay slot nop
 1484  00002170  0800000c	j	L89_LF2
 1485  00002174  54000000	nop; delay slot nop
 1486  00002178          	L98_LF2:
 1487  00002178  0bfffec8	j	L88_LF2
 1488  0000217c  54000000	nop; delay slot nop
 1489  00002180          	L89_LF2:
 1490  00002180  8fc10004	lw	r1,4(r30)
 1491  00002184  64220000	snei	r2,r1,#0
 1492  00002188  10400010	beqz	r2,L99_LF2
 1493  0000218c  54000000	nop; delay slot nop
 1494  00002190  8fc10004	lw	r1,4(r30)
 1495  00002194  8fc20000	lw	r2,(r30)
 1496  00002198  ac220000	sw	(r1),r2
 1497  0000219c          	L99_LF2:
 1498  0000219c  8fc1fff4	lw	r1,-12(r30)
 1499  000021a0  8fc2ffec	lw	r2,-20(r30)
 1500  000021a4  00200035	movi2fp	f0,r1
 1501  000021a8  00400835	movi2fp	f1,r2
 1502  000021ac  0401000e	mult	f0,f0,f1
 1503  000021b0  00000834	movfp2i	r1,f0
 1504  000021b4  afc1fff4	sw	-12(r30),r1
 1505  000021b8  8fc1fff4	lw	r1,-12(r30)
 1506  000021bc  08000004	j	L72_LF2
 1507  000021c0  54000000	nop; delay slot nop
 1508  000021c4          	L72_LF2:
 1509  000021c4  8fa20000	lw	r2,0(r29)
 1510  000021c8  8fdffff8	lw	r31,-8(r30)
 1511  000021cc  001ee820	add	r29,r0,r30
 1512  000021d0  8fdefffc	lw	r30,-4(r30)
 1513  000021d4  4be00000	jr	r31
 1514  000021d8  54000000	nop
 1515  000021dc          	.endproc _dstrtol
 1516  000021dc          	.align 2
 1517  000021dc          	.proc _bcopy
 1518  000021dc          	.global _bcopy
 1519  000021dc          	_bcopy:
 1520                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1521  000021dc  afbefffc	sw	-4(r29),r30; push fp
 1522  000021e0  001df020	add	r30,r0,r29; fp = sp
 1523  000021e4  afbffff8	sw	-8(r29),r31; push ret addr
 1524  000021e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1525  000021ec  afa20000	sw	0(r29),r2
 1526  000021f0  afa30004	sw	4(r29),r3
 1527  000021f4  54000000	nop
 1528  000021f8          	L101_LF2:
 1529  000021f8  8fc10008	lw	r1,8(r30)
 1530  000021fc  2022ffff	addi	r2,r1,#-1
 1531  00002200  afc20008	sw	8(r30),r2
 1532  00002204  6c210000	sgti	r1,r1,#0
 1533  00002208  1420000c	bnez	r1,L103_LF2
 1534  0000220c  54000000	nop; delay slot nop
 1535  00002210  0800002c	j	L102_LF2
 1536  00002214  54000000	nop; delay slot nop
 1537  00002218          	L103_LF2:
 1538  00002218  8fc10004	lw	r1,4(r30)
 1539  0000221c  20220001	addi	r2,r1,#1
 1540  00002220  afc20004	sw	4(r30),r2
 1541  00002224  8fc20000	lw	r2,(r30)
 1542  00002228  20430001	addi	r3,r2,#1
 1543  0000222c  afc30000	sw	(r30),r3
 1544  00002230  80420000	lb	r2,(r2)
 1545  00002234  a0220000	sb	(r1),r2
 1546  00002238  0bffffbc	j	L101_LF2
 1547  0000223c  54000000	nop; delay slot nop
 1548  00002240          	L102_LF2:
 1549  00002240          	L100_LF2:
 1550  00002240  8fa20000	lw	r2,0(r29)
 1551  00002244  8fa30004	lw	r3,4(r29)
 1552  00002248  8fdffff8	lw	r31,-8(r30)
 1553  0000224c  001ee820	add	r29,r0,r30
 1554  00002250  8fdefffc	lw	r30,-4(r30)
 1555  00002254  4be00000	jr	r31
 1556  00002258  54000000	nop
 1557  0000225c          	.endproc _bcopy
 1558  0000225c          	.align 2
 1559  0000225c          	.proc _bzero
 1560  0000225c          	.global _bzero
 1561  0000225c          	_bzero:
 1562                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1563  0000225c  afbefffc	sw	-4(r29),r30; push fp
 1564  00002260  001df020	add	r30,r0,r29; fp = sp
 1565  00002264  afbffff8	sw	-8(r29),r31; push ret addr
 1566  00002268  2fbd0010	subui	r29,r29,#16; alloc local storage
 1567  0000226c  afa20000	sw	0(r29),r2
 1568  00002270  54000000	nop
 1569  00002274          	L105_LF2:
 1570  00002274  8fc10004	lw	r1,4(r30)
 1571  00002278  2022ffff	addi	r2,r1,#-1
 1572  0000227c  afc20004	sw	4(r30),r2
 1573  00002280  6c210000	sgti	r1,r1,#0
 1574  00002284  1420000c	bnez	r1,L107_LF2
 1575  00002288  54000000	nop; delay slot nop
 1576  0000228c  08000020	j	L106_LF2
 1577  00002290  54000000	nop; delay slot nop
 1578  00002294          	L107_LF2:
 1579  00002294  8fc10000	lw	r1,(r30)
 1580  00002298  20220001	addi	r2,r1,#1
 1581  0000229c  afc20000	sw	(r30),r2
 1582  000022a0  20020000	addi	r2,r0,(#0x0)&0xff
 1583  000022a4  a0220000	sb	(r1),r2
 1584  000022a8  0bffffc8	j	L105_LF2
 1585  000022ac  54000000	nop; delay slot nop
 1586  000022b0          	L106_LF2:
 1587  000022b0          	L104_LF2:
 1588  000022b0  8fa20000	lw	r2,0(r29)
 1589  000022b4  8fdffff8	lw	r31,-8(r30)
 1590  000022b8  001ee820	add	r29,r0,r30
 1591  000022bc  8fdefffc	lw	r30,-4(r30)
 1592  000022c0  4be00000	jr	r31
 1593  000022c4  54000000	nop
 1594  000022c8          	.endproc _bzero
 1595  000022c8          	.align 2
 1596  000022c8          	.proc _min
 1597  000022c8          	.global _min
 1598  000022c8          	_min:
 1599                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1600  000022c8  afbefffc	sw	-4(r29),r30; push fp
 1601  000022cc  001df020	add	r30,r0,r29; fp = sp
 1602  000022d0  afbffff8	sw	-8(r29),r31; push ret addr
 1603  000022d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1604  000022d8  afa20000	sw	0(r29),r2
 1605  000022dc  afa30004	sw	4(r29),r3
 1606  000022e0  8fc10000	lw	r1,(r30)
 1607  000022e4  8fc20004	lw	r2,4(r30)
 1608  000022e8  0022182c	sle	r3,r1,r2
 1609  000022ec  14600008	bnez	r3,L109_LF2
 1610  000022f0  54000000	nop; delay slot nop
 1611  000022f4  8fc10004	lw	r1,4(r30)
 1612  000022f8          	L109_LF2:
 1613  000022f8  08000004	j	L108_LF2
 1614  000022fc  54000000	nop; delay slot nop
 1615  00002300          	L108_LF2:
 1616  00002300  8fa20000	lw	r2,0(r29)
 1617  00002304  8fa30004	lw	r3,4(r29)
 1618  00002308  8fdffff8	lw	r31,-8(r30)
 1619  0000230c  001ee820	add	r29,r0,r30
 1620  00002310  8fdefffc	lw	r30,-4(r30)
 1621  00002314  4be00000	jr	r31
 1622  00002318  54000000	nop
 1623  0000231c          	.endproc _min
 1624                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1625                      ;;;
 1626                      ;;; Most of the traps are called in files from libtraps.
 1629  0000231c          	.align 2
 1630  0000231c          	.proc _exit
 1631  0000231c          	.global _exit
 1632  0000231c          	_exit:
 1633  0000231c  44000300	trap	#0x300
 1634  00002320  4be00000	jr	r31
 1635  00002324  54000000	nop
 1636  00002328          	.endproc _exit
 1638                      ; for the benefit of gcc.
 1639  00002328          	.proc ___main
 1640  00002328          	.global ___main
 1641  00002328          	___main:
 1642  00002328  4be00000	jr	r31
 1643  0000232c  54000000	nop
 1644  00002330          	.endproc ___main
 1645  00002330          	.text
 1646  00002330          	.global _etext
 1647  00002330          	_etext:
 1648  00002330          	.align 3
 1649  00002330          	.data
 1650  00003192          	.global _edata
 1651  00003192          	_edata:
