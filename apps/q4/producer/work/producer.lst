 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 394
    4                      ; Text size: 4832
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  48454c4c	.ascii "HELLO WORLD\000"
   82  00003004  4f20574f	
   82  00003008  524c4400	
   83  0000300c          	.align 2
   84  0000300c          	LC1_LF0:
   85  0000300c  55736167	.ascii "Usage: \000"
   85  00003010  653a2000	
   86  00003014          	.align 2
   87  00003014          	LC2_LF0:
   88  00003014  203c6861	.ascii " <handle_to_shared_memory_page> <synch lock number> \n    \t<cond var "
   88  00003018  6e646c65	
   88  0000301c  5f746f5f	
   88  00003020  73686172	
   88  00003024  65645f6d	
   88  00003028  656d6f72	
   88  0000302c  795f7061	
   88  00003030  67653e20	
   88  00003034  3c73796e	
   88  00003038  6368206c	
   88  0000303c  6f636b20	
   88  00003040  6e756d62	
   88  00003044  65723e20	
   88  00003048  0a202020	
   88  0000304c  20093c63	
   88  00003050  6f6e6420	
   88  00003054  76617220	
   89  00003058  31206e75	.ascii "1 number> <cond var 2 number> <handle_to_page_mapped_semaphore>\n\000"
   89  0000305c  6d626572	
   89  00003060  3e203c63	
   89  00003064  6f6e6420	
   89  00003068  76617220	
   89  0000306c  32206e75	
   89  00003070  6d626572	
   89  00003074  3e203c68	
   89  00003078  616e646c	
   89  0000307c  655f746f	
   89  00003080  5f706167	
   89  00003084  655f6d61	
   89  00003088  70706564	
   89  0000308c  5f73656d	
   89  00003090  6170686f	
   89  00003094  72653e0a	
   89  00003098  00      	
   90  00003099          	.align 2
   91  0000309c          	LC3_LF0:
   92  0000309c  436f756c	.ascii "Could not map the virtual address to the memory in pid : %d\000"
   92  000030a0  64206e6f	
   92  000030a4  74206d61	
   92  000030a8  70207468	
   92  000030ac  65207669	
   92  000030b0  72747561	
   92  000030b4  6c206164	
   92  000030b8  64726573	
   92  000030bc  7320746f	
   92  000030c0  20746865	
   92  000030c4  206d656d	
   92  000030c8  6f727920	
   92  000030cc  696e2070	
   92  000030d0  6964203a	
   92  000030d4  20256400	
   93  000030d8          	.align 2
   94  000030d8          	LC4_LF0:
   95  000030d8  2c206578	.ascii ", exiting...\n\000"
   95  000030dc  6974696e	
   95  000030e0  672e2e2e	
   95  000030e4  0a00    	
   96  000030e6          	.align 2
   97  000030e8          	LC5_LF0:
   98  000030e8  50726f64	.ascii "Producer :%d is waiting on notFull\n\000"
   98  000030ec  75636572	
   98  000030f0  203a2564	
   98  000030f4  20697320	
   98  000030f8  77616974	
   98  000030fc  696e6720	
   98  00003100  6f6e206e	
   98  00003104  6f744675	
   98  00003108  6c6c0a00	
   99  0000310c          	.align 2
  100  0000310c          	LC6_LF0:
  101  0000310c  50726f64	.ascii "Producer %d inserted: %c\n\000"
  101  00003110  75636572	
  101  00003114  20256420	
  101  00003118  696e7365	
  101  0000311c  72746564	
  101  00003120  3a202563	
  101  00003124  0a00    	
  102  00003126          	.align 2
  103  00003128          	LC7_LF0:
  104  00003128  50726f64	.ascii "Producer %d sends buffer not empty signal\n\000"
  104  0000312c  75636572	
  104  00003130  20256420	
  104  00003134  73656e64	
  104  00003138  73206275	
  104  0000313c  66666572	
  104  00003140  206e6f74	
  104  00003144  20656d70	
  104  00003148  74792073	
  104  0000314c  69676e61	
  104  00003150  6c0a00  	
  105  00003153          	.align 2
  106  00003154          	LC8_LF0:
  107  00003154  50726f64	.ascii "Producer ID : %d has completed its work and will die\n\000"
  107  00003158  75636572	
  107  0000315c  20494420	
  107  00003160  3a202564	
  107  00003164  20686173	
  107  00003168  20636f6d	
  107  0000316c  706c6574	
  107  00003170  65642069	
  107  00003174  74732077	
  107  00003178  6f726b20	
  107  0000317c  616e6420	
  107  00003180  77696c6c	
  107  00003184  20646965	
  107  00003188  0a00    	
  108  0000318a          	.text
  109  000010d4          	.align 2
  110  000010d4          	.proc _main
  111  000010d4          	.global _main
  112  000010d4          	_main:
  113                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  114  000010d4  afbefffc	sw	-4(r29),r30; push fp
  115  000010d8  001df020	add	r30,r0,r29; fp = sp
  116  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  117  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  118  000010e4  8fc20000	lw	r2,(r30)
  119  000010e8  8fc30004	lw	r3,4(r30)
  120  000010ec  0c0011e8	jal	___main
  121  000010f0  54000000	nop; not filled.
  122  000010f4  3c010000	lhi	r1,((LC0_LF0)>>16)&0xffff
  123  000010f8  24213000	addui	r1,r1,(LC0_LF0)&0xffff
  124  000010fc  802b0000	lb	r11,(r1)
  125  00001100  a3cbffe8	sb	-24(r30),r11
  126  00001104  802b0001	lb	r11,1(r1)
  127  00001108  a3cbffe9	sb	-23(r30),r11
  128  0000110c  802b0002	lb	r11,2(r1)
  129  00001110  a3cbffea	sb	-22(r30),r11
  130  00001114  802b0003	lb	r11,3(r1)
  131  00001118  a3cbffeb	sb	-21(r30),r11
  132  0000111c  802b0004	lb	r11,4(r1)
  133  00001120  a3cbffec	sb	-20(r30),r11
  134  00001124  802b0005	lb	r11,5(r1)
  135  00001128  a3cbffed	sb	-19(r30),r11
  136  0000112c  802b0006	lb	r11,6(r1)
  137  00001130  a3cbffee	sb	-18(r30),r11
  138  00001134  802b0007	lb	r11,7(r1)
  139  00001138  a3cbffef	sb	-17(r30),r11
  140  0000113c  802b0008	lb	r11,8(r1)
  141  00001140  a3cbfff0	sb	-16(r30),r11
  142  00001144  802b0009	lb	r11,9(r1)
  143  00001148  a3cbfff1	sb	-15(r30),r11
  144  0000114c  802b000a	lb	r11,10(r1)
  145  00001150  a3cbfff2	sb	-14(r30),r11
  146  00001154  8021000b	lb	r1,11(r1)
  147  00001158  a3c1fff3	sb	-13(r30),r1
  148  0000115c  20050000	addi	r5,r0,#0
  149  00001160  20060000	addi	r6,r0,#0
  150  00001164  64410006	snei	r1,r2,#6
  151  00001168  1020004c	beqz	r1,L14_LF0
  152  0000116c  54000000	nop; not filled.
  153  00001170  23bdfff8	addi	r29,r29,#-8
  154  00001174  3c0b0000	lhi	r11,((LC1_LF0)>>16)&0xffff
  155  00001178  256b300c	addui	r11,r11,(LC1_LF0)&0xffff
  156  0000117c  afab0000	sw	(r29),r11
  157  00001180  0c00034c	jal	_Printf
  158  00001184  54000000	nop; not filled.
  159  00001188  8c6b0000	lw	r11,(r3)
  160  0000118c  afab0000	sw	(r29),r11
  161  00001190  0c00033c	jal	_Printf
  162  00001194  54000000	nop; not filled.
  163  00001198  3c0b0000	lhi	r11,((LC2_LF0)>>16)&0xffff
  164  0000119c  256b3014	addui	r11,r11,(LC2_LF0)&0xffff
  165  000011a0  afab0000	sw	(r29),r11
  166  000011a4  0c000328	jal	_Printf
  167  000011a8  54000000	nop; not filled.
  168  000011ac  0c0003d4	jal	_Exit
  169  000011b0  54000000	nop; not filled.
  170  000011b4  23bd0008	addi	r29,r29,#8
  171  000011b8          	L14_LF0:
  172  000011b8  23bdfff0	addi	r29,r29,#-16
  173  000011bc  8c6b0004	lw	r11,4(r3)
  174  000011c0  afab0000	sw	(r29),r11
  175  000011c4  200b0000	addi	r11,r0,#0
  176  000011c8  afab0004	sw	4(r29),r11
  177  000011cc  200b000a	addi	r11,r0,#10
  178  000011d0  afab0008	sw	8(r29),r11
  179  000011d4  0c000c58	jal	_dstrtol
  180  000011d8  54000000	nop; not filled.
  181  000011dc  00011020	add	r2,r0,r1
  182  000011e0  8c6b0008	lw	r11,8(r3)
  183  000011e4  afab0000	sw	(r29),r11
  184  000011e8  200b0000	addi	r11,r0,#0
  185  000011ec  afab0004	sw	4(r29),r11
  186  000011f0  200b000a	addi	r11,r0,#10
  187  000011f4  afab0008	sw	8(r29),r11
  188  000011f8  0c000c34	jal	_dstrtol
  189  000011fc  54000000	nop; not filled.
  190  00001200  00013820	add	r7,r0,r1
  191  00001204  8c6b000c	lw	r11,12(r3)
  192  00001208  afab0000	sw	(r29),r11
  193  0000120c  200b0000	addi	r11,r0,#0
  194  00001210  afab0004	sw	4(r29),r11
  195  00001214  200b000a	addi	r11,r0,#10
  196  00001218  afab0008	sw	8(r29),r11
  197  0000121c  0c000c10	jal	_dstrtol
  198  00001220  54000000	nop; not filled.
  199  00001224  00015020	add	r10,r0,r1
  200  00001228  8c6b0010	lw	r11,16(r3)
  201  0000122c  afab0000	sw	(r29),r11
  202  00001230  200b0000	addi	r11,r0,#0
  203  00001234  afab0004	sw	4(r29),r11
  204  00001238  200b000a	addi	r11,r0,#10
  205  0000123c  afab0008	sw	8(r29),r11
  206  00001240  0c000bec	jal	_dstrtol
  207  00001244  54000000	nop; not filled.
  208  00001248  00014820	add	r9,r0,r1
  209  0000124c  8c6b0014	lw	r11,20(r3)
  210  00001250  afab0000	sw	(r29),r11
  211  00001254  200b0000	addi	r11,r0,#0
  212  00001258  afab0004	sw	4(r29),r11
  213  0000125c  200b000a	addi	r11,r0,#10
  214  00001260  afab0008	sw	8(r29),r11
  215  00001264  0c000bc8	jal	_dstrtol
  216  00001268  54000000	nop; not filled.
  217  0000126c  afa20000	sw	(r29),r2
  218  00001270  0c00028c	jal	_shmat
  219  00001274  54000000	nop; not filled.
  220  00001278  00012020	add	r4,r0,r1
  221  0000127c  23bd0010	addi	r29,r29,#16
  222  00001280  64810000	snei	r1,r4,#0
  223  00001284  14200058	bnez	r1,L15_LF0
  224  00001288  54000000	nop; not filled.
  225  0000128c  0c00024c	jal	_getpid
  226  00001290  54000000	nop; not filled.
  227  00001294  23bdfff8	addi	r29,r29,#-8
  228  00001298  3c0b0000	lhi	r11,((LC3_LF0)>>16)&0xffff
  229  0000129c  256b309c	addui	r11,r11,(LC3_LF0)&0xffff
  230  000012a0  afab0000	sw	(r29),r11
  231  000012a4  afa10004	sw	4(r29),r1
  232  000012a8  0c000224	jal	_Printf
  233  000012ac  54000000	nop; not filled.
  234  000012b0  8c630000	lw	r3,(r3)
  235  000012b4  afa30000	sw	(r29),r3
  236  000012b8  0c000214	jal	_Printf
  237  000012bc  54000000	nop; not filled.
  238  000012c0  3c0b0000	lhi	r11,((LC4_LF0)>>16)&0xffff
  239  000012c4  256b30d8	addui	r11,r11,(LC4_LF0)&0xffff
  240  000012c8  afab0000	sw	(r29),r11
  241  000012cc  0c000200	jal	_Printf
  242  000012d0  54000000	nop; not filled.
  243  000012d4  0c0002ac	jal	_Exit
  244  000012d8  54000000	nop; not filled.
  245  000012dc  23bd0008	addi	r29,r29,#8
  246  000012e0          	L15_LF0:
  247  000012e0  20080005	addi	r8,r0,#5
  248  000012e4          	L18_LF0:
  249  000012e4  23bdfff8	addi	r29,r29,#-8
  250  000012e8  afa70000	sw	(r29),r7
  251  000012ec  0c00024c	jal	_lock_acquire
  252  000012f0  54000000	nop; not filled.
  253  000012f4  23bd0008	addi	r29,r29,#8
  254  000012f8  64210000	snei	r1,r1,#0
  255  000012fc  10200138	beqz	r1,L19_LF0
  256  00001300  54000000	nop; not filled.
  257  00001304  8c81000c	lw	r1,12(r4)
  258  00001308  20230001	addi	r3,r1,#1
  259  0000130c  00600035	movi2fp	f0,r3
  260  00001310  01000835	movi2fp	f1,r8
  261  00001314  0401000f	div	f0,f0,f1
  262  00001318  00001034	movfp2i	r2,f0
  263  0000131c  50410002	slli	r1,r2,#0x2
  264  00001320  00220820	add	r1,r1,r2
  265  00001324  00611022	sub	r2,r3,r1
  266  00001328  8c810008	lw	r1,8(r4)
  267  0000132c  00220828	seq	r1,r1,r2
  268  00001330  10200038	beqz	r1,L20_LF0
  269  00001334  54000000	nop; not filled.
  270  00001338  0c0001a0	jal	_getpid
  271  0000133c  54000000	nop; not filled.
  272  00001340  23bdfff8	addi	r29,r29,#-8
  273  00001344  3c0b0000	lhi	r11,((LC5_LF0)>>16)&0xffff
  274  00001348  256b30e8	addui	r11,r11,(LC5_LF0)&0xffff
  275  0000134c  afab0000	sw	(r29),r11
  276  00001350  afa10004	sw	4(r29),r1
  277  00001354  0c000178	jal	_Printf
  278  00001358  54000000	nop; not filled.
  279  0000135c  afa90000	sw	(r29),r9
  280  00001360  0c0001fc	jal	_cond_wait
  281  00001364  54000000	nop; not filled.
  282  00001368  23bd0008	addi	r29,r29,#8
  283  0000136c          	L20_LF0:
  284  0000136c  8c810008	lw	r1,8(r4)
  285  00001370  8c82000c	lw	r2,12(r4)
  286  00001374  00220828	seq	r1,r1,r2
  287  00001378  10200008	beqz	r1,L21_LF0
  288  0000137c  54000000	nop; not filled.
  289  00001380  20060001	addi	r6,r0,#1
  290  00001384          	L21_LF0:
  291  00001384  00821020	add	r2,r4,r2
  292  00001388  23c1ffe8	addi	r1,r30,#-24
  293  0000138c  00251820	add	r3,r1,r5
  294  00001390  806b0000	lb	r11,(r3)
  295  00001394  a04b0000	sb	(r2),r11
  296  00001398  0c000140	jal	_getpid
  297  0000139c  54000000	nop; not filled.
  298  000013a0  23bdfff0	addi	r29,r29,#-16
  299  000013a4  3c0b0000	lhi	r11,((LC6_LF0)>>16)&0xffff
  300  000013a8  256b310c	addui	r11,r11,(LC6_LF0)&0xffff
  301  000013ac  afab0000	sw	(r29),r11
  302  000013b0  afa10004	sw	4(r29),r1
  303  000013b4  90610000	lbu	r1,(r3)
  304  000013b8  afa10008	sw	8(r29),r1
  305  000013bc  0c000110	jal	_Printf
  306  000013c0  54000000	nop; not filled.
  307  000013c4  8c81000c	lw	r1,12(r4)
  308  000013c8  20230001	addi	r3,r1,#1
  309  000013cc  00600035	movi2fp	f0,r3
  310  000013d0  01000835	movi2fp	f1,r8
  311  000013d4  0401000f	div	f0,f0,f1
  312  000013d8  00001034	movfp2i	r2,f0
  313  000013dc  50410002	slli	r1,r2,#0x2
  314  000013e0  00220820	add	r1,r1,r2
  315  000013e4  00610822	sub	r1,r3,r1
  316  000013e8  ac81000c	sw	12(r4),r1
  317  000013ec  20a50001	addi	r5,r5,#1
  318  000013f0  23bd0010	addi	r29,r29,#16
  319  000013f4  64c10000	snei	r1,r6,#0
  320  000013f8  1020003c	beqz	r1,L19_LF0
  321  000013fc  54000000	nop; not filled.
  322  00001400  0c0000d8	jal	_getpid
  323  00001404  54000000	nop; not filled.
  324  00001408  23bdfff8	addi	r29,r29,#-8
  325  0000140c  3c0b0000	lhi	r11,((LC7_LF0)>>16)&0xffff
  326  00001410  256b3128	addui	r11,r11,(LC7_LF0)&0xffff
  327  00001414  afab0000	sw	(r29),r11
  328  00001418  afa10004	sw	4(r29),r1
  329  0000141c  0c0000b0	jal	_Printf
  330  00001420  54000000	nop; not filled.
  331  00001424  afaa0000	sw	(r29),r10
  332  00001428  0c00014c	jal	_cond_broadcast
  333  0000142c  54000000	nop; not filled.
  334  00001430  20060000	addi	r6,r0,#0
  335  00001434  23bd0008	addi	r29,r29,#8
  336  00001438          	L19_LF0:
  337  00001438  23bdfff8	addi	r29,r29,#-8
  338  0000143c  afa70000	sw	(r29),r7
  339  00001440  0c000104	jal	_lock_release
  340  00001444  54000000	nop; not filled.
  341  00001448  23bd0008	addi	r29,r29,#8
  342  0000144c  70a1000a	slei	r1,r5,#10
  343  00001450  1420fe90	bnez	r1,L18_LF0
  344  00001454  54000000	nop; not filled.
  345  00001458  0c000080	jal	_getpid
  346  0000145c  54000000	nop; not filled.
  347  00001460  23bdfff8	addi	r29,r29,#-8
  348  00001464  3c0b0000	lhi	r11,((LC8_LF0)>>16)&0xffff
  349  00001468  256b3154	addui	r11,r11,(LC8_LF0)&0xffff
  350  0000146c  afab0000	sw	(r29),r11
  351  00001470  afa10004	sw	4(r29),r1
  352  00001474  0c000058	jal	_Printf
  353  00001478  54000000	nop; not filled.
  354  0000147c  23bd0008	addi	r29,r29,#8
  355  00001480  0c000e48	jal	_exit
  356  00001484  54000000	nop
  357  00001488          	.endproc _main
  358                      ;;;
  359                      ;;; Stub functions for DLX traps.
  360                      ;;;
  361                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  362                      ;;;
  363                      ;;; The traps such as Open and Close
  364                      ;;; (note the capital letters) are for use by user programs.  The traps
  365                      ;;; with names such as open and close (lower case) are for use by the OS.
  366                      ;;;
  369  00001488          	.align 2
  371                      ;;; The following are the traps to be used by user-level programs
  372                      ;;;
  374  00001488          	.align 2
  375  00001488          	.proc _Open
  376  00001488          	.global _Open
  377  00001488          	_Open:
  378                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  379                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  380                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  381  00001488  44000213	trap	#0x213
  382  0000148c  4be00000	jr	r31
  383  00001490  54000000	nop
  384  00001494          	.endproc _Open
  386  00001494          	.proc _Close
  387  00001494          	.global _Close
  388  00001494          	_Close:
  389  00001494  44000214	trap	#0x214
  390  00001498  4be00000	jr	r31
  391  0000149c  54000000	nop
  392  000014a0          	.endproc _Close
  394  000014a0          	.proc _Read
  395  000014a0          	.global _Read
  396  000014a0          	_Read:
  397  000014a0  44000210	trap	#0x210
  398  000014a4  4be00000	jr	r31
  399  000014a8  54000000	nop
  400  000014ac          	.endproc _Read
  402  000014ac          	.proc _Write
  403  000014ac          	.global _Write
  404  000014ac          	_Write:
  405  000014ac  44000211	trap	#0x211
  406  000014b0  4be00000	jr	r31
  407  000014b4  54000000	nop
  408  000014b8          	.endproc _Write
  410  000014b8          	.proc _Lseek
  411  000014b8          	.global _Lseek
  412  000014b8          	_Lseek:
  413  000014b8  44000212	trap	#0x212
  414  000014bc  4be00000	jr	r31
  415  000014c0  54000000	nop
  416  000014c4          	.endproc _Lseek
  418  000014c4          	.proc _Putchar
  419  000014c4          	.global _Putchar
  420  000014c4          	_Putchar:
  421  000014c4  44000280	trap	#0x280
  422  000014c8  4be00000	jr	r31
  423  000014cc  54000000	nop
  424  000014d0          	.endproc _Putchar
  426  000014d0          	.proc _Printf
  427  000014d0          	.global _Printf
  428  000014d0          	_Printf:
  429  000014d0  44000201	trap	#0x201
  430  000014d4  4be00000	jr	r31
  431  000014d8  54000000	nop
  432  000014dc          	.endproc _Printf
  434  000014dc          	.proc _getpid
  435  000014dc          	.global _getpid
  436  000014dc          	_getpid:
  437  000014dc  44000431	trap	#0x431
  438  000014e0  4be00000	jr	r31
  439  000014e4  54000000	nop
  440  000014e8          	.endproc _getpid
  442  000014e8          	.proc _process_create
  443  000014e8          	.global _process_create
  444  000014e8          	_process_create:
  445  000014e8  44000432	trap	#0x432
  446  000014ec  4be00000	jr	r31
  447  000014f0  54000000	nop
  448  000014f4          	.endproc _process_create
  450  000014f4          	.proc _shmget
  451  000014f4          	.global _shmget
  452  000014f4          	_shmget:
  453  000014f4  44000440	trap	#0x440
  454  000014f8  4be00000	jr	r31
  455  000014fc  54000000	nop
  456  00001500          	.endproc _shmget
  458  00001500          	.proc _shmat
  459  00001500          	.global _shmat
  460  00001500          	_shmat:
  461  00001500  44000441	trap	#0x441
  462  00001504  4be00000	jr	r31
  463  00001508  54000000	nop
  464  0000150c          	.endproc _shmat
  466  0000150c          	.proc _sem_create
  467  0000150c          	.global _sem_create
  468  0000150c          	_sem_create:
  469  0000150c  44000450	trap	#0x450
  470  00001510  4be00000	jr	r31
  471  00001514  54000000	nop
  472  00001518          	.endproc _sem_create
  474  00001518          	.proc _sem_wait
  475  00001518          	.global _sem_wait
  476  00001518          	_sem_wait:
  477  00001518  44000451	trap	#0x451
  478  0000151c  4be00000	jr	r31
  479  00001520  54000000	nop
  480  00001524          	.endproc _sem_wait
  482  00001524          	.proc _sem_signal
  483  00001524          	.global _sem_signal
  484  00001524          	_sem_signal:
  485  00001524  44000452	trap	#0x452
  486  00001528  4be00000	jr	r31
  487  0000152c  54000000	nop
  488  00001530          	.endproc _sem_signal
  490  00001530          	.proc _lock_create
  491  00001530          	.global _lock_create
  492  00001530          	_lock_create:
  493  00001530  44000453	trap	#0x453
  494  00001534  4be00000	jr	r31
  495  00001538  54000000	nop
  496  0000153c          	.endproc _lock_create
  498  0000153c          	.proc _lock_acquire
  499  0000153c          	.global _lock_acquire
  500  0000153c          	_lock_acquire:
  501  0000153c  44000454	trap	#0x454
  502  00001540  4be00000	jr	r31
  503  00001544  54000000	nop
  504  00001548          	.endproc _lock_acquire
  506  00001548          	.proc _lock_release
  507  00001548          	.global _lock_release
  508  00001548          	_lock_release:
  509  00001548  44000455	trap	#0x455
  510  0000154c  4be00000	jr	r31
  511  00001550  54000000	nop
  512  00001554          	.endproc _lock_release
  514  00001554          	.proc _cond_create
  515  00001554          	.global _cond_create
  516  00001554          	_cond_create:
  517  00001554  44000456	trap	#0x456
  518  00001558  4be00000	jr	r31
  519  0000155c  54000000	nop
  520  00001560          	.endproc _cond_create
  522  00001560          	.proc _cond_wait
  523  00001560          	.global _cond_wait
  524  00001560          	_cond_wait:
  525  00001560  44000457	trap	#0x457
  526  00001564  4be00000	jr	r31
  527  00001568  54000000	nop
  528  0000156c          	.endproc _cond_wait
  530  0000156c          	.proc _cond_signal
  531  0000156c          	.global _cond_signal
  532  0000156c          	_cond_signal:
  533  0000156c  44000458	trap	#0x458
  534  00001570  4be00000	jr	r31
  535  00001574  54000000	nop
  536  00001578          	.endproc _cond_signal
  538  00001578          	.proc _cond_broadcast
  539  00001578          	.global _cond_broadcast
  540  00001578          	_cond_broadcast:
  541  00001578  44000459	trap	#0x459
  542  0000157c  4be00000	jr	r31
  543  00001580  54000000	nop
  544  00001584          	.endproc _cond_broadcast
  546  00001584          	.proc _Exit
  547  00001584          	.global _Exit
  548  00001584          	_Exit:
  549  00001584  44000500	trap	#0x500
  550  00001588  4be00000	jr	r31
  551  0000158c  54000000	nop
  552  00001590          	.endproc _Exit
  553                      ; Compiled by GCC
  555  00001590          	.align 2
  556  00001590          	.proc _isspace
  557  00001590          	.global _isspace
  558  00001590          	_isspace:
  559                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  560  00001590  afbefffc	sw	-4(r29),r30; push fp
  561  00001594  001df020	add	r30,r0,r29; fp = sp
  562  00001598  afbffff8	sw	-8(r29),r31; push ret addr
  563  0000159c  2fbd0018	subui	r29,r29,#24; alloc local storage
  564  000015a0  afa20000	sw	0(r29),r2
  565  000015a4  afa30004	sw	4(r29),r3
  566  000015a8  afa40008	sw	8(r29),r4
  567  000015ac  83c20003	lb	r2,3(r30)
  568  000015b0  20010000	addi	r1,r0,#0
  569  000015b4  304300ff	andi	r3,r2,#0x00ff
  570  000015b8  60640020	seqi	r4,r3,#32
  571  000015bc  1480002c	bnez	r4,L3_LF2
  572  000015c0  54000000	nop; delay slot nop
  573  000015c4  304300ff	andi	r3,r2,#0x00ff
  574  000015c8  60640009	seqi	r4,r3,#9
  575  000015cc  1480001c	bnez	r4,L3_LF2
  576  000015d0  54000000	nop; delay slot nop
  577  000015d4  304300ff	andi	r3,r2,#0x00ff
  578  000015d8  6064000a	seqi	r4,r3,#10
  579  000015dc  1480000c	bnez	r4,L3_LF2
  580  000015e0  54000000	nop; delay slot nop
  581  000015e4  08000008	j	L2_LF2
  582  000015e8  54000000	nop; delay slot nop
  583  000015ec          	L3_LF2:
  584  000015ec  20010001	addi	r1,r0,#1
  585  000015f0          	L2_LF2:
  586  000015f0  08000004	j	L1_LF2
  587  000015f4  54000000	nop; delay slot nop
  588  000015f8          	L1_LF2:
  589  000015f8  8fa20000	lw	r2,0(r29)
  590  000015fc  8fa30004	lw	r3,4(r29)
  591  00001600  8fa40008	lw	r4,8(r29)
  592  00001604  8fdffff8	lw	r31,-8(r30)
  593  00001608  001ee820	add	r29,r0,r30
  594  0000160c  8fdefffc	lw	r30,-4(r30)
  595  00001610  4be00000	jr	r31
  596  00001614  54000000	nop
  597  00001618          	.endproc _isspace
  598  00001618          	.align 2
  599  00001618          	.proc _isxdigit
  600  00001618          	.global _isxdigit
  601  00001618          	_isxdigit:
  602                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  603  00001618  afbefffc	sw	-4(r29),r30; push fp
  604  0000161c  001df020	add	r30,r0,r29; fp = sp
  605  00001620  afbffff8	sw	-8(r29),r31; push ret addr
  606  00001624  2fbd0018	subui	r29,r29,#24; alloc local storage
  607  00001628  afa20000	sw	0(r29),r2
  608  0000162c  afa30004	sw	4(r29),r3
  609  00001630  afa40008	sw	8(r29),r4
  610  00001634  83c20003	lb	r2,3(r30)
  611  00001638  20010000	addi	r1,r0,#0
  612  0000163c  304300ff	andi	r3,r2,#0x00ff
  613  00001640  6c64002f	sgtui	r4,r3,#47
  614  00001644  1080001c	beqz	r4,L7_LF2
  615  00001648  54000000	nop; delay slot nop
  616  0000164c  304300ff	andi	r3,r2,#0x00ff
  617  00001650  70640039	sleui	r4,r3,#57
  618  00001654  1480005c	bnez	r4,L6_LF2
  619  00001658  54000000	nop; delay slot nop
  620  0000165c  08000004	j	L7_LF2
  621  00001660  54000000	nop; delay slot nop
  622  00001664          	L7_LF2:
  623  00001664  304300ff	andi	r3,r2,#0x00ff
  624  00001668  6c640060	sgtui	r4,r3,#96
  625  0000166c  1080001c	beqz	r4,L8_LF2
  626  00001670  54000000	nop; delay slot nop
  627  00001674  304300ff	andi	r3,r2,#0x00ff
  628  00001678  70640066	sleui	r4,r3,#102
  629  0000167c  14800034	bnez	r4,L6_LF2
  630  00001680  54000000	nop; delay slot nop
  631  00001684  08000004	j	L8_LF2
  632  00001688  54000000	nop; delay slot nop
  633  0000168c          	L8_LF2:
  634  0000168c  304300ff	andi	r3,r2,#0x00ff
  635  00001690  6c640040	sgtui	r4,r3,#64
  636  00001694  10800020	beqz	r4,L5_LF2
  637  00001698  54000000	nop; delay slot nop
  638  0000169c  304300ff	andi	r3,r2,#0x00ff
  639  000016a0  70640041	sleui	r4,r3,#65
  640  000016a4  1480000c	bnez	r4,L6_LF2
  641  000016a8  54000000	nop; delay slot nop
  642  000016ac  08000008	j	L5_LF2
  643  000016b0  54000000	nop; delay slot nop
  644  000016b4          	L6_LF2:
  645  000016b4  20010001	addi	r1,r0,#1
  646  000016b8          	L5_LF2:
  647  000016b8  08000004	j	L4_LF2
  648  000016bc  54000000	nop; delay slot nop
  649  000016c0          	L4_LF2:
  650  000016c0  8fa20000	lw	r2,0(r29)
  651  000016c4  8fa30004	lw	r3,4(r29)
  652  000016c8  8fa40008	lw	r4,8(r29)
  653  000016cc  8fdffff8	lw	r31,-8(r30)
  654  000016d0  001ee820	add	r29,r0,r30
  655  000016d4  8fdefffc	lw	r30,-4(r30)
  656  000016d8  4be00000	jr	r31
  657  000016dc  54000000	nop
  658  000016e0          	.endproc _isxdigit
  659  000016e0          	.align 2
  660  000016e0          	.proc _dstrcpy
  661  000016e0          	.global _dstrcpy
  662  000016e0          	_dstrcpy:
  663                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  664  000016e0  afbefffc	sw	-4(r29),r30; push fp
  665  000016e4  001df020	add	r30,r0,r29; fp = sp
  666  000016e8  afbffff8	sw	-8(r29),r31; push ret addr
  667  000016ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  668  000016f0  afa20000	sw	0(r29),r2
  669  000016f4  afa30004	sw	4(r29),r3
  670  000016f8  8fc10000	lw	r1,(r30)
  671  000016fc  afc1fff4	sw	-12(r30),r1
  672  00001700          	L10_LF2:
  673  00001700  8fc10000	lw	r1,(r30)
  674  00001704  20220001	addi	r2,r1,#1
  675  00001708  afc20000	sw	(r30),r2
  676  0000170c  8fc20004	lw	r2,4(r30)
  677  00001710  20430001	addi	r3,r2,#1
  678  00001714  afc30004	sw	4(r30),r3
  679  00001718  80420000	lb	r2,(r2)
  680  0000171c  a0220000	sb	(r1),r2
  681  00001720  a3c2fff3	sb	-13(r30),r2
  682  00001724          	L12_LF2:
  683  00001724  93c1fff3	lbu	r1,-13(r30)
  684  00001728  64220000	snei	r2,r1,#0
  685  0000172c  1440000c	bnez	r2,L13_LF2
  686  00001730  54000000	nop; delay slot nop
  687  00001734  0800000c	j	L11_LF2
  688  00001738  54000000	nop; delay slot nop
  689  0000173c          	L13_LF2:
  690  0000173c  0bffffc0	j	L10_LF2
  691  00001740  54000000	nop; delay slot nop
  692  00001744          	L11_LF2:
  693  00001744  8fc1fff4	lw	r1,-12(r30)
  694  00001748  08000004	j	L9_LF2
  695  0000174c  54000000	nop; delay slot nop
  696  00001750          	L9_LF2:
  697  00001750  8fa20000	lw	r2,0(r29)
  698  00001754  8fa30004	lw	r3,4(r29)
  699  00001758  8fdffff8	lw	r31,-8(r30)
  700  0000175c  001ee820	add	r29,r0,r30
  701  00001760  8fdefffc	lw	r30,-4(r30)
  702  00001764  4be00000	jr	r31
  703  00001768  54000000	nop
  704  0000176c          	.endproc _dstrcpy
  705  0000176c          	.align 2
  706  0000176c          	.proc _dstrncpy
  707  0000176c          	.global _dstrncpy
  708  0000176c          	_dstrncpy:
  709                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  710  0000176c  afbefffc	sw	-4(r29),r30; push fp
  711  00001770  001df020	add	r30,r0,r29; fp = sp
  712  00001774  afbffff8	sw	-8(r29),r31; push ret addr
  713  00001778  2fbd0018	subui	r29,r29,#24; alloc local storage
  714  0000177c  afa20000	sw	0(r29),r2
  715  00001780  afa30004	sw	4(r29),r3
  716  00001784  8fc10000	lw	r1,(r30)
  717  00001788  afc1fff4	sw	-12(r30),r1
  718  0000178c          	L15_LF2:
  719  0000178c  8fc10008	lw	r1,8(r30)
  720  00001790  2022ffff	addi	r2,r1,#-1
  721  00001794  afc20008	sw	8(r30),r2
  722  00001798  70210000	slei	r1,r1,#0
  723  0000179c  1020000c	beqz	r1,L18_LF2
  724  000017a0  54000000	nop; delay slot nop
  725  000017a4  08000048	j	L16_LF2
  726  000017a8  54000000	nop; delay slot nop
  727  000017ac          	L18_LF2:
  728  000017ac  8fc10000	lw	r1,(r30)
  729  000017b0  20220001	addi	r2,r1,#1
  730  000017b4  afc20000	sw	(r30),r2
  731  000017b8  8fc20004	lw	r2,4(r30)
  732  000017bc  20430001	addi	r3,r2,#1
  733  000017c0  afc30004	sw	4(r30),r3
  734  000017c4  80420000	lb	r2,(r2)
  735  000017c8  a0220000	sb	(r1),r2
  736  000017cc  a3c2fff3	sb	-13(r30),r2
  737  000017d0          	L17_LF2:
  738  000017d0  93c1fff3	lbu	r1,-13(r30)
  739  000017d4  64220000	snei	r2,r1,#0
  740  000017d8  1440000c	bnez	r2,L19_LF2
  741  000017dc  54000000	nop; delay slot nop
  742  000017e0  0800000c	j	L16_LF2
  743  000017e4  54000000	nop; delay slot nop
  744  000017e8          	L19_LF2:
  745  000017e8  0bffffa0	j	L15_LF2
  746  000017ec  54000000	nop; delay slot nop
  747  000017f0          	L16_LF2:
  748  000017f0  8fc1fff4	lw	r1,-12(r30)
  749  000017f4  08000004	j	L14_LF2
  750  000017f8  54000000	nop; delay slot nop
  751  000017fc          	L14_LF2:
  752  000017fc  8fa20000	lw	r2,0(r29)
  753  00001800  8fa30004	lw	r3,4(r29)
  754  00001804  8fdffff8	lw	r31,-8(r30)
  755  00001808  001ee820	add	r29,r0,r30
  756  0000180c  8fdefffc	lw	r30,-4(r30)
  757  00001810  4be00000	jr	r31
  758  00001814  54000000	nop
  759  00001818          	.endproc _dstrncpy
  760  00001818          	.align 2
  761  00001818          	.proc _dstrcat
  762  00001818          	.global _dstrcat
  763  00001818          	_dstrcat:
  764                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  765  00001818  afbefffc	sw	-4(r29),r30; push fp
  766  0000181c  001df020	add	r30,r0,r29; fp = sp
  767  00001820  afbffff8	sw	-8(r29),r31; push ret addr
  768  00001824  2fbd0018	subui	r29,r29,#24; alloc local storage
  769  00001828  afa20000	sw	0(r29),r2
  770  0000182c  8fc10000	lw	r1,(r30)
  771  00001830  afc1fff4	sw	-12(r30),r1
  772  00001834          	L21_LF2:
  773  00001834  8fc10000	lw	r1,(r30)
  774  00001838  90220000	lbu	r2,(r1)
  775  0000183c  64410000	snei	r1,r2,#0
  776  00001840  1420000c	bnez	r1,L23_LF2
  777  00001844  54000000	nop; delay slot nop
  778  00001848  0800001c	j	L22_LF2
  779  0000184c  54000000	nop; delay slot nop
  780  00001850          	L23_LF2:
  781  00001850  8fc20000	lw	r2,(r30)
  782  00001854  20410001	addi	r1,r2,#1
  783  00001858  00011020	add	r2,r0,r1
  784  0000185c  afc20000	sw	(r30),r2
  785  00001860  0bffffd0	j	L21_LF2
  786  00001864  54000000	nop; delay slot nop
  787  00001868          	L22_LF2:
  788  00001868  23bdfff8	addi	r29,r29,#-8
  789  0000186c  001d0820	add	r1,r0,r29
  790  00001870  8fc20000	lw	r2,(r30)
  791  00001874  ac220000	sw	(r1),r2
  792  00001878  8fc20004	lw	r2,4(r30)
  793  0000187c  ac220004	sw	4(r1),r2
  794  00001880  0ffffe5c	jal	_dstrcpy
  795  00001884  54000000	nop; delay slot nop
  796  00001888  23bd0008	addi	r29,r29,#8
  797  0000188c  8fc1fff4	lw	r1,-12(r30)
  798  00001890  08000004	j	L20_LF2
  799  00001894  54000000	nop; delay slot nop
  800  00001898          	L20_LF2:
  801  00001898  8fa20000	lw	r2,0(r29)
  802  0000189c  8fdffff8	lw	r31,-8(r30)
  803  000018a0  001ee820	add	r29,r0,r30
  804  000018a4  8fdefffc	lw	r30,-4(r30)
  805  000018a8  4be00000	jr	r31
  806  000018ac  54000000	nop
  807  000018b0          	.endproc _dstrcat
  808  000018b0          	.align 2
  809  000018b0          	.proc _dstrncmp
  810  000018b0          	.global _dstrncmp
  811  000018b0          	_dstrncmp:
  812                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  813  000018b0  afbefffc	sw	-4(r29),r30; push fp
  814  000018b4  001df020	add	r30,r0,r29; fp = sp
  815  000018b8  afbffff8	sw	-8(r29),r31; push ret addr
  816  000018bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  817  000018c0  afa20000	sw	0(r29),r2
  818  000018c4  afa30004	sw	4(r29),r3
  819  000018c8  54000000	nop
  820  000018cc  20010000	addi	r1,r0,#0
  821  000018d0  afc1fff4	sw	-12(r30),r1
  822  000018d4          	L25_LF2:
  823  000018d4  8fc1fff4	lw	r1,-12(r30)
  824  000018d8  8fc20008	lw	r2,8(r30)
  825  000018dc  0022082a	slt	r1,r1,r2
  826  000018e0  1420000c	bnez	r1,L28_LF2
  827  000018e4  54000000	nop; delay slot nop
  828  000018e8  08000088	j	L26_LF2
  829  000018ec  54000000	nop; delay slot nop
  830  000018f0          	L28_LF2:
  831  000018f0  8fc10004	lw	r1,4(r30)
  832  000018f4  90220000	lbu	r2,(r1)
  833  000018f8  64410000	snei	r1,r2,#0
  834  000018fc  14200018	bnez	r1,L29_LF2
  835  00001900  54000000	nop; delay slot nop
  836  00001904  20010000	addi	r1,r0,#0
  837  00001908  080000d8	j	L24_LF2
  838  0000190c  54000000	nop; delay slot nop
  839  00001910  08000028	j	L30_LF2
  840  00001914  54000000	nop; delay slot nop
  841  00001918          	L29_LF2:
  842  00001918  8fc10000	lw	r1,(r30)
  843  0000191c  8fc20004	lw	r2,4(r30)
  844  00001920  90210000	lbu	r1,(r1)
  845  00001924  90420000	lbu	r2,(r2)
  846  00001928  00220829	sne	r1,r1,r2
  847  0000192c  1020000c	beqz	r1,L30_LF2
  848  00001930  54000000	nop; delay slot nop
  849  00001934  0800003c	j	L26_LF2
  850  00001938  54000000	nop; delay slot nop
  851  0000193c          	L31_LF2:
  852  0000193c          	L30_LF2:
  853  0000193c  8fc20000	lw	r2,(r30)
  854  00001940  20410001	addi	r1,r2,#1
  855  00001944  00011020	add	r2,r0,r1
  856  00001948  afc20000	sw	(r30),r2
  857  0000194c  8fc20004	lw	r2,4(r30)
  858  00001950  20410001	addi	r1,r2,#1
  859  00001954  00011020	add	r2,r0,r1
  860  00001958  afc20004	sw	4(r30),r2
  861  0000195c          	L27_LF2:
  862  0000195c  8fc2fff4	lw	r2,-12(r30)
  863  00001960  20410001	addi	r1,r2,#1
  864  00001964  00011020	add	r2,r0,r1
  865  00001968  afc2fff4	sw	-12(r30),r2
  866  0000196c  0bffff64	j	L25_LF2
  867  00001970  54000000	nop; delay slot nop
  868  00001974          	L26_LF2:
  869  00001974  8fc1fff4	lw	r1,-12(r30)
  870  00001978  8fc20008	lw	r2,8(r30)
  871  0000197c  00220828	seq	r1,r1,r2
  872  00001980  10200018	beqz	r1,L32_LF2
  873  00001984  54000000	nop; delay slot nop
  874  00001988  20010000	addi	r1,r0,#0
  875  0000198c  08000054	j	L24_LF2
  876  00001990  54000000	nop; delay slot nop
  877  00001994  0800004c	j	L33_LF2
  878  00001998  54000000	nop; delay slot nop
  879  0000199c          	L32_LF2:
  880  0000199c  8fc20000	lw	r2,(r30)
  881  000019a0  90410000	lbu	r1,(r2)
  882  000019a4  8fc20004	lw	r2,4(r30)
  883  000019a8  90430000	lbu	r3,(r2)
  884  000019ac  00230822	sub	r1,r1,r3
  885  000019b0  74220000	sgei	r2,r1,#0
  886  000019b4  10400020	beqz	r2,L34_LF2
  887  000019b8  54000000	nop; delay slot nop
  888  000019bc  8fc10000	lw	r1,(r30)
  889  000019c0  8fc20004	lw	r2,4(r30)
  890  000019c4  90210000	lbu	r1,(r1)
  891  000019c8  90420000	lbu	r2,(r2)
  892  000019cc  00220829	sne	r1,r1,r2
  893  000019d0  08000008	j	L35_LF2
  894  000019d4  54000000	nop; delay slot nop
  895  000019d8          	L34_LF2:
  896  000019d8  2001ffff	addi	r1,r0,#-1
  897  000019dc          	L35_LF2:
  898  000019dc  08000004	j	L24_LF2
  899  000019e0  54000000	nop; delay slot nop
  900  000019e4          	L33_LF2:
  901  000019e4          	L24_LF2:
  902  000019e4  8fa20000	lw	r2,0(r29)
  903  000019e8  8fa30004	lw	r3,4(r29)
  904  000019ec  8fdffff8	lw	r31,-8(r30)
  905  000019f0  001ee820	add	r29,r0,r30
  906  000019f4  8fdefffc	lw	r30,-4(r30)
  907  000019f8  4be00000	jr	r31
  908  000019fc  54000000	nop
  909  00001a00          	.endproc _dstrncmp
  910  00001a00          	.align 2
  911  00001a00          	.proc _dstrlen
  912  00001a00          	.global _dstrlen
  913  00001a00          	_dstrlen:
  914                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  915  00001a00  afbefffc	sw	-4(r29),r30; push fp
  916  00001a04  001df020	add	r30,r0,r29; fp = sp
  917  00001a08  afbffff8	sw	-8(r29),r31; push ret addr
  918  00001a0c  2fbd0018	subui	r29,r29,#24; alloc local storage
  919  00001a10  afa20000	sw	0(r29),r2
  920  00001a14  20010000	addi	r1,r0,#0
  921  00001a18  afc1fff4	sw	-12(r30),r1
  922  00001a1c          	L37_LF2:
  923  00001a1c  8fc10000	lw	r1,(r30)
  924  00001a20  20220001	addi	r2,r1,#1
  925  00001a24  afc20000	sw	(r30),r2
  926  00001a28  90210000	lbu	r1,(r1)
  927  00001a2c  64220000	snei	r2,r1,#0
  928  00001a30  1440000c	bnez	r2,L39_LF2
  929  00001a34  54000000	nop; delay slot nop
  930  00001a38  0800001c	j	L38_LF2
  931  00001a3c  54000000	nop; delay slot nop
  932  00001a40          	L39_LF2:
  933  00001a40  8fc2fff4	lw	r2,-12(r30)
  934  00001a44  20410001	addi	r1,r2,#1
  935  00001a48  00011020	add	r2,r0,r1
  936  00001a4c  afc2fff4	sw	-12(r30),r2
  937  00001a50  0bffffc8	j	L37_LF2
  938  00001a54  54000000	nop; delay slot nop
  939  00001a58          	L38_LF2:
  940  00001a58  8fc1fff4	lw	r1,-12(r30)
  941  00001a5c  08000004	j	L36_LF2
  942  00001a60  54000000	nop; delay slot nop
  943  00001a64          	L36_LF2:
  944  00001a64  8fa20000	lw	r2,0(r29)
  945  00001a68  8fdffff8	lw	r31,-8(r30)
  946  00001a6c  001ee820	add	r29,r0,r30
  947  00001a70  8fdefffc	lw	r30,-4(r30)
  948  00001a74  4be00000	jr	r31
  949  00001a78  54000000	nop
  950  00001a7c          	.endproc _dstrlen
  951  00001a7c          	.align 2
  952  00001a7c          	.proc _dstrstr
  953  00001a7c          	.global _dstrstr
  954  00001a7c          	_dstrstr:
  955                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  956  00001a7c  afbefffc	sw	-4(r29),r30; push fp
  957  00001a80  001df020	add	r30,r0,r29; fp = sp
  958  00001a84  afbffff8	sw	-8(r29),r31; push ret addr
  959  00001a88  2fbd0018	subui	r29,r29,#24; alloc local storage
  960  00001a8c  afa20000	sw	0(r29),r2
  961  00001a90  23bdfff8	addi	r29,r29,#-8
  962  00001a94  001d0820	add	r1,r0,r29
  963  00001a98  8fc20004	lw	r2,4(r30)
  964  00001a9c  ac220000	sw	(r1),r2
  965  00001aa0  0fffff5c	jal	_dstrlen
  966  00001aa4  54000000	nop; delay slot nop
  967  00001aa8  23bd0008	addi	r29,r29,#8
  968  00001aac  afc1fff4	sw	-12(r30),r1
  969  00001ab0          	L41_LF2:
  970  00001ab0  8fc10000	lw	r1,(r30)
  971  00001ab4  90220000	lbu	r2,(r1)
  972  00001ab8  64410000	snei	r1,r2,#0
  973  00001abc  1420000c	bnez	r1,L43_LF2
  974  00001ac0  54000000	nop; delay slot nop
  975  00001ac4  08000060	j	L42_LF2
  976  00001ac8  54000000	nop; delay slot nop
  977  00001acc          	L43_LF2:
  978  00001acc  23bdfff0	addi	r29,r29,#-16
  979  00001ad0  001d0820	add	r1,r0,r29
  980  00001ad4  8fc20000	lw	r2,(r30)
  981  00001ad8  ac220000	sw	(r1),r2
  982  00001adc  8fc20004	lw	r2,4(r30)
  983  00001ae0  ac220004	sw	4(r1),r2
  984  00001ae4  8fc2fff4	lw	r2,-12(r30)
  985  00001ae8  ac220008	sw	8(r1),r2
  986  00001aec  0ffffdc0	jal	_dstrncmp
  987  00001af0  54000000	nop; delay slot nop
  988  00001af4  23bd0010	addi	r29,r29,#16
  989  00001af8  64220000	snei	r2,r1,#0
  990  00001afc  14400010	bnez	r2,L44_LF2
  991  00001b00  54000000	nop; delay slot nop
  992  00001b04  8fc10000	lw	r1,(r30)
  993  00001b08  08000028	j	L40_LF2
  994  00001b0c  54000000	nop; delay slot nop
  995  00001b10          	L44_LF2:
  996  00001b10  8fc20000	lw	r2,(r30)
  997  00001b14  20410001	addi	r1,r2,#1
  998  00001b18  00011020	add	r2,r0,r1
  999  00001b1c  afc20000	sw	(r30),r2
 1000  00001b20  0bffff8c	j	L41_LF2
 1001  00001b24  54000000	nop; delay slot nop
 1002  00001b28          	L42_LF2:
 1003  00001b28  20010000	addi	r1,r0,#0
 1004  00001b2c  08000004	j	L40_LF2
 1005  00001b30  54000000	nop; delay slot nop
 1006  00001b34          	L40_LF2:
 1007  00001b34  8fa20000	lw	r2,0(r29)
 1008  00001b38  8fdffff8	lw	r31,-8(r30)
 1009  00001b3c  001ee820	add	r29,r0,r30
 1010  00001b40  8fdefffc	lw	r30,-4(r30)
 1011  00001b44  4be00000	jr	r31
 1012  00001b48  54000000	nop
 1013  00001b4c          	.endproc _dstrstr
 1014  00001b4c          	.align 2
 1015  00001b4c          	.proc _dmindex
 1016  00001b4c          	.global _dmindex
 1017  00001b4c          	_dmindex:
 1018                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1019  00001b4c  afbefffc	sw	-4(r29),r30; push fp
 1020  00001b50  001df020	add	r30,r0,r29; fp = sp
 1021  00001b54  afbffff8	sw	-8(r29),r31; push ret addr
 1022  00001b58  2fbd0018	subui	r29,r29,#24; alloc local storage
 1023  00001b5c  afa20000	sw	0(r29),r2
 1024  00001b60  54000000	nop
 1025  00001b64          	L46_LF2:
 1026  00001b64  8fc10000	lw	r1,(r30)
 1027  00001b68  90220000	lbu	r2,(r1)
 1028  00001b6c  64410000	snei	r1,r2,#0
 1029  00001b70  1420000c	bnez	r1,L48_LF2
 1030  00001b74  54000000	nop; delay slot nop
 1031  00001b78  08000070	j	L47_LF2
 1032  00001b7c  54000000	nop; delay slot nop
 1033  00001b80          	L48_LF2:
 1034  00001b80  8fc10004	lw	r1,4(r30)
 1035  00001b84  afc1fff4	sw	-12(r30),r1
 1036  00001b88          	L49_LF2:
 1037  00001b88  8fc1fff4	lw	r1,-12(r30)
 1038  00001b8c  90220000	lbu	r2,(r1)
 1039  00001b90  64410000	snei	r1,r2,#0
 1040  00001b94  1420000c	bnez	r1,L52_LF2
 1041  00001b98  54000000	nop; delay slot nop
 1042  00001b9c  08000044	j	L50_LF2
 1043  00001ba0  54000000	nop; delay slot nop
 1044  00001ba4          	L52_LF2:
 1045  00001ba4  8fc10000	lw	r1,(r30)
 1046  00001ba8  8fc2fff4	lw	r2,-12(r30)
 1047  00001bac  90210000	lbu	r1,(r1)
 1048  00001bb0  90420000	lbu	r2,(r2)
 1049  00001bb4  00220828	seq	r1,r1,r2
 1050  00001bb8  10200010	beqz	r1,L51_LF2
 1051  00001bbc  54000000	nop; delay slot nop
 1052  00001bc0  8fc10000	lw	r1,(r30)
 1053  00001bc4  08000030	j	L45_LF2
 1054  00001bc8  54000000	nop; delay slot nop
 1055  00001bcc          	L53_LF2:
 1056  00001bcc          	L51_LF2:
 1057  00001bcc  8fc2fff4	lw	r2,-12(r30)
 1058  00001bd0  20410001	addi	r1,r2,#1
 1059  00001bd4  00011020	add	r2,r0,r1
 1060  00001bd8  afc2fff4	sw	-12(r30),r2
 1061  00001bdc  0bffffa8	j	L49_LF2
 1062  00001be0  54000000	nop; delay slot nop
 1063  00001be4          	L50_LF2:
 1064  00001be4  0bffff7c	j	L46_LF2
 1065  00001be8  54000000	nop; delay slot nop
 1066  00001bec          	L47_LF2:
 1067  00001bec  20010000	addi	r1,r0,#0
 1068  00001bf0  08000004	j	L45_LF2
 1069  00001bf4  54000000	nop; delay slot nop
 1070  00001bf8          	L45_LF2:
 1071  00001bf8  8fa20000	lw	r2,0(r29)
 1072  00001bfc  8fdffff8	lw	r31,-8(r30)
 1073  00001c00  001ee820	add	r29,r0,r30
 1074  00001c04  8fdefffc	lw	r30,-4(r30)
 1075  00001c08  4be00000	jr	r31
 1076  00001c0c  54000000	nop
 1077  00001c10          	.endproc _dmindex
 1078  00001c10          	.align 2
 1079  00001c10          	.proc _dindex
 1080  00001c10          	.global _dindex
 1081  00001c10          	_dindex:
 1082                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1083  00001c10  afbefffc	sw	-4(r29),r30; push fp
 1084  00001c14  001df020	add	r30,r0,r29; fp = sp
 1085  00001c18  afbffff8	sw	-8(r29),r31; push ret addr
 1086  00001c1c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1087  00001c20  afa20000	sw	0(r29),r2
 1088  00001c24  54000000	nop
 1089  00001c28          	L55_LF2:
 1090  00001c28  8fc10000	lw	r1,(r30)
 1091  00001c2c  90220000	lbu	r2,(r1)
 1092  00001c30  64410000	snei	r1,r2,#0
 1093  00001c34  1420000c	bnez	r1,L57_LF2
 1094  00001c38  54000000	nop; delay slot nop
 1095  00001c3c  08000040	j	L56_LF2
 1096  00001c40  54000000	nop; delay slot nop
 1097  00001c44          	L57_LF2:
 1098  00001c44  8fc10000	lw	r1,(r30)
 1099  00001c48  90220000	lbu	r2,(r1)
 1100  00001c4c  8fc10004	lw	r1,4(r30)
 1101  00001c50  00411028	seq	r2,r2,r1
 1102  00001c54  10400010	beqz	r2,L58_LF2
 1103  00001c58  54000000	nop; delay slot nop
 1104  00001c5c  8fc10000	lw	r1,(r30)
 1105  00001c60  08000028	j	L54_LF2
 1106  00001c64  54000000	nop; delay slot nop
 1107  00001c68          	L58_LF2:
 1108  00001c68  8fc20000	lw	r2,(r30)
 1109  00001c6c  20410001	addi	r1,r2,#1
 1110  00001c70  00011020	add	r2,r0,r1
 1111  00001c74  afc20000	sw	(r30),r2
 1112  00001c78  0bffffac	j	L55_LF2
 1113  00001c7c  54000000	nop; delay slot nop
 1114  00001c80          	L56_LF2:
 1115  00001c80  20010000	addi	r1,r0,#0
 1116  00001c84  08000004	j	L54_LF2
 1117  00001c88  54000000	nop; delay slot nop
 1118  00001c8c          	L54_LF2:
 1119  00001c8c  8fa20000	lw	r2,0(r29)
 1120  00001c90  8fdffff8	lw	r31,-8(r30)
 1121  00001c94  001ee820	add	r29,r0,r30
 1122  00001c98  8fdefffc	lw	r30,-4(r30)
 1123  00001c9c  4be00000	jr	r31
 1124  00001ca0  54000000	nop
 1125  00001ca4          	.endproc _dindex
 1126  00001ca4          	.align 2
 1127  00001ca4          	.proc _ditoa
 1128  00001ca4          	.global _ditoa
 1129  00001ca4          	_ditoa:
 1130                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1131  00001ca4  afbefffc	sw	-4(r29),r30; push fp
 1132  00001ca8  001df020	add	r30,r0,r29; fp = sp
 1133  00001cac  afbffff8	sw	-8(r29),r31; push ret addr
 1134  00001cb0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1135  00001cb4  afa20000	sw	0(r29),r2
 1136  00001cb8  afa30004	sw	4(r29),r3
 1137  00001cbc  8fc10000	lw	r1,(r30)
 1138  00001cc0  68220000	slti	r2,r1,#0
 1139  00001cc4  1040002c	beqz	r2,L60_LF2
 1140  00001cc8  54000000	nop; delay slot nop
 1141  00001ccc  8fc10004	lw	r1,4(r30)
 1142  00001cd0  20220001	addi	r2,r1,#1
 1143  00001cd4  afc20004	sw	4(r30),r2
 1144  00001cd8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1145  00001cdc  a0220000	sb	(r1),r2
 1146  00001ce0  8fc10000	lw	r1,(r30)
 1147  00001ce4  00011022	sub	r2,r0,r1
 1148  00001ce8  afc20000	sw	(r30),r2
 1149  00001cec  08000118	j	L61_LF2
 1150  00001cf0  54000000	nop; delay slot nop
 1151  00001cf4          	L60_LF2:
 1152  00001cf4  8fc10000	lw	r1,(r30)
 1153  00001cf8  64220000	snei	r2,r1,#0
 1154  00001cfc  14400020	bnez	r2,L62_LF2
 1155  00001d00  54000000	nop; delay slot nop
 1156  00001d04  8fc10004	lw	r1,4(r30)
 1157  00001d08  20220001	addi	r2,r1,#1
 1158  00001d0c  afc20004	sw	4(r30),r2
 1159  00001d10  20020030	addi	r2,r0,(#0x30)&0xff
 1160  00001d14  a0220000	sb	(r1),r2
 1161  00001d18  080000ec	j	L61_LF2
 1162  00001d1c  54000000	nop; delay slot nop
 1163  00001d20          	L62_LF2:
 1164  00001d20  20010001	addi	r1,r0,#1
 1165  00001d24  afc1fff4	sw	-12(r30),r1
 1166  00001d28          	L64_LF2:
 1167  00001d28  8fc1fff4	lw	r1,-12(r30)
 1168  00001d2c  8fc20000	lw	r2,(r30)
 1169  00001d30  0022082c	sle	r1,r1,r2
 1170  00001d34  1420000c	bnez	r1,L66_LF2
 1171  00001d38  54000000	nop; delay slot nop
 1172  00001d3c  08000024	j	L65_LF2
 1173  00001d40  54000000	nop; delay slot nop
 1174  00001d44          	L67_LF2:
 1175  00001d44          	L66_LF2:
 1176  00001d44  8fc1fff4	lw	r1,-12(r30)
 1177  00001d48  00011820	add	r3,r0,r1
 1178  00001d4c  50620002	slli	r2,r3,#0x2
 1179  00001d50  00411020	add	r2,r2,r1
 1180  00001d54  50410001	slli	r1,r2,#0x1
 1181  00001d58  afc1fff4	sw	-12(r30),r1
 1182  00001d5c  0bffffc8	j	L64_LF2
 1183  00001d60  54000000	nop; delay slot nop
 1184  00001d64          	L65_LF2:
 1185  00001d64  54000000	nop
 1186  00001d68          	L68_LF2:
 1187  00001d68  8fc1fff4	lw	r1,-12(r30)
 1188  00001d6c  2002000a	addi	r2,r0,#10
 1189  00001d70  00200035	movi2fp	f0,r1
 1190  00001d74  00400835	movi2fp	f1,r2
 1191  00001d78  0401000f	div	f0,f0,f1
 1192  00001d7c  00000834	movfp2i	r1,f0
 1193  00001d80  afc1fff4	sw	-12(r30),r1
 1194  00001d84  8fc10004	lw	r1,4(r30)
 1195  00001d88  20220001	addi	r2,r1,#1
 1196  00001d8c  afc20004	sw	4(r30),r2
 1197  00001d90  8fc20000	lw	r2,(r30)
 1198  00001d94  8fc3fff4	lw	r3,-12(r30)
 1199  00001d98  00400035	movi2fp	f0,r2
 1200  00001d9c  00600835	movi2fp	f1,r3
 1201  00001da0  0401000f	div	f0,f0,f1
 1202  00001da4  00001034	movfp2i	r2,f0
 1203  00001da8  00021820	add	r3,r0,r2
 1204  00001dac  20620030	addi	r2,r3,#48
 1205  00001db0  a0220000	sb	(r1),r2
 1206  00001db4  8fc10000	lw	r1,(r30)
 1207  00001db8  8fc3fff4	lw	r3,-12(r30)
 1208  00001dbc  00200035	movi2fp	f0,r1
 1209  00001dc0  00600835	movi2fp	f1,r3
 1210  00001dc4  0401000f	div	f0,f0,f1
 1211  00001dc8  00001034	movfp2i	r2,f0
 1212  00001dcc  8fc3fff4	lw	r3,-12(r30)
 1213  00001dd0  00400035	movi2fp	f0,r2
 1214  00001dd4  00600835	movi2fp	f1,r3
 1215  00001dd8  0401000e	mult	f0,f0,f1
 1216  00001ddc  00001034	movfp2i	r2,f0
 1217  00001de0  00220822	sub	r1,r1,r2
 1218  00001de4  afc10000	sw	(r30),r1
 1219  00001de8          	L70_LF2:
 1220  00001de8  8fc1fff4	lw	r1,-12(r30)
 1221  00001dec  6c220001	sgti	r2,r1,#1
 1222  00001df0  1440000c	bnez	r2,L71_LF2
 1223  00001df4  54000000	nop; delay slot nop
 1224  00001df8  0800000c	j	L61_LF2
 1225  00001dfc  54000000	nop; delay slot nop
 1226  00001e00          	L71_LF2:
 1227  00001e00  0bffff64	j	L68_LF2
 1228  00001e04  54000000	nop; delay slot nop
 1229  00001e08          	L69_LF2:
 1230  00001e08          	L63_LF2:
 1231  00001e08          	L61_LF2:
 1232  00001e08  8fc10004	lw	r1,4(r30)
 1233  00001e0c  20020000	addi	r2,r0,(#0x0)&0xff
 1234  00001e10  a0220000	sb	(r1),r2
 1235  00001e14          	L59_LF2:
 1236  00001e14  8fa20000	lw	r2,0(r29)
 1237  00001e18  8fa30004	lw	r3,4(r29)
 1238  00001e1c  8fdffff8	lw	r31,-8(r30)
 1239  00001e20  001ee820	add	r29,r0,r30
 1240  00001e24  8fdefffc	lw	r30,-4(r30)
 1241  00001e28  4be00000	jr	r31
 1242  00001e2c  54000000	nop
 1243  00001e30          	.endproc _ditoa
 1244  00001e30          	.align 2
 1245  00001e30          	.proc _dstrtol
 1246  00001e30          	.global _dstrtol
 1247  00001e30          	_dstrtol:
 1248                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1249  00001e30  afbefffc	sw	-4(r29),r30; push fp
 1250  00001e34  001df020	add	r30,r0,r29; fp = sp
 1251  00001e38  afbffff8	sw	-8(r29),r31; push ret addr
 1252  00001e3c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1253  00001e40  afa20000	sw	0(r29),r2
 1254  00001e44  20010000	addi	r1,r0,#0
 1255  00001e48  afc1fff4	sw	-12(r30),r1
 1256  00001e4c          	L73_LF2:
 1257  00001e4c  8fc10000	lw	r1,(r30)
 1258  00001e50  90220000	lbu	r2,(r1)
 1259  00001e54  60410020	seqi	r1,r2,#32
 1260  00001e58  14200034	bnez	r1,L75_LF2
 1261  00001e5c  54000000	nop; delay slot nop
 1262  00001e60  8fc10000	lw	r1,(r30)
 1263  00001e64  90220000	lbu	r2,(r1)
 1264  00001e68  60410009	seqi	r1,r2,#9
 1265  00001e6c  14200020	bnez	r1,L75_LF2
 1266  00001e70  54000000	nop; delay slot nop
 1267  00001e74  8fc10000	lw	r1,(r30)
 1268  00001e78  90220000	lbu	r2,(r1)
 1269  00001e7c  6041000a	seqi	r1,r2,#10
 1270  00001e80  1420000c	bnez	r1,L75_LF2
 1271  00001e84  54000000	nop; delay slot nop
 1272  00001e88  0800001c	j	L74_LF2
 1273  00001e8c  54000000	nop; delay slot nop
 1274  00001e90          	L75_LF2:
 1275  00001e90  8fc20000	lw	r2,(r30)
 1276  00001e94  20410001	addi	r1,r2,#1
 1277  00001e98  00011020	add	r2,r0,r1
 1278  00001e9c  afc20000	sw	(r30),r2
 1279  00001ea0  0bffffa8	j	L73_LF2
 1280  00001ea4  54000000	nop; delay slot nop
 1281  00001ea8          	L74_LF2:
 1282  00001ea8  8fc10004	lw	r1,4(r30)
 1283  00001eac  64220000	snei	r2,r1,#0
 1284  00001eb0  10400010	beqz	r2,L76_LF2
 1285  00001eb4  54000000	nop; delay slot nop
 1286  00001eb8  8fc10004	lw	r1,4(r30)
 1287  00001ebc  8fc20000	lw	r2,(r30)
 1288  00001ec0  ac220000	sw	(r1),r2
 1289  00001ec4          	L76_LF2:
 1290  00001ec4  8fc10000	lw	r1,(r30)
 1291  00001ec8  90220000	lbu	r2,(r1)
 1292  00001ecc  64410000	snei	r1,r2,#0
 1293  00001ed0  14200010	bnez	r1,L77_LF2
 1294  00001ed4  54000000	nop; delay slot nop
 1295  00001ed8  8fc1fff4	lw	r1,-12(r30)
 1296  00001edc  08000294	j	L72_LF2
 1297  00001ee0  54000000	nop; delay slot nop
 1298  00001ee4          	L77_LF2:
 1299  00001ee4  8fc10000	lw	r1,(r30)
 1300  00001ee8  90220000	lbu	r2,(r1)
 1301  00001eec  6041002d	seqi	r1,r2,#45
 1302  00001ef0  10200024	beqz	r1,L78_LF2
 1303  00001ef4  54000000	nop; delay slot nop
 1304  00001ef8  2001ffff	addi	r1,r0,#-1
 1305  00001efc  afc1ffec	sw	-20(r30),r1
 1306  00001f00  8fc20000	lw	r2,(r30)
 1307  00001f04  20410001	addi	r1,r2,#1
 1308  00001f08  00011020	add	r2,r0,r1
 1309  00001f0c  afc20000	sw	(r30),r2
 1310  00001f10  0800000c	j	L79_LF2
 1311  00001f14  54000000	nop; delay slot nop
 1312  00001f18          	L78_LF2:
 1313  00001f18  20010001	addi	r1,r0,#1
 1314  00001f1c  afc1ffec	sw	-20(r30),r1
 1315  00001f20          	L79_LF2:
 1316  00001f20  8fc10008	lw	r1,8(r30)
 1317  00001f24  64220000	snei	r2,r1,#0
 1318  00001f28  14400090	bnez	r2,L80_LF2
 1319  00001f2c  54000000	nop; delay slot nop
 1320  00001f30  8fc10000	lw	r1,(r30)
 1321  00001f34  90220000	lbu	r2,(r1)
 1322  00001f38  60410030	seqi	r1,r2,#48
 1323  00001f3c  10200074	beqz	r1,L81_LF2
 1324  00001f40  54000000	nop; delay slot nop
 1325  00001f44  8fc20000	lw	r2,(r30)
 1326  00001f48  20410001	addi	r1,r2,#1
 1327  00001f4c  00011020	add	r2,r0,r1
 1328  00001f50  afc20000	sw	(r30),r2
 1329  00001f54  8fc10000	lw	r1,(r30)
 1330  00001f58  90220000	lbu	r2,(r1)
 1331  00001f5c  60410078	seqi	r1,r2,#120
 1332  00001f60  14200020	bnez	r1,L83_LF2
 1333  00001f64  54000000	nop; delay slot nop
 1334  00001f68  8fc10000	lw	r1,(r30)
 1335  00001f6c  90220000	lbu	r2,(r1)
 1336  00001f70  60410058	seqi	r1,r2,#88
 1337  00001f74  1420000c	bnez	r1,L83_LF2
 1338  00001f78  54000000	nop; delay slot nop
 1339  00001f7c  08000024	j	L82_LF2
 1340  00001f80  54000000	nop; delay slot nop
 1341  00001f84          	L83_LF2:
 1342  00001f84  20010010	addi	r1,r0,#16
 1343  00001f88  afc10008	sw	8(r30),r1
 1344  00001f8c  8fc20000	lw	r2,(r30)
 1345  00001f90  20410001	addi	r1,r2,#1
 1346  00001f94  00011020	add	r2,r0,r1
 1347  00001f98  afc20000	sw	(r30),r2
 1348  00001f9c  0800000c	j	L84_LF2
 1349  00001fa0  54000000	nop; delay slot nop
 1350  00001fa4          	L82_LF2:
 1351  00001fa4  20010008	addi	r1,r0,#8
 1352  00001fa8  afc10008	sw	8(r30),r1
 1353  00001fac          	L84_LF2:
 1354  00001fac  0800000c	j	L80_LF2
 1355  00001fb0  54000000	nop; delay slot nop
 1356  00001fb4          	L81_LF2:
 1357  00001fb4  2001000a	addi	r1,r0,#10
 1358  00001fb8  afc10008	sw	8(r30),r1
 1359  00001fbc          	L85_LF2:
 1360  00001fbc          	L80_LF2:
 1361  00001fbc  8fc10008	lw	r1,8(r30)
 1362  00001fc0  70220000	slei	r2,r1,#0
 1363  00001fc4  1440001c	bnez	r2,L87_LF2
 1364  00001fc8  54000000	nop; delay slot nop
 1365  00001fcc  8fc10008	lw	r1,8(r30)
 1366  00001fd0  6c220010	sgti	r2,r1,#16
 1367  00001fd4  1440000c	bnez	r2,L87_LF2
 1368  00001fd8  54000000	nop; delay slot nop
 1369  00001fdc  08000010	j	L86_LF2
 1370  00001fe0  54000000	nop; delay slot nop
 1371  00001fe4          	L87_LF2:
 1372  00001fe4  8fc1fff4	lw	r1,-12(r30)
 1373  00001fe8  08000188	j	L72_LF2
 1374  00001fec  54000000	nop; delay slot nop
 1375  00001ff0          	L86_LF2:
 1376  00001ff0  54000000	nop
 1377  00001ff4          	L88_LF2:
 1378  00001ff4  8fc10000	lw	r1,(r30)
 1379  00001ff8  90220000	lbu	r2,(r1)
 1380  00001ffc  6c41002f	sgtui	r1,r2,#47
 1381  00002000  10200030	beqz	r1,L91_LF2
 1382  00002004  54000000	nop; delay slot nop
 1383  00002008  8fc10000	lw	r1,(r30)
 1384  0000200c  90220000	lbu	r2,(r1)
 1385  00002010  70410039	sleui	r1,r2,#57
 1386  00002014  1020001c	beqz	r1,L91_LF2
 1387  00002018  54000000	nop; delay slot nop
 1388  0000201c  8fc10000	lw	r1,(r30)
 1389  00002020  90220000	lbu	r2,(r1)
 1390  00002024  2041ffd0	addi	r1,r2,#-48
 1391  00002028  afc1fff0	sw	-16(r30),r1
 1392  0000202c  0800008c	j	L92_LF2
 1393  00002030  54000000	nop; delay slot nop
 1394  00002034          	L91_LF2:
 1395  00002034  8fc10000	lw	r1,(r30)
 1396  00002038  90220000	lbu	r2,(r1)
 1397  0000203c  6c410060	sgtui	r1,r2,#96
 1398  00002040  10200030	beqz	r1,L93_LF2
 1399  00002044  54000000	nop; delay slot nop
 1400  00002048  8fc10000	lw	r1,(r30)
 1401  0000204c  90220000	lbu	r2,(r1)
 1402  00002050  7041007a	sleui	r1,r2,#122
 1403  00002054  1020001c	beqz	r1,L93_LF2
 1404  00002058  54000000	nop; delay slot nop
 1405  0000205c  8fc10000	lw	r1,(r30)
 1406  00002060  90220000	lbu	r2,(r1)
 1407  00002064  2041ffa9	addi	r1,r2,#-87
 1408  00002068  afc1fff0	sw	-16(r30),r1
 1409  0000206c  0800004c	j	L92_LF2
 1410  00002070  54000000	nop; delay slot nop
 1411  00002074          	L93_LF2:
 1412  00002074  8fc10000	lw	r1,(r30)
 1413  00002078  90220000	lbu	r2,(r1)
 1414  0000207c  6c410040	sgtui	r1,r2,#64
 1415  00002080  10200030	beqz	r1,L95_LF2
 1416  00002084  54000000	nop; delay slot nop
 1417  00002088  8fc10000	lw	r1,(r30)
 1418  0000208c  90220000	lbu	r2,(r1)
 1419  00002090  7041005a	sleui	r1,r2,#90
 1420  00002094  1020001c	beqz	r1,L95_LF2
 1421  00002098  54000000	nop; delay slot nop
 1422  0000209c  8fc10000	lw	r1,(r30)
 1423  000020a0  90220000	lbu	r2,(r1)
 1424  000020a4  2041ffc9	addi	r1,r2,#-55
 1425  000020a8  afc1fff0	sw	-16(r30),r1
 1426  000020ac  0800000c	j	L92_LF2
 1427  000020b0  54000000	nop; delay slot nop
 1428  000020b4          	L95_LF2:
 1429  000020b4  200103e8	addi	r1,r0,#1000
 1430  000020b8  afc1fff0	sw	-16(r30),r1
 1431  000020bc          	L96_LF2:
 1432  000020bc          	L94_LF2:
 1433  000020bc          	L92_LF2:
 1434  000020bc  8fc1fff0	lw	r1,-16(r30)
 1435  000020c0  8fc20008	lw	r2,8(r30)
 1436  000020c4  0022082a	slt	r1,r1,r2
 1437  000020c8  10200040	beqz	r1,L90_LF2
 1438  000020cc  54000000	nop; delay slot nop
 1439  000020d0  8fc1fff4	lw	r1,-12(r30)
 1440  000020d4  8fc20008	lw	r2,8(r30)
 1441  000020d8  00200035	movi2fp	f0,r1
 1442  000020dc  00400835	movi2fp	f1,r2
 1443  000020e0  0401000e	mult	f0,f0,f1
 1444  000020e4  00000834	movfp2i	r1,f0
 1445  000020e8  afc1fff4	sw	-12(r30),r1
 1446  000020ec  8fc1fff4	lw	r1,-12(r30)
 1447  000020f0  8fc2fff0	lw	r2,-16(r30)
 1448  000020f4  00220820	add	r1,r1,r2
 1449  000020f8  afc1fff4	sw	-12(r30),r1
 1450  000020fc  8fc20000	lw	r2,(r30)
 1451  00002100  20410001	addi	r1,r2,#1
 1452  00002104  00011020	add	r2,r0,r1
 1453  00002108  afc20000	sw	(r30),r2
 1454  0000210c          	L97_LF2:
 1455  0000210c          	L90_LF2:
 1456  0000210c  8fc1fff0	lw	r1,-16(r30)
 1457  00002110  8fc20008	lw	r2,8(r30)
 1458  00002114  0022082a	slt	r1,r1,r2
 1459  00002118  1420000c	bnez	r1,L98_LF2
 1460  0000211c  54000000	nop; delay slot nop
 1461  00002120  0800000c	j	L89_LF2
 1462  00002124  54000000	nop; delay slot nop
 1463  00002128          	L98_LF2:
 1464  00002128  0bfffec8	j	L88_LF2
 1465  0000212c  54000000	nop; delay slot nop
 1466  00002130          	L89_LF2:
 1467  00002130  8fc10004	lw	r1,4(r30)
 1468  00002134  64220000	snei	r2,r1,#0
 1469  00002138  10400010	beqz	r2,L99_LF2
 1470  0000213c  54000000	nop; delay slot nop
 1471  00002140  8fc10004	lw	r1,4(r30)
 1472  00002144  8fc20000	lw	r2,(r30)
 1473  00002148  ac220000	sw	(r1),r2
 1474  0000214c          	L99_LF2:
 1475  0000214c  8fc1fff4	lw	r1,-12(r30)
 1476  00002150  8fc2ffec	lw	r2,-20(r30)
 1477  00002154  00200035	movi2fp	f0,r1
 1478  00002158  00400835	movi2fp	f1,r2
 1479  0000215c  0401000e	mult	f0,f0,f1
 1480  00002160  00000834	movfp2i	r1,f0
 1481  00002164  afc1fff4	sw	-12(r30),r1
 1482  00002168  8fc1fff4	lw	r1,-12(r30)
 1483  0000216c  08000004	j	L72_LF2
 1484  00002170  54000000	nop; delay slot nop
 1485  00002174          	L72_LF2:
 1486  00002174  8fa20000	lw	r2,0(r29)
 1487  00002178  8fdffff8	lw	r31,-8(r30)
 1488  0000217c  001ee820	add	r29,r0,r30
 1489  00002180  8fdefffc	lw	r30,-4(r30)
 1490  00002184  4be00000	jr	r31
 1491  00002188  54000000	nop
 1492  0000218c          	.endproc _dstrtol
 1493  0000218c          	.align 2
 1494  0000218c          	.proc _bcopy
 1495  0000218c          	.global _bcopy
 1496  0000218c          	_bcopy:
 1497                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1498  0000218c  afbefffc	sw	-4(r29),r30; push fp
 1499  00002190  001df020	add	r30,r0,r29; fp = sp
 1500  00002194  afbffff8	sw	-8(r29),r31; push ret addr
 1501  00002198  2fbd0010	subui	r29,r29,#16; alloc local storage
 1502  0000219c  afa20000	sw	0(r29),r2
 1503  000021a0  afa30004	sw	4(r29),r3
 1504  000021a4  54000000	nop
 1505  000021a8          	L101_LF2:
 1506  000021a8  8fc10008	lw	r1,8(r30)
 1507  000021ac  2022ffff	addi	r2,r1,#-1
 1508  000021b0  afc20008	sw	8(r30),r2
 1509  000021b4  6c210000	sgti	r1,r1,#0
 1510  000021b8  1420000c	bnez	r1,L103_LF2
 1511  000021bc  54000000	nop; delay slot nop
 1512  000021c0  0800002c	j	L102_LF2
 1513  000021c4  54000000	nop; delay slot nop
 1514  000021c8          	L103_LF2:
 1515  000021c8  8fc10004	lw	r1,4(r30)
 1516  000021cc  20220001	addi	r2,r1,#1
 1517  000021d0  afc20004	sw	4(r30),r2
 1518  000021d4  8fc20000	lw	r2,(r30)
 1519  000021d8  20430001	addi	r3,r2,#1
 1520  000021dc  afc30000	sw	(r30),r3
 1521  000021e0  80420000	lb	r2,(r2)
 1522  000021e4  a0220000	sb	(r1),r2
 1523  000021e8  0bffffbc	j	L101_LF2
 1524  000021ec  54000000	nop; delay slot nop
 1525  000021f0          	L102_LF2:
 1526  000021f0          	L100_LF2:
 1527  000021f0  8fa20000	lw	r2,0(r29)
 1528  000021f4  8fa30004	lw	r3,4(r29)
 1529  000021f8  8fdffff8	lw	r31,-8(r30)
 1530  000021fc  001ee820	add	r29,r0,r30
 1531  00002200  8fdefffc	lw	r30,-4(r30)
 1532  00002204  4be00000	jr	r31
 1533  00002208  54000000	nop
 1534  0000220c          	.endproc _bcopy
 1535  0000220c          	.align 2
 1536  0000220c          	.proc _bzero
 1537  0000220c          	.global _bzero
 1538  0000220c          	_bzero:
 1539                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1540  0000220c  afbefffc	sw	-4(r29),r30; push fp
 1541  00002210  001df020	add	r30,r0,r29; fp = sp
 1542  00002214  afbffff8	sw	-8(r29),r31; push ret addr
 1543  00002218  2fbd0010	subui	r29,r29,#16; alloc local storage
 1544  0000221c  afa20000	sw	0(r29),r2
 1545  00002220  54000000	nop
 1546  00002224          	L105_LF2:
 1547  00002224  8fc10004	lw	r1,4(r30)
 1548  00002228  2022ffff	addi	r2,r1,#-1
 1549  0000222c  afc20004	sw	4(r30),r2
 1550  00002230  6c210000	sgti	r1,r1,#0
 1551  00002234  1420000c	bnez	r1,L107_LF2
 1552  00002238  54000000	nop; delay slot nop
 1553  0000223c  08000020	j	L106_LF2
 1554  00002240  54000000	nop; delay slot nop
 1555  00002244          	L107_LF2:
 1556  00002244  8fc10000	lw	r1,(r30)
 1557  00002248  20220001	addi	r2,r1,#1
 1558  0000224c  afc20000	sw	(r30),r2
 1559  00002250  20020000	addi	r2,r0,(#0x0)&0xff
 1560  00002254  a0220000	sb	(r1),r2
 1561  00002258  0bffffc8	j	L105_LF2
 1562  0000225c  54000000	nop; delay slot nop
 1563  00002260          	L106_LF2:
 1564  00002260          	L104_LF2:
 1565  00002260  8fa20000	lw	r2,0(r29)
 1566  00002264  8fdffff8	lw	r31,-8(r30)
 1567  00002268  001ee820	add	r29,r0,r30
 1568  0000226c  8fdefffc	lw	r30,-4(r30)
 1569  00002270  4be00000	jr	r31
 1570  00002274  54000000	nop
 1571  00002278          	.endproc _bzero
 1572  00002278          	.align 2
 1573  00002278          	.proc _min
 1574  00002278          	.global _min
 1575  00002278          	_min:
 1576                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1577  00002278  afbefffc	sw	-4(r29),r30; push fp
 1578  0000227c  001df020	add	r30,r0,r29; fp = sp
 1579  00002280  afbffff8	sw	-8(r29),r31; push ret addr
 1580  00002284  2fbd0010	subui	r29,r29,#16; alloc local storage
 1581  00002288  afa20000	sw	0(r29),r2
 1582  0000228c  afa30004	sw	4(r29),r3
 1583  00002290  8fc10000	lw	r1,(r30)
 1584  00002294  8fc20004	lw	r2,4(r30)
 1585  00002298  0022182c	sle	r3,r1,r2
 1586  0000229c  14600008	bnez	r3,L109_LF2
 1587  000022a0  54000000	nop; delay slot nop
 1588  000022a4  8fc10004	lw	r1,4(r30)
 1589  000022a8          	L109_LF2:
 1590  000022a8  08000004	j	L108_LF2
 1591  000022ac  54000000	nop; delay slot nop
 1592  000022b0          	L108_LF2:
 1593  000022b0  8fa20000	lw	r2,0(r29)
 1594  000022b4  8fa30004	lw	r3,4(r29)
 1595  000022b8  8fdffff8	lw	r31,-8(r30)
 1596  000022bc  001ee820	add	r29,r0,r30
 1597  000022c0  8fdefffc	lw	r30,-4(r30)
 1598  000022c4  4be00000	jr	r31
 1599  000022c8  54000000	nop
 1600  000022cc          	.endproc _min
 1601                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1602                      ;;;
 1603                      ;;; Most of the traps are called in files from libtraps.
 1606  000022cc          	.align 2
 1607  000022cc          	.proc _exit
 1608  000022cc          	.global _exit
 1609  000022cc          	_exit:
 1610  000022cc  44000300	trap	#0x300
 1611  000022d0  4be00000	jr	r31
 1612  000022d4  54000000	nop
 1613  000022d8          	.endproc _exit
 1615                      ; for the benefit of gcc.
 1616  000022d8          	.proc ___main
 1617  000022d8          	.global ___main
 1618  000022d8          	___main:
 1619  000022d8  4be00000	jr	r31
 1620  000022dc  54000000	nop
 1621  000022e0          	.endproc ___main
 1622  000022e0          	.text
 1623  000022e0          	.global _etext
 1624  000022e0          	_etext:
 1625  000022e0          	.align 3
 1626  000022e0          	.data
 1627  0000318a          	.global _edata
 1628  0000318a          	_edata:
