 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 1782
    4                      ; Text size: 5692
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  41667465	.ascii "After allocating 4KB character buffer, new variable has address : 0x%x"
   82  00003004  7220616c	
   82  00003008  6c6f6361	
   82  0000300c  74696e67	
   82  00003010  20344b42	
   82  00003014  20636861	
   82  00003018  72616374	
   82  0000301c  65722062	
   82  00003020  75666665	
   82  00003024  722c206e	
   82  00003028  65772076	
   82  0000302c  61726961	
   82  00003030  626c6520	
   82  00003034  68617320	
   82  00003038  61646472	
   82  0000303c  65737320	
   82  00003040  3a203078	
   82  00003044  2578    	
   83  00003046  0a00    	.ascii "\n\000"
   84  00003048          	.text
   85  000010d4          	.align 2
   86  000010d4          	.proc _consume_userstack
   87  000010d4          	.global _consume_userstack
   88  000010d4          	_consume_userstack:
   89                      ;  Function 'consume_userstack'; 4104 bytes of locals, 1 regs to save.
   90  000010d4  afbefffc	sw	-4(r29),r30; push fp
   91  000010d8  001df020	add	r30,r0,r29; fp = sp
   92  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   93  000010e0  2fbd1018	subui	r29,r29,#4120; alloc local storage
   94  000010e4  afa20000	sw	0(r29),r2
   95  000010e8  23bdfff8	addi	r29,r29,#-8
   96  000010ec  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
   97  000010f0  24423000	addui	r2,r2,(LC0_LF0)&0xffff
   98  000010f4  afa20000	sw	(r29),r2
   99  000010f8  23c1eff4	addi	r1,r30,#-4108
  100  000010fc  afa10004	sw	4(r29),r1
  101  00001100  0c000670	jal	_Printf
  102  00001104  54000000	nop; not filled.
  103  00001108  23bd0008	addi	r29,r29,#8
  104  0000110c  8fa20000	lw	r2,0(r29)
  105  00001110  8fdffff8	lw	r31,-8(r30)
  106  00001114  001ee820	add	r29,r0,r30
  107  00001118  8fdefffc	lw	r30,-4(r30)
  108  0000111c  4be00000	jr	r31
  109  00001120  54000000	nop
  110  00001124          	.endproc _consume_userstack
  111  00001124          	.data
  112  00003048          	.align 2
  113  00003048          	LC1_LF0:
  114  00003048  55736167	.ascii "Usage: %s <number of hello world processes to create>\n\000"
  114  0000304c  653a2025	
  114  00003050  73203c6e	
  114  00003054  756d6265	
  114  00003058  72206f66	
  114  0000305c  2068656c	
  114  00003060  6c6f2077	
  114  00003064  6f726c64	
  114  00003068  2070726f	
  114  0000306c  63657373	
  114  00003070  65732074	
  114  00003074  6f206372	
  114  00003078  65617465	
  114  0000307c  3e0a00  	
  115  0000307f          	.align 2
  116  00003080          	LC2_LF0:
  117  00003080  2d2d2d2d	.ascii "------------------------User Process Execution Menu (Enter choice numb"
  117  00003084  2d2d2d2d	
  117  00003088  2d2d2d2d	
  117  0000308c  2d2d2d2d	
  117  00003090  2d2d2d2d	
  117  00003094  2d2d2d2d	
  117  00003098  55736572	
  117  0000309c  2050726f	
  117  000030a0  63657373	
  117  000030a4  20457865	
  117  000030a8  63757469	
  117  000030ac  6f6e204d	
  117  000030b0  656e7520	
  117  000030b4  28456e74	
  117  000030b8  65722063	
  117  000030bc  686f6963	
  117  000030c0  65206e75	
  117  000030c4  6d62    	
  118  000030c6  6572292d	.ascii "er)--------------------\n\000"
  118  000030ca  2d2d2d2d	
  118  000030ce  2d2d2d2d	
  118  000030d2  2d2d2d2d	
  118  000030d6  2d2d2d2d	
  118  000030da  2d2d2d0a	
  118  000030de  00      	
  119  000030df          	.align 2
  120  000030e0          	LC3_LF0:
  121  000030e0  312e5275	.ascii "1.Run Hello World process\n\000"
  121  000030e4  6e204865	
  121  000030e8  6c6c6f20	
  121  000030ec  576f726c	
  121  000030f0  64207072	
  121  000030f4  6f636573	
  121  000030f8  730a00  	
  122  000030fb          	.align 2
  123  000030fc          	LC4_LF0:
  124  000030fc  322e4163	.ascii "2.Access memory outside allocated process pages\n\000"
  124  00003100  63657373	
  124  00003104  206d656d	
  124  00003108  6f727920	
  124  0000310c  6f757473	
  124  00003110  69646520	
  124  00003114  616c6c6f	
  124  00003118  63617465	
  124  0000311c  64207072	
  124  00003120  6f636573	
  124  00003124  73207061	
  124  00003128  6765730a	
  124  0000312c  00      	
  125  0000312d          	.align 2
  126  00003130          	LC5_LF0:
  127  00003130  332e4361	.ascii "3.Cause user stack to grow more than 1 page\n\000"
  127  00003134  75736520	
  127  00003138  75736572	
  127  0000313c  20737461	
  127  00003140  636b2074	
  127  00003144  6f206772	
  127  00003148  6f77206d	
  127  0000314c  6f726520	
  127  00003150  7468616e	
  127  00003154  20312070	
  127  00003158  6167650a	
  127  0000315c  00      	
  128  0000315d          	.align 2
  129  00003160          	LC6_LF0:
  130  00003160  342e4361	.ascii "4.Call Hello World program 100 in a row\n\000"
  130  00003164  6c6c2048	
  130  00003168  656c6c6f	
  130  0000316c  20576f72	
  130  00003170  6c642070	
  130  00003174  726f6772	
  130  00003178  616d2031	
  130  0000317c  30302069	
  130  00003180  6e206120	
  130  00003184  726f770a	
  130  00003188  00      	
  131  00003189          	.align 2
  132  0000318c          	LC7_LF0:
  133  0000318c  352e5370	.ascii "5.Spwan 330 processes simultaenously to count to a large value\n\000"
  133  00003190  77616e20	
  133  00003194  33333020	
  133  00003198  70726f63	
  133  0000319c  65737365	
  133  000031a0  73207369	
  133  000031a4  6d756c74	
  133  000031a8  61656e6f	
  133  000031ac  75736c79	
  133  000031b0  20746f20	
  133  000031b4  636f756e	
  133  000031b8  7420746f	
  133  000031bc  2061206c	
  133  000031c0  61726765	
  133  000031c4  2076616c	
  133  000031c8  75650a00	
  134  000031cc          	.align 2
  135  000031cc          	LC8_LF0:
  136  000031cc  362e4163	.ascii "6.Access memory beyond the virtual memory address space\n\000"
  136  000031d0  63657373	
  136  000031d4  206d656d	
  136  000031d8  6f727920	
  136  000031dc  6265796f	
  136  000031e0  6e642074	
  136  000031e4  68652076	
  136  000031e8  69727475	
  136  000031ec  616c206d	
  136  000031f0  656d6f72	
  136  000031f4  79206164	
  136  000031f8  64726573	
  136  000031fc  73207370	
  136  00003200  6163650a	
  136  00003204  00      	
  137  00003205          	.align 2
  138  00003208          	LC9_LF0:
  139  00003208  6d616b65	.ascii "makeprocs (%d): Creating %d hello_world processes\n\000"
  139  0000320c  70726f63	
  139  00003210  73202825	
  139  00003214  64293a20	
  139  00003218  43726561	
  139  0000321c  74696e67	
  139  00003220  20256420	
  139  00003224  68656c6c	
  139  00003228  6f5f776f	
  139  0000322c  726c6420	
  139  00003230  70726f63	
  139  00003234  65737365	
  139  00003238  730a00  	
  140  0000323b          	.align 2
  141  0000323c          	LC10_LF0:
  142  0000323c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
  142  00003240  70726f63	
  142  00003244  73202825	
  142  00003248  64293a20	
  142  0000324c  42616420	
  142  00003250  73656d5f	
  142  00003254  63726561	
  142  00003258  74650a00	
  143  0000325c          	.align 2
  144  0000325c          	LC11_LF0:
  145  0000325c  2d2d2d2d	.ascii "-------------------------------Part 1------------------------------\n\000"
  145  00003260  2d2d2d2d	
  145  00003264  2d2d2d2d	
  145  00003268  2d2d2d2d	
  145  0000326c  2d2d2d2d	
  145  00003270  2d2d2d2d	
  145  00003274  2d2d2d2d	
  145  00003278  2d2d2d50	
  145  0000327c  61727420	
  145  00003280  312d2d2d	
  145  00003284  2d2d2d2d	
  145  00003288  2d2d2d2d	
  145  0000328c  2d2d2d2d	
  145  00003290  2d2d2d2d	
  145  00003294  2d2d2d2d	
  145  00003298  2d2d2d2d	
  145  0000329c  2d2d2d0a	
  145  000032a0  00      	
  146  000032a1          	.align 2
  147  000032a4          	LC12_LF0:
  148  000032a4  6d616b65	.ascii "makeprocs (%d): Creating 1 hello world process\n\000"
  148  000032a8  70726f63	
  148  000032ac  73202825	
  148  000032b0  64293a20	
  148  000032b4  43726561	
  148  000032b8  74696e67	
  148  000032bc  20312068	
  148  000032c0  656c6c6f	
  148  000032c4  20776f72	
  148  000032c8  6c642070	
  148  000032cc  726f6365	
  148  000032d0  73730a00	
  149  000032d4          	.align 2
  150  000032d4          	LC13_LF0:
  151  000032d4  68656c6c	.ascii "hello_world.dlx.obj\000"
  151  000032d8  6f5f776f	
  151  000032dc  726c642e	
  151  000032e0  646c782e	
  151  000032e4  6f626a00	
  152  000032e8          	.align 2
  153  000032e8          	LC14_LF0:
  154  000032e8  2d2d2d2d	.ascii "-------------------------------Part 2-------------------------------\n"
  154  000032ec  2d2d2d2d	
  154  000032f0  2d2d2d2d	
  154  000032f4  2d2d2d2d	
  154  000032f8  2d2d2d2d	
  154  000032fc  2d2d2d2d	
  154  00003300  2d2d2d2d	
  154  00003304  2d2d2d50	
  154  00003308  61727420	
  154  0000330c  322d2d2d	
  154  00003310  2d2d2d2d	
  154  00003314  2d2d2d2d	
  154  00003318  2d2d2d2d	
  154  0000331c  2d2d2d2d	
  154  00003320  2d2d2d2d	
  154  00003324  2d2d2d2d	
  154  00003328  2d2d2d2d	
  154  0000332c  0a      	
  155  0000332d  00      	.ascii "\000"
  156  0000332e          	.align 2
  157  00003330          	LC15_LF0:
  158  00003330  43726561	.ascii "Creating child process : %s\n\000"
  158  00003334  74696e67	
  158  00003338  20636869	
  158  0000333c  6c642070	
  158  00003340  726f6365	
  158  00003344  7373203a	
  158  00003348  2025730a	
  158  0000334c  00      	
  159  0000334d          	.align 2
  160  00003350          	LC16_LF0:
  161  00003350  70617274	.ascii "part2.dlx.obj\000"
  161  00003354  322e646c	
  161  00003358  782e6f62	
  161  0000335c  6a00    	
  162  0000335e          	.align 2
  163  00003360          	LC17_LF0:
  164  00003360  5369676e	.ascii "Signal from child process (that accesses virtual address outside alloc"
  164  00003364  616c2066	
  164  00003368  726f6d20	
  164  0000336c  6368696c	
  164  00003370  64207072	
  164  00003374  6f636573	
  164  00003378  73202874	
  164  0000337c  68617420	
  164  00003380  61636365	
  164  00003384  73736573	
  164  00003388  20766972	
  164  0000338c  7475616c	
  164  00003390  20616464	
  164  00003394  72657373	
  164  00003398  206f7574	
  164  0000339c  73696465	
  164  000033a0  20616c6c	
  164  000033a4  6f63    	
  165  000033a6  61746564	.ascii "ated pages)\n\000"
  165  000033aa  20706167	
  165  000033ae  6573290a	
  165  000033b2  00      	
  166  000033b3          	.align 2
  167  000033b4          	LC18_LF0:
  168  000033b4  2d2d2d2d	.ascii "-------------------------------Part 3-------------------------------\n"
  168  000033b8  2d2d2d2d	
  168  000033bc  2d2d2d2d	
  168  000033c0  2d2d2d2d	
  168  000033c4  2d2d2d2d	
  168  000033c8  2d2d2d2d	
  168  000033cc  2d2d2d2d	
  168  000033d0  2d2d2d50	
  168  000033d4  61727420	
  168  000033d8  332d2d2d	
  168  000033dc  2d2d2d2d	
  168  000033e0  2d2d2d2d	
  168  000033e4  2d2d2d2d	
  168  000033e8  2d2d2d2d	
  168  000033ec  2d2d2d2d	
  168  000033f0  2d2d2d2d	
  168  000033f4  2d2d2d2d	
  168  000033f8  0a      	
  169  000033f9  00      	.ascii "\000"
  170  000033fa          	.align 2
  171  000033fc          	LC19_LF0:
  172  000033fc  2d2d2d2d	.ascii "-------------------------------Part 4-------------------------------\n"
  172  00003400  2d2d2d2d	
  172  00003404  2d2d2d2d	
  172  00003408  2d2d2d2d	
  172  0000340c  2d2d2d2d	
  172  00003410  2d2d2d2d	
  172  00003414  2d2d2d2d	
  172  00003418  2d2d2d50	
  172  0000341c  61727420	
  172  00003420  342d2d2d	
  172  00003424  2d2d2d2d	
  172  00003428  2d2d2d2d	
  172  0000342c  2d2d2d2d	
  172  00003430  2d2d2d2d	
  172  00003434  2d2d2d2d	
  172  00003438  2d2d2d2d	
  172  0000343c  2d2d2d2d	
  172  00003440  0a      	
  173  00003441  00      	.ascii "\000"
  174  00003442          	.align 2
  175  00003444          	LC20_LF0:
  176  00003444  43726561	.ascii "Creating a row of 100 Hello World processes in sequence to test correc"
  176  00003448  74696e67	
  176  0000344c  20612072	
  176  00003450  6f77206f	
  176  00003454  66203130	
  176  00003458  30204865	
  176  0000345c  6c6c6f20	
  176  00003460  576f726c	
  176  00003464  64207072	
  176  00003468  6f636573	
  176  0000346c  73657320	
  176  00003470  696e2073	
  176  00003474  65717565	
  176  00003478  6e636520	
  176  0000347c  746f2074	
  176  00003480  65737420	
  176  00003484  636f7272	
  176  00003488  6563    	
  177  0000348a  74206d65	.ascii "t memory paging allocation and deallocation\n\000"
  177  0000348e  6d6f7279	
  177  00003492  20706167	
  177  00003496  696e6720	
  177  0000349a  616c6c6f	
  177  0000349e  63617469	
  177  000034a2  6f6e2061	
  177  000034a6  6e642064	
  177  000034aa  65616c6c	
  177  000034ae  6f636174	
  177  000034b2  696f6e0a	
  177  000034b6  00      	
  178  000034b7          	.align 2
  179  000034b8          	LC21_LF0:
  180  000034b8  6d616b65	.ascii "makeprocs (%d): Creating hello world #%d\n\000"
  180  000034bc  70726f63	
  180  000034c0  73202825	
  180  000034c4  64293a20	
  180  000034c8  43726561	
  180  000034cc  74696e67	
  180  000034d0  2068656c	
  180  000034d4  6c6f2077	
  180  000034d8  6f726c64	
  180  000034dc  20232564	
  180  000034e0  0a00    	
  181  000034e2          	.align 2
  182  000034e4          	LC22_LF0:
  183  000034e4  42616420	.ascii "Bad semaphore s_procs_completed (%d) in %s\n\000"
  183  000034e8  73656d61	
  183  000034ec  70686f72	
  183  000034f0  6520735f	
  183  000034f4  70726f63	
  183  000034f8  735f636f	
  183  000034fc  6d706c65	
  183  00003500  74656420	
  183  00003504  28256429	
  183  00003508  20696e20	
  183  0000350c  25730a00	
  184  00003510          	.align 2
  185  00003510          	LC23_LF0:
  186  00003510  436f6d70	.ascii "Completed execution of 100 sequential Hello World processes with succe"
  186  00003514  6c657465	
  186  00003518  64206578	
  186  0000351c  65637574	
  186  00003520  696f6e20	
  186  00003524  6f662031	
  186  00003528  30302073	
  186  0000352c  65717565	
  186  00003530  6e746961	
  186  00003534  6c204865	
  186  00003538  6c6c6f20	
  186  0000353c  576f726c	
  186  00003540  64207072	
  186  00003544  6f636573	
  186  00003548  73657320	
  186  0000354c  77697468	
  186  00003550  20737563	
  186  00003554  6365    	
  187  00003556  73736675	.ascii "ssful memory management\n\000"
  187  0000355a  6c206d65	
  187  0000355e  6d6f7279	
  187  00003562  206d616e	
  187  00003566  6167656d	
  187  0000356a  656e740a	
  187  0000356e  00      	
  188  0000356f          	.align 2
  189  00003570          	LC24_LF0:
  190  00003570  2d2d2d2d	.ascii "-----------------------------Part 5----------------------------------\n"
  190  00003574  2d2d2d2d	
  190  00003578  2d2d2d2d	
  190  0000357c  2d2d2d2d	
  190  00003580  2d2d2d2d	
  190  00003584  2d2d2d2d	
  190  00003588  2d2d2d2d	
  190  0000358c  2d506172	
  190  00003590  7420352d	
  190  00003594  2d2d2d2d	
  190  00003598  2d2d2d2d	
  190  0000359c  2d2d2d2d	
  190  000035a0  2d2d2d2d	
  190  000035a4  2d2d2d2d	
  190  000035a8  2d2d2d2d	
  190  000035ac  2d2d2d2d	
  190  000035b0  2d2d2d2d	
  190  000035b4  2d0a    	
  191  000035b6  00      	.ascii "\000"
  192  000035b7          	.align 2
  193  000035b8          	LC25_LF0:
  194  000035b8  6d616b65	.ascii "makeprocs (%d): Creating counting process, spawn_counting #%d\n\000"
  194  000035bc  70726f63	
  194  000035c0  73202825	
  194  000035c4  64293a20	
  194  000035c8  43726561	
  194  000035cc  74696e67	
  194  000035d0  20636f75	
  194  000035d4  6e74696e	
  194  000035d8  67207072	
  194  000035dc  6f636573	
  194  000035e0  732c2073	
  194  000035e4  7061776e	
  194  000035e8  5f636f75	
  194  000035ec  6e74696e	
  194  000035f0  67202325	
  194  000035f4  640a00  	
  195  000035f7          	.align 2
  196  000035f8          	LC26_LF0:
  197  000035f8  73706177	.ascii "spawn_counting.dlx.obj\000"
  197  000035fc  6e5f636f	
  197  00003600  756e7469	
  197  00003604  6e672e64	
  197  00003608  6c782e6f	
  197  0000360c  626a00  	
  198  0000360f          	.align 2
  199  00003610          	LC27_LF0:
  200  00003610  2d2d2d2d	.ascii "-------------------------------Part 6--------------------------------\n"
  200  00003614  2d2d2d2d	
  200  00003618  2d2d2d2d	
  200  0000361c  2d2d2d2d	
  200  00003620  2d2d2d2d	
  200  00003624  2d2d2d2d	
  200  00003628  2d2d2d2d	
  200  0000362c  2d2d2d50	
  200  00003630  61727420	
  200  00003634  362d2d2d	
  200  00003638  2d2d2d2d	
  200  0000363c  2d2d2d2d	
  200  00003640  2d2d2d2d	
  200  00003644  2d2d2d2d	
  200  00003648  2d2d2d2d	
  200  0000364c  2d2d2d2d	
  200  00003650  2d2d2d2d	
  200  00003654  2d0a    	
  201  00003656  00      	.ascii "\000"
  202  00003657          	.align 2
  203  00003658          	LC28_LF0:
  204  00003658  2d2d2d2d	.ascii "----------------------------------------------------------------------"
  204  0000365c  2d2d2d2d	
  204  00003660  2d2d2d2d	
  204  00003664  2d2d2d2d	
  204  00003668  2d2d2d2d	
  204  0000366c  2d2d2d2d	
  204  00003670  2d2d2d2d	
  204  00003674  2d2d2d2d	
  204  00003678  2d2d2d2d	
  204  0000367c  2d2d2d2d	
  204  00003680  2d2d2d2d	
  204  00003684  2d2d2d2d	
  204  00003688  2d2d2d2d	
  204  0000368c  2d2d2d2d	
  204  00003690  2d2d2d2d	
  204  00003694  2d2d2d2d	
  204  00003698  2d2d2d2d	
  204  0000369c  2d2d    	
  205  0000369e  2d2d2d2d	.ascii "---------------\n\000"
  205  000036a2  2d2d2d2d	
  205  000036a6  2d2d2d2d	
  205  000036aa  2d2d2d0a	
  205  000036ae  00      	
  206  000036af          	.align 2
  207  000036b0          	LC29_LF0:
  208  000036b0  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  208  000036b4  70726f63	
  208  000036b8  73202825	
  208  000036bc  64293a20	
  208  000036c0  416c6c20	
  208  000036c4  6f746865	
  208  000036c8  72207072	
  208  000036cc  6f636573	
  208  000036d0  73657320	
  208  000036d4  636f6d70	
  208  000036d8  6c657465	
  208  000036dc  642c2065	
  208  000036e0  78697469	
  208  000036e4  6e67206d	
  208  000036e8  61696e20	
  208  000036ec  70726f63	
  208  000036f0  6573732e	
  208  000036f4  0a      	
  209  000036f5  00      	.ascii "\000"
  210  000036f6          	.text
  211  00001124          	.align 2
  212  00001124          	.proc _main
  213  00001124          	.global _main
  214  00001124          	_main:
  215                      ;  Function 'main'; 4120 bytes of locals, 0 regs to save.
  216  00001124  afbefffc	sw	-4(r29),r30; push fp
  217  00001128  001df020	add	r30,r0,r29; fp = sp
  218  0000112c  afbffff8	sw	-8(r29),r31; push ret addr
  219  00001130  2fbd1020	subui	r29,r29,#4128; alloc local storage
  220  00001134  8fc20000	lw	r2,(r30)
  221  00001138  8fc60004	lw	r6,4(r30)
  222  0000113c  0c0014f4	jal	___main
  223  00001140  54000000	nop; not filled.
  224  00001144  64410002	snei	r1,r2,#2
  225  00001148  10200030	beqz	r1,L16_LF0
  226  0000114c  54000000	nop; not filled.
  227  00001150  23bdfff8	addi	r29,r29,#-8
  228  00001154  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  229  00001158  24e73048	addui	r7,r7,(LC1_LF0)&0xffff
  230  0000115c  afa70000	sw	(r29),r7
  231  00001160  8cc10000	lw	r1,(r6)
  232  00001164  afa10004	sw	4(r29),r1
  233  00001168  0c000608	jal	_Printf
  234  0000116c  54000000	nop; not filled.
  235  00001170  0c000708	jal	_Exit
  236  00001174  54000000	nop; not filled.
  237  00001178  23bd0008	addi	r29,r29,#8
  238  0000117c          	L16_LF0:
  239  0000117c  23bdfff8	addi	r29,r29,#-8
  240  00001180  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  241  00001184  24e73080	addui	r7,r7,(LC2_LF0)&0xffff
  242  00001188  afa70000	sw	(r29),r7
  243  0000118c  0c0005e4	jal	_Printf
  244  00001190  54000000	nop; not filled.
  245  00001194  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  246  00001198  24e730e0	addui	r7,r7,(LC3_LF0)&0xffff
  247  0000119c  afa70000	sw	(r29),r7
  248  000011a0  0c0005d0	jal	_Printf
  249  000011a4  54000000	nop; not filled.
  250  000011a8  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  251  000011ac  24e730fc	addui	r7,r7,(LC4_LF0)&0xffff
  252  000011b0  afa70000	sw	(r29),r7
  253  000011b4  0c0005bc	jal	_Printf
  254  000011b8  54000000	nop; not filled.
  255  000011bc  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  256  000011c0  24e73130	addui	r7,r7,(LC5_LF0)&0xffff
  257  000011c4  afa70000	sw	(r29),r7
  258  000011c8  0c0005a8	jal	_Printf
  259  000011cc  54000000	nop; not filled.
  260  000011d0  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  261  000011d4  24e73160	addui	r7,r7,(LC6_LF0)&0xffff
  262  000011d8  afa70000	sw	(r29),r7
  263  000011dc  0c000594	jal	_Printf
  264  000011e0  54000000	nop; not filled.
  265  000011e4  3c070000	lhi	r7,((LC7_LF0)>>16)&0xffff
  266  000011e8  24e7318c	addui	r7,r7,(LC7_LF0)&0xffff
  267  000011ec  afa70000	sw	(r29),r7
  268  000011f0  0c000580	jal	_Printf
  269  000011f4  54000000	nop; not filled.
  270  000011f8  3c070000	lhi	r7,((LC8_LF0)>>16)&0xffff
  271  000011fc  24e731cc	addui	r7,r7,(LC8_LF0)&0xffff
  272  00001200  afa70000	sw	(r29),r7
  273  00001204  0c00056c	jal	_Printf
  274  00001208  54000000	nop; not filled.
  275  0000120c  23bdfff8	addi	r29,r29,#-8
  276  00001210  8cc70004	lw	r7,4(r6)
  277  00001214  afa70000	sw	(r29),r7
  278  00001218  20070000	addi	r7,r0,#0
  279  0000121c  afa70004	sw	4(r29),r7
  280  00001220  2007000a	addi	r7,r0,#10
  281  00001224  afa70008	sw	8(r29),r7
  282  00001228  0c000f0c	jal	_dstrtol
  283  0000122c  54000000	nop; not filled.
  284  00001230  00011020	add	r2,r0,r1
  285  00001234  0c000548	jal	_getpid
  286  00001238  54000000	nop; not filled.
  287  0000123c  3c070000	lhi	r7,((LC9_LF0)>>16)&0xffff
  288  00001240  24e73208	addui	r7,r7,(LC9_LF0)&0xffff
  289  00001244  afa70000	sw	(r29),r7
  290  00001248  afa10004	sw	4(r29),r1
  291  0000124c  afa20008	sw	8(r29),r2
  292  00001250  0c000520	jal	_Printf
  293  00001254  54000000	nop; not filled.
  294  00001258  20070000	addi	r7,r0,#0
  295  0000125c  afa70000	sw	(r29),r7
  296  00001260  0c00054c	jal	_sem_create
  297  00001264  54000000	nop; not filled.
  298  00001268  00012020	add	r4,r0,r1
  299  0000126c  23bd0010	addi	r29,r29,#16
  300  00001270  6081ffff	seqi	r1,r4,#-1
  301  00001274  10200034	beqz	r1,L17_LF0
  302  00001278  54000000	nop; not filled.
  303  0000127c  0c000500	jal	_getpid
  304  00001280  54000000	nop; not filled.
  305  00001284  23bdfff8	addi	r29,r29,#-8
  306  00001288  3c070000	lhi	r7,((LC10_LF0)>>16)&0xffff
  307  0000128c  24e7323c	addui	r7,r7,(LC10_LF0)&0xffff
  308  00001290  afa70000	sw	(r29),r7
  309  00001294  afa10004	sw	4(r29),r1
  310  00001298  0c0004d8	jal	_Printf
  311  0000129c  54000000	nop; not filled.
  312  000012a0  0c0005d8	jal	_Exit
  313  000012a4  54000000	nop; not filled.
  314  000012a8  23bd0008	addi	r29,r29,#8
  315  000012ac          	L17_LF0:
  316  000012ac  23bdfff8	addi	r29,r29,#-8
  317  000012b0  afa40000	sw	(r29),r4
  318  000012b4  23c5ffe8	addi	r5,r30,#-24
  319  000012b8  afa50004	sw	4(r29),r5
  320  000012bc  0c000cec	jal	_ditoa
  321  000012c0  54000000	nop; not filled.
  322  000012c4  3c070000	lhi	r7,((LC11_LF0)>>16)&0xffff
  323  000012c8  24e7325c	addui	r7,r7,(LC11_LF0)&0xffff
  324  000012cc  afa70000	sw	(r29),r7
  325  000012d0  0c0004a0	jal	_Printf
  326  000012d4  54000000	nop; not filled.
  327  000012d8  3c070000	lhi	r7,((LC12_LF0)>>16)&0xffff
  328  000012dc  24e732a4	addui	r7,r7,(LC12_LF0)&0xffff
  329  000012e0  afa70000	sw	(r29),r7
  330  000012e4  0c00048c	jal	_Printf
  331  000012e8  54000000	nop; not filled.
  332  000012ec  23bdfff8	addi	r29,r29,#-8
  333  000012f0  3c070000	lhi	r7,((LC13_LF0)>>16)&0xffff
  334  000012f4  24e732d4	addui	r7,r7,(LC13_LF0)&0xffff
  335  000012f8  afa70000	sw	(r29),r7
  336  000012fc  afa50004	sw	4(r29),r5
  337  00001300  20070000	addi	r7,r0,#0
  338  00001304  afa70008	sw	8(r29),r7
  339  00001308  0c000480	jal	_process_create
  340  0000130c  54000000	nop; not filled.
  341  00001310  afa40000	sw	(r29),r4
  342  00001314  0c0004a4	jal	_sem_wait
  343  00001318  54000000	nop; not filled.
  344  0000131c  3c070000	lhi	r7,((LC14_LF0)>>16)&0xffff
  345  00001320  24e732e8	addui	r7,r7,(LC14_LF0)&0xffff
  346  00001324  afa70000	sw	(r29),r7
  347  00001328  0c000448	jal	_Printf
  348  0000132c  54000000	nop; not filled.
  349  00001330  20070000	addi	r7,r0,#0
  350  00001334  afa70000	sw	(r29),r7
  351  00001338  0c000474	jal	_sem_create
  352  0000133c  54000000	nop; not filled.
  353  00001340  00012020	add	r4,r0,r1
  354  00001344  23bd0010	addi	r29,r29,#16
  355  00001348  6081ffff	seqi	r1,r4,#-1
  356  0000134c  10200034	beqz	r1,L18_LF0
  357  00001350  54000000	nop; not filled.
  358  00001354  0c000428	jal	_getpid
  359  00001358  54000000	nop; not filled.
  360  0000135c  23bdfff8	addi	r29,r29,#-8
  361  00001360  3c070000	lhi	r7,((LC10_LF0)>>16)&0xffff
  362  00001364  24e7323c	addui	r7,r7,(LC10_LF0)&0xffff
  363  00001368  afa70000	sw	(r29),r7
  364  0000136c  afa10004	sw	4(r29),r1
  365  00001370  0c000400	jal	_Printf
  366  00001374  54000000	nop; not filled.
  367  00001378  0c000500	jal	_Exit
  368  0000137c  54000000	nop; not filled.
  369  00001380  23bd0008	addi	r29,r29,#8
  370  00001384          	L18_LF0:
  371  00001384  23bdfff8	addi	r29,r29,#-8
  372  00001388  afa40000	sw	(r29),r4
  373  0000138c  afa50004	sw	4(r29),r5
  374  00001390  0c000c18	jal	_ditoa
  375  00001394  54000000	nop; not filled.
  376  00001398  3c070000	lhi	r7,((LC15_LF0)>>16)&0xffff
  377  0000139c  24e73330	addui	r7,r7,(LC15_LF0)&0xffff
  378  000013a0  afa70000	sw	(r29),r7
  379  000013a4  3c020000	lhi	r2,((LC16_LF0)>>16)&0xffff
  380  000013a8  24423350	addui	r2,r2,(LC16_LF0)&0xffff
  381  000013ac  afa20004	sw	4(r29),r2
  382  000013b0  0c0003c0	jal	_Printf
  383  000013b4  54000000	nop; not filled.
  384  000013b8  23bdfff8	addi	r29,r29,#-8
  385  000013bc  afa20000	sw	(r29),r2
  386  000013c0  afa50004	sw	4(r29),r5
  387  000013c4  20070000	addi	r7,r0,#0
  388  000013c8  afa70008	sw	8(r29),r7
  389  000013cc  0c0003bc	jal	_process_create
  390  000013d0  54000000	nop; not filled.
  391  000013d4  afa40000	sw	(r29),r4
  392  000013d8  0c0003e0	jal	_sem_wait
  393  000013dc  54000000	nop; not filled.
  394  000013e0  3c070000	lhi	r7,((LC17_LF0)>>16)&0xffff
  395  000013e4  24e73360	addui	r7,r7,(LC17_LF0)&0xffff
  396  000013e8  afa70000	sw	(r29),r7
  397  000013ec  0c000384	jal	_Printf
  398  000013f0  54000000	nop; not filled.
  399  000013f4  3c070000	lhi	r7,((LC18_LF0)>>16)&0xffff
  400  000013f8  24e733b4	addui	r7,r7,(LC18_LF0)&0xffff
  401  000013fc  afa70000	sw	(r29),r7
  402  00001400  0c000370	jal	_Printf
  403  00001404  54000000	nop; not filled.
  404  00001408  23bd0010	addi	r29,r29,#16
  405  0000140c  23bdfff8	addi	r29,r29,#-8
  406  00001410  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
  407  00001414  24e73000	addui	r7,r7,(LC0_LF0)&0xffff
  408  00001418  afa70000	sw	(r29),r7
  409  0000141c  23c1efe4	addi	r1,r30,#-4124
  410  00001420  afa10004	sw	4(r29),r1
  411  00001424  0c00034c	jal	_Printf
  412  00001428  54000000	nop; not filled.
  413  0000142c  23bd0008	addi	r29,r29,#8
  414  00001430  23bdfff8	addi	r29,r29,#-8
  415  00001434  3c070000	lhi	r7,((LC19_LF0)>>16)&0xffff
  416  00001438  24e733fc	addui	r7,r7,(LC19_LF0)&0xffff
  417  0000143c  afa70000	sw	(r29),r7
  418  00001440  0c000330	jal	_Printf
  419  00001444  54000000	nop; not filled.
  420  00001448  20070000	addi	r7,r0,#0
  421  0000144c  afa70000	sw	(r29),r7
  422  00001450  0c00035c	jal	_sem_create
  423  00001454  54000000	nop; not filled.
  424  00001458  00012020	add	r4,r0,r1
  425  0000145c  23bd0008	addi	r29,r29,#8
  426  00001460  6081ffff	seqi	r1,r4,#-1
  427  00001464  10200034	beqz	r1,L20_LF0
  428  00001468  54000000	nop; not filled.
  429  0000146c  0c000310	jal	_getpid
  430  00001470  54000000	nop; not filled.
  431  00001474  23bdfff8	addi	r29,r29,#-8
  432  00001478  3c070000	lhi	r7,((LC10_LF0)>>16)&0xffff
  433  0000147c  24e7323c	addui	r7,r7,(LC10_LF0)&0xffff
  434  00001480  afa70000	sw	(r29),r7
  435  00001484  afa10004	sw	4(r29),r1
  436  00001488  0c0002e8	jal	_Printf
  437  0000148c  54000000	nop; not filled.
  438  00001490  0c0003e8	jal	_Exit
  439  00001494  54000000	nop; not filled.
  440  00001498  23bd0008	addi	r29,r29,#8
  441  0000149c          	L20_LF0:
  442  0000149c  23bdfff8	addi	r29,r29,#-8
  443  000014a0  afa40000	sw	(r29),r4
  444  000014a4  afa50004	sw	4(r29),r5
  445  000014a8  0c000b00	jal	_ditoa
  446  000014ac  54000000	nop; not filled.
  447  000014b0  3c070000	lhi	r7,((LC20_LF0)>>16)&0xffff
  448  000014b4  24e73444	addui	r7,r7,(LC20_LF0)&0xffff
  449  000014b8  afa70000	sw	(r29),r7
  450  000014bc  0c0002b4	jal	_Printf
  451  000014c0  54000000	nop; not filled.
  452  000014c4  20030000	addi	r3,r0,#0
  453  000014c8  23bd0008	addi	r29,r29,#8
  454  000014cc  00051020	add	r2,r0,r5
  455  000014d0          	L24_LF0:
  456  000014d0  0c0002ac	jal	_getpid
  457  000014d4  54000000	nop; not filled.
  458  000014d8  23bdfff0	addi	r29,r29,#-16
  459  000014dc  3c070000	lhi	r7,((LC21_LF0)>>16)&0xffff
  460  000014e0  24e734b8	addui	r7,r7,(LC21_LF0)&0xffff
  461  000014e4  afa70000	sw	(r29),r7
  462  000014e8  afa10004	sw	4(r29),r1
  463  000014ec  afa30008	sw	8(r29),r3
  464  000014f0  0c000280	jal	_Printf
  465  000014f4  54000000	nop; not filled.
  466  000014f8  3c070000	lhi	r7,((LC13_LF0)>>16)&0xffff
  467  000014fc  24e732d4	addui	r7,r7,(LC13_LF0)&0xffff
  468  00001500  afa70000	sw	(r29),r7
  469  00001504  afa20004	sw	4(r29),r2
  470  00001508  20070000	addi	r7,r0,#0
  471  0000150c  afa70008	sw	8(r29),r7
  472  00001510  0c000278	jal	_process_create
  473  00001514  54000000	nop; not filled.
  474  00001518  afa40000	sw	(r29),r4
  475  0000151c  0c00029c	jal	_sem_wait
  476  00001520  54000000	nop; not filled.
  477  00001524  23bd0010	addi	r29,r29,#16
  478  00001528  64210001	snei	r1,r1,#1
  479  0000152c  10200034	beqz	r1,L23_LF0
  480  00001530  54000000	nop; not filled.
  481  00001534  23bdfff0	addi	r29,r29,#-16
  482  00001538  3c070000	lhi	r7,((LC22_LF0)>>16)&0xffff
  483  0000153c  24e734e4	addui	r7,r7,(LC22_LF0)&0xffff
  484  00001540  afa70000	sw	(r29),r7
  485  00001544  afa40004	sw	4(r29),r4
  486  00001548  8cc70000	lw	r7,(r6)
  487  0000154c  afa70008	sw	8(r29),r7
  488  00001550  0c000220	jal	_Printf
  489  00001554  54000000	nop; not filled.
  490  00001558  0c000320	jal	_Exit
  491  0000155c  54000000	nop; not filled.
  492  00001560  23bd0010	addi	r29,r29,#16
  493  00001564          	L23_LF0:
  494  00001564  20630001	addi	r3,r3,#1
  495  00001568  70610063	slei	r1,r3,#99
  496  0000156c  1420ff60	bnez	r1,L24_LF0
  497  00001570  54000000	nop; not filled.
  498  00001574  23bdfff8	addi	r29,r29,#-8
  499  00001578  3c070000	lhi	r7,((LC23_LF0)>>16)&0xffff
  500  0000157c  24e73510	addui	r7,r7,(LC23_LF0)&0xffff
  501  00001580  afa70000	sw	(r29),r7
  502  00001584  0c0001ec	jal	_Printf
  503  00001588  54000000	nop; not filled.
  504  0000158c  3c070000	lhi	r7,((LC24_LF0)>>16)&0xffff
  505  00001590  24e73570	addui	r7,r7,(LC24_LF0)&0xffff
  506  00001594  afa70000	sw	(r29),r7
  507  00001598  0c0001d8	jal	_Printf
  508  0000159c  54000000	nop; not filled.
  509  000015a0  2007ffe3	addi	r7,r0,#-29
  510  000015a4  afa70000	sw	(r29),r7
  511  000015a8  0c000204	jal	_sem_create
  512  000015ac  54000000	nop; not filled.
  513  000015b0  00012020	add	r4,r0,r1
  514  000015b4  23bd0008	addi	r29,r29,#8
  515  000015b8  6081ffff	seqi	r1,r4,#-1
  516  000015bc  10200034	beqz	r1,L27_LF0
  517  000015c0  54000000	nop; not filled.
  518  000015c4  0c0001b8	jal	_getpid
  519  000015c8  54000000	nop; not filled.
  520  000015cc  23bdfff8	addi	r29,r29,#-8
  521  000015d0  3c070000	lhi	r7,((LC10_LF0)>>16)&0xffff
  522  000015d4  24e7323c	addui	r7,r7,(LC10_LF0)&0xffff
  523  000015d8  afa70000	sw	(r29),r7
  524  000015dc  afa10004	sw	4(r29),r1
  525  000015e0  0c000190	jal	_Printf
  526  000015e4  54000000	nop; not filled.
  527  000015e8  0c000290	jal	_Exit
  528  000015ec  54000000	nop; not filled.
  529  000015f0  23bd0008	addi	r29,r29,#8
  530  000015f4          	L27_LF0:
  531  000015f4  23bdfff8	addi	r29,r29,#-8
  532  000015f8  afa40000	sw	(r29),r4
  533  000015fc  23c2ffe8	addi	r2,r30,#-24
  534  00001600  afa20004	sw	4(r29),r2
  535  00001604  0c0009a4	jal	_ditoa
  536  00001608  54000000	nop; not filled.
  537  0000160c  20030000	addi	r3,r0,#0
  538  00001610  23bd0008	addi	r29,r29,#8
  539  00001614          	L31_LF0:
  540  00001614  0c000168	jal	_getpid
  541  00001618  54000000	nop; not filled.
  542  0000161c  23bdfff0	addi	r29,r29,#-16
  543  00001620  3c070000	lhi	r7,((LC25_LF0)>>16)&0xffff
  544  00001624  24e735b8	addui	r7,r7,(LC25_LF0)&0xffff
  545  00001628  afa70000	sw	(r29),r7
  546  0000162c  afa10004	sw	4(r29),r1
  547  00001630  afa30008	sw	8(r29),r3
  548  00001634  0c00013c	jal	_Printf
  549  00001638  54000000	nop; not filled.
  550  0000163c  3c070000	lhi	r7,((LC26_LF0)>>16)&0xffff
  551  00001640  24e735f8	addui	r7,r7,(LC26_LF0)&0xffff
  552  00001644  afa70000	sw	(r29),r7
  553  00001648  afa20004	sw	4(r29),r2
  554  0000164c  20070000	addi	r7,r0,#0
  555  00001650  afa70008	sw	8(r29),r7
  556  00001654  0c000134	jal	_process_create
  557  00001658  54000000	nop; not filled.
  558  0000165c  23bd0010	addi	r29,r29,#16
  559  00001660  20630001	addi	r3,r3,#1
  560  00001664  7061001d	slei	r1,r3,#29
  561  00001668  1420ffa8	bnez	r1,L31_LF0
  562  0000166c  54000000	nop; not filled.
  563  00001670  23bdfff8	addi	r29,r29,#-8
  564  00001674  afa40000	sw	(r29),r4
  565  00001678  0c000140	jal	_sem_wait
  566  0000167c  54000000	nop; not filled.
  567  00001680  23bd0008	addi	r29,r29,#8
  568  00001684  64210001	snei	r1,r1,#1
  569  00001688  10200034	beqz	r1,L33_LF0
  570  0000168c  54000000	nop; not filled.
  571  00001690  23bdfff0	addi	r29,r29,#-16
  572  00001694  3c070000	lhi	r7,((LC22_LF0)>>16)&0xffff
  573  00001698  24e734e4	addui	r7,r7,(LC22_LF0)&0xffff
  574  0000169c  afa70000	sw	(r29),r7
  575  000016a0  afa40004	sw	4(r29),r4
  576  000016a4  8cc60000	lw	r6,(r6)
  577  000016a8  afa60008	sw	8(r29),r6
  578  000016ac  0c0000c4	jal	_Printf
  579  000016b0  54000000	nop; not filled.
  580  000016b4  0c0001c4	jal	_Exit
  581  000016b8  54000000	nop; not filled.
  582  000016bc  23bd0010	addi	r29,r29,#16
  583  000016c0          	L33_LF0:
  584  000016c0  23bdfff8	addi	r29,r29,#-8
  585  000016c4  3c070000	lhi	r7,((LC27_LF0)>>16)&0xffff
  586  000016c8  24e73610	addui	r7,r7,(LC27_LF0)&0xffff
  587  000016cc  afa70000	sw	(r29),r7
  588  000016d0  0c0000a0	jal	_Printf
  589  000016d4  54000000	nop; not filled.
  590  000016d8  3c010040	lhi	r1,#64
  591  000016dc  24210003	addui	r1,r1,#3
  592  000016e0  3c077fff	lhi	r7,#32767
  593  000016e4  24e7ffff	addui	r7,r7,#65535
  594  000016e8  ac270000	sw	(r1),r7
  595  000016ec  3c070000	lhi	r7,((LC28_LF0)>>16)&0xffff
  596  000016f0  24e73658	addui	r7,r7,(LC28_LF0)&0xffff
  597  000016f4  afa70000	sw	(r29),r7
  598  000016f8  0c000078	jal	_Printf
  599  000016fc  54000000	nop; not filled.
  600  00001700  0c00007c	jal	_getpid
  601  00001704  54000000	nop; not filled.
  602  00001708  3c070000	lhi	r7,((LC29_LF0)>>16)&0xffff
  603  0000170c  24e736b0	addui	r7,r7,(LC29_LF0)&0xffff
  604  00001710  afa70000	sw	(r29),r7
  605  00001714  afa10004	sw	4(r29),r1
  606  00001718  0c000058	jal	_Printf
  607  0000171c  54000000	nop; not filled.
  608  00001720  23bd0008	addi	r29,r29,#8
  609  00001724  0c000f00	jal	_exit
  610  00001728  54000000	nop
  611  0000172c          	.endproc _main
  612                      ;;;
  613                      ;;; Stub functions for DLX traps.
  614                      ;;;
  615                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  616                      ;;;
  617                      ;;; The traps such as Open and Close
  618                      ;;; (note the capital letters) are for use by user programs.  The traps
  619                      ;;; with names such as open and close (lower case) are for use by the OS.
  620                      ;;;
  623  0000172c          	.align 2
  625                      ;;; The following are the traps to be used by user-level programs
  626                      ;;;
  628  0000172c          	.align 2
  629  0000172c          	.proc _Open
  630  0000172c          	.global _Open
  631  0000172c          	_Open:
  632                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  633                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  634                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  635  0000172c  44000213	trap	#0x213
  636  00001730  4be00000	jr	r31
  637  00001734  54000000	nop
  638  00001738          	.endproc _Open
  640  00001738          	.proc _Close
  641  00001738          	.global _Close
  642  00001738          	_Close:
  643  00001738  44000214	trap	#0x214
  644  0000173c  4be00000	jr	r31
  645  00001740  54000000	nop
  646  00001744          	.endproc _Close
  648  00001744          	.proc _Read
  649  00001744          	.global _Read
  650  00001744          	_Read:
  651  00001744  44000210	trap	#0x210
  652  00001748  4be00000	jr	r31
  653  0000174c  54000000	nop
  654  00001750          	.endproc _Read
  656  00001750          	.proc _Write
  657  00001750          	.global _Write
  658  00001750          	_Write:
  659  00001750  44000211	trap	#0x211
  660  00001754  4be00000	jr	r31
  661  00001758  54000000	nop
  662  0000175c          	.endproc _Write
  664  0000175c          	.proc _Lseek
  665  0000175c          	.global _Lseek
  666  0000175c          	_Lseek:
  667  0000175c  44000212	trap	#0x212
  668  00001760  4be00000	jr	r31
  669  00001764  54000000	nop
  670  00001768          	.endproc _Lseek
  672  00001768          	.proc _Putchar
  673  00001768          	.global _Putchar
  674  00001768          	_Putchar:
  675  00001768  44000280	trap	#0x280
  676  0000176c  4be00000	jr	r31
  677  00001770  54000000	nop
  678  00001774          	.endproc _Putchar
  680  00001774          	.proc _Printf
  681  00001774          	.global _Printf
  682  00001774          	_Printf:
  683  00001774  44000201	trap	#0x201
  684  00001778  4be00000	jr	r31
  685  0000177c  54000000	nop
  686  00001780          	.endproc _Printf
  688  00001780          	.proc _getpid
  689  00001780          	.global _getpid
  690  00001780          	_getpid:
  691  00001780  44000431	trap	#0x431
  692  00001784  4be00000	jr	r31
  693  00001788  54000000	nop
  694  0000178c          	.endproc _getpid
  696  0000178c          	.proc _process_create
  697  0000178c          	.global _process_create
  698  0000178c          	_process_create:
  699  0000178c  44000432	trap	#0x432
  700  00001790  4be00000	jr	r31
  701  00001794  54000000	nop
  702  00001798          	.endproc _process_create
  704  00001798          	.proc _shmget
  705  00001798          	.global _shmget
  706  00001798          	_shmget:
  707  00001798  44000440	trap	#0x440
  708  0000179c  4be00000	jr	r31
  709  000017a0  54000000	nop
  710  000017a4          	.endproc _shmget
  712  000017a4          	.proc _shmat
  713  000017a4          	.global _shmat
  714  000017a4          	_shmat:
  715  000017a4  44000441	trap	#0x441
  716  000017a8  4be00000	jr	r31
  717  000017ac  54000000	nop
  718  000017b0          	.endproc _shmat
  720  000017b0          	.proc _sem_create
  721  000017b0          	.global _sem_create
  722  000017b0          	_sem_create:
  723  000017b0  44000450	trap	#0x450
  724  000017b4  4be00000	jr	r31
  725  000017b8  54000000	nop
  726  000017bc          	.endproc _sem_create
  728  000017bc          	.proc _sem_wait
  729  000017bc          	.global _sem_wait
  730  000017bc          	_sem_wait:
  731  000017bc  44000451	trap	#0x451
  732  000017c0  4be00000	jr	r31
  733  000017c4  54000000	nop
  734  000017c8          	.endproc _sem_wait
  736  000017c8          	.proc _sem_signal
  737  000017c8          	.global _sem_signal
  738  000017c8          	_sem_signal:
  739  000017c8  44000452	trap	#0x452
  740  000017cc  4be00000	jr	r31
  741  000017d0  54000000	nop
  742  000017d4          	.endproc _sem_signal
  744  000017d4          	.proc _lock_create
  745  000017d4          	.global _lock_create
  746  000017d4          	_lock_create:
  747  000017d4  44000453	trap	#0x453
  748  000017d8  4be00000	jr	r31
  749  000017dc  54000000	nop
  750  000017e0          	.endproc _lock_create
  752  000017e0          	.proc _lock_acquire
  753  000017e0          	.global _lock_acquire
  754  000017e0          	_lock_acquire:
  755  000017e0  44000454	trap	#0x454
  756  000017e4  4be00000	jr	r31
  757  000017e8  54000000	nop
  758  000017ec          	.endproc _lock_acquire
  760  000017ec          	.proc _lock_release
  761  000017ec          	.global _lock_release
  762  000017ec          	_lock_release:
  763  000017ec  44000455	trap	#0x455
  764  000017f0  4be00000	jr	r31
  765  000017f4  54000000	nop
  766  000017f8          	.endproc _lock_release
  768  000017f8          	.proc _cond_create
  769  000017f8          	.global _cond_create
  770  000017f8          	_cond_create:
  771  000017f8  44000456	trap	#0x456
  772  000017fc  4be00000	jr	r31
  773  00001800  54000000	nop
  774  00001804          	.endproc _cond_create
  776  00001804          	.proc _cond_wait
  777  00001804          	.global _cond_wait
  778  00001804          	_cond_wait:
  779  00001804  44000457	trap	#0x457
  780  00001808  4be00000	jr	r31
  781  0000180c  54000000	nop
  782  00001810          	.endproc _cond_wait
  784  00001810          	.proc _cond_signal
  785  00001810          	.global _cond_signal
  786  00001810          	_cond_signal:
  787  00001810  44000458	trap	#0x458
  788  00001814  4be00000	jr	r31
  789  00001818  54000000	nop
  790  0000181c          	.endproc _cond_signal
  792  0000181c          	.proc _cond_broadcast
  793  0000181c          	.global _cond_broadcast
  794  0000181c          	_cond_broadcast:
  795  0000181c  44000459	trap	#0x459
  796  00001820  4be00000	jr	r31
  797  00001824  54000000	nop
  798  00001828          	.endproc _cond_broadcast
  800  00001828          	.proc _mbox_create
  801  00001828          	.global _mbox_create
  802  00001828          	_mbox_create:
  803  00001828  44000460	trap	#0x460
  804  0000182c  4be00000	jr	r31
  805  00001830  54000000	nop
  806  00001834          	.endproc _mbox_create
  808  00001834          	.proc _mbox_open
  809  00001834          	.global _mbox_open
  810  00001834          	_mbox_open:
  811  00001834  44000461	trap	#0x461
  812  00001838  4be00000	jr	r31
  813  0000183c  54000000	nop
  814  00001840          	.endproc _mbox_open
  816  00001840          	.proc _mbox_close
  817  00001840          	.global _mbox_close
  818  00001840          	_mbox_close:
  819  00001840  44000462	trap	#0x462
  820  00001844  4be00000	jr	r31
  821  00001848  54000000	nop
  822  0000184c          	.endproc _mbox_close
  824  0000184c          	.proc _mbox_send
  825  0000184c          	.global _mbox_send
  826  0000184c          	_mbox_send:
  827  0000184c  44000463	trap	#0x463
  828  00001850  4be00000	jr	r31
  829  00001854  54000000	nop
  830  00001858          	.endproc _mbox_send
  832  00001858          	.proc _mbox_recv
  833  00001858          	.global _mbox_recv
  834  00001858          	_mbox_recv:
  835  00001858  44000464	trap	#0x464
  836  0000185c  4be00000	jr	r31
  837  00001860  54000000	nop
  838  00001864          	.endproc _mbox_recv
  840  00001864          	.proc _sleep
  841  00001864          	.global _sleep
  842  00001864          	_sleep:
  843  00001864  44000465	trap	#0x465
  844  00001868  4be00000	jr	r31
  845  0000186c  54000000	nop
  846  00001870          	.endproc _sleep
  848  00001870          	.proc _yield
  849  00001870          	.global _yield
  850  00001870          	_yield:
  851  00001870  44000466	trap	#0x466
  852  00001874  4be00000	jr	r31
  853  00001878  54000000	nop
  854  0000187c          	.endproc _yield
  857  0000187c          	.proc _Exit
  858  0000187c          	.global _Exit
  859  0000187c          	_Exit:
  860  0000187c  44000500	trap	#0x500
  861  00001880  4be00000	jr	r31
  862  00001884  54000000	nop
  863  00001888          	.endproc _Exit
  866  00001888          	.proc _malloc
  867  00001888          	.global _malloc
  868  00001888          	_malloc:
  869  00001888  44000467	trap	#0x467
  870  0000188c  4be00000	jr	r31
  871  00001890          	.endproc _malloc
  874  00001890          	.proc _mfree
  875  00001890          	.global _mfree
  876  00001890          	_mfree:
  877  00001890  44000468	trap	#0x468
  878  00001894  4be00000	jr	r31
  879  00001898          	.endproc _mfree
  880                      ; Compiled by GCC
  882  00001898          	.align 2
  883  00001898          	.proc _isspace
  884  00001898          	.global _isspace
  885  00001898          	_isspace:
  886                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  887  00001898  afbefffc	sw	-4(r29),r30; push fp
  888  0000189c  001df020	add	r30,r0,r29; fp = sp
  889  000018a0  afbffff8	sw	-8(r29),r31; push ret addr
  890  000018a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  891  000018a8  afa20000	sw	0(r29),r2
  892  000018ac  afa30004	sw	4(r29),r3
  893  000018b0  afa40008	sw	8(r29),r4
  894  000018b4  83c20003	lb	r2,3(r30)
  895  000018b8  20010000	addi	r1,r0,#0
  896  000018bc  304300ff	andi	r3,r2,#0x00ff
  897  000018c0  60640020	seqi	r4,r3,#32
  898  000018c4  1480002c	bnez	r4,L3_LF2
  899  000018c8  54000000	nop; delay slot nop
  900  000018cc  304300ff	andi	r3,r2,#0x00ff
  901  000018d0  60640009	seqi	r4,r3,#9
  902  000018d4  1480001c	bnez	r4,L3_LF2
  903  000018d8  54000000	nop; delay slot nop
  904  000018dc  304300ff	andi	r3,r2,#0x00ff
  905  000018e0  6064000a	seqi	r4,r3,#10
  906  000018e4  1480000c	bnez	r4,L3_LF2
  907  000018e8  54000000	nop; delay slot nop
  908  000018ec  08000008	j	L2_LF2
  909  000018f0  54000000	nop; delay slot nop
  910  000018f4          	L3_LF2:
  911  000018f4  20010001	addi	r1,r0,#1
  912  000018f8          	L2_LF2:
  913  000018f8  08000004	j	L1_LF2
  914  000018fc  54000000	nop; delay slot nop
  915  00001900          	L1_LF2:
  916  00001900  8fa20000	lw	r2,0(r29)
  917  00001904  8fa30004	lw	r3,4(r29)
  918  00001908  8fa40008	lw	r4,8(r29)
  919  0000190c  8fdffff8	lw	r31,-8(r30)
  920  00001910  001ee820	add	r29,r0,r30
  921  00001914  8fdefffc	lw	r30,-4(r30)
  922  00001918  4be00000	jr	r31
  923  0000191c  54000000	nop
  924  00001920          	.endproc _isspace
  925  00001920          	.align 2
  926  00001920          	.proc _isxdigit
  927  00001920          	.global _isxdigit
  928  00001920          	_isxdigit:
  929                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  930  00001920  afbefffc	sw	-4(r29),r30; push fp
  931  00001924  001df020	add	r30,r0,r29; fp = sp
  932  00001928  afbffff8	sw	-8(r29),r31; push ret addr
  933  0000192c  2fbd0018	subui	r29,r29,#24; alloc local storage
  934  00001930  afa20000	sw	0(r29),r2
  935  00001934  afa30004	sw	4(r29),r3
  936  00001938  afa40008	sw	8(r29),r4
  937  0000193c  83c20003	lb	r2,3(r30)
  938  00001940  20010000	addi	r1,r0,#0
  939  00001944  304300ff	andi	r3,r2,#0x00ff
  940  00001948  6c64002f	sgtui	r4,r3,#47
  941  0000194c  1080001c	beqz	r4,L7_LF2
  942  00001950  54000000	nop; delay slot nop
  943  00001954  304300ff	andi	r3,r2,#0x00ff
  944  00001958  70640039	sleui	r4,r3,#57
  945  0000195c  1480005c	bnez	r4,L6_LF2
  946  00001960  54000000	nop; delay slot nop
  947  00001964  08000004	j	L7_LF2
  948  00001968  54000000	nop; delay slot nop
  949  0000196c          	L7_LF2:
  950  0000196c  304300ff	andi	r3,r2,#0x00ff
  951  00001970  6c640060	sgtui	r4,r3,#96
  952  00001974  1080001c	beqz	r4,L8_LF2
  953  00001978  54000000	nop; delay slot nop
  954  0000197c  304300ff	andi	r3,r2,#0x00ff
  955  00001980  70640066	sleui	r4,r3,#102
  956  00001984  14800034	bnez	r4,L6_LF2
  957  00001988  54000000	nop; delay slot nop
  958  0000198c  08000004	j	L8_LF2
  959  00001990  54000000	nop; delay slot nop
  960  00001994          	L8_LF2:
  961  00001994  304300ff	andi	r3,r2,#0x00ff
  962  00001998  6c640040	sgtui	r4,r3,#64
  963  0000199c  10800020	beqz	r4,L5_LF2
  964  000019a0  54000000	nop; delay slot nop
  965  000019a4  304300ff	andi	r3,r2,#0x00ff
  966  000019a8  70640041	sleui	r4,r3,#65
  967  000019ac  1480000c	bnez	r4,L6_LF2
  968  000019b0  54000000	nop; delay slot nop
  969  000019b4  08000008	j	L5_LF2
  970  000019b8  54000000	nop; delay slot nop
  971  000019bc          	L6_LF2:
  972  000019bc  20010001	addi	r1,r0,#1
  973  000019c0          	L5_LF2:
  974  000019c0  08000004	j	L4_LF2
  975  000019c4  54000000	nop; delay slot nop
  976  000019c8          	L4_LF2:
  977  000019c8  8fa20000	lw	r2,0(r29)
  978  000019cc  8fa30004	lw	r3,4(r29)
  979  000019d0  8fa40008	lw	r4,8(r29)
  980  000019d4  8fdffff8	lw	r31,-8(r30)
  981  000019d8  001ee820	add	r29,r0,r30
  982  000019dc  8fdefffc	lw	r30,-4(r30)
  983  000019e0  4be00000	jr	r31
  984  000019e4  54000000	nop
  985  000019e8          	.endproc _isxdigit
  986  000019e8          	.align 2
  987  000019e8          	.proc _dstrcpy
  988  000019e8          	.global _dstrcpy
  989  000019e8          	_dstrcpy:
  990                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  991  000019e8  afbefffc	sw	-4(r29),r30; push fp
  992  000019ec  001df020	add	r30,r0,r29; fp = sp
  993  000019f0  afbffff8	sw	-8(r29),r31; push ret addr
  994  000019f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  995  000019f8  afa20000	sw	0(r29),r2
  996  000019fc  afa30004	sw	4(r29),r3
  997  00001a00  8fc10000	lw	r1,(r30)
  998  00001a04  afc1fff4	sw	-12(r30),r1
  999  00001a08          	L10_LF2:
 1000  00001a08  8fc10000	lw	r1,(r30)
 1001  00001a0c  20220001	addi	r2,r1,#1
 1002  00001a10  afc20000	sw	(r30),r2
 1003  00001a14  8fc20004	lw	r2,4(r30)
 1004  00001a18  20430001	addi	r3,r2,#1
 1005  00001a1c  afc30004	sw	4(r30),r3
 1006  00001a20  80420000	lb	r2,(r2)
 1007  00001a24  a0220000	sb	(r1),r2
 1008  00001a28  a3c2fff3	sb	-13(r30),r2
 1009  00001a2c          	L12_LF2:
 1010  00001a2c  93c1fff3	lbu	r1,-13(r30)
 1011  00001a30  64220000	snei	r2,r1,#0
 1012  00001a34  1440000c	bnez	r2,L13_LF2
 1013  00001a38  54000000	nop; delay slot nop
 1014  00001a3c  0800000c	j	L11_LF2
 1015  00001a40  54000000	nop; delay slot nop
 1016  00001a44          	L13_LF2:
 1017  00001a44  0bffffc0	j	L10_LF2
 1018  00001a48  54000000	nop; delay slot nop
 1019  00001a4c          	L11_LF2:
 1020  00001a4c  8fc1fff4	lw	r1,-12(r30)
 1021  00001a50  08000004	j	L9_LF2
 1022  00001a54  54000000	nop; delay slot nop
 1023  00001a58          	L9_LF2:
 1024  00001a58  8fa20000	lw	r2,0(r29)
 1025  00001a5c  8fa30004	lw	r3,4(r29)
 1026  00001a60  8fdffff8	lw	r31,-8(r30)
 1027  00001a64  001ee820	add	r29,r0,r30
 1028  00001a68  8fdefffc	lw	r30,-4(r30)
 1029  00001a6c  4be00000	jr	r31
 1030  00001a70  54000000	nop
 1031  00001a74          	.endproc _dstrcpy
 1032  00001a74          	.align 2
 1033  00001a74          	.proc _dstrncpy
 1034  00001a74          	.global _dstrncpy
 1035  00001a74          	_dstrncpy:
 1036                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
 1037  00001a74  afbefffc	sw	-4(r29),r30; push fp
 1038  00001a78  001df020	add	r30,r0,r29; fp = sp
 1039  00001a7c  afbffff8	sw	-8(r29),r31; push ret addr
 1040  00001a80  2fbd0018	subui	r29,r29,#24; alloc local storage
 1041  00001a84  afa20000	sw	0(r29),r2
 1042  00001a88  afa30004	sw	4(r29),r3
 1043  00001a8c  8fc10000	lw	r1,(r30)
 1044  00001a90  afc1fff4	sw	-12(r30),r1
 1045  00001a94          	L15_LF2:
 1046  00001a94  8fc10008	lw	r1,8(r30)
 1047  00001a98  2022ffff	addi	r2,r1,#-1
 1048  00001a9c  afc20008	sw	8(r30),r2
 1049  00001aa0  70210000	slei	r1,r1,#0
 1050  00001aa4  1020000c	beqz	r1,L18_LF2
 1051  00001aa8  54000000	nop; delay slot nop
 1052  00001aac  08000048	j	L16_LF2
 1053  00001ab0  54000000	nop; delay slot nop
 1054  00001ab4          	L18_LF2:
 1055  00001ab4  8fc10000	lw	r1,(r30)
 1056  00001ab8  20220001	addi	r2,r1,#1
 1057  00001abc  afc20000	sw	(r30),r2
 1058  00001ac0  8fc20004	lw	r2,4(r30)
 1059  00001ac4  20430001	addi	r3,r2,#1
 1060  00001ac8  afc30004	sw	4(r30),r3
 1061  00001acc  80420000	lb	r2,(r2)
 1062  00001ad0  a0220000	sb	(r1),r2
 1063  00001ad4  a3c2fff3	sb	-13(r30),r2
 1064  00001ad8          	L17_LF2:
 1065  00001ad8  93c1fff3	lbu	r1,-13(r30)
 1066  00001adc  64220000	snei	r2,r1,#0
 1067  00001ae0  1440000c	bnez	r2,L19_LF2
 1068  00001ae4  54000000	nop; delay slot nop
 1069  00001ae8  0800000c	j	L16_LF2
 1070  00001aec  54000000	nop; delay slot nop
 1071  00001af0          	L19_LF2:
 1072  00001af0  0bffffa0	j	L15_LF2
 1073  00001af4  54000000	nop; delay slot nop
 1074  00001af8          	L16_LF2:
 1075  00001af8  8fc1fff4	lw	r1,-12(r30)
 1076  00001afc  08000004	j	L14_LF2
 1077  00001b00  54000000	nop; delay slot nop
 1078  00001b04          	L14_LF2:
 1079  00001b04  8fa20000	lw	r2,0(r29)
 1080  00001b08  8fa30004	lw	r3,4(r29)
 1081  00001b0c  8fdffff8	lw	r31,-8(r30)
 1082  00001b10  001ee820	add	r29,r0,r30
 1083  00001b14  8fdefffc	lw	r30,-4(r30)
 1084  00001b18  4be00000	jr	r31
 1085  00001b1c  54000000	nop
 1086  00001b20          	.endproc _dstrncpy
 1087  00001b20          	.align 2
 1088  00001b20          	.proc _dstrcat
 1089  00001b20          	.global _dstrcat
 1090  00001b20          	_dstrcat:
 1091                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1092  00001b20  afbefffc	sw	-4(r29),r30; push fp
 1093  00001b24  001df020	add	r30,r0,r29; fp = sp
 1094  00001b28  afbffff8	sw	-8(r29),r31; push ret addr
 1095  00001b2c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1096  00001b30  afa20000	sw	0(r29),r2
 1097  00001b34  8fc10000	lw	r1,(r30)
 1098  00001b38  afc1fff4	sw	-12(r30),r1
 1099  00001b3c          	L21_LF2:
 1100  00001b3c  8fc10000	lw	r1,(r30)
 1101  00001b40  90220000	lbu	r2,(r1)
 1102  00001b44  64410000	snei	r1,r2,#0
 1103  00001b48  1420000c	bnez	r1,L23_LF2
 1104  00001b4c  54000000	nop; delay slot nop
 1105  00001b50  0800001c	j	L22_LF2
 1106  00001b54  54000000	nop; delay slot nop
 1107  00001b58          	L23_LF2:
 1108  00001b58  8fc20000	lw	r2,(r30)
 1109  00001b5c  20410001	addi	r1,r2,#1
 1110  00001b60  00011020	add	r2,r0,r1
 1111  00001b64  afc20000	sw	(r30),r2
 1112  00001b68  0bffffd0	j	L21_LF2
 1113  00001b6c  54000000	nop; delay slot nop
 1114  00001b70          	L22_LF2:
 1115  00001b70  23bdfff8	addi	r29,r29,#-8
 1116  00001b74  001d0820	add	r1,r0,r29
 1117  00001b78  8fc20000	lw	r2,(r30)
 1118  00001b7c  ac220000	sw	(r1),r2
 1119  00001b80  8fc20004	lw	r2,4(r30)
 1120  00001b84  ac220004	sw	4(r1),r2
 1121  00001b88  0ffffe5c	jal	_dstrcpy
 1122  00001b8c  54000000	nop; delay slot nop
 1123  00001b90  23bd0008	addi	r29,r29,#8
 1124  00001b94  8fc1fff4	lw	r1,-12(r30)
 1125  00001b98  08000004	j	L20_LF2
 1126  00001b9c  54000000	nop; delay slot nop
 1127  00001ba0          	L20_LF2:
 1128  00001ba0  8fa20000	lw	r2,0(r29)
 1129  00001ba4  8fdffff8	lw	r31,-8(r30)
 1130  00001ba8  001ee820	add	r29,r0,r30
 1131  00001bac  8fdefffc	lw	r30,-4(r30)
 1132  00001bb0  4be00000	jr	r31
 1133  00001bb4  54000000	nop
 1134  00001bb8          	.endproc _dstrcat
 1135  00001bb8          	.align 2
 1136  00001bb8          	.proc _dstrncmp
 1137  00001bb8          	.global _dstrncmp
 1138  00001bb8          	_dstrncmp:
 1139                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1140  00001bb8  afbefffc	sw	-4(r29),r30; push fp
 1141  00001bbc  001df020	add	r30,r0,r29; fp = sp
 1142  00001bc0  afbffff8	sw	-8(r29),r31; push ret addr
 1143  00001bc4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1144  00001bc8  afa20000	sw	0(r29),r2
 1145  00001bcc  afa30004	sw	4(r29),r3
 1146  00001bd0  54000000	nop
 1147  00001bd4  20010000	addi	r1,r0,#0
 1148  00001bd8  afc1fff4	sw	-12(r30),r1
 1149  00001bdc          	L25_LF2:
 1150  00001bdc  8fc1fff4	lw	r1,-12(r30)
 1151  00001be0  8fc20008	lw	r2,8(r30)
 1152  00001be4  0022082a	slt	r1,r1,r2
 1153  00001be8  1420000c	bnez	r1,L28_LF2
 1154  00001bec  54000000	nop; delay slot nop
 1155  00001bf0  08000088	j	L26_LF2
 1156  00001bf4  54000000	nop; delay slot nop
 1157  00001bf8          	L28_LF2:
 1158  00001bf8  8fc10004	lw	r1,4(r30)
 1159  00001bfc  90220000	lbu	r2,(r1)
 1160  00001c00  64410000	snei	r1,r2,#0
 1161  00001c04  14200018	bnez	r1,L29_LF2
 1162  00001c08  54000000	nop; delay slot nop
 1163  00001c0c  20010000	addi	r1,r0,#0
 1164  00001c10  080000d8	j	L24_LF2
 1165  00001c14  54000000	nop; delay slot nop
 1166  00001c18  08000028	j	L30_LF2
 1167  00001c1c  54000000	nop; delay slot nop
 1168  00001c20          	L29_LF2:
 1169  00001c20  8fc10000	lw	r1,(r30)
 1170  00001c24  8fc20004	lw	r2,4(r30)
 1171  00001c28  90210000	lbu	r1,(r1)
 1172  00001c2c  90420000	lbu	r2,(r2)
 1173  00001c30  00220829	sne	r1,r1,r2
 1174  00001c34  1020000c	beqz	r1,L30_LF2
 1175  00001c38  54000000	nop; delay slot nop
 1176  00001c3c  0800003c	j	L26_LF2
 1177  00001c40  54000000	nop; delay slot nop
 1178  00001c44          	L31_LF2:
 1179  00001c44          	L30_LF2:
 1180  00001c44  8fc20000	lw	r2,(r30)
 1181  00001c48  20410001	addi	r1,r2,#1
 1182  00001c4c  00011020	add	r2,r0,r1
 1183  00001c50  afc20000	sw	(r30),r2
 1184  00001c54  8fc20004	lw	r2,4(r30)
 1185  00001c58  20410001	addi	r1,r2,#1
 1186  00001c5c  00011020	add	r2,r0,r1
 1187  00001c60  afc20004	sw	4(r30),r2
 1188  00001c64          	L27_LF2:
 1189  00001c64  8fc2fff4	lw	r2,-12(r30)
 1190  00001c68  20410001	addi	r1,r2,#1
 1191  00001c6c  00011020	add	r2,r0,r1
 1192  00001c70  afc2fff4	sw	-12(r30),r2
 1193  00001c74  0bffff64	j	L25_LF2
 1194  00001c78  54000000	nop; delay slot nop
 1195  00001c7c          	L26_LF2:
 1196  00001c7c  8fc1fff4	lw	r1,-12(r30)
 1197  00001c80  8fc20008	lw	r2,8(r30)
 1198  00001c84  00220828	seq	r1,r1,r2
 1199  00001c88  10200018	beqz	r1,L32_LF2
 1200  00001c8c  54000000	nop; delay slot nop
 1201  00001c90  20010000	addi	r1,r0,#0
 1202  00001c94  08000054	j	L24_LF2
 1203  00001c98  54000000	nop; delay slot nop
 1204  00001c9c  0800004c	j	L33_LF2
 1205  00001ca0  54000000	nop; delay slot nop
 1206  00001ca4          	L32_LF2:
 1207  00001ca4  8fc20000	lw	r2,(r30)
 1208  00001ca8  90410000	lbu	r1,(r2)
 1209  00001cac  8fc20004	lw	r2,4(r30)
 1210  00001cb0  90430000	lbu	r3,(r2)
 1211  00001cb4  00230822	sub	r1,r1,r3
 1212  00001cb8  74220000	sgei	r2,r1,#0
 1213  00001cbc  10400020	beqz	r2,L34_LF2
 1214  00001cc0  54000000	nop; delay slot nop
 1215  00001cc4  8fc10000	lw	r1,(r30)
 1216  00001cc8  8fc20004	lw	r2,4(r30)
 1217  00001ccc  90210000	lbu	r1,(r1)
 1218  00001cd0  90420000	lbu	r2,(r2)
 1219  00001cd4  00220829	sne	r1,r1,r2
 1220  00001cd8  08000008	j	L35_LF2
 1221  00001cdc  54000000	nop; delay slot nop
 1222  00001ce0          	L34_LF2:
 1223  00001ce0  2001ffff	addi	r1,r0,#-1
 1224  00001ce4          	L35_LF2:
 1225  00001ce4  08000004	j	L24_LF2
 1226  00001ce8  54000000	nop; delay slot nop
 1227  00001cec          	L33_LF2:
 1228  00001cec          	L24_LF2:
 1229  00001cec  8fa20000	lw	r2,0(r29)
 1230  00001cf0  8fa30004	lw	r3,4(r29)
 1231  00001cf4  8fdffff8	lw	r31,-8(r30)
 1232  00001cf8  001ee820	add	r29,r0,r30
 1233  00001cfc  8fdefffc	lw	r30,-4(r30)
 1234  00001d00  4be00000	jr	r31
 1235  00001d04  54000000	nop
 1236  00001d08          	.endproc _dstrncmp
 1237  00001d08          	.align 2
 1238  00001d08          	.proc _dstrlen
 1239  00001d08          	.global _dstrlen
 1240  00001d08          	_dstrlen:
 1241                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1242  00001d08  afbefffc	sw	-4(r29),r30; push fp
 1243  00001d0c  001df020	add	r30,r0,r29; fp = sp
 1244  00001d10  afbffff8	sw	-8(r29),r31; push ret addr
 1245  00001d14  2fbd0018	subui	r29,r29,#24; alloc local storage
 1246  00001d18  afa20000	sw	0(r29),r2
 1247  00001d1c  20010000	addi	r1,r0,#0
 1248  00001d20  afc1fff4	sw	-12(r30),r1
 1249  00001d24          	L37_LF2:
 1250  00001d24  8fc10000	lw	r1,(r30)
 1251  00001d28  20220001	addi	r2,r1,#1
 1252  00001d2c  afc20000	sw	(r30),r2
 1253  00001d30  90210000	lbu	r1,(r1)
 1254  00001d34  64220000	snei	r2,r1,#0
 1255  00001d38  1440000c	bnez	r2,L39_LF2
 1256  00001d3c  54000000	nop; delay slot nop
 1257  00001d40  0800001c	j	L38_LF2
 1258  00001d44  54000000	nop; delay slot nop
 1259  00001d48          	L39_LF2:
 1260  00001d48  8fc2fff4	lw	r2,-12(r30)
 1261  00001d4c  20410001	addi	r1,r2,#1
 1262  00001d50  00011020	add	r2,r0,r1
 1263  00001d54  afc2fff4	sw	-12(r30),r2
 1264  00001d58  0bffffc8	j	L37_LF2
 1265  00001d5c  54000000	nop; delay slot nop
 1266  00001d60          	L38_LF2:
 1267  00001d60  8fc1fff4	lw	r1,-12(r30)
 1268  00001d64  08000004	j	L36_LF2
 1269  00001d68  54000000	nop; delay slot nop
 1270  00001d6c          	L36_LF2:
 1271  00001d6c  8fa20000	lw	r2,0(r29)
 1272  00001d70  8fdffff8	lw	r31,-8(r30)
 1273  00001d74  001ee820	add	r29,r0,r30
 1274  00001d78  8fdefffc	lw	r30,-4(r30)
 1275  00001d7c  4be00000	jr	r31
 1276  00001d80  54000000	nop
 1277  00001d84          	.endproc _dstrlen
 1278  00001d84          	.align 2
 1279  00001d84          	.proc _dstrstr
 1280  00001d84          	.global _dstrstr
 1281  00001d84          	_dstrstr:
 1282                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1283  00001d84  afbefffc	sw	-4(r29),r30; push fp
 1284  00001d88  001df020	add	r30,r0,r29; fp = sp
 1285  00001d8c  afbffff8	sw	-8(r29),r31; push ret addr
 1286  00001d90  2fbd0018	subui	r29,r29,#24; alloc local storage
 1287  00001d94  afa20000	sw	0(r29),r2
 1288  00001d98  23bdfff8	addi	r29,r29,#-8
 1289  00001d9c  001d0820	add	r1,r0,r29
 1290  00001da0  8fc20004	lw	r2,4(r30)
 1291  00001da4  ac220000	sw	(r1),r2
 1292  00001da8  0fffff5c	jal	_dstrlen
 1293  00001dac  54000000	nop; delay slot nop
 1294  00001db0  23bd0008	addi	r29,r29,#8
 1295  00001db4  afc1fff4	sw	-12(r30),r1
 1296  00001db8          	L41_LF2:
 1297  00001db8  8fc10000	lw	r1,(r30)
 1298  00001dbc  90220000	lbu	r2,(r1)
 1299  00001dc0  64410000	snei	r1,r2,#0
 1300  00001dc4  1420000c	bnez	r1,L43_LF2
 1301  00001dc8  54000000	nop; delay slot nop
 1302  00001dcc  08000060	j	L42_LF2
 1303  00001dd0  54000000	nop; delay slot nop
 1304  00001dd4          	L43_LF2:
 1305  00001dd4  23bdfff0	addi	r29,r29,#-16
 1306  00001dd8  001d0820	add	r1,r0,r29
 1307  00001ddc  8fc20000	lw	r2,(r30)
 1308  00001de0  ac220000	sw	(r1),r2
 1309  00001de4  8fc20004	lw	r2,4(r30)
 1310  00001de8  ac220004	sw	4(r1),r2
 1311  00001dec  8fc2fff4	lw	r2,-12(r30)
 1312  00001df0  ac220008	sw	8(r1),r2
 1313  00001df4  0ffffdc0	jal	_dstrncmp
 1314  00001df8  54000000	nop; delay slot nop
 1315  00001dfc  23bd0010	addi	r29,r29,#16
 1316  00001e00  64220000	snei	r2,r1,#0
 1317  00001e04  14400010	bnez	r2,L44_LF2
 1318  00001e08  54000000	nop; delay slot nop
 1319  00001e0c  8fc10000	lw	r1,(r30)
 1320  00001e10  08000028	j	L40_LF2
 1321  00001e14  54000000	nop; delay slot nop
 1322  00001e18          	L44_LF2:
 1323  00001e18  8fc20000	lw	r2,(r30)
 1324  00001e1c  20410001	addi	r1,r2,#1
 1325  00001e20  00011020	add	r2,r0,r1
 1326  00001e24  afc20000	sw	(r30),r2
 1327  00001e28  0bffff8c	j	L41_LF2
 1328  00001e2c  54000000	nop; delay slot nop
 1329  00001e30          	L42_LF2:
 1330  00001e30  20010000	addi	r1,r0,#0
 1331  00001e34  08000004	j	L40_LF2
 1332  00001e38  54000000	nop; delay slot nop
 1333  00001e3c          	L40_LF2:
 1334  00001e3c  8fa20000	lw	r2,0(r29)
 1335  00001e40  8fdffff8	lw	r31,-8(r30)
 1336  00001e44  001ee820	add	r29,r0,r30
 1337  00001e48  8fdefffc	lw	r30,-4(r30)
 1338  00001e4c  4be00000	jr	r31
 1339  00001e50  54000000	nop
 1340  00001e54          	.endproc _dstrstr
 1341  00001e54          	.align 2
 1342  00001e54          	.proc _dmindex
 1343  00001e54          	.global _dmindex
 1344  00001e54          	_dmindex:
 1345                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1346  00001e54  afbefffc	sw	-4(r29),r30; push fp
 1347  00001e58  001df020	add	r30,r0,r29; fp = sp
 1348  00001e5c  afbffff8	sw	-8(r29),r31; push ret addr
 1349  00001e60  2fbd0018	subui	r29,r29,#24; alloc local storage
 1350  00001e64  afa20000	sw	0(r29),r2
 1351  00001e68  54000000	nop
 1352  00001e6c          	L46_LF2:
 1353  00001e6c  8fc10000	lw	r1,(r30)
 1354  00001e70  90220000	lbu	r2,(r1)
 1355  00001e74  64410000	snei	r1,r2,#0
 1356  00001e78  1420000c	bnez	r1,L48_LF2
 1357  00001e7c  54000000	nop; delay slot nop
 1358  00001e80  08000070	j	L47_LF2
 1359  00001e84  54000000	nop; delay slot nop
 1360  00001e88          	L48_LF2:
 1361  00001e88  8fc10004	lw	r1,4(r30)
 1362  00001e8c  afc1fff4	sw	-12(r30),r1
 1363  00001e90          	L49_LF2:
 1364  00001e90  8fc1fff4	lw	r1,-12(r30)
 1365  00001e94  90220000	lbu	r2,(r1)
 1366  00001e98  64410000	snei	r1,r2,#0
 1367  00001e9c  1420000c	bnez	r1,L52_LF2
 1368  00001ea0  54000000	nop; delay slot nop
 1369  00001ea4  08000044	j	L50_LF2
 1370  00001ea8  54000000	nop; delay slot nop
 1371  00001eac          	L52_LF2:
 1372  00001eac  8fc10000	lw	r1,(r30)
 1373  00001eb0  8fc2fff4	lw	r2,-12(r30)
 1374  00001eb4  90210000	lbu	r1,(r1)
 1375  00001eb8  90420000	lbu	r2,(r2)
 1376  00001ebc  00220828	seq	r1,r1,r2
 1377  00001ec0  10200010	beqz	r1,L51_LF2
 1378  00001ec4  54000000	nop; delay slot nop
 1379  00001ec8  8fc10000	lw	r1,(r30)
 1380  00001ecc  08000030	j	L45_LF2
 1381  00001ed0  54000000	nop; delay slot nop
 1382  00001ed4          	L53_LF2:
 1383  00001ed4          	L51_LF2:
 1384  00001ed4  8fc2fff4	lw	r2,-12(r30)
 1385  00001ed8  20410001	addi	r1,r2,#1
 1386  00001edc  00011020	add	r2,r0,r1
 1387  00001ee0  afc2fff4	sw	-12(r30),r2
 1388  00001ee4  0bffffa8	j	L49_LF2
 1389  00001ee8  54000000	nop; delay slot nop
 1390  00001eec          	L50_LF2:
 1391  00001eec  0bffff7c	j	L46_LF2
 1392  00001ef0  54000000	nop; delay slot nop
 1393  00001ef4          	L47_LF2:
 1394  00001ef4  20010000	addi	r1,r0,#0
 1395  00001ef8  08000004	j	L45_LF2
 1396  00001efc  54000000	nop; delay slot nop
 1397  00001f00          	L45_LF2:
 1398  00001f00  8fa20000	lw	r2,0(r29)
 1399  00001f04  8fdffff8	lw	r31,-8(r30)
 1400  00001f08  001ee820	add	r29,r0,r30
 1401  00001f0c  8fdefffc	lw	r30,-4(r30)
 1402  00001f10  4be00000	jr	r31
 1403  00001f14  54000000	nop
 1404  00001f18          	.endproc _dmindex
 1405  00001f18          	.align 2
 1406  00001f18          	.proc _dindex
 1407  00001f18          	.global _dindex
 1408  00001f18          	_dindex:
 1409                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1410  00001f18  afbefffc	sw	-4(r29),r30; push fp
 1411  00001f1c  001df020	add	r30,r0,r29; fp = sp
 1412  00001f20  afbffff8	sw	-8(r29),r31; push ret addr
 1413  00001f24  2fbd0010	subui	r29,r29,#16; alloc local storage
 1414  00001f28  afa20000	sw	0(r29),r2
 1415  00001f2c  54000000	nop
 1416  00001f30          	L55_LF2:
 1417  00001f30  8fc10000	lw	r1,(r30)
 1418  00001f34  90220000	lbu	r2,(r1)
 1419  00001f38  64410000	snei	r1,r2,#0
 1420  00001f3c  1420000c	bnez	r1,L57_LF2
 1421  00001f40  54000000	nop; delay slot nop
 1422  00001f44  08000040	j	L56_LF2
 1423  00001f48  54000000	nop; delay slot nop
 1424  00001f4c          	L57_LF2:
 1425  00001f4c  8fc10000	lw	r1,(r30)
 1426  00001f50  90220000	lbu	r2,(r1)
 1427  00001f54  8fc10004	lw	r1,4(r30)
 1428  00001f58  00411028	seq	r2,r2,r1
 1429  00001f5c  10400010	beqz	r2,L58_LF2
 1430  00001f60  54000000	nop; delay slot nop
 1431  00001f64  8fc10000	lw	r1,(r30)
 1432  00001f68  08000028	j	L54_LF2
 1433  00001f6c  54000000	nop; delay slot nop
 1434  00001f70          	L58_LF2:
 1435  00001f70  8fc20000	lw	r2,(r30)
 1436  00001f74  20410001	addi	r1,r2,#1
 1437  00001f78  00011020	add	r2,r0,r1
 1438  00001f7c  afc20000	sw	(r30),r2
 1439  00001f80  0bffffac	j	L55_LF2
 1440  00001f84  54000000	nop; delay slot nop
 1441  00001f88          	L56_LF2:
 1442  00001f88  20010000	addi	r1,r0,#0
 1443  00001f8c  08000004	j	L54_LF2
 1444  00001f90  54000000	nop; delay slot nop
 1445  00001f94          	L54_LF2:
 1446  00001f94  8fa20000	lw	r2,0(r29)
 1447  00001f98  8fdffff8	lw	r31,-8(r30)
 1448  00001f9c  001ee820	add	r29,r0,r30
 1449  00001fa0  8fdefffc	lw	r30,-4(r30)
 1450  00001fa4  4be00000	jr	r31
 1451  00001fa8  54000000	nop
 1452  00001fac          	.endproc _dindex
 1453  00001fac          	.align 2
 1454  00001fac          	.proc _ditoa
 1455  00001fac          	.global _ditoa
 1456  00001fac          	_ditoa:
 1457                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1458  00001fac  afbefffc	sw	-4(r29),r30; push fp
 1459  00001fb0  001df020	add	r30,r0,r29; fp = sp
 1460  00001fb4  afbffff8	sw	-8(r29),r31; push ret addr
 1461  00001fb8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1462  00001fbc  afa20000	sw	0(r29),r2
 1463  00001fc0  afa30004	sw	4(r29),r3
 1464  00001fc4  8fc10000	lw	r1,(r30)
 1465  00001fc8  68220000	slti	r2,r1,#0
 1466  00001fcc  1040002c	beqz	r2,L60_LF2
 1467  00001fd0  54000000	nop; delay slot nop
 1468  00001fd4  8fc10004	lw	r1,4(r30)
 1469  00001fd8  20220001	addi	r2,r1,#1
 1470  00001fdc  afc20004	sw	4(r30),r2
 1471  00001fe0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1472  00001fe4  a0220000	sb	(r1),r2
 1473  00001fe8  8fc10000	lw	r1,(r30)
 1474  00001fec  00011022	sub	r2,r0,r1
 1475  00001ff0  afc20000	sw	(r30),r2
 1476  00001ff4  08000118	j	L61_LF2
 1477  00001ff8  54000000	nop; delay slot nop
 1478  00001ffc          	L60_LF2:
 1479  00001ffc  8fc10000	lw	r1,(r30)
 1480  00002000  64220000	snei	r2,r1,#0
 1481  00002004  14400020	bnez	r2,L62_LF2
 1482  00002008  54000000	nop; delay slot nop
 1483  0000200c  8fc10004	lw	r1,4(r30)
 1484  00002010  20220001	addi	r2,r1,#1
 1485  00002014  afc20004	sw	4(r30),r2
 1486  00002018  20020030	addi	r2,r0,(#0x30)&0xff
 1487  0000201c  a0220000	sb	(r1),r2
 1488  00002020  080000ec	j	L61_LF2
 1489  00002024  54000000	nop; delay slot nop
 1490  00002028          	L62_LF2:
 1491  00002028  20010001	addi	r1,r0,#1
 1492  0000202c  afc1fff4	sw	-12(r30),r1
 1493  00002030          	L64_LF2:
 1494  00002030  8fc1fff4	lw	r1,-12(r30)
 1495  00002034  8fc20000	lw	r2,(r30)
 1496  00002038  0022082c	sle	r1,r1,r2
 1497  0000203c  1420000c	bnez	r1,L66_LF2
 1498  00002040  54000000	nop; delay slot nop
 1499  00002044  08000024	j	L65_LF2
 1500  00002048  54000000	nop; delay slot nop
 1501  0000204c          	L67_LF2:
 1502  0000204c          	L66_LF2:
 1503  0000204c  8fc1fff4	lw	r1,-12(r30)
 1504  00002050  00011820	add	r3,r0,r1
 1505  00002054  50620002	slli	r2,r3,#0x2
 1506  00002058  00411020	add	r2,r2,r1
 1507  0000205c  50410001	slli	r1,r2,#0x1
 1508  00002060  afc1fff4	sw	-12(r30),r1
 1509  00002064  0bffffc8	j	L64_LF2
 1510  00002068  54000000	nop; delay slot nop
 1511  0000206c          	L65_LF2:
 1512  0000206c  54000000	nop
 1513  00002070          	L68_LF2:
 1514  00002070  8fc1fff4	lw	r1,-12(r30)
 1515  00002074  2002000a	addi	r2,r0,#10
 1516  00002078  00200035	movi2fp	f0,r1
 1517  0000207c  00400835	movi2fp	f1,r2
 1518  00002080  0401000f	div	f0,f0,f1
 1519  00002084  00000834	movfp2i	r1,f0
 1520  00002088  afc1fff4	sw	-12(r30),r1
 1521  0000208c  8fc10004	lw	r1,4(r30)
 1522  00002090  20220001	addi	r2,r1,#1
 1523  00002094  afc20004	sw	4(r30),r2
 1524  00002098  8fc20000	lw	r2,(r30)
 1525  0000209c  8fc3fff4	lw	r3,-12(r30)
 1526  000020a0  00400035	movi2fp	f0,r2
 1527  000020a4  00600835	movi2fp	f1,r3
 1528  000020a8  0401000f	div	f0,f0,f1
 1529  000020ac  00001034	movfp2i	r2,f0
 1530  000020b0  00021820	add	r3,r0,r2
 1531  000020b4  20620030	addi	r2,r3,#48
 1532  000020b8  a0220000	sb	(r1),r2
 1533  000020bc  8fc10000	lw	r1,(r30)
 1534  000020c0  8fc3fff4	lw	r3,-12(r30)
 1535  000020c4  00200035	movi2fp	f0,r1
 1536  000020c8  00600835	movi2fp	f1,r3
 1537  000020cc  0401000f	div	f0,f0,f1
 1538  000020d0  00001034	movfp2i	r2,f0
 1539  000020d4  8fc3fff4	lw	r3,-12(r30)
 1540  000020d8  00400035	movi2fp	f0,r2
 1541  000020dc  00600835	movi2fp	f1,r3
 1542  000020e0  0401000e	mult	f0,f0,f1
 1543  000020e4  00001034	movfp2i	r2,f0
 1544  000020e8  00220822	sub	r1,r1,r2
 1545  000020ec  afc10000	sw	(r30),r1
 1546  000020f0          	L70_LF2:
 1547  000020f0  8fc1fff4	lw	r1,-12(r30)
 1548  000020f4  6c220001	sgti	r2,r1,#1
 1549  000020f8  1440000c	bnez	r2,L71_LF2
 1550  000020fc  54000000	nop; delay slot nop
 1551  00002100  0800000c	j	L61_LF2
 1552  00002104  54000000	nop; delay slot nop
 1553  00002108          	L71_LF2:
 1554  00002108  0bffff64	j	L68_LF2
 1555  0000210c  54000000	nop; delay slot nop
 1556  00002110          	L69_LF2:
 1557  00002110          	L63_LF2:
 1558  00002110          	L61_LF2:
 1559  00002110  8fc10004	lw	r1,4(r30)
 1560  00002114  20020000	addi	r2,r0,(#0x0)&0xff
 1561  00002118  a0220000	sb	(r1),r2
 1562  0000211c          	L59_LF2:
 1563  0000211c  8fa20000	lw	r2,0(r29)
 1564  00002120  8fa30004	lw	r3,4(r29)
 1565  00002124  8fdffff8	lw	r31,-8(r30)
 1566  00002128  001ee820	add	r29,r0,r30
 1567  0000212c  8fdefffc	lw	r30,-4(r30)
 1568  00002130  4be00000	jr	r31
 1569  00002134  54000000	nop
 1570  00002138          	.endproc _ditoa
 1571  00002138          	.align 2
 1572  00002138          	.proc _dstrtol
 1573  00002138          	.global _dstrtol
 1574  00002138          	_dstrtol:
 1575                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1576  00002138  afbefffc	sw	-4(r29),r30; push fp
 1577  0000213c  001df020	add	r30,r0,r29; fp = sp
 1578  00002140  afbffff8	sw	-8(r29),r31; push ret addr
 1579  00002144  2fbd0020	subui	r29,r29,#32; alloc local storage
 1580  00002148  afa20000	sw	0(r29),r2
 1581  0000214c  20010000	addi	r1,r0,#0
 1582  00002150  afc1fff4	sw	-12(r30),r1
 1583  00002154          	L73_LF2:
 1584  00002154  8fc10000	lw	r1,(r30)
 1585  00002158  90220000	lbu	r2,(r1)
 1586  0000215c  60410020	seqi	r1,r2,#32
 1587  00002160  14200034	bnez	r1,L75_LF2
 1588  00002164  54000000	nop; delay slot nop
 1589  00002168  8fc10000	lw	r1,(r30)
 1590  0000216c  90220000	lbu	r2,(r1)
 1591  00002170  60410009	seqi	r1,r2,#9
 1592  00002174  14200020	bnez	r1,L75_LF2
 1593  00002178  54000000	nop; delay slot nop
 1594  0000217c  8fc10000	lw	r1,(r30)
 1595  00002180  90220000	lbu	r2,(r1)
 1596  00002184  6041000a	seqi	r1,r2,#10
 1597  00002188  1420000c	bnez	r1,L75_LF2
 1598  0000218c  54000000	nop; delay slot nop
 1599  00002190  0800001c	j	L74_LF2
 1600  00002194  54000000	nop; delay slot nop
 1601  00002198          	L75_LF2:
 1602  00002198  8fc20000	lw	r2,(r30)
 1603  0000219c  20410001	addi	r1,r2,#1
 1604  000021a0  00011020	add	r2,r0,r1
 1605  000021a4  afc20000	sw	(r30),r2
 1606  000021a8  0bffffa8	j	L73_LF2
 1607  000021ac  54000000	nop; delay slot nop
 1608  000021b0          	L74_LF2:
 1609  000021b0  8fc10004	lw	r1,4(r30)
 1610  000021b4  64220000	snei	r2,r1,#0
 1611  000021b8  10400010	beqz	r2,L76_LF2
 1612  000021bc  54000000	nop; delay slot nop
 1613  000021c0  8fc10004	lw	r1,4(r30)
 1614  000021c4  8fc20000	lw	r2,(r30)
 1615  000021c8  ac220000	sw	(r1),r2
 1616  000021cc          	L76_LF2:
 1617  000021cc  8fc10000	lw	r1,(r30)
 1618  000021d0  90220000	lbu	r2,(r1)
 1619  000021d4  64410000	snei	r1,r2,#0
 1620  000021d8  14200010	bnez	r1,L77_LF2
 1621  000021dc  54000000	nop; delay slot nop
 1622  000021e0  8fc1fff4	lw	r1,-12(r30)
 1623  000021e4  08000294	j	L72_LF2
 1624  000021e8  54000000	nop; delay slot nop
 1625  000021ec          	L77_LF2:
 1626  000021ec  8fc10000	lw	r1,(r30)
 1627  000021f0  90220000	lbu	r2,(r1)
 1628  000021f4  6041002d	seqi	r1,r2,#45
 1629  000021f8  10200024	beqz	r1,L78_LF2
 1630  000021fc  54000000	nop; delay slot nop
 1631  00002200  2001ffff	addi	r1,r0,#-1
 1632  00002204  afc1ffec	sw	-20(r30),r1
 1633  00002208  8fc20000	lw	r2,(r30)
 1634  0000220c  20410001	addi	r1,r2,#1
 1635  00002210  00011020	add	r2,r0,r1
 1636  00002214  afc20000	sw	(r30),r2
 1637  00002218  0800000c	j	L79_LF2
 1638  0000221c  54000000	nop; delay slot nop
 1639  00002220          	L78_LF2:
 1640  00002220  20010001	addi	r1,r0,#1
 1641  00002224  afc1ffec	sw	-20(r30),r1
 1642  00002228          	L79_LF2:
 1643  00002228  8fc10008	lw	r1,8(r30)
 1644  0000222c  64220000	snei	r2,r1,#0
 1645  00002230  14400090	bnez	r2,L80_LF2
 1646  00002234  54000000	nop; delay slot nop
 1647  00002238  8fc10000	lw	r1,(r30)
 1648  0000223c  90220000	lbu	r2,(r1)
 1649  00002240  60410030	seqi	r1,r2,#48
 1650  00002244  10200074	beqz	r1,L81_LF2
 1651  00002248  54000000	nop; delay slot nop
 1652  0000224c  8fc20000	lw	r2,(r30)
 1653  00002250  20410001	addi	r1,r2,#1
 1654  00002254  00011020	add	r2,r0,r1
 1655  00002258  afc20000	sw	(r30),r2
 1656  0000225c  8fc10000	lw	r1,(r30)
 1657  00002260  90220000	lbu	r2,(r1)
 1658  00002264  60410078	seqi	r1,r2,#120
 1659  00002268  14200020	bnez	r1,L83_LF2
 1660  0000226c  54000000	nop; delay slot nop
 1661  00002270  8fc10000	lw	r1,(r30)
 1662  00002274  90220000	lbu	r2,(r1)
 1663  00002278  60410058	seqi	r1,r2,#88
 1664  0000227c  1420000c	bnez	r1,L83_LF2
 1665  00002280  54000000	nop; delay slot nop
 1666  00002284  08000024	j	L82_LF2
 1667  00002288  54000000	nop; delay slot nop
 1668  0000228c          	L83_LF2:
 1669  0000228c  20010010	addi	r1,r0,#16
 1670  00002290  afc10008	sw	8(r30),r1
 1671  00002294  8fc20000	lw	r2,(r30)
 1672  00002298  20410001	addi	r1,r2,#1
 1673  0000229c  00011020	add	r2,r0,r1
 1674  000022a0  afc20000	sw	(r30),r2
 1675  000022a4  0800000c	j	L84_LF2
 1676  000022a8  54000000	nop; delay slot nop
 1677  000022ac          	L82_LF2:
 1678  000022ac  20010008	addi	r1,r0,#8
 1679  000022b0  afc10008	sw	8(r30),r1
 1680  000022b4          	L84_LF2:
 1681  000022b4  0800000c	j	L80_LF2
 1682  000022b8  54000000	nop; delay slot nop
 1683  000022bc          	L81_LF2:
 1684  000022bc  2001000a	addi	r1,r0,#10
 1685  000022c0  afc10008	sw	8(r30),r1
 1686  000022c4          	L85_LF2:
 1687  000022c4          	L80_LF2:
 1688  000022c4  8fc10008	lw	r1,8(r30)
 1689  000022c8  70220000	slei	r2,r1,#0
 1690  000022cc  1440001c	bnez	r2,L87_LF2
 1691  000022d0  54000000	nop; delay slot nop
 1692  000022d4  8fc10008	lw	r1,8(r30)
 1693  000022d8  6c220010	sgti	r2,r1,#16
 1694  000022dc  1440000c	bnez	r2,L87_LF2
 1695  000022e0  54000000	nop; delay slot nop
 1696  000022e4  08000010	j	L86_LF2
 1697  000022e8  54000000	nop; delay slot nop
 1698  000022ec          	L87_LF2:
 1699  000022ec  8fc1fff4	lw	r1,-12(r30)
 1700  000022f0  08000188	j	L72_LF2
 1701  000022f4  54000000	nop; delay slot nop
 1702  000022f8          	L86_LF2:
 1703  000022f8  54000000	nop
 1704  000022fc          	L88_LF2:
 1705  000022fc  8fc10000	lw	r1,(r30)
 1706  00002300  90220000	lbu	r2,(r1)
 1707  00002304  6c41002f	sgtui	r1,r2,#47
 1708  00002308  10200030	beqz	r1,L91_LF2
 1709  0000230c  54000000	nop; delay slot nop
 1710  00002310  8fc10000	lw	r1,(r30)
 1711  00002314  90220000	lbu	r2,(r1)
 1712  00002318  70410039	sleui	r1,r2,#57
 1713  0000231c  1020001c	beqz	r1,L91_LF2
 1714  00002320  54000000	nop; delay slot nop
 1715  00002324  8fc10000	lw	r1,(r30)
 1716  00002328  90220000	lbu	r2,(r1)
 1717  0000232c  2041ffd0	addi	r1,r2,#-48
 1718  00002330  afc1fff0	sw	-16(r30),r1
 1719  00002334  0800008c	j	L92_LF2
 1720  00002338  54000000	nop; delay slot nop
 1721  0000233c          	L91_LF2:
 1722  0000233c  8fc10000	lw	r1,(r30)
 1723  00002340  90220000	lbu	r2,(r1)
 1724  00002344  6c410060	sgtui	r1,r2,#96
 1725  00002348  10200030	beqz	r1,L93_LF2
 1726  0000234c  54000000	nop; delay slot nop
 1727  00002350  8fc10000	lw	r1,(r30)
 1728  00002354  90220000	lbu	r2,(r1)
 1729  00002358  7041007a	sleui	r1,r2,#122
 1730  0000235c  1020001c	beqz	r1,L93_LF2
 1731  00002360  54000000	nop; delay slot nop
 1732  00002364  8fc10000	lw	r1,(r30)
 1733  00002368  90220000	lbu	r2,(r1)
 1734  0000236c  2041ffa9	addi	r1,r2,#-87
 1735  00002370  afc1fff0	sw	-16(r30),r1
 1736  00002374  0800004c	j	L92_LF2
 1737  00002378  54000000	nop; delay slot nop
 1738  0000237c          	L93_LF2:
 1739  0000237c  8fc10000	lw	r1,(r30)
 1740  00002380  90220000	lbu	r2,(r1)
 1741  00002384  6c410040	sgtui	r1,r2,#64
 1742  00002388  10200030	beqz	r1,L95_LF2
 1743  0000238c  54000000	nop; delay slot nop
 1744  00002390  8fc10000	lw	r1,(r30)
 1745  00002394  90220000	lbu	r2,(r1)
 1746  00002398  7041005a	sleui	r1,r2,#90
 1747  0000239c  1020001c	beqz	r1,L95_LF2
 1748  000023a0  54000000	nop; delay slot nop
 1749  000023a4  8fc10000	lw	r1,(r30)
 1750  000023a8  90220000	lbu	r2,(r1)
 1751  000023ac  2041ffc9	addi	r1,r2,#-55
 1752  000023b0  afc1fff0	sw	-16(r30),r1
 1753  000023b4  0800000c	j	L92_LF2
 1754  000023b8  54000000	nop; delay slot nop
 1755  000023bc          	L95_LF2:
 1756  000023bc  200103e8	addi	r1,r0,#1000
 1757  000023c0  afc1fff0	sw	-16(r30),r1
 1758  000023c4          	L96_LF2:
 1759  000023c4          	L94_LF2:
 1760  000023c4          	L92_LF2:
 1761  000023c4  8fc1fff0	lw	r1,-16(r30)
 1762  000023c8  8fc20008	lw	r2,8(r30)
 1763  000023cc  0022082a	slt	r1,r1,r2
 1764  000023d0  10200040	beqz	r1,L90_LF2
 1765  000023d4  54000000	nop; delay slot nop
 1766  000023d8  8fc1fff4	lw	r1,-12(r30)
 1767  000023dc  8fc20008	lw	r2,8(r30)
 1768  000023e0  00200035	movi2fp	f0,r1
 1769  000023e4  00400835	movi2fp	f1,r2
 1770  000023e8  0401000e	mult	f0,f0,f1
 1771  000023ec  00000834	movfp2i	r1,f0
 1772  000023f0  afc1fff4	sw	-12(r30),r1
 1773  000023f4  8fc1fff4	lw	r1,-12(r30)
 1774  000023f8  8fc2fff0	lw	r2,-16(r30)
 1775  000023fc  00220820	add	r1,r1,r2
 1776  00002400  afc1fff4	sw	-12(r30),r1
 1777  00002404  8fc20000	lw	r2,(r30)
 1778  00002408  20410001	addi	r1,r2,#1
 1779  0000240c  00011020	add	r2,r0,r1
 1780  00002410  afc20000	sw	(r30),r2
 1781  00002414          	L97_LF2:
 1782  00002414          	L90_LF2:
 1783  00002414  8fc1fff0	lw	r1,-16(r30)
 1784  00002418  8fc20008	lw	r2,8(r30)
 1785  0000241c  0022082a	slt	r1,r1,r2
 1786  00002420  1420000c	bnez	r1,L98_LF2
 1787  00002424  54000000	nop; delay slot nop
 1788  00002428  0800000c	j	L89_LF2
 1789  0000242c  54000000	nop; delay slot nop
 1790  00002430          	L98_LF2:
 1791  00002430  0bfffec8	j	L88_LF2
 1792  00002434  54000000	nop; delay slot nop
 1793  00002438          	L89_LF2:
 1794  00002438  8fc10004	lw	r1,4(r30)
 1795  0000243c  64220000	snei	r2,r1,#0
 1796  00002440  10400010	beqz	r2,L99_LF2
 1797  00002444  54000000	nop; delay slot nop
 1798  00002448  8fc10004	lw	r1,4(r30)
 1799  0000244c  8fc20000	lw	r2,(r30)
 1800  00002450  ac220000	sw	(r1),r2
 1801  00002454          	L99_LF2:
 1802  00002454  8fc1fff4	lw	r1,-12(r30)
 1803  00002458  8fc2ffec	lw	r2,-20(r30)
 1804  0000245c  00200035	movi2fp	f0,r1
 1805  00002460  00400835	movi2fp	f1,r2
 1806  00002464  0401000e	mult	f0,f0,f1
 1807  00002468  00000834	movfp2i	r1,f0
 1808  0000246c  afc1fff4	sw	-12(r30),r1
 1809  00002470  8fc1fff4	lw	r1,-12(r30)
 1810  00002474  08000004	j	L72_LF2
 1811  00002478  54000000	nop; delay slot nop
 1812  0000247c          	L72_LF2:
 1813  0000247c  8fa20000	lw	r2,0(r29)
 1814  00002480  8fdffff8	lw	r31,-8(r30)
 1815  00002484  001ee820	add	r29,r0,r30
 1816  00002488  8fdefffc	lw	r30,-4(r30)
 1817  0000248c  4be00000	jr	r31
 1818  00002490  54000000	nop
 1819  00002494          	.endproc _dstrtol
 1820  00002494          	.align 2
 1821  00002494          	.proc _bcopy
 1822  00002494          	.global _bcopy
 1823  00002494          	_bcopy:
 1824                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1825  00002494  afbefffc	sw	-4(r29),r30; push fp
 1826  00002498  001df020	add	r30,r0,r29; fp = sp
 1827  0000249c  afbffff8	sw	-8(r29),r31; push ret addr
 1828  000024a0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1829  000024a4  afa20000	sw	0(r29),r2
 1830  000024a8  afa30004	sw	4(r29),r3
 1831  000024ac  54000000	nop
 1832  000024b0          	L101_LF2:
 1833  000024b0  8fc10008	lw	r1,8(r30)
 1834  000024b4  2022ffff	addi	r2,r1,#-1
 1835  000024b8  afc20008	sw	8(r30),r2
 1836  000024bc  6c210000	sgti	r1,r1,#0
 1837  000024c0  1420000c	bnez	r1,L103_LF2
 1838  000024c4  54000000	nop; delay slot nop
 1839  000024c8  0800002c	j	L102_LF2
 1840  000024cc  54000000	nop; delay slot nop
 1841  000024d0          	L103_LF2:
 1842  000024d0  8fc10004	lw	r1,4(r30)
 1843  000024d4  20220001	addi	r2,r1,#1
 1844  000024d8  afc20004	sw	4(r30),r2
 1845  000024dc  8fc20000	lw	r2,(r30)
 1846  000024e0  20430001	addi	r3,r2,#1
 1847  000024e4  afc30000	sw	(r30),r3
 1848  000024e8  80420000	lb	r2,(r2)
 1849  000024ec  a0220000	sb	(r1),r2
 1850  000024f0  0bffffbc	j	L101_LF2
 1851  000024f4  54000000	nop; delay slot nop
 1852  000024f8          	L102_LF2:
 1853  000024f8          	L100_LF2:
 1854  000024f8  8fa20000	lw	r2,0(r29)
 1855  000024fc  8fa30004	lw	r3,4(r29)
 1856  00002500  8fdffff8	lw	r31,-8(r30)
 1857  00002504  001ee820	add	r29,r0,r30
 1858  00002508  8fdefffc	lw	r30,-4(r30)
 1859  0000250c  4be00000	jr	r31
 1860  00002510  54000000	nop
 1861  00002514          	.endproc _bcopy
 1862  00002514          	.align 2
 1863  00002514          	.proc _bzero
 1864  00002514          	.global _bzero
 1865  00002514          	_bzero:
 1866                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1867  00002514  afbefffc	sw	-4(r29),r30; push fp
 1868  00002518  001df020	add	r30,r0,r29; fp = sp
 1869  0000251c  afbffff8	sw	-8(r29),r31; push ret addr
 1870  00002520  2fbd0010	subui	r29,r29,#16; alloc local storage
 1871  00002524  afa20000	sw	0(r29),r2
 1872  00002528  54000000	nop
 1873  0000252c          	L105_LF2:
 1874  0000252c  8fc10004	lw	r1,4(r30)
 1875  00002530  2022ffff	addi	r2,r1,#-1
 1876  00002534  afc20004	sw	4(r30),r2
 1877  00002538  6c210000	sgti	r1,r1,#0
 1878  0000253c  1420000c	bnez	r1,L107_LF2
 1879  00002540  54000000	nop; delay slot nop
 1880  00002544  08000020	j	L106_LF2
 1881  00002548  54000000	nop; delay slot nop
 1882  0000254c          	L107_LF2:
 1883  0000254c  8fc10000	lw	r1,(r30)
 1884  00002550  20220001	addi	r2,r1,#1
 1885  00002554  afc20000	sw	(r30),r2
 1886  00002558  20020000	addi	r2,r0,(#0x0)&0xff
 1887  0000255c  a0220000	sb	(r1),r2
 1888  00002560  0bffffc8	j	L105_LF2
 1889  00002564  54000000	nop; delay slot nop
 1890  00002568          	L106_LF2:
 1891  00002568          	L104_LF2:
 1892  00002568  8fa20000	lw	r2,0(r29)
 1893  0000256c  8fdffff8	lw	r31,-8(r30)
 1894  00002570  001ee820	add	r29,r0,r30
 1895  00002574  8fdefffc	lw	r30,-4(r30)
 1896  00002578  4be00000	jr	r31
 1897  0000257c  54000000	nop
 1898  00002580          	.endproc _bzero
 1899  00002580          	.align 2
 1900  00002580          	.proc _min
 1901  00002580          	.global _min
 1902  00002580          	_min:
 1903                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1904  00002580  afbefffc	sw	-4(r29),r30; push fp
 1905  00002584  001df020	add	r30,r0,r29; fp = sp
 1906  00002588  afbffff8	sw	-8(r29),r31; push ret addr
 1907  0000258c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1908  00002590  afa20000	sw	0(r29),r2
 1909  00002594  afa30004	sw	4(r29),r3
 1910  00002598  8fc10000	lw	r1,(r30)
 1911  0000259c  8fc20004	lw	r2,4(r30)
 1912  000025a0  0022182c	sle	r3,r1,r2
 1913  000025a4  14600008	bnez	r3,L109_LF2
 1914  000025a8  54000000	nop; delay slot nop
 1915  000025ac  8fc10004	lw	r1,4(r30)
 1916  000025b0          	L109_LF2:
 1917  000025b0  08000004	j	L108_LF2
 1918  000025b4  54000000	nop; delay slot nop
 1919  000025b8          	L108_LF2:
 1920  000025b8  8fa20000	lw	r2,0(r29)
 1921  000025bc  8fa30004	lw	r3,4(r29)
 1922  000025c0  8fdffff8	lw	r31,-8(r30)
 1923  000025c4  001ee820	add	r29,r0,r30
 1924  000025c8  8fdefffc	lw	r30,-4(r30)
 1925  000025cc  4be00000	jr	r31
 1926  000025d0  54000000	nop
 1927  000025d4          	.endproc _min
 1928  000025d4          	.align 2
 1929  000025d4          	.proc _max
 1930  000025d4          	.global _max
 1931  000025d4          	_max:
 1932                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1933  000025d4  afbefffc	sw	-4(r29),r30; push fp
 1934  000025d8  001df020	add	r30,r0,r29; fp = sp
 1935  000025dc  afbffff8	sw	-8(r29),r31; push ret addr
 1936  000025e0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1937  000025e4  afa20000	sw	0(r29),r2
 1938  000025e8  afa30004	sw	4(r29),r3
 1939  000025ec  8fc10000	lw	r1,(r30)
 1940  000025f0  8fc20004	lw	r2,4(r30)
 1941  000025f4  0022182d	sge	r3,r1,r2
 1942  000025f8  14600008	bnez	r3,L111_LF2
 1943  000025fc  54000000	nop; delay slot nop
 1944  00002600  8fc10004	lw	r1,4(r30)
 1945  00002604          	L111_LF2:
 1946  00002604  08000004	j	L110_LF2
 1947  00002608  54000000	nop; delay slot nop
 1948  0000260c          	L110_LF2:
 1949  0000260c  8fa20000	lw	r2,0(r29)
 1950  00002610  8fa30004	lw	r3,4(r29)
 1951  00002614  8fdffff8	lw	r31,-8(r30)
 1952  00002618  001ee820	add	r29,r0,r30
 1953  0000261c  8fdefffc	lw	r30,-4(r30)
 1954  00002620  4be00000	jr	r31
 1955  00002624  54000000	nop
 1956  00002628          	.endproc _max
 1957                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1958                      ;;;
 1959                      ;;; Most of the traps are called in files from libtraps.
 1962  00002628          	.align 2
 1963  00002628          	.proc _exit
 1964  00002628          	.global _exit
 1965  00002628          	_exit:
 1966  00002628  44000300	trap	#0x300
 1967  0000262c  4be00000	jr	r31
 1968  00002630  54000000	nop
 1969  00002634          	.endproc _exit
 1971                      ; for the benefit of gcc.
 1972  00002634          	.proc ___main
 1973  00002634          	.global ___main
 1974  00002634          	___main:
 1975  00002634  4be00000	jr	r31
 1976  00002638  54000000	nop
 1977  0000263c          	.endproc ___main
 1978  0000263c          	.text
 1979  0000263c          	.global _etext
 1980  0000263c          	_etext:
 1981  0000263c          	.align 3
 1982  00002640          	.data
 1983  000036f6          	.global _edata
 1984  000036f6          	_edata:
