 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 194
    4                      ; Text size: 4520
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  74657374	.ascii "test malloc: failed\n\000"
   82  00003004  206d616c	
   82  00003008  6c6f633a	
   82  0000300c  20666169	
   82  00003010  6c65640a	
   82  00003014  00      	
   83  00003015          	.align 2
   84  00003018          	LC1_LF0:
   85  00003018  74657374	.ascii "test: malloc: block1: %d\n\000"
   85  0000301c  3a206d61	
   85  00003020  6c6c6f63	
   85  00003024  3a20626c	
   85  00003028  6f636b31	
   85  0000302c  3a202564	
   85  00003030  0a00    	
   86  00003032          	.align 2
   87  00003034          	LC2_LF0:
   88  00003034  74657374	.ascii "test: malloc: block2: %d\n\000"
   88  00003038  3a206d61	
   88  0000303c  6c6c6f63	
   88  00003040  3a20626c	
   88  00003044  6f636b32	
   88  00003048  3a202564	
   88  0000304c  0a00    	
   89  0000304e          	.align 2
   90  00003050          	LC3_LF0:
   91  00003050  74657374	.ascii "test: malloc: block3: %d\n\000"
   91  00003054  3a206d61	
   91  00003058  6c6c6f63	
   91  0000305c  3a20626c	
   91  00003060  6f636b33	
   91  00003064  3a202564	
   91  00003068  0a00    	
   92  0000306a          	.align 2
   93  0000306c          	LC4_LF0:
   94  0000306c  74657374	.ascii "test: malloc: block4: %d\n\000"
   94  00003070  3a206d61	
   94  00003074  6c6c6f63	
   94  00003078  3a20626c	
   94  0000307c  6f636b34	
   94  00003080  3a202564	
   94  00003084  0a00    	
   95  00003086          	.align 2
   96  00003088          	LC5_LF0:
   97  00003088  74657374	.ascii "test mfree: failed\n\000"
   97  0000308c  206d6672	
   97  00003090  65653a20	
   97  00003094  6661696c	
   97  00003098  65640a00	
   98  0000309c          	.align 2
   99  0000309c          	LC6_LF0:
  100  0000309c  74657374	.ascii "test: malloc: block2 after mfree: %d\n\000"
  100  000030a0  3a206d61	
  100  000030a4  6c6c6f63	
  100  000030a8  3a20626c	
  100  000030ac  6f636b32	
  100  000030b0  20616674	
  100  000030b4  6572206d	
  100  000030b8  66726565	
  100  000030bc  3a202564	
  100  000030c0  0a00    	
  101  000030c2          	.text
  102  000010d4          	.align 2
  103  000010d4          	.proc _main
  104  000010d4          	.global _main
  105  000010d4          	_main:
  106                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  107  000010d4  afbefffc	sw	-4(r29),r30; push fp
  108  000010d8  001df020	add	r30,r0,r29; fp = sp
  109  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  110  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  111  000010e4  8fc20004	lw	r2,4(r30)
  112  000010e8  0c0010b4	jal	___main
  113  000010ec  54000000	nop; not filled.
  114  000010f0  23bdfff0	addi	r29,r29,#-16
  115  000010f4  8c420004	lw	r2,4(r2)
  116  000010f8  afa20000	sw	(r29),r2
  117  000010fc  20060000	addi	r6,r0,#0
  118  00001100  afa60004	sw	4(r29),r6
  119  00001104  2006000a	addi	r6,r0,#10
  120  00001108  afa60008	sw	8(r29),r6
  121  0000110c  0c000b94	jal	_dstrtol
  122  00001110  54000000	nop; not filled.
  123  00001114  20060028	addi	r6,r0,#40
  124  00001118  afa60000	sw	(r29),r6
  125  0000111c  0c0002d4	jal	_malloc
  126  00001120  54000000	nop; not filled.
  127  00001124  00012020	add	r4,r0,r1
  128  00001128  20060020	addi	r6,r0,#32
  129  0000112c  afa60000	sw	(r29),r6
  130  00001130  0c0002c0	jal	_malloc
  131  00001134  54000000	nop; not filled.
  132  00001138  00011020	add	r2,r0,r1
  133  0000113c  20060018	addi	r6,r0,#24
  134  00001140  afa60000	sw	(r29),r6
  135  00001144  0c0002ac	jal	_malloc
  136  00001148  54000000	nop; not filled.
  137  0000114c  00012820	add	r5,r0,r1
  138  00001150  20060010	addi	r6,r0,#16
  139  00001154  afa60000	sw	(r29),r6
  140  00001158  0c000298	jal	_malloc
  141  0000115c  54000000	nop; not filled.
  142  00001160  00011820	add	r3,r0,r1
  143  00001164  23bd0010	addi	r29,r29,#16
  144  00001168  64810000	snei	r1,r4,#0
  145  0000116c  10200028	beqz	r1,L15_LF0
  146  00001170  54000000	nop; not filled.
  147  00001174  64410000	snei	r1,r2,#0
  148  00001178  1020001c	beqz	r1,L15_LF0
  149  0000117c  54000000	nop; not filled.
  150  00001180  64a10000	snei	r1,r5,#0
  151  00001184  10200010	beqz	r1,L15_LF0
  152  00001188  54000000	nop; not filled.
  153  0000118c  64610000	snei	r1,r3,#0
  154  00001190  1420001c	bnez	r1,L14_LF0
  155  00001194  54000000	nop; not filled.
  156  00001198          	L15_LF0:
  157  00001198  23bdfff8	addi	r29,r29,#-8
  158  0000119c  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  159  000011a0  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  160  000011a4  afa60000	sw	(r29),r6
  161  000011a8  080000d8	j	L17_LF0
  162  000011ac  54000000	nop; not filled.
  163  000011b0          	L14_LF0:
  164  000011b0  23bdfff8	addi	r29,r29,#-8
  165  000011b4  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  166  000011b8  24c63018	addui	r6,r6,(LC1_LF0)&0xffff
  167  000011bc  afa60000	sw	(r29),r6
  168  000011c0  afa40004	sw	4(r29),r4
  169  000011c4  0c000118	jal	_Printf
  170  000011c8  54000000	nop; not filled.
  171  000011cc  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  172  000011d0  24c63034	addui	r6,r6,(LC2_LF0)&0xffff
  173  000011d4  afa60000	sw	(r29),r6
  174  000011d8  afa20004	sw	4(r29),r2
  175  000011dc  0c000100	jal	_Printf
  176  000011e0  54000000	nop; not filled.
  177  000011e4  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  178  000011e8  24c63050	addui	r6,r6,(LC3_LF0)&0xffff
  179  000011ec  afa60000	sw	(r29),r6
  180  000011f0  afa50004	sw	4(r29),r5
  181  000011f4  0c0000e8	jal	_Printf
  182  000011f8  54000000	nop; not filled.
  183  000011fc  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  184  00001200  24c6306c	addui	r6,r6,(LC4_LF0)&0xffff
  185  00001204  afa60000	sw	(r29),r6
  186  00001208  afa30004	sw	4(r29),r3
  187  0000120c  0c0000d0	jal	_Printf
  188  00001210  54000000	nop; not filled.
  189  00001214  afa20000	sw	(r29),r2
  190  00001218  0c0001e0	jal	_mfree
  191  0000121c  54000000	nop; not filled.
  192  00001220  00011020	add	r2,r0,r1
  193  00001224  afa30000	sw	(r29),r3
  194  00001228  0c0001d0	jal	_mfree
  195  0000122c  54000000	nop; not filled.
  196  00001230  00411020	add	r2,r2,r1
  197  00001234  23bd0008	addi	r29,r29,#8
  198  00001238  7041002f	slei	r1,r2,#47
  199  0000123c  1020001c	beqz	r1,L16_LF0
  200  00001240  54000000	nop; not filled.
  201  00001244  23bdfff8	addi	r29,r29,#-8
  202  00001248  3c060000	lhi	r6,((LC5_LF0)>>16)&0xffff
  203  0000124c  24c63088	addui	r6,r6,(LC5_LF0)&0xffff
  204  00001250  afa60000	sw	(r29),r6
  205  00001254  0800002c	j	L17_LF0
  206  00001258  54000000	nop; not filled.
  207  0000125c          	L16_LF0:
  208  0000125c  23bdfff8	addi	r29,r29,#-8
  209  00001260  20060010	addi	r6,r0,#16
  210  00001264  afa60000	sw	(r29),r6
  211  00001268  0c000188	jal	_malloc
  212  0000126c  54000000	nop; not filled.
  213  00001270  00011020	add	r2,r0,r1
  214  00001274  3c060000	lhi	r6,((LC6_LF0)>>16)&0xffff
  215  00001278  24c6309c	addui	r6,r6,(LC6_LF0)&0xffff
  216  0000127c  afa60000	sw	(r29),r6
  217  00001280  afa20004	sw	4(r29),r2
  218  00001284          	L17_LF0:
  219  00001284  0c000058	jal	_Printf
  220  00001288  54000000	nop; not filled.
  221  0000128c  23bd0008	addi	r29,r29,#8
  222  00001290  0c000f00	jal	_exit
  223  00001294  54000000	nop
  224  00001298          	.endproc _main
  225                      ;;;
  226                      ;;; Stub functions for DLX traps.
  227                      ;;;
  228                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  229                      ;;;
  230                      ;;; The traps such as Open and Close
  231                      ;;; (note the capital letters) are for use by user programs.  The traps
  232                      ;;; with names such as open and close (lower case) are for use by the OS.
  233                      ;;;
  236  00001298          	.align 2
  238                      ;;; The following are the traps to be used by user-level programs
  239                      ;;;
  241  00001298          	.align 2
  242  00001298          	.proc _Open
  243  00001298          	.global _Open
  244  00001298          	_Open:
  245                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  246                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  247                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  248  00001298  44000213	trap	#0x213
  249  0000129c  4be00000	jr	r31
  250  000012a0  54000000	nop
  251  000012a4          	.endproc _Open
  253  000012a4          	.proc _Close
  254  000012a4          	.global _Close
  255  000012a4          	_Close:
  256  000012a4  44000214	trap	#0x214
  257  000012a8  4be00000	jr	r31
  258  000012ac  54000000	nop
  259  000012b0          	.endproc _Close
  261  000012b0          	.proc _Read
  262  000012b0          	.global _Read
  263  000012b0          	_Read:
  264  000012b0  44000210	trap	#0x210
  265  000012b4  4be00000	jr	r31
  266  000012b8  54000000	nop
  267  000012bc          	.endproc _Read
  269  000012bc          	.proc _Write
  270  000012bc          	.global _Write
  271  000012bc          	_Write:
  272  000012bc  44000211	trap	#0x211
  273  000012c0  4be00000	jr	r31
  274  000012c4  54000000	nop
  275  000012c8          	.endproc _Write
  277  000012c8          	.proc _Lseek
  278  000012c8          	.global _Lseek
  279  000012c8          	_Lseek:
  280  000012c8  44000212	trap	#0x212
  281  000012cc  4be00000	jr	r31
  282  000012d0  54000000	nop
  283  000012d4          	.endproc _Lseek
  285  000012d4          	.proc _Putchar
  286  000012d4          	.global _Putchar
  287  000012d4          	_Putchar:
  288  000012d4  44000280	trap	#0x280
  289  000012d8  4be00000	jr	r31
  290  000012dc  54000000	nop
  291  000012e0          	.endproc _Putchar
  293  000012e0          	.proc _Printf
  294  000012e0          	.global _Printf
  295  000012e0          	_Printf:
  296  000012e0  44000201	trap	#0x201
  297  000012e4  4be00000	jr	r31
  298  000012e8  54000000	nop
  299  000012ec          	.endproc _Printf
  301  000012ec          	.proc _getpid
  302  000012ec          	.global _getpid
  303  000012ec          	_getpid:
  304  000012ec  44000431	trap	#0x431
  305  000012f0  4be00000	jr	r31
  306  000012f4  54000000	nop
  307  000012f8          	.endproc _getpid
  309  000012f8          	.proc _process_create
  310  000012f8          	.global _process_create
  311  000012f8          	_process_create:
  312  000012f8  44000432	trap	#0x432
  313  000012fc  4be00000	jr	r31
  314  00001300  54000000	nop
  315  00001304          	.endproc _process_create
  317  00001304          	.proc _shmget
  318  00001304          	.global _shmget
  319  00001304          	_shmget:
  320  00001304  44000440	trap	#0x440
  321  00001308  4be00000	jr	r31
  322  0000130c  54000000	nop
  323  00001310          	.endproc _shmget
  325  00001310          	.proc _shmat
  326  00001310          	.global _shmat
  327  00001310          	_shmat:
  328  00001310  44000441	trap	#0x441
  329  00001314  4be00000	jr	r31
  330  00001318  54000000	nop
  331  0000131c          	.endproc _shmat
  333  0000131c          	.proc _sem_create
  334  0000131c          	.global _sem_create
  335  0000131c          	_sem_create:
  336  0000131c  44000450	trap	#0x450
  337  00001320  4be00000	jr	r31
  338  00001324  54000000	nop
  339  00001328          	.endproc _sem_create
  341  00001328          	.proc _sem_wait
  342  00001328          	.global _sem_wait
  343  00001328          	_sem_wait:
  344  00001328  44000451	trap	#0x451
  345  0000132c  4be00000	jr	r31
  346  00001330  54000000	nop
  347  00001334          	.endproc _sem_wait
  349  00001334          	.proc _sem_signal
  350  00001334          	.global _sem_signal
  351  00001334          	_sem_signal:
  352  00001334  44000452	trap	#0x452
  353  00001338  4be00000	jr	r31
  354  0000133c  54000000	nop
  355  00001340          	.endproc _sem_signal
  357  00001340          	.proc _lock_create
  358  00001340          	.global _lock_create
  359  00001340          	_lock_create:
  360  00001340  44000453	trap	#0x453
  361  00001344  4be00000	jr	r31
  362  00001348  54000000	nop
  363  0000134c          	.endproc _lock_create
  365  0000134c          	.proc _lock_acquire
  366  0000134c          	.global _lock_acquire
  367  0000134c          	_lock_acquire:
  368  0000134c  44000454	trap	#0x454
  369  00001350  4be00000	jr	r31
  370  00001354  54000000	nop
  371  00001358          	.endproc _lock_acquire
  373  00001358          	.proc _lock_release
  374  00001358          	.global _lock_release
  375  00001358          	_lock_release:
  376  00001358  44000455	trap	#0x455
  377  0000135c  4be00000	jr	r31
  378  00001360  54000000	nop
  379  00001364          	.endproc _lock_release
  381  00001364          	.proc _cond_create
  382  00001364          	.global _cond_create
  383  00001364          	_cond_create:
  384  00001364  44000456	trap	#0x456
  385  00001368  4be00000	jr	r31
  386  0000136c  54000000	nop
  387  00001370          	.endproc _cond_create
  389  00001370          	.proc _cond_wait
  390  00001370          	.global _cond_wait
  391  00001370          	_cond_wait:
  392  00001370  44000457	trap	#0x457
  393  00001374  4be00000	jr	r31
  394  00001378  54000000	nop
  395  0000137c          	.endproc _cond_wait
  397  0000137c          	.proc _cond_signal
  398  0000137c          	.global _cond_signal
  399  0000137c          	_cond_signal:
  400  0000137c  44000458	trap	#0x458
  401  00001380  4be00000	jr	r31
  402  00001384  54000000	nop
  403  00001388          	.endproc _cond_signal
  405  00001388          	.proc _cond_broadcast
  406  00001388          	.global _cond_broadcast
  407  00001388          	_cond_broadcast:
  408  00001388  44000459	trap	#0x459
  409  0000138c  4be00000	jr	r31
  410  00001390  54000000	nop
  411  00001394          	.endproc _cond_broadcast
  413  00001394          	.proc _mbox_create
  414  00001394          	.global _mbox_create
  415  00001394          	_mbox_create:
  416  00001394  44000460	trap	#0x460
  417  00001398  4be00000	jr	r31
  418  0000139c  54000000	nop
  419  000013a0          	.endproc _mbox_create
  421  000013a0          	.proc _mbox_open
  422  000013a0          	.global _mbox_open
  423  000013a0          	_mbox_open:
  424  000013a0  44000461	trap	#0x461
  425  000013a4  4be00000	jr	r31
  426  000013a8  54000000	nop
  427  000013ac          	.endproc _mbox_open
  429  000013ac          	.proc _mbox_close
  430  000013ac          	.global _mbox_close
  431  000013ac          	_mbox_close:
  432  000013ac  44000462	trap	#0x462
  433  000013b0  4be00000	jr	r31
  434  000013b4  54000000	nop
  435  000013b8          	.endproc _mbox_close
  437  000013b8          	.proc _mbox_send
  438  000013b8          	.global _mbox_send
  439  000013b8          	_mbox_send:
  440  000013b8  44000463	trap	#0x463
  441  000013bc  4be00000	jr	r31
  442  000013c0  54000000	nop
  443  000013c4          	.endproc _mbox_send
  445  000013c4          	.proc _mbox_recv
  446  000013c4          	.global _mbox_recv
  447  000013c4          	_mbox_recv:
  448  000013c4  44000464	trap	#0x464
  449  000013c8  4be00000	jr	r31
  450  000013cc  54000000	nop
  451  000013d0          	.endproc _mbox_recv
  453  000013d0          	.proc _sleep
  454  000013d0          	.global _sleep
  455  000013d0          	_sleep:
  456  000013d0  44000465	trap	#0x465
  457  000013d4  4be00000	jr	r31
  458  000013d8  54000000	nop
  459  000013dc          	.endproc _sleep
  461  000013dc          	.proc _yield
  462  000013dc          	.global _yield
  463  000013dc          	_yield:
  464  000013dc  44000466	trap	#0x466
  465  000013e0  4be00000	jr	r31
  466  000013e4  54000000	nop
  467  000013e8          	.endproc _yield
  470  000013e8          	.proc _Exit
  471  000013e8          	.global _Exit
  472  000013e8          	_Exit:
  473  000013e8  44000500	trap	#0x500
  474  000013ec  4be00000	jr	r31
  475  000013f0  54000000	nop
  476  000013f4          	.endproc _Exit
  479  000013f4          	.proc _malloc
  480  000013f4          	.global _malloc
  481  000013f4          	_malloc:
  482  000013f4  44000467	trap	#0x467
  483  000013f8  4be00000	jr	r31
  484  000013fc          	.endproc _malloc
  487  000013fc          	.proc _mfree
  488  000013fc          	.global _mfree
  489  000013fc          	_mfree:
  490  000013fc  44000468	trap	#0x468
  491  00001400  4be00000	jr	r31
  492  00001404          	.endproc _mfree
  493                      ; Compiled by GCC
  495  00001404          	.align 2
  496  00001404          	.proc _isspace
  497  00001404          	.global _isspace
  498  00001404          	_isspace:
  499                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  500  00001404  afbefffc	sw	-4(r29),r30; push fp
  501  00001408  001df020	add	r30,r0,r29; fp = sp
  502  0000140c  afbffff8	sw	-8(r29),r31; push ret addr
  503  00001410  2fbd0018	subui	r29,r29,#24; alloc local storage
  504  00001414  afa20000	sw	0(r29),r2
  505  00001418  afa30004	sw	4(r29),r3
  506  0000141c  afa40008	sw	8(r29),r4
  507  00001420  83c20003	lb	r2,3(r30)
  508  00001424  20010000	addi	r1,r0,#0
  509  00001428  304300ff	andi	r3,r2,#0x00ff
  510  0000142c  60640020	seqi	r4,r3,#32
  511  00001430  1480002c	bnez	r4,L3_LF2
  512  00001434  54000000	nop; delay slot nop
  513  00001438  304300ff	andi	r3,r2,#0x00ff
  514  0000143c  60640009	seqi	r4,r3,#9
  515  00001440  1480001c	bnez	r4,L3_LF2
  516  00001444  54000000	nop; delay slot nop
  517  00001448  304300ff	andi	r3,r2,#0x00ff
  518  0000144c  6064000a	seqi	r4,r3,#10
  519  00001450  1480000c	bnez	r4,L3_LF2
  520  00001454  54000000	nop; delay slot nop
  521  00001458  08000008	j	L2_LF2
  522  0000145c  54000000	nop; delay slot nop
  523  00001460          	L3_LF2:
  524  00001460  20010001	addi	r1,r0,#1
  525  00001464          	L2_LF2:
  526  00001464  08000004	j	L1_LF2
  527  00001468  54000000	nop; delay slot nop
  528  0000146c          	L1_LF2:
  529  0000146c  8fa20000	lw	r2,0(r29)
  530  00001470  8fa30004	lw	r3,4(r29)
  531  00001474  8fa40008	lw	r4,8(r29)
  532  00001478  8fdffff8	lw	r31,-8(r30)
  533  0000147c  001ee820	add	r29,r0,r30
  534  00001480  8fdefffc	lw	r30,-4(r30)
  535  00001484  4be00000	jr	r31
  536  00001488  54000000	nop
  537  0000148c          	.endproc _isspace
  538  0000148c          	.align 2
  539  0000148c          	.proc _isxdigit
  540  0000148c          	.global _isxdigit
  541  0000148c          	_isxdigit:
  542                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  543  0000148c  afbefffc	sw	-4(r29),r30; push fp
  544  00001490  001df020	add	r30,r0,r29; fp = sp
  545  00001494  afbffff8	sw	-8(r29),r31; push ret addr
  546  00001498  2fbd0018	subui	r29,r29,#24; alloc local storage
  547  0000149c  afa20000	sw	0(r29),r2
  548  000014a0  afa30004	sw	4(r29),r3
  549  000014a4  afa40008	sw	8(r29),r4
  550  000014a8  83c20003	lb	r2,3(r30)
  551  000014ac  20010000	addi	r1,r0,#0
  552  000014b0  304300ff	andi	r3,r2,#0x00ff
  553  000014b4  6c64002f	sgtui	r4,r3,#47
  554  000014b8  1080001c	beqz	r4,L7_LF2
  555  000014bc  54000000	nop; delay slot nop
  556  000014c0  304300ff	andi	r3,r2,#0x00ff
  557  000014c4  70640039	sleui	r4,r3,#57
  558  000014c8  1480005c	bnez	r4,L6_LF2
  559  000014cc  54000000	nop; delay slot nop
  560  000014d0  08000004	j	L7_LF2
  561  000014d4  54000000	nop; delay slot nop
  562  000014d8          	L7_LF2:
  563  000014d8  304300ff	andi	r3,r2,#0x00ff
  564  000014dc  6c640060	sgtui	r4,r3,#96
  565  000014e0  1080001c	beqz	r4,L8_LF2
  566  000014e4  54000000	nop; delay slot nop
  567  000014e8  304300ff	andi	r3,r2,#0x00ff
  568  000014ec  70640066	sleui	r4,r3,#102
  569  000014f0  14800034	bnez	r4,L6_LF2
  570  000014f4  54000000	nop; delay slot nop
  571  000014f8  08000004	j	L8_LF2
  572  000014fc  54000000	nop; delay slot nop
  573  00001500          	L8_LF2:
  574  00001500  304300ff	andi	r3,r2,#0x00ff
  575  00001504  6c640040	sgtui	r4,r3,#64
  576  00001508  10800020	beqz	r4,L5_LF2
  577  0000150c  54000000	nop; delay slot nop
  578  00001510  304300ff	andi	r3,r2,#0x00ff
  579  00001514  70640041	sleui	r4,r3,#65
  580  00001518  1480000c	bnez	r4,L6_LF2
  581  0000151c  54000000	nop; delay slot nop
  582  00001520  08000008	j	L5_LF2
  583  00001524  54000000	nop; delay slot nop
  584  00001528          	L6_LF2:
  585  00001528  20010001	addi	r1,r0,#1
  586  0000152c          	L5_LF2:
  587  0000152c  08000004	j	L4_LF2
  588  00001530  54000000	nop; delay slot nop
  589  00001534          	L4_LF2:
  590  00001534  8fa20000	lw	r2,0(r29)
  591  00001538  8fa30004	lw	r3,4(r29)
  592  0000153c  8fa40008	lw	r4,8(r29)
  593  00001540  8fdffff8	lw	r31,-8(r30)
  594  00001544  001ee820	add	r29,r0,r30
  595  00001548  8fdefffc	lw	r30,-4(r30)
  596  0000154c  4be00000	jr	r31
  597  00001550  54000000	nop
  598  00001554          	.endproc _isxdigit
  599  00001554          	.align 2
  600  00001554          	.proc _dstrcpy
  601  00001554          	.global _dstrcpy
  602  00001554          	_dstrcpy:
  603                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  604  00001554  afbefffc	sw	-4(r29),r30; push fp
  605  00001558  001df020	add	r30,r0,r29; fp = sp
  606  0000155c  afbffff8	sw	-8(r29),r31; push ret addr
  607  00001560  2fbd0018	subui	r29,r29,#24; alloc local storage
  608  00001564  afa20000	sw	0(r29),r2
  609  00001568  afa30004	sw	4(r29),r3
  610  0000156c  8fc10000	lw	r1,(r30)
  611  00001570  afc1fff4	sw	-12(r30),r1
  612  00001574          	L10_LF2:
  613  00001574  8fc10000	lw	r1,(r30)
  614  00001578  20220001	addi	r2,r1,#1
  615  0000157c  afc20000	sw	(r30),r2
  616  00001580  8fc20004	lw	r2,4(r30)
  617  00001584  20430001	addi	r3,r2,#1
  618  00001588  afc30004	sw	4(r30),r3
  619  0000158c  80420000	lb	r2,(r2)
  620  00001590  a0220000	sb	(r1),r2
  621  00001594  a3c2fff3	sb	-13(r30),r2
  622  00001598          	L12_LF2:
  623  00001598  93c1fff3	lbu	r1,-13(r30)
  624  0000159c  64220000	snei	r2,r1,#0
  625  000015a0  1440000c	bnez	r2,L13_LF2
  626  000015a4  54000000	nop; delay slot nop
  627  000015a8  0800000c	j	L11_LF2
  628  000015ac  54000000	nop; delay slot nop
  629  000015b0          	L13_LF2:
  630  000015b0  0bffffc0	j	L10_LF2
  631  000015b4  54000000	nop; delay slot nop
  632  000015b8          	L11_LF2:
  633  000015b8  8fc1fff4	lw	r1,-12(r30)
  634  000015bc  08000004	j	L9_LF2
  635  000015c0  54000000	nop; delay slot nop
  636  000015c4          	L9_LF2:
  637  000015c4  8fa20000	lw	r2,0(r29)
  638  000015c8  8fa30004	lw	r3,4(r29)
  639  000015cc  8fdffff8	lw	r31,-8(r30)
  640  000015d0  001ee820	add	r29,r0,r30
  641  000015d4  8fdefffc	lw	r30,-4(r30)
  642  000015d8  4be00000	jr	r31
  643  000015dc  54000000	nop
  644  000015e0          	.endproc _dstrcpy
  645  000015e0          	.align 2
  646  000015e0          	.proc _dstrncpy
  647  000015e0          	.global _dstrncpy
  648  000015e0          	_dstrncpy:
  649                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  650  000015e0  afbefffc	sw	-4(r29),r30; push fp
  651  000015e4  001df020	add	r30,r0,r29; fp = sp
  652  000015e8  afbffff8	sw	-8(r29),r31; push ret addr
  653  000015ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  654  000015f0  afa20000	sw	0(r29),r2
  655  000015f4  afa30004	sw	4(r29),r3
  656  000015f8  8fc10000	lw	r1,(r30)
  657  000015fc  afc1fff4	sw	-12(r30),r1
  658  00001600          	L15_LF2:
  659  00001600  8fc10008	lw	r1,8(r30)
  660  00001604  2022ffff	addi	r2,r1,#-1
  661  00001608  afc20008	sw	8(r30),r2
  662  0000160c  70210000	slei	r1,r1,#0
  663  00001610  1020000c	beqz	r1,L18_LF2
  664  00001614  54000000	nop; delay slot nop
  665  00001618  08000048	j	L16_LF2
  666  0000161c  54000000	nop; delay slot nop
  667  00001620          	L18_LF2:
  668  00001620  8fc10000	lw	r1,(r30)
  669  00001624  20220001	addi	r2,r1,#1
  670  00001628  afc20000	sw	(r30),r2
  671  0000162c  8fc20004	lw	r2,4(r30)
  672  00001630  20430001	addi	r3,r2,#1
  673  00001634  afc30004	sw	4(r30),r3
  674  00001638  80420000	lb	r2,(r2)
  675  0000163c  a0220000	sb	(r1),r2
  676  00001640  a3c2fff3	sb	-13(r30),r2
  677  00001644          	L17_LF2:
  678  00001644  93c1fff3	lbu	r1,-13(r30)
  679  00001648  64220000	snei	r2,r1,#0
  680  0000164c  1440000c	bnez	r2,L19_LF2
  681  00001650  54000000	nop; delay slot nop
  682  00001654  0800000c	j	L16_LF2
  683  00001658  54000000	nop; delay slot nop
  684  0000165c          	L19_LF2:
  685  0000165c  0bffffa0	j	L15_LF2
  686  00001660  54000000	nop; delay slot nop
  687  00001664          	L16_LF2:
  688  00001664  8fc1fff4	lw	r1,-12(r30)
  689  00001668  08000004	j	L14_LF2
  690  0000166c  54000000	nop; delay slot nop
  691  00001670          	L14_LF2:
  692  00001670  8fa20000	lw	r2,0(r29)
  693  00001674  8fa30004	lw	r3,4(r29)
  694  00001678  8fdffff8	lw	r31,-8(r30)
  695  0000167c  001ee820	add	r29,r0,r30
  696  00001680  8fdefffc	lw	r30,-4(r30)
  697  00001684  4be00000	jr	r31
  698  00001688  54000000	nop
  699  0000168c          	.endproc _dstrncpy
  700  0000168c          	.align 2
  701  0000168c          	.proc _dstrcat
  702  0000168c          	.global _dstrcat
  703  0000168c          	_dstrcat:
  704                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  705  0000168c  afbefffc	sw	-4(r29),r30; push fp
  706  00001690  001df020	add	r30,r0,r29; fp = sp
  707  00001694  afbffff8	sw	-8(r29),r31; push ret addr
  708  00001698  2fbd0018	subui	r29,r29,#24; alloc local storage
  709  0000169c  afa20000	sw	0(r29),r2
  710  000016a0  8fc10000	lw	r1,(r30)
  711  000016a4  afc1fff4	sw	-12(r30),r1
  712  000016a8          	L21_LF2:
  713  000016a8  8fc10000	lw	r1,(r30)
  714  000016ac  90220000	lbu	r2,(r1)
  715  000016b0  64410000	snei	r1,r2,#0
  716  000016b4  1420000c	bnez	r1,L23_LF2
  717  000016b8  54000000	nop; delay slot nop
  718  000016bc  0800001c	j	L22_LF2
  719  000016c0  54000000	nop; delay slot nop
  720  000016c4          	L23_LF2:
  721  000016c4  8fc20000	lw	r2,(r30)
  722  000016c8  20410001	addi	r1,r2,#1
  723  000016cc  00011020	add	r2,r0,r1
  724  000016d0  afc20000	sw	(r30),r2
  725  000016d4  0bffffd0	j	L21_LF2
  726  000016d8  54000000	nop; delay slot nop
  727  000016dc          	L22_LF2:
  728  000016dc  23bdfff8	addi	r29,r29,#-8
  729  000016e0  001d0820	add	r1,r0,r29
  730  000016e4  8fc20000	lw	r2,(r30)
  731  000016e8  ac220000	sw	(r1),r2
  732  000016ec  8fc20004	lw	r2,4(r30)
  733  000016f0  ac220004	sw	4(r1),r2
  734  000016f4  0ffffe5c	jal	_dstrcpy
  735  000016f8  54000000	nop; delay slot nop
  736  000016fc  23bd0008	addi	r29,r29,#8
  737  00001700  8fc1fff4	lw	r1,-12(r30)
  738  00001704  08000004	j	L20_LF2
  739  00001708  54000000	nop; delay slot nop
  740  0000170c          	L20_LF2:
  741  0000170c  8fa20000	lw	r2,0(r29)
  742  00001710  8fdffff8	lw	r31,-8(r30)
  743  00001714  001ee820	add	r29,r0,r30
  744  00001718  8fdefffc	lw	r30,-4(r30)
  745  0000171c  4be00000	jr	r31
  746  00001720  54000000	nop
  747  00001724          	.endproc _dstrcat
  748  00001724          	.align 2
  749  00001724          	.proc _dstrncmp
  750  00001724          	.global _dstrncmp
  751  00001724          	_dstrncmp:
  752                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  753  00001724  afbefffc	sw	-4(r29),r30; push fp
  754  00001728  001df020	add	r30,r0,r29; fp = sp
  755  0000172c  afbffff8	sw	-8(r29),r31; push ret addr
  756  00001730  2fbd0018	subui	r29,r29,#24; alloc local storage
  757  00001734  afa20000	sw	0(r29),r2
  758  00001738  afa30004	sw	4(r29),r3
  759  0000173c  54000000	nop
  760  00001740  20010000	addi	r1,r0,#0
  761  00001744  afc1fff4	sw	-12(r30),r1
  762  00001748          	L25_LF2:
  763  00001748  8fc1fff4	lw	r1,-12(r30)
  764  0000174c  8fc20008	lw	r2,8(r30)
  765  00001750  0022082a	slt	r1,r1,r2
  766  00001754  1420000c	bnez	r1,L28_LF2
  767  00001758  54000000	nop; delay slot nop
  768  0000175c  08000088	j	L26_LF2
  769  00001760  54000000	nop; delay slot nop
  770  00001764          	L28_LF2:
  771  00001764  8fc10004	lw	r1,4(r30)
  772  00001768  90220000	lbu	r2,(r1)
  773  0000176c  64410000	snei	r1,r2,#0
  774  00001770  14200018	bnez	r1,L29_LF2
  775  00001774  54000000	nop; delay slot nop
  776  00001778  20010000	addi	r1,r0,#0
  777  0000177c  080000d8	j	L24_LF2
  778  00001780  54000000	nop; delay slot nop
  779  00001784  08000028	j	L30_LF2
  780  00001788  54000000	nop; delay slot nop
  781  0000178c          	L29_LF2:
  782  0000178c  8fc10000	lw	r1,(r30)
  783  00001790  8fc20004	lw	r2,4(r30)
  784  00001794  90210000	lbu	r1,(r1)
  785  00001798  90420000	lbu	r2,(r2)
  786  0000179c  00220829	sne	r1,r1,r2
  787  000017a0  1020000c	beqz	r1,L30_LF2
  788  000017a4  54000000	nop; delay slot nop
  789  000017a8  0800003c	j	L26_LF2
  790  000017ac  54000000	nop; delay slot nop
  791  000017b0          	L31_LF2:
  792  000017b0          	L30_LF2:
  793  000017b0  8fc20000	lw	r2,(r30)
  794  000017b4  20410001	addi	r1,r2,#1
  795  000017b8  00011020	add	r2,r0,r1
  796  000017bc  afc20000	sw	(r30),r2
  797  000017c0  8fc20004	lw	r2,4(r30)
  798  000017c4  20410001	addi	r1,r2,#1
  799  000017c8  00011020	add	r2,r0,r1
  800  000017cc  afc20004	sw	4(r30),r2
  801  000017d0          	L27_LF2:
  802  000017d0  8fc2fff4	lw	r2,-12(r30)
  803  000017d4  20410001	addi	r1,r2,#1
  804  000017d8  00011020	add	r2,r0,r1
  805  000017dc  afc2fff4	sw	-12(r30),r2
  806  000017e0  0bffff64	j	L25_LF2
  807  000017e4  54000000	nop; delay slot nop
  808  000017e8          	L26_LF2:
  809  000017e8  8fc1fff4	lw	r1,-12(r30)
  810  000017ec  8fc20008	lw	r2,8(r30)
  811  000017f0  00220828	seq	r1,r1,r2
  812  000017f4  10200018	beqz	r1,L32_LF2
  813  000017f8  54000000	nop; delay slot nop
  814  000017fc  20010000	addi	r1,r0,#0
  815  00001800  08000054	j	L24_LF2
  816  00001804  54000000	nop; delay slot nop
  817  00001808  0800004c	j	L33_LF2
  818  0000180c  54000000	nop; delay slot nop
  819  00001810          	L32_LF2:
  820  00001810  8fc20000	lw	r2,(r30)
  821  00001814  90410000	lbu	r1,(r2)
  822  00001818  8fc20004	lw	r2,4(r30)
  823  0000181c  90430000	lbu	r3,(r2)
  824  00001820  00230822	sub	r1,r1,r3
  825  00001824  74220000	sgei	r2,r1,#0
  826  00001828  10400020	beqz	r2,L34_LF2
  827  0000182c  54000000	nop; delay slot nop
  828  00001830  8fc10000	lw	r1,(r30)
  829  00001834  8fc20004	lw	r2,4(r30)
  830  00001838  90210000	lbu	r1,(r1)
  831  0000183c  90420000	lbu	r2,(r2)
  832  00001840  00220829	sne	r1,r1,r2
  833  00001844  08000008	j	L35_LF2
  834  00001848  54000000	nop; delay slot nop
  835  0000184c          	L34_LF2:
  836  0000184c  2001ffff	addi	r1,r0,#-1
  837  00001850          	L35_LF2:
  838  00001850  08000004	j	L24_LF2
  839  00001854  54000000	nop; delay slot nop
  840  00001858          	L33_LF2:
  841  00001858          	L24_LF2:
  842  00001858  8fa20000	lw	r2,0(r29)
  843  0000185c  8fa30004	lw	r3,4(r29)
  844  00001860  8fdffff8	lw	r31,-8(r30)
  845  00001864  001ee820	add	r29,r0,r30
  846  00001868  8fdefffc	lw	r30,-4(r30)
  847  0000186c  4be00000	jr	r31
  848  00001870  54000000	nop
  849  00001874          	.endproc _dstrncmp
  850  00001874          	.align 2
  851  00001874          	.proc _dstrlen
  852  00001874          	.global _dstrlen
  853  00001874          	_dstrlen:
  854                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  855  00001874  afbefffc	sw	-4(r29),r30; push fp
  856  00001878  001df020	add	r30,r0,r29; fp = sp
  857  0000187c  afbffff8	sw	-8(r29),r31; push ret addr
  858  00001880  2fbd0018	subui	r29,r29,#24; alloc local storage
  859  00001884  afa20000	sw	0(r29),r2
  860  00001888  20010000	addi	r1,r0,#0
  861  0000188c  afc1fff4	sw	-12(r30),r1
  862  00001890          	L37_LF2:
  863  00001890  8fc10000	lw	r1,(r30)
  864  00001894  20220001	addi	r2,r1,#1
  865  00001898  afc20000	sw	(r30),r2
  866  0000189c  90210000	lbu	r1,(r1)
  867  000018a0  64220000	snei	r2,r1,#0
  868  000018a4  1440000c	bnez	r2,L39_LF2
  869  000018a8  54000000	nop; delay slot nop
  870  000018ac  0800001c	j	L38_LF2
  871  000018b0  54000000	nop; delay slot nop
  872  000018b4          	L39_LF2:
  873  000018b4  8fc2fff4	lw	r2,-12(r30)
  874  000018b8  20410001	addi	r1,r2,#1
  875  000018bc  00011020	add	r2,r0,r1
  876  000018c0  afc2fff4	sw	-12(r30),r2
  877  000018c4  0bffffc8	j	L37_LF2
  878  000018c8  54000000	nop; delay slot nop
  879  000018cc          	L38_LF2:
  880  000018cc  8fc1fff4	lw	r1,-12(r30)
  881  000018d0  08000004	j	L36_LF2
  882  000018d4  54000000	nop; delay slot nop
  883  000018d8          	L36_LF2:
  884  000018d8  8fa20000	lw	r2,0(r29)
  885  000018dc  8fdffff8	lw	r31,-8(r30)
  886  000018e0  001ee820	add	r29,r0,r30
  887  000018e4  8fdefffc	lw	r30,-4(r30)
  888  000018e8  4be00000	jr	r31
  889  000018ec  54000000	nop
  890  000018f0          	.endproc _dstrlen
  891  000018f0          	.align 2
  892  000018f0          	.proc _dstrstr
  893  000018f0          	.global _dstrstr
  894  000018f0          	_dstrstr:
  895                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  896  000018f0  afbefffc	sw	-4(r29),r30; push fp
  897  000018f4  001df020	add	r30,r0,r29; fp = sp
  898  000018f8  afbffff8	sw	-8(r29),r31; push ret addr
  899  000018fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  900  00001900  afa20000	sw	0(r29),r2
  901  00001904  23bdfff8	addi	r29,r29,#-8
  902  00001908  001d0820	add	r1,r0,r29
  903  0000190c  8fc20004	lw	r2,4(r30)
  904  00001910  ac220000	sw	(r1),r2
  905  00001914  0fffff5c	jal	_dstrlen
  906  00001918  54000000	nop; delay slot nop
  907  0000191c  23bd0008	addi	r29,r29,#8
  908  00001920  afc1fff4	sw	-12(r30),r1
  909  00001924          	L41_LF2:
  910  00001924  8fc10000	lw	r1,(r30)
  911  00001928  90220000	lbu	r2,(r1)
  912  0000192c  64410000	snei	r1,r2,#0
  913  00001930  1420000c	bnez	r1,L43_LF2
  914  00001934  54000000	nop; delay slot nop
  915  00001938  08000060	j	L42_LF2
  916  0000193c  54000000	nop; delay slot nop
  917  00001940          	L43_LF2:
  918  00001940  23bdfff0	addi	r29,r29,#-16
  919  00001944  001d0820	add	r1,r0,r29
  920  00001948  8fc20000	lw	r2,(r30)
  921  0000194c  ac220000	sw	(r1),r2
  922  00001950  8fc20004	lw	r2,4(r30)
  923  00001954  ac220004	sw	4(r1),r2
  924  00001958  8fc2fff4	lw	r2,-12(r30)
  925  0000195c  ac220008	sw	8(r1),r2
  926  00001960  0ffffdc0	jal	_dstrncmp
  927  00001964  54000000	nop; delay slot nop
  928  00001968  23bd0010	addi	r29,r29,#16
  929  0000196c  64220000	snei	r2,r1,#0
  930  00001970  14400010	bnez	r2,L44_LF2
  931  00001974  54000000	nop; delay slot nop
  932  00001978  8fc10000	lw	r1,(r30)
  933  0000197c  08000028	j	L40_LF2
  934  00001980  54000000	nop; delay slot nop
  935  00001984          	L44_LF2:
  936  00001984  8fc20000	lw	r2,(r30)
  937  00001988  20410001	addi	r1,r2,#1
  938  0000198c  00011020	add	r2,r0,r1
  939  00001990  afc20000	sw	(r30),r2
  940  00001994  0bffff8c	j	L41_LF2
  941  00001998  54000000	nop; delay slot nop
  942  0000199c          	L42_LF2:
  943  0000199c  20010000	addi	r1,r0,#0
  944  000019a0  08000004	j	L40_LF2
  945  000019a4  54000000	nop; delay slot nop
  946  000019a8          	L40_LF2:
  947  000019a8  8fa20000	lw	r2,0(r29)
  948  000019ac  8fdffff8	lw	r31,-8(r30)
  949  000019b0  001ee820	add	r29,r0,r30
  950  000019b4  8fdefffc	lw	r30,-4(r30)
  951  000019b8  4be00000	jr	r31
  952  000019bc  54000000	nop
  953  000019c0          	.endproc _dstrstr
  954  000019c0          	.align 2
  955  000019c0          	.proc _dmindex
  956  000019c0          	.global _dmindex
  957  000019c0          	_dmindex:
  958                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  959  000019c0  afbefffc	sw	-4(r29),r30; push fp
  960  000019c4  001df020	add	r30,r0,r29; fp = sp
  961  000019c8  afbffff8	sw	-8(r29),r31; push ret addr
  962  000019cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  963  000019d0  afa20000	sw	0(r29),r2
  964  000019d4  54000000	nop
  965  000019d8          	L46_LF2:
  966  000019d8  8fc10000	lw	r1,(r30)
  967  000019dc  90220000	lbu	r2,(r1)
  968  000019e0  64410000	snei	r1,r2,#0
  969  000019e4  1420000c	bnez	r1,L48_LF2
  970  000019e8  54000000	nop; delay slot nop
  971  000019ec  08000070	j	L47_LF2
  972  000019f0  54000000	nop; delay slot nop
  973  000019f4          	L48_LF2:
  974  000019f4  8fc10004	lw	r1,4(r30)
  975  000019f8  afc1fff4	sw	-12(r30),r1
  976  000019fc          	L49_LF2:
  977  000019fc  8fc1fff4	lw	r1,-12(r30)
  978  00001a00  90220000	lbu	r2,(r1)
  979  00001a04  64410000	snei	r1,r2,#0
  980  00001a08  1420000c	bnez	r1,L52_LF2
  981  00001a0c  54000000	nop; delay slot nop
  982  00001a10  08000044	j	L50_LF2
  983  00001a14  54000000	nop; delay slot nop
  984  00001a18          	L52_LF2:
  985  00001a18  8fc10000	lw	r1,(r30)
  986  00001a1c  8fc2fff4	lw	r2,-12(r30)
  987  00001a20  90210000	lbu	r1,(r1)
  988  00001a24  90420000	lbu	r2,(r2)
  989  00001a28  00220828	seq	r1,r1,r2
  990  00001a2c  10200010	beqz	r1,L51_LF2
  991  00001a30  54000000	nop; delay slot nop
  992  00001a34  8fc10000	lw	r1,(r30)
  993  00001a38  08000030	j	L45_LF2
  994  00001a3c  54000000	nop; delay slot nop
  995  00001a40          	L53_LF2:
  996  00001a40          	L51_LF2:
  997  00001a40  8fc2fff4	lw	r2,-12(r30)
  998  00001a44  20410001	addi	r1,r2,#1
  999  00001a48  00011020	add	r2,r0,r1
 1000  00001a4c  afc2fff4	sw	-12(r30),r2
 1001  00001a50  0bffffa8	j	L49_LF2
 1002  00001a54  54000000	nop; delay slot nop
 1003  00001a58          	L50_LF2:
 1004  00001a58  0bffff7c	j	L46_LF2
 1005  00001a5c  54000000	nop; delay slot nop
 1006  00001a60          	L47_LF2:
 1007  00001a60  20010000	addi	r1,r0,#0
 1008  00001a64  08000004	j	L45_LF2
 1009  00001a68  54000000	nop; delay slot nop
 1010  00001a6c          	L45_LF2:
 1011  00001a6c  8fa20000	lw	r2,0(r29)
 1012  00001a70  8fdffff8	lw	r31,-8(r30)
 1013  00001a74  001ee820	add	r29,r0,r30
 1014  00001a78  8fdefffc	lw	r30,-4(r30)
 1015  00001a7c  4be00000	jr	r31
 1016  00001a80  54000000	nop
 1017  00001a84          	.endproc _dmindex
 1018  00001a84          	.align 2
 1019  00001a84          	.proc _dindex
 1020  00001a84          	.global _dindex
 1021  00001a84          	_dindex:
 1022                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1023  00001a84  afbefffc	sw	-4(r29),r30; push fp
 1024  00001a88  001df020	add	r30,r0,r29; fp = sp
 1025  00001a8c  afbffff8	sw	-8(r29),r31; push ret addr
 1026  00001a90  2fbd0010	subui	r29,r29,#16; alloc local storage
 1027  00001a94  afa20000	sw	0(r29),r2
 1028  00001a98  54000000	nop
 1029  00001a9c          	L55_LF2:
 1030  00001a9c  8fc10000	lw	r1,(r30)
 1031  00001aa0  90220000	lbu	r2,(r1)
 1032  00001aa4  64410000	snei	r1,r2,#0
 1033  00001aa8  1420000c	bnez	r1,L57_LF2
 1034  00001aac  54000000	nop; delay slot nop
 1035  00001ab0  08000040	j	L56_LF2
 1036  00001ab4  54000000	nop; delay slot nop
 1037  00001ab8          	L57_LF2:
 1038  00001ab8  8fc10000	lw	r1,(r30)
 1039  00001abc  90220000	lbu	r2,(r1)
 1040  00001ac0  8fc10004	lw	r1,4(r30)
 1041  00001ac4  00411028	seq	r2,r2,r1
 1042  00001ac8  10400010	beqz	r2,L58_LF2
 1043  00001acc  54000000	nop; delay slot nop
 1044  00001ad0  8fc10000	lw	r1,(r30)
 1045  00001ad4  08000028	j	L54_LF2
 1046  00001ad8  54000000	nop; delay slot nop
 1047  00001adc          	L58_LF2:
 1048  00001adc  8fc20000	lw	r2,(r30)
 1049  00001ae0  20410001	addi	r1,r2,#1
 1050  00001ae4  00011020	add	r2,r0,r1
 1051  00001ae8  afc20000	sw	(r30),r2
 1052  00001aec  0bffffac	j	L55_LF2
 1053  00001af0  54000000	nop; delay slot nop
 1054  00001af4          	L56_LF2:
 1055  00001af4  20010000	addi	r1,r0,#0
 1056  00001af8  08000004	j	L54_LF2
 1057  00001afc  54000000	nop; delay slot nop
 1058  00001b00          	L54_LF2:
 1059  00001b00  8fa20000	lw	r2,0(r29)
 1060  00001b04  8fdffff8	lw	r31,-8(r30)
 1061  00001b08  001ee820	add	r29,r0,r30
 1062  00001b0c  8fdefffc	lw	r30,-4(r30)
 1063  00001b10  4be00000	jr	r31
 1064  00001b14  54000000	nop
 1065  00001b18          	.endproc _dindex
 1066  00001b18          	.align 2
 1067  00001b18          	.proc _ditoa
 1068  00001b18          	.global _ditoa
 1069  00001b18          	_ditoa:
 1070                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1071  00001b18  afbefffc	sw	-4(r29),r30; push fp
 1072  00001b1c  001df020	add	r30,r0,r29; fp = sp
 1073  00001b20  afbffff8	sw	-8(r29),r31; push ret addr
 1074  00001b24  2fbd0018	subui	r29,r29,#24; alloc local storage
 1075  00001b28  afa20000	sw	0(r29),r2
 1076  00001b2c  afa30004	sw	4(r29),r3
 1077  00001b30  8fc10000	lw	r1,(r30)
 1078  00001b34  68220000	slti	r2,r1,#0
 1079  00001b38  1040002c	beqz	r2,L60_LF2
 1080  00001b3c  54000000	nop; delay slot nop
 1081  00001b40  8fc10004	lw	r1,4(r30)
 1082  00001b44  20220001	addi	r2,r1,#1
 1083  00001b48  afc20004	sw	4(r30),r2
 1084  00001b4c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1085  00001b50  a0220000	sb	(r1),r2
 1086  00001b54  8fc10000	lw	r1,(r30)
 1087  00001b58  00011022	sub	r2,r0,r1
 1088  00001b5c  afc20000	sw	(r30),r2
 1089  00001b60  08000118	j	L61_LF2
 1090  00001b64  54000000	nop; delay slot nop
 1091  00001b68          	L60_LF2:
 1092  00001b68  8fc10000	lw	r1,(r30)
 1093  00001b6c  64220000	snei	r2,r1,#0
 1094  00001b70  14400020	bnez	r2,L62_LF2
 1095  00001b74  54000000	nop; delay slot nop
 1096  00001b78  8fc10004	lw	r1,4(r30)
 1097  00001b7c  20220001	addi	r2,r1,#1
 1098  00001b80  afc20004	sw	4(r30),r2
 1099  00001b84  20020030	addi	r2,r0,(#0x30)&0xff
 1100  00001b88  a0220000	sb	(r1),r2
 1101  00001b8c  080000ec	j	L61_LF2
 1102  00001b90  54000000	nop; delay slot nop
 1103  00001b94          	L62_LF2:
 1104  00001b94  20010001	addi	r1,r0,#1
 1105  00001b98  afc1fff4	sw	-12(r30),r1
 1106  00001b9c          	L64_LF2:
 1107  00001b9c  8fc1fff4	lw	r1,-12(r30)
 1108  00001ba0  8fc20000	lw	r2,(r30)
 1109  00001ba4  0022082c	sle	r1,r1,r2
 1110  00001ba8  1420000c	bnez	r1,L66_LF2
 1111  00001bac  54000000	nop; delay slot nop
 1112  00001bb0  08000024	j	L65_LF2
 1113  00001bb4  54000000	nop; delay slot nop
 1114  00001bb8          	L67_LF2:
 1115  00001bb8          	L66_LF2:
 1116  00001bb8  8fc1fff4	lw	r1,-12(r30)
 1117  00001bbc  00011820	add	r3,r0,r1
 1118  00001bc0  50620002	slli	r2,r3,#0x2
 1119  00001bc4  00411020	add	r2,r2,r1
 1120  00001bc8  50410001	slli	r1,r2,#0x1
 1121  00001bcc  afc1fff4	sw	-12(r30),r1
 1122  00001bd0  0bffffc8	j	L64_LF2
 1123  00001bd4  54000000	nop; delay slot nop
 1124  00001bd8          	L65_LF2:
 1125  00001bd8  54000000	nop
 1126  00001bdc          	L68_LF2:
 1127  00001bdc  8fc1fff4	lw	r1,-12(r30)
 1128  00001be0  2002000a	addi	r2,r0,#10
 1129  00001be4  00200035	movi2fp	f0,r1
 1130  00001be8  00400835	movi2fp	f1,r2
 1131  00001bec  0401000f	div	f0,f0,f1
 1132  00001bf0  00000834	movfp2i	r1,f0
 1133  00001bf4  afc1fff4	sw	-12(r30),r1
 1134  00001bf8  8fc10004	lw	r1,4(r30)
 1135  00001bfc  20220001	addi	r2,r1,#1
 1136  00001c00  afc20004	sw	4(r30),r2
 1137  00001c04  8fc20000	lw	r2,(r30)
 1138  00001c08  8fc3fff4	lw	r3,-12(r30)
 1139  00001c0c  00400035	movi2fp	f0,r2
 1140  00001c10  00600835	movi2fp	f1,r3
 1141  00001c14  0401000f	div	f0,f0,f1
 1142  00001c18  00001034	movfp2i	r2,f0
 1143  00001c1c  00021820	add	r3,r0,r2
 1144  00001c20  20620030	addi	r2,r3,#48
 1145  00001c24  a0220000	sb	(r1),r2
 1146  00001c28  8fc10000	lw	r1,(r30)
 1147  00001c2c  8fc3fff4	lw	r3,-12(r30)
 1148  00001c30  00200035	movi2fp	f0,r1
 1149  00001c34  00600835	movi2fp	f1,r3
 1150  00001c38  0401000f	div	f0,f0,f1
 1151  00001c3c  00001034	movfp2i	r2,f0
 1152  00001c40  8fc3fff4	lw	r3,-12(r30)
 1153  00001c44  00400035	movi2fp	f0,r2
 1154  00001c48  00600835	movi2fp	f1,r3
 1155  00001c4c  0401000e	mult	f0,f0,f1
 1156  00001c50  00001034	movfp2i	r2,f0
 1157  00001c54  00220822	sub	r1,r1,r2
 1158  00001c58  afc10000	sw	(r30),r1
 1159  00001c5c          	L70_LF2:
 1160  00001c5c  8fc1fff4	lw	r1,-12(r30)
 1161  00001c60  6c220001	sgti	r2,r1,#1
 1162  00001c64  1440000c	bnez	r2,L71_LF2
 1163  00001c68  54000000	nop; delay slot nop
 1164  00001c6c  0800000c	j	L61_LF2
 1165  00001c70  54000000	nop; delay slot nop
 1166  00001c74          	L71_LF2:
 1167  00001c74  0bffff64	j	L68_LF2
 1168  00001c78  54000000	nop; delay slot nop
 1169  00001c7c          	L69_LF2:
 1170  00001c7c          	L63_LF2:
 1171  00001c7c          	L61_LF2:
 1172  00001c7c  8fc10004	lw	r1,4(r30)
 1173  00001c80  20020000	addi	r2,r0,(#0x0)&0xff
 1174  00001c84  a0220000	sb	(r1),r2
 1175  00001c88          	L59_LF2:
 1176  00001c88  8fa20000	lw	r2,0(r29)
 1177  00001c8c  8fa30004	lw	r3,4(r29)
 1178  00001c90  8fdffff8	lw	r31,-8(r30)
 1179  00001c94  001ee820	add	r29,r0,r30
 1180  00001c98  8fdefffc	lw	r30,-4(r30)
 1181  00001c9c  4be00000	jr	r31
 1182  00001ca0  54000000	nop
 1183  00001ca4          	.endproc _ditoa
 1184  00001ca4          	.align 2
 1185  00001ca4          	.proc _dstrtol
 1186  00001ca4          	.global _dstrtol
 1187  00001ca4          	_dstrtol:
 1188                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1189  00001ca4  afbefffc	sw	-4(r29),r30; push fp
 1190  00001ca8  001df020	add	r30,r0,r29; fp = sp
 1191  00001cac  afbffff8	sw	-8(r29),r31; push ret addr
 1192  00001cb0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1193  00001cb4  afa20000	sw	0(r29),r2
 1194  00001cb8  20010000	addi	r1,r0,#0
 1195  00001cbc  afc1fff4	sw	-12(r30),r1
 1196  00001cc0          	L73_LF2:
 1197  00001cc0  8fc10000	lw	r1,(r30)
 1198  00001cc4  90220000	lbu	r2,(r1)
 1199  00001cc8  60410020	seqi	r1,r2,#32
 1200  00001ccc  14200034	bnez	r1,L75_LF2
 1201  00001cd0  54000000	nop; delay slot nop
 1202  00001cd4  8fc10000	lw	r1,(r30)
 1203  00001cd8  90220000	lbu	r2,(r1)
 1204  00001cdc  60410009	seqi	r1,r2,#9
 1205  00001ce0  14200020	bnez	r1,L75_LF2
 1206  00001ce4  54000000	nop; delay slot nop
 1207  00001ce8  8fc10000	lw	r1,(r30)
 1208  00001cec  90220000	lbu	r2,(r1)
 1209  00001cf0  6041000a	seqi	r1,r2,#10
 1210  00001cf4  1420000c	bnez	r1,L75_LF2
 1211  00001cf8  54000000	nop; delay slot nop
 1212  00001cfc  0800001c	j	L74_LF2
 1213  00001d00  54000000	nop; delay slot nop
 1214  00001d04          	L75_LF2:
 1215  00001d04  8fc20000	lw	r2,(r30)
 1216  00001d08  20410001	addi	r1,r2,#1
 1217  00001d0c  00011020	add	r2,r0,r1
 1218  00001d10  afc20000	sw	(r30),r2
 1219  00001d14  0bffffa8	j	L73_LF2
 1220  00001d18  54000000	nop; delay slot nop
 1221  00001d1c          	L74_LF2:
 1222  00001d1c  8fc10004	lw	r1,4(r30)
 1223  00001d20  64220000	snei	r2,r1,#0
 1224  00001d24  10400010	beqz	r2,L76_LF2
 1225  00001d28  54000000	nop; delay slot nop
 1226  00001d2c  8fc10004	lw	r1,4(r30)
 1227  00001d30  8fc20000	lw	r2,(r30)
 1228  00001d34  ac220000	sw	(r1),r2
 1229  00001d38          	L76_LF2:
 1230  00001d38  8fc10000	lw	r1,(r30)
 1231  00001d3c  90220000	lbu	r2,(r1)
 1232  00001d40  64410000	snei	r1,r2,#0
 1233  00001d44  14200010	bnez	r1,L77_LF2
 1234  00001d48  54000000	nop; delay slot nop
 1235  00001d4c  8fc1fff4	lw	r1,-12(r30)
 1236  00001d50  08000294	j	L72_LF2
 1237  00001d54  54000000	nop; delay slot nop
 1238  00001d58          	L77_LF2:
 1239  00001d58  8fc10000	lw	r1,(r30)
 1240  00001d5c  90220000	lbu	r2,(r1)
 1241  00001d60  6041002d	seqi	r1,r2,#45
 1242  00001d64  10200024	beqz	r1,L78_LF2
 1243  00001d68  54000000	nop; delay slot nop
 1244  00001d6c  2001ffff	addi	r1,r0,#-1
 1245  00001d70  afc1ffec	sw	-20(r30),r1
 1246  00001d74  8fc20000	lw	r2,(r30)
 1247  00001d78  20410001	addi	r1,r2,#1
 1248  00001d7c  00011020	add	r2,r0,r1
 1249  00001d80  afc20000	sw	(r30),r2
 1250  00001d84  0800000c	j	L79_LF2
 1251  00001d88  54000000	nop; delay slot nop
 1252  00001d8c          	L78_LF2:
 1253  00001d8c  20010001	addi	r1,r0,#1
 1254  00001d90  afc1ffec	sw	-20(r30),r1
 1255  00001d94          	L79_LF2:
 1256  00001d94  8fc10008	lw	r1,8(r30)
 1257  00001d98  64220000	snei	r2,r1,#0
 1258  00001d9c  14400090	bnez	r2,L80_LF2
 1259  00001da0  54000000	nop; delay slot nop
 1260  00001da4  8fc10000	lw	r1,(r30)
 1261  00001da8  90220000	lbu	r2,(r1)
 1262  00001dac  60410030	seqi	r1,r2,#48
 1263  00001db0  10200074	beqz	r1,L81_LF2
 1264  00001db4  54000000	nop; delay slot nop
 1265  00001db8  8fc20000	lw	r2,(r30)
 1266  00001dbc  20410001	addi	r1,r2,#1
 1267  00001dc0  00011020	add	r2,r0,r1
 1268  00001dc4  afc20000	sw	(r30),r2
 1269  00001dc8  8fc10000	lw	r1,(r30)
 1270  00001dcc  90220000	lbu	r2,(r1)
 1271  00001dd0  60410078	seqi	r1,r2,#120
 1272  00001dd4  14200020	bnez	r1,L83_LF2
 1273  00001dd8  54000000	nop; delay slot nop
 1274  00001ddc  8fc10000	lw	r1,(r30)
 1275  00001de0  90220000	lbu	r2,(r1)
 1276  00001de4  60410058	seqi	r1,r2,#88
 1277  00001de8  1420000c	bnez	r1,L83_LF2
 1278  00001dec  54000000	nop; delay slot nop
 1279  00001df0  08000024	j	L82_LF2
 1280  00001df4  54000000	nop; delay slot nop
 1281  00001df8          	L83_LF2:
 1282  00001df8  20010010	addi	r1,r0,#16
 1283  00001dfc  afc10008	sw	8(r30),r1
 1284  00001e00  8fc20000	lw	r2,(r30)
 1285  00001e04  20410001	addi	r1,r2,#1
 1286  00001e08  00011020	add	r2,r0,r1
 1287  00001e0c  afc20000	sw	(r30),r2
 1288  00001e10  0800000c	j	L84_LF2
 1289  00001e14  54000000	nop; delay slot nop
 1290  00001e18          	L82_LF2:
 1291  00001e18  20010008	addi	r1,r0,#8
 1292  00001e1c  afc10008	sw	8(r30),r1
 1293  00001e20          	L84_LF2:
 1294  00001e20  0800000c	j	L80_LF2
 1295  00001e24  54000000	nop; delay slot nop
 1296  00001e28          	L81_LF2:
 1297  00001e28  2001000a	addi	r1,r0,#10
 1298  00001e2c  afc10008	sw	8(r30),r1
 1299  00001e30          	L85_LF2:
 1300  00001e30          	L80_LF2:
 1301  00001e30  8fc10008	lw	r1,8(r30)
 1302  00001e34  70220000	slei	r2,r1,#0
 1303  00001e38  1440001c	bnez	r2,L87_LF2
 1304  00001e3c  54000000	nop; delay slot nop
 1305  00001e40  8fc10008	lw	r1,8(r30)
 1306  00001e44  6c220010	sgti	r2,r1,#16
 1307  00001e48  1440000c	bnez	r2,L87_LF2
 1308  00001e4c  54000000	nop; delay slot nop
 1309  00001e50  08000010	j	L86_LF2
 1310  00001e54  54000000	nop; delay slot nop
 1311  00001e58          	L87_LF2:
 1312  00001e58  8fc1fff4	lw	r1,-12(r30)
 1313  00001e5c  08000188	j	L72_LF2
 1314  00001e60  54000000	nop; delay slot nop
 1315  00001e64          	L86_LF2:
 1316  00001e64  54000000	nop
 1317  00001e68          	L88_LF2:
 1318  00001e68  8fc10000	lw	r1,(r30)
 1319  00001e6c  90220000	lbu	r2,(r1)
 1320  00001e70  6c41002f	sgtui	r1,r2,#47
 1321  00001e74  10200030	beqz	r1,L91_LF2
 1322  00001e78  54000000	nop; delay slot nop
 1323  00001e7c  8fc10000	lw	r1,(r30)
 1324  00001e80  90220000	lbu	r2,(r1)
 1325  00001e84  70410039	sleui	r1,r2,#57
 1326  00001e88  1020001c	beqz	r1,L91_LF2
 1327  00001e8c  54000000	nop; delay slot nop
 1328  00001e90  8fc10000	lw	r1,(r30)
 1329  00001e94  90220000	lbu	r2,(r1)
 1330  00001e98  2041ffd0	addi	r1,r2,#-48
 1331  00001e9c  afc1fff0	sw	-16(r30),r1
 1332  00001ea0  0800008c	j	L92_LF2
 1333  00001ea4  54000000	nop; delay slot nop
 1334  00001ea8          	L91_LF2:
 1335  00001ea8  8fc10000	lw	r1,(r30)
 1336  00001eac  90220000	lbu	r2,(r1)
 1337  00001eb0  6c410060	sgtui	r1,r2,#96
 1338  00001eb4  10200030	beqz	r1,L93_LF2
 1339  00001eb8  54000000	nop; delay slot nop
 1340  00001ebc  8fc10000	lw	r1,(r30)
 1341  00001ec0  90220000	lbu	r2,(r1)
 1342  00001ec4  7041007a	sleui	r1,r2,#122
 1343  00001ec8  1020001c	beqz	r1,L93_LF2
 1344  00001ecc  54000000	nop; delay slot nop
 1345  00001ed0  8fc10000	lw	r1,(r30)
 1346  00001ed4  90220000	lbu	r2,(r1)
 1347  00001ed8  2041ffa9	addi	r1,r2,#-87
 1348  00001edc  afc1fff0	sw	-16(r30),r1
 1349  00001ee0  0800004c	j	L92_LF2
 1350  00001ee4  54000000	nop; delay slot nop
 1351  00001ee8          	L93_LF2:
 1352  00001ee8  8fc10000	lw	r1,(r30)
 1353  00001eec  90220000	lbu	r2,(r1)
 1354  00001ef0  6c410040	sgtui	r1,r2,#64
 1355  00001ef4  10200030	beqz	r1,L95_LF2
 1356  00001ef8  54000000	nop; delay slot nop
 1357  00001efc  8fc10000	lw	r1,(r30)
 1358  00001f00  90220000	lbu	r2,(r1)
 1359  00001f04  7041005a	sleui	r1,r2,#90
 1360  00001f08  1020001c	beqz	r1,L95_LF2
 1361  00001f0c  54000000	nop; delay slot nop
 1362  00001f10  8fc10000	lw	r1,(r30)
 1363  00001f14  90220000	lbu	r2,(r1)
 1364  00001f18  2041ffc9	addi	r1,r2,#-55
 1365  00001f1c  afc1fff0	sw	-16(r30),r1
 1366  00001f20  0800000c	j	L92_LF2
 1367  00001f24  54000000	nop; delay slot nop
 1368  00001f28          	L95_LF2:
 1369  00001f28  200103e8	addi	r1,r0,#1000
 1370  00001f2c  afc1fff0	sw	-16(r30),r1
 1371  00001f30          	L96_LF2:
 1372  00001f30          	L94_LF2:
 1373  00001f30          	L92_LF2:
 1374  00001f30  8fc1fff0	lw	r1,-16(r30)
 1375  00001f34  8fc20008	lw	r2,8(r30)
 1376  00001f38  0022082a	slt	r1,r1,r2
 1377  00001f3c  10200040	beqz	r1,L90_LF2
 1378  00001f40  54000000	nop; delay slot nop
 1379  00001f44  8fc1fff4	lw	r1,-12(r30)
 1380  00001f48  8fc20008	lw	r2,8(r30)
 1381  00001f4c  00200035	movi2fp	f0,r1
 1382  00001f50  00400835	movi2fp	f1,r2
 1383  00001f54  0401000e	mult	f0,f0,f1
 1384  00001f58  00000834	movfp2i	r1,f0
 1385  00001f5c  afc1fff4	sw	-12(r30),r1
 1386  00001f60  8fc1fff4	lw	r1,-12(r30)
 1387  00001f64  8fc2fff0	lw	r2,-16(r30)
 1388  00001f68  00220820	add	r1,r1,r2
 1389  00001f6c  afc1fff4	sw	-12(r30),r1
 1390  00001f70  8fc20000	lw	r2,(r30)
 1391  00001f74  20410001	addi	r1,r2,#1
 1392  00001f78  00011020	add	r2,r0,r1
 1393  00001f7c  afc20000	sw	(r30),r2
 1394  00001f80          	L97_LF2:
 1395  00001f80          	L90_LF2:
 1396  00001f80  8fc1fff0	lw	r1,-16(r30)
 1397  00001f84  8fc20008	lw	r2,8(r30)
 1398  00001f88  0022082a	slt	r1,r1,r2
 1399  00001f8c  1420000c	bnez	r1,L98_LF2
 1400  00001f90  54000000	nop; delay slot nop
 1401  00001f94  0800000c	j	L89_LF2
 1402  00001f98  54000000	nop; delay slot nop
 1403  00001f9c          	L98_LF2:
 1404  00001f9c  0bfffec8	j	L88_LF2
 1405  00001fa0  54000000	nop; delay slot nop
 1406  00001fa4          	L89_LF2:
 1407  00001fa4  8fc10004	lw	r1,4(r30)
 1408  00001fa8  64220000	snei	r2,r1,#0
 1409  00001fac  10400010	beqz	r2,L99_LF2
 1410  00001fb0  54000000	nop; delay slot nop
 1411  00001fb4  8fc10004	lw	r1,4(r30)
 1412  00001fb8  8fc20000	lw	r2,(r30)
 1413  00001fbc  ac220000	sw	(r1),r2
 1414  00001fc0          	L99_LF2:
 1415  00001fc0  8fc1fff4	lw	r1,-12(r30)
 1416  00001fc4  8fc2ffec	lw	r2,-20(r30)
 1417  00001fc8  00200035	movi2fp	f0,r1
 1418  00001fcc  00400835	movi2fp	f1,r2
 1419  00001fd0  0401000e	mult	f0,f0,f1
 1420  00001fd4  00000834	movfp2i	r1,f0
 1421  00001fd8  afc1fff4	sw	-12(r30),r1
 1422  00001fdc  8fc1fff4	lw	r1,-12(r30)
 1423  00001fe0  08000004	j	L72_LF2
 1424  00001fe4  54000000	nop; delay slot nop
 1425  00001fe8          	L72_LF2:
 1426  00001fe8  8fa20000	lw	r2,0(r29)
 1427  00001fec  8fdffff8	lw	r31,-8(r30)
 1428  00001ff0  001ee820	add	r29,r0,r30
 1429  00001ff4  8fdefffc	lw	r30,-4(r30)
 1430  00001ff8  4be00000	jr	r31
 1431  00001ffc  54000000	nop
 1432  00002000          	.endproc _dstrtol
 1433  00002000          	.align 2
 1434  00002000          	.proc _bcopy
 1435  00002000          	.global _bcopy
 1436  00002000          	_bcopy:
 1437                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1438  00002000  afbefffc	sw	-4(r29),r30; push fp
 1439  00002004  001df020	add	r30,r0,r29; fp = sp
 1440  00002008  afbffff8	sw	-8(r29),r31; push ret addr
 1441  0000200c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1442  00002010  afa20000	sw	0(r29),r2
 1443  00002014  afa30004	sw	4(r29),r3
 1444  00002018  54000000	nop
 1445  0000201c          	L101_LF2:
 1446  0000201c  8fc10008	lw	r1,8(r30)
 1447  00002020  2022ffff	addi	r2,r1,#-1
 1448  00002024  afc20008	sw	8(r30),r2
 1449  00002028  6c210000	sgti	r1,r1,#0
 1450  0000202c  1420000c	bnez	r1,L103_LF2
 1451  00002030  54000000	nop; delay slot nop
 1452  00002034  0800002c	j	L102_LF2
 1453  00002038  54000000	nop; delay slot nop
 1454  0000203c          	L103_LF2:
 1455  0000203c  8fc10004	lw	r1,4(r30)
 1456  00002040  20220001	addi	r2,r1,#1
 1457  00002044  afc20004	sw	4(r30),r2
 1458  00002048  8fc20000	lw	r2,(r30)
 1459  0000204c  20430001	addi	r3,r2,#1
 1460  00002050  afc30000	sw	(r30),r3
 1461  00002054  80420000	lb	r2,(r2)
 1462  00002058  a0220000	sb	(r1),r2
 1463  0000205c  0bffffbc	j	L101_LF2
 1464  00002060  54000000	nop; delay slot nop
 1465  00002064          	L102_LF2:
 1466  00002064          	L100_LF2:
 1467  00002064  8fa20000	lw	r2,0(r29)
 1468  00002068  8fa30004	lw	r3,4(r29)
 1469  0000206c  8fdffff8	lw	r31,-8(r30)
 1470  00002070  001ee820	add	r29,r0,r30
 1471  00002074  8fdefffc	lw	r30,-4(r30)
 1472  00002078  4be00000	jr	r31
 1473  0000207c  54000000	nop
 1474  00002080          	.endproc _bcopy
 1475  00002080          	.align 2
 1476  00002080          	.proc _bzero
 1477  00002080          	.global _bzero
 1478  00002080          	_bzero:
 1479                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1480  00002080  afbefffc	sw	-4(r29),r30; push fp
 1481  00002084  001df020	add	r30,r0,r29; fp = sp
 1482  00002088  afbffff8	sw	-8(r29),r31; push ret addr
 1483  0000208c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1484  00002090  afa20000	sw	0(r29),r2
 1485  00002094  54000000	nop
 1486  00002098          	L105_LF2:
 1487  00002098  8fc10004	lw	r1,4(r30)
 1488  0000209c  2022ffff	addi	r2,r1,#-1
 1489  000020a0  afc20004	sw	4(r30),r2
 1490  000020a4  6c210000	sgti	r1,r1,#0
 1491  000020a8  1420000c	bnez	r1,L107_LF2
 1492  000020ac  54000000	nop; delay slot nop
 1493  000020b0  08000020	j	L106_LF2
 1494  000020b4  54000000	nop; delay slot nop
 1495  000020b8          	L107_LF2:
 1496  000020b8  8fc10000	lw	r1,(r30)
 1497  000020bc  20220001	addi	r2,r1,#1
 1498  000020c0  afc20000	sw	(r30),r2
 1499  000020c4  20020000	addi	r2,r0,(#0x0)&0xff
 1500  000020c8  a0220000	sb	(r1),r2
 1501  000020cc  0bffffc8	j	L105_LF2
 1502  000020d0  54000000	nop; delay slot nop
 1503  000020d4          	L106_LF2:
 1504  000020d4          	L104_LF2:
 1505  000020d4  8fa20000	lw	r2,0(r29)
 1506  000020d8  8fdffff8	lw	r31,-8(r30)
 1507  000020dc  001ee820	add	r29,r0,r30
 1508  000020e0  8fdefffc	lw	r30,-4(r30)
 1509  000020e4  4be00000	jr	r31
 1510  000020e8  54000000	nop
 1511  000020ec          	.endproc _bzero
 1512  000020ec          	.align 2
 1513  000020ec          	.proc _min
 1514  000020ec          	.global _min
 1515  000020ec          	_min:
 1516                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1517  000020ec  afbefffc	sw	-4(r29),r30; push fp
 1518  000020f0  001df020	add	r30,r0,r29; fp = sp
 1519  000020f4  afbffff8	sw	-8(r29),r31; push ret addr
 1520  000020f8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1521  000020fc  afa20000	sw	0(r29),r2
 1522  00002100  afa30004	sw	4(r29),r3
 1523  00002104  8fc10000	lw	r1,(r30)
 1524  00002108  8fc20004	lw	r2,4(r30)
 1525  0000210c  0022182c	sle	r3,r1,r2
 1526  00002110  14600008	bnez	r3,L109_LF2
 1527  00002114  54000000	nop; delay slot nop
 1528  00002118  8fc10004	lw	r1,4(r30)
 1529  0000211c          	L109_LF2:
 1530  0000211c  08000004	j	L108_LF2
 1531  00002120  54000000	nop; delay slot nop
 1532  00002124          	L108_LF2:
 1533  00002124  8fa20000	lw	r2,0(r29)
 1534  00002128  8fa30004	lw	r3,4(r29)
 1535  0000212c  8fdffff8	lw	r31,-8(r30)
 1536  00002130  001ee820	add	r29,r0,r30
 1537  00002134  8fdefffc	lw	r30,-4(r30)
 1538  00002138  4be00000	jr	r31
 1539  0000213c  54000000	nop
 1540  00002140          	.endproc _min
 1541  00002140          	.align 2
 1542  00002140          	.proc _max
 1543  00002140          	.global _max
 1544  00002140          	_max:
 1545                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1546  00002140  afbefffc	sw	-4(r29),r30; push fp
 1547  00002144  001df020	add	r30,r0,r29; fp = sp
 1548  00002148  afbffff8	sw	-8(r29),r31; push ret addr
 1549  0000214c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1550  00002150  afa20000	sw	0(r29),r2
 1551  00002154  afa30004	sw	4(r29),r3
 1552  00002158  8fc10000	lw	r1,(r30)
 1553  0000215c  8fc20004	lw	r2,4(r30)
 1554  00002160  0022182d	sge	r3,r1,r2
 1555  00002164  14600008	bnez	r3,L111_LF2
 1556  00002168  54000000	nop; delay slot nop
 1557  0000216c  8fc10004	lw	r1,4(r30)
 1558  00002170          	L111_LF2:
 1559  00002170  08000004	j	L110_LF2
 1560  00002174  54000000	nop; delay slot nop
 1561  00002178          	L110_LF2:
 1562  00002178  8fa20000	lw	r2,0(r29)
 1563  0000217c  8fa30004	lw	r3,4(r29)
 1564  00002180  8fdffff8	lw	r31,-8(r30)
 1565  00002184  001ee820	add	r29,r0,r30
 1566  00002188  8fdefffc	lw	r30,-4(r30)
 1567  0000218c  4be00000	jr	r31
 1568  00002190  54000000	nop
 1569  00002194          	.endproc _max
 1570                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1571                      ;;;
 1572                      ;;; Most of the traps are called in files from libtraps.
 1575  00002194          	.align 2
 1576  00002194          	.proc _exit
 1577  00002194          	.global _exit
 1578  00002194          	_exit:
 1579  00002194  44000300	trap	#0x300
 1580  00002198  4be00000	jr	r31
 1581  0000219c  54000000	nop
 1582  000021a0          	.endproc _exit
 1584                      ; for the benefit of gcc.
 1585  000021a0          	.proc ___main
 1586  000021a0          	.global ___main
 1587  000021a0          	___main:
 1588  000021a0  4be00000	jr	r31
 1589  000021a4  54000000	nop
 1590  000021a8          	.endproc ___main
 1591  000021a8          	.text
 1592  000021a8          	.global _etext
 1593  000021a8          	_etext:
 1594  000021a8          	.align 3
 1595  000021a8          	.data
 1596  000030c2          	.global _edata
 1597  000030c2          	_edata:
