 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 105
    4                      ; Text size: 4284
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   82  00003004  70726f63	
   82  00003008  73202825	
   82  0000300c  64293a20	
   82  00003010  42616420	
   82  00003014  73656d5f	
   82  00003018  63726561	
   82  0000301c  74650a00	
   83  00003020          	.align 2
   84  00003020          	LC1_LF0:
   85  00003020  74657374	.ascii "test1.dlx.obj\000"
   85  00003024  312e646c	
   85  00003028  782e6f62	
   85  0000302c  6a00    	
   86  0000302e          	.align 2
   87  00003030          	LC2_LF0:
   88  00003030  2d2d2d2d	.ascii "------------------Makeprocs complete-------------------\n\000"
   88  00003034  2d2d2d2d	
   88  00003038  2d2d2d2d	
   88  0000303c  2d2d2d2d	
   88  00003040  2d2d4d61	
   88  00003044  6b657072	
   88  00003048  6f637320	
   88  0000304c  636f6d70	
   88  00003050  6c657465	
   88  00003054  2d2d2d2d	
   88  00003058  2d2d2d2d	
   88  0000305c  2d2d2d2d	
   88  00003060  2d2d2d2d	
   88  00003064  2d2d2d0a	
   88  00003068  00      	
   89  00003069          	.text
   90  000010d4          	.align 2
   91  000010d4          	.proc _main
   92  000010d4          	.global _main
   93  000010d4          	_main:
   94                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
   95  000010d4  afbefffc	sw	-4(r29),r30; push fp
   96  000010d8  001df020	add	r30,r0,r29; fp = sp
   97  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   98  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   99  000010e4  0c000fcc	jal	___main
  100  000010e8  54000000	nop; not filled.
  101  000010ec  23bdfff8	addi	r29,r29,#-8
  102  000010f0  20040000	addi	r4,r0,#0
  103  000010f4  afa40000	sw	(r29),r4
  104  000010f8  0c000134	jal	_sem_create
  105  000010fc  54000000	nop; not filled.
  106  00001100  00011820	add	r3,r0,r1
  107  00001104  23bd0008	addi	r29,r29,#8
  108  00001108  6061ffff	seqi	r1,r3,#-1
  109  0000110c  10200034	beqz	r1,L16_LF0
  110  00001110  54000000	nop; not filled.
  111  00001114  0c0000e8	jal	_getpid
  112  00001118  54000000	nop; not filled.
  113  0000111c  23bdfff8	addi	r29,r29,#-8
  114  00001120  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  115  00001124  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  116  00001128  afa40000	sw	(r29),r4
  117  0000112c  afa10004	sw	4(r29),r1
  118  00001130  0c0000c0	jal	_Printf
  119  00001134  54000000	nop; not filled.
  120  00001138  0c0001c0	jal	_Exit
  121  0000113c  54000000	nop; not filled.
  122  00001140  23bd0008	addi	r29,r29,#8
  123  00001144          	L16_LF0:
  124  00001144  23bdfff8	addi	r29,r29,#-8
  125  00001148  afa30000	sw	(r29),r3
  126  0000114c  23c2ffe8	addi	r2,r30,#-24
  127  00001150  afa20004	sw	4(r29),r2
  128  00001154  0c0008d4	jal	_ditoa
  129  00001158  54000000	nop; not filled.
  130  0000115c  23bdfff8	addi	r29,r29,#-8
  131  00001160  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  132  00001164  24843020	addui	r4,r4,(LC1_LF0)&0xffff
  133  00001168  afa40000	sw	(r29),r4
  134  0000116c  afa20004	sw	4(r29),r2
  135  00001170  20040000	addi	r4,r0,#0
  136  00001174  afa40008	sw	8(r29),r4
  137  00001178  0c000090	jal	_process_create
  138  0000117c  54000000	nop; not filled.
  139  00001180  afa30000	sw	(r29),r3
  140  00001184  0c0000b4	jal	_sem_wait
  141  00001188  54000000	nop; not filled.
  142  0000118c  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  143  00001190  24843030	addui	r4,r4,(LC2_LF0)&0xffff
  144  00001194  afa40000	sw	(r29),r4
  145  00001198  0c000058	jal	_Printf
  146  0000119c  54000000	nop; not filled.
  147  000011a0  23bd0010	addi	r29,r29,#16
  148  000011a4  0c000f00	jal	_exit
  149  000011a8  54000000	nop
  150  000011ac          	.endproc _main
  151                      ;;;
  152                      ;;; Stub functions for DLX traps.
  153                      ;;;
  154                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  155                      ;;;
  156                      ;;; The traps such as Open and Close
  157                      ;;; (note the capital letters) are for use by user programs.  The traps
  158                      ;;; with names such as open and close (lower case) are for use by the OS.
  159                      ;;;
  162  000011ac          	.align 2
  164                      ;;; The following are the traps to be used by user-level programs
  165                      ;;;
  167  000011ac          	.align 2
  168  000011ac          	.proc _Open
  169  000011ac          	.global _Open
  170  000011ac          	_Open:
  171                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  172                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  173                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  174  000011ac  44000213	trap	#0x213
  175  000011b0  4be00000	jr	r31
  176  000011b4  54000000	nop
  177  000011b8          	.endproc _Open
  179  000011b8          	.proc _Close
  180  000011b8          	.global _Close
  181  000011b8          	_Close:
  182  000011b8  44000214	trap	#0x214
  183  000011bc  4be00000	jr	r31
  184  000011c0  54000000	nop
  185  000011c4          	.endproc _Close
  187  000011c4          	.proc _Read
  188  000011c4          	.global _Read
  189  000011c4          	_Read:
  190  000011c4  44000210	trap	#0x210
  191  000011c8  4be00000	jr	r31
  192  000011cc  54000000	nop
  193  000011d0          	.endproc _Read
  195  000011d0          	.proc _Write
  196  000011d0          	.global _Write
  197  000011d0          	_Write:
  198  000011d0  44000211	trap	#0x211
  199  000011d4  4be00000	jr	r31
  200  000011d8  54000000	nop
  201  000011dc          	.endproc _Write
  203  000011dc          	.proc _Lseek
  204  000011dc          	.global _Lseek
  205  000011dc          	_Lseek:
  206  000011dc  44000212	trap	#0x212
  207  000011e0  4be00000	jr	r31
  208  000011e4  54000000	nop
  209  000011e8          	.endproc _Lseek
  211  000011e8          	.proc _Putchar
  212  000011e8          	.global _Putchar
  213  000011e8          	_Putchar:
  214  000011e8  44000280	trap	#0x280
  215  000011ec  4be00000	jr	r31
  216  000011f0  54000000	nop
  217  000011f4          	.endproc _Putchar
  219  000011f4          	.proc _Printf
  220  000011f4          	.global _Printf
  221  000011f4          	_Printf:
  222  000011f4  44000201	trap	#0x201
  223  000011f8  4be00000	jr	r31
  224  000011fc  54000000	nop
  225  00001200          	.endproc _Printf
  227  00001200          	.proc _getpid
  228  00001200          	.global _getpid
  229  00001200          	_getpid:
  230  00001200  44000431	trap	#0x431
  231  00001204  4be00000	jr	r31
  232  00001208  54000000	nop
  233  0000120c          	.endproc _getpid
  235  0000120c          	.proc _process_create
  236  0000120c          	.global _process_create
  237  0000120c          	_process_create:
  238  0000120c  44000432	trap	#0x432
  239  00001210  4be00000	jr	r31
  240  00001214  54000000	nop
  241  00001218          	.endproc _process_create
  243  00001218          	.proc _shmget
  244  00001218          	.global _shmget
  245  00001218          	_shmget:
  246  00001218  44000440	trap	#0x440
  247  0000121c  4be00000	jr	r31
  248  00001220  54000000	nop
  249  00001224          	.endproc _shmget
  251  00001224          	.proc _shmat
  252  00001224          	.global _shmat
  253  00001224          	_shmat:
  254  00001224  44000441	trap	#0x441
  255  00001228  4be00000	jr	r31
  256  0000122c  54000000	nop
  257  00001230          	.endproc _shmat
  259  00001230          	.proc _sem_create
  260  00001230          	.global _sem_create
  261  00001230          	_sem_create:
  262  00001230  44000450	trap	#0x450
  263  00001234  4be00000	jr	r31
  264  00001238  54000000	nop
  265  0000123c          	.endproc _sem_create
  267  0000123c          	.proc _sem_wait
  268  0000123c          	.global _sem_wait
  269  0000123c          	_sem_wait:
  270  0000123c  44000451	trap	#0x451
  271  00001240  4be00000	jr	r31
  272  00001244  54000000	nop
  273  00001248          	.endproc _sem_wait
  275  00001248          	.proc _sem_signal
  276  00001248          	.global _sem_signal
  277  00001248          	_sem_signal:
  278  00001248  44000452	trap	#0x452
  279  0000124c  4be00000	jr	r31
  280  00001250  54000000	nop
  281  00001254          	.endproc _sem_signal
  283  00001254          	.proc _lock_create
  284  00001254          	.global _lock_create
  285  00001254          	_lock_create:
  286  00001254  44000453	trap	#0x453
  287  00001258  4be00000	jr	r31
  288  0000125c  54000000	nop
  289  00001260          	.endproc _lock_create
  291  00001260          	.proc _lock_acquire
  292  00001260          	.global _lock_acquire
  293  00001260          	_lock_acquire:
  294  00001260  44000454	trap	#0x454
  295  00001264  4be00000	jr	r31
  296  00001268  54000000	nop
  297  0000126c          	.endproc _lock_acquire
  299  0000126c          	.proc _lock_release
  300  0000126c          	.global _lock_release
  301  0000126c          	_lock_release:
  302  0000126c  44000455	trap	#0x455
  303  00001270  4be00000	jr	r31
  304  00001274  54000000	nop
  305  00001278          	.endproc _lock_release
  307  00001278          	.proc _cond_create
  308  00001278          	.global _cond_create
  309  00001278          	_cond_create:
  310  00001278  44000456	trap	#0x456
  311  0000127c  4be00000	jr	r31
  312  00001280  54000000	nop
  313  00001284          	.endproc _cond_create
  315  00001284          	.proc _cond_wait
  316  00001284          	.global _cond_wait
  317  00001284          	_cond_wait:
  318  00001284  44000457	trap	#0x457
  319  00001288  4be00000	jr	r31
  320  0000128c  54000000	nop
  321  00001290          	.endproc _cond_wait
  323  00001290          	.proc _cond_signal
  324  00001290          	.global _cond_signal
  325  00001290          	_cond_signal:
  326  00001290  44000458	trap	#0x458
  327  00001294  4be00000	jr	r31
  328  00001298  54000000	nop
  329  0000129c          	.endproc _cond_signal
  331  0000129c          	.proc _cond_broadcast
  332  0000129c          	.global _cond_broadcast
  333  0000129c          	_cond_broadcast:
  334  0000129c  44000459	trap	#0x459
  335  000012a0  4be00000	jr	r31
  336  000012a4  54000000	nop
  337  000012a8          	.endproc _cond_broadcast
  339  000012a8          	.proc _mbox_create
  340  000012a8          	.global _mbox_create
  341  000012a8          	_mbox_create:
  342  000012a8  44000460	trap	#0x460
  343  000012ac  4be00000	jr	r31
  344  000012b0  54000000	nop
  345  000012b4          	.endproc _mbox_create
  347  000012b4          	.proc _mbox_open
  348  000012b4          	.global _mbox_open
  349  000012b4          	_mbox_open:
  350  000012b4  44000461	trap	#0x461
  351  000012b8  4be00000	jr	r31
  352  000012bc  54000000	nop
  353  000012c0          	.endproc _mbox_open
  355  000012c0          	.proc _mbox_close
  356  000012c0          	.global _mbox_close
  357  000012c0          	_mbox_close:
  358  000012c0  44000462	trap	#0x462
  359  000012c4  4be00000	jr	r31
  360  000012c8  54000000	nop
  361  000012cc          	.endproc _mbox_close
  363  000012cc          	.proc _mbox_send
  364  000012cc          	.global _mbox_send
  365  000012cc          	_mbox_send:
  366  000012cc  44000463	trap	#0x463
  367  000012d0  4be00000	jr	r31
  368  000012d4  54000000	nop
  369  000012d8          	.endproc _mbox_send
  371  000012d8          	.proc _mbox_recv
  372  000012d8          	.global _mbox_recv
  373  000012d8          	_mbox_recv:
  374  000012d8  44000464	trap	#0x464
  375  000012dc  4be00000	jr	r31
  376  000012e0  54000000	nop
  377  000012e4          	.endproc _mbox_recv
  379  000012e4          	.proc _sleep
  380  000012e4          	.global _sleep
  381  000012e4          	_sleep:
  382  000012e4  44000465	trap	#0x465
  383  000012e8  4be00000	jr	r31
  384  000012ec  54000000	nop
  385  000012f0          	.endproc _sleep
  387  000012f0          	.proc _yield
  388  000012f0          	.global _yield
  389  000012f0          	_yield:
  390  000012f0  44000466	trap	#0x466
  391  000012f4  4be00000	jr	r31
  392  000012f8  54000000	nop
  393  000012fc          	.endproc _yield
  396  000012fc          	.proc _Exit
  397  000012fc          	.global _Exit
  398  000012fc          	_Exit:
  399  000012fc  44000500	trap	#0x500
  400  00001300  4be00000	jr	r31
  401  00001304  54000000	nop
  402  00001308          	.endproc _Exit
  405  00001308          	.proc _malloc
  406  00001308          	.global _malloc
  407  00001308          	_malloc:
  408  00001308  44000467	trap	#0x467
  409  0000130c  4be00000	jr	r31
  410  00001310          	.endproc _malloc
  413  00001310          	.proc _mfree
  414  00001310          	.global _mfree
  415  00001310          	_mfree:
  416  00001310  44000468	trap	#0x468
  417  00001314  4be00000	jr	r31
  418  00001318          	.endproc _mfree
  419                      ; Compiled by GCC
  421  00001318          	.align 2
  422  00001318          	.proc _isspace
  423  00001318          	.global _isspace
  424  00001318          	_isspace:
  425                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  426  00001318  afbefffc	sw	-4(r29),r30; push fp
  427  0000131c  001df020	add	r30,r0,r29; fp = sp
  428  00001320  afbffff8	sw	-8(r29),r31; push ret addr
  429  00001324  2fbd0018	subui	r29,r29,#24; alloc local storage
  430  00001328  afa20000	sw	0(r29),r2
  431  0000132c  afa30004	sw	4(r29),r3
  432  00001330  afa40008	sw	8(r29),r4
  433  00001334  83c20003	lb	r2,3(r30)
  434  00001338  20010000	addi	r1,r0,#0
  435  0000133c  304300ff	andi	r3,r2,#0x00ff
  436  00001340  60640020	seqi	r4,r3,#32
  437  00001344  1480002c	bnez	r4,L3_LF2
  438  00001348  54000000	nop; delay slot nop
  439  0000134c  304300ff	andi	r3,r2,#0x00ff
  440  00001350  60640009	seqi	r4,r3,#9
  441  00001354  1480001c	bnez	r4,L3_LF2
  442  00001358  54000000	nop; delay slot nop
  443  0000135c  304300ff	andi	r3,r2,#0x00ff
  444  00001360  6064000a	seqi	r4,r3,#10
  445  00001364  1480000c	bnez	r4,L3_LF2
  446  00001368  54000000	nop; delay slot nop
  447  0000136c  08000008	j	L2_LF2
  448  00001370  54000000	nop; delay slot nop
  449  00001374          	L3_LF2:
  450  00001374  20010001	addi	r1,r0,#1
  451  00001378          	L2_LF2:
  452  00001378  08000004	j	L1_LF2
  453  0000137c  54000000	nop; delay slot nop
  454  00001380          	L1_LF2:
  455  00001380  8fa20000	lw	r2,0(r29)
  456  00001384  8fa30004	lw	r3,4(r29)
  457  00001388  8fa40008	lw	r4,8(r29)
  458  0000138c  8fdffff8	lw	r31,-8(r30)
  459  00001390  001ee820	add	r29,r0,r30
  460  00001394  8fdefffc	lw	r30,-4(r30)
  461  00001398  4be00000	jr	r31
  462  0000139c  54000000	nop
  463  000013a0          	.endproc _isspace
  464  000013a0          	.align 2
  465  000013a0          	.proc _isxdigit
  466  000013a0          	.global _isxdigit
  467  000013a0          	_isxdigit:
  468                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  469  000013a0  afbefffc	sw	-4(r29),r30; push fp
  470  000013a4  001df020	add	r30,r0,r29; fp = sp
  471  000013a8  afbffff8	sw	-8(r29),r31; push ret addr
  472  000013ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  473  000013b0  afa20000	sw	0(r29),r2
  474  000013b4  afa30004	sw	4(r29),r3
  475  000013b8  afa40008	sw	8(r29),r4
  476  000013bc  83c20003	lb	r2,3(r30)
  477  000013c0  20010000	addi	r1,r0,#0
  478  000013c4  304300ff	andi	r3,r2,#0x00ff
  479  000013c8  6c64002f	sgtui	r4,r3,#47
  480  000013cc  1080001c	beqz	r4,L7_LF2
  481  000013d0  54000000	nop; delay slot nop
  482  000013d4  304300ff	andi	r3,r2,#0x00ff
  483  000013d8  70640039	sleui	r4,r3,#57
  484  000013dc  1480005c	bnez	r4,L6_LF2
  485  000013e0  54000000	nop; delay slot nop
  486  000013e4  08000004	j	L7_LF2
  487  000013e8  54000000	nop; delay slot nop
  488  000013ec          	L7_LF2:
  489  000013ec  304300ff	andi	r3,r2,#0x00ff
  490  000013f0  6c640060	sgtui	r4,r3,#96
  491  000013f4  1080001c	beqz	r4,L8_LF2
  492  000013f8  54000000	nop; delay slot nop
  493  000013fc  304300ff	andi	r3,r2,#0x00ff
  494  00001400  70640066	sleui	r4,r3,#102
  495  00001404  14800034	bnez	r4,L6_LF2
  496  00001408  54000000	nop; delay slot nop
  497  0000140c  08000004	j	L8_LF2
  498  00001410  54000000	nop; delay slot nop
  499  00001414          	L8_LF2:
  500  00001414  304300ff	andi	r3,r2,#0x00ff
  501  00001418  6c640040	sgtui	r4,r3,#64
  502  0000141c  10800020	beqz	r4,L5_LF2
  503  00001420  54000000	nop; delay slot nop
  504  00001424  304300ff	andi	r3,r2,#0x00ff
  505  00001428  70640041	sleui	r4,r3,#65
  506  0000142c  1480000c	bnez	r4,L6_LF2
  507  00001430  54000000	nop; delay slot nop
  508  00001434  08000008	j	L5_LF2
  509  00001438  54000000	nop; delay slot nop
  510  0000143c          	L6_LF2:
  511  0000143c  20010001	addi	r1,r0,#1
  512  00001440          	L5_LF2:
  513  00001440  08000004	j	L4_LF2
  514  00001444  54000000	nop; delay slot nop
  515  00001448          	L4_LF2:
  516  00001448  8fa20000	lw	r2,0(r29)
  517  0000144c  8fa30004	lw	r3,4(r29)
  518  00001450  8fa40008	lw	r4,8(r29)
  519  00001454  8fdffff8	lw	r31,-8(r30)
  520  00001458  001ee820	add	r29,r0,r30
  521  0000145c  8fdefffc	lw	r30,-4(r30)
  522  00001460  4be00000	jr	r31
  523  00001464  54000000	nop
  524  00001468          	.endproc _isxdigit
  525  00001468          	.align 2
  526  00001468          	.proc _dstrcpy
  527  00001468          	.global _dstrcpy
  528  00001468          	_dstrcpy:
  529                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  530  00001468  afbefffc	sw	-4(r29),r30; push fp
  531  0000146c  001df020	add	r30,r0,r29; fp = sp
  532  00001470  afbffff8	sw	-8(r29),r31; push ret addr
  533  00001474  2fbd0018	subui	r29,r29,#24; alloc local storage
  534  00001478  afa20000	sw	0(r29),r2
  535  0000147c  afa30004	sw	4(r29),r3
  536  00001480  8fc10000	lw	r1,(r30)
  537  00001484  afc1fff4	sw	-12(r30),r1
  538  00001488          	L10_LF2:
  539  00001488  8fc10000	lw	r1,(r30)
  540  0000148c  20220001	addi	r2,r1,#1
  541  00001490  afc20000	sw	(r30),r2
  542  00001494  8fc20004	lw	r2,4(r30)
  543  00001498  20430001	addi	r3,r2,#1
  544  0000149c  afc30004	sw	4(r30),r3
  545  000014a0  80420000	lb	r2,(r2)
  546  000014a4  a0220000	sb	(r1),r2
  547  000014a8  a3c2fff3	sb	-13(r30),r2
  548  000014ac          	L12_LF2:
  549  000014ac  93c1fff3	lbu	r1,-13(r30)
  550  000014b0  64220000	snei	r2,r1,#0
  551  000014b4  1440000c	bnez	r2,L13_LF2
  552  000014b8  54000000	nop; delay slot nop
  553  000014bc  0800000c	j	L11_LF2
  554  000014c0  54000000	nop; delay slot nop
  555  000014c4          	L13_LF2:
  556  000014c4  0bffffc0	j	L10_LF2
  557  000014c8  54000000	nop; delay slot nop
  558  000014cc          	L11_LF2:
  559  000014cc  8fc1fff4	lw	r1,-12(r30)
  560  000014d0  08000004	j	L9_LF2
  561  000014d4  54000000	nop; delay slot nop
  562  000014d8          	L9_LF2:
  563  000014d8  8fa20000	lw	r2,0(r29)
  564  000014dc  8fa30004	lw	r3,4(r29)
  565  000014e0  8fdffff8	lw	r31,-8(r30)
  566  000014e4  001ee820	add	r29,r0,r30
  567  000014e8  8fdefffc	lw	r30,-4(r30)
  568  000014ec  4be00000	jr	r31
  569  000014f0  54000000	nop
  570  000014f4          	.endproc _dstrcpy
  571  000014f4          	.align 2
  572  000014f4          	.proc _dstrncpy
  573  000014f4          	.global _dstrncpy
  574  000014f4          	_dstrncpy:
  575                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  576  000014f4  afbefffc	sw	-4(r29),r30; push fp
  577  000014f8  001df020	add	r30,r0,r29; fp = sp
  578  000014fc  afbffff8	sw	-8(r29),r31; push ret addr
  579  00001500  2fbd0018	subui	r29,r29,#24; alloc local storage
  580  00001504  afa20000	sw	0(r29),r2
  581  00001508  afa30004	sw	4(r29),r3
  582  0000150c  8fc10000	lw	r1,(r30)
  583  00001510  afc1fff4	sw	-12(r30),r1
  584  00001514          	L15_LF2:
  585  00001514  8fc10008	lw	r1,8(r30)
  586  00001518  2022ffff	addi	r2,r1,#-1
  587  0000151c  afc20008	sw	8(r30),r2
  588  00001520  70210000	slei	r1,r1,#0
  589  00001524  1020000c	beqz	r1,L18_LF2
  590  00001528  54000000	nop; delay slot nop
  591  0000152c  08000048	j	L16_LF2
  592  00001530  54000000	nop; delay slot nop
  593  00001534          	L18_LF2:
  594  00001534  8fc10000	lw	r1,(r30)
  595  00001538  20220001	addi	r2,r1,#1
  596  0000153c  afc20000	sw	(r30),r2
  597  00001540  8fc20004	lw	r2,4(r30)
  598  00001544  20430001	addi	r3,r2,#1
  599  00001548  afc30004	sw	4(r30),r3
  600  0000154c  80420000	lb	r2,(r2)
  601  00001550  a0220000	sb	(r1),r2
  602  00001554  a3c2fff3	sb	-13(r30),r2
  603  00001558          	L17_LF2:
  604  00001558  93c1fff3	lbu	r1,-13(r30)
  605  0000155c  64220000	snei	r2,r1,#0
  606  00001560  1440000c	bnez	r2,L19_LF2
  607  00001564  54000000	nop; delay slot nop
  608  00001568  0800000c	j	L16_LF2
  609  0000156c  54000000	nop; delay slot nop
  610  00001570          	L19_LF2:
  611  00001570  0bffffa0	j	L15_LF2
  612  00001574  54000000	nop; delay slot nop
  613  00001578          	L16_LF2:
  614  00001578  8fc1fff4	lw	r1,-12(r30)
  615  0000157c  08000004	j	L14_LF2
  616  00001580  54000000	nop; delay slot nop
  617  00001584          	L14_LF2:
  618  00001584  8fa20000	lw	r2,0(r29)
  619  00001588  8fa30004	lw	r3,4(r29)
  620  0000158c  8fdffff8	lw	r31,-8(r30)
  621  00001590  001ee820	add	r29,r0,r30
  622  00001594  8fdefffc	lw	r30,-4(r30)
  623  00001598  4be00000	jr	r31
  624  0000159c  54000000	nop
  625  000015a0          	.endproc _dstrncpy
  626  000015a0          	.align 2
  627  000015a0          	.proc _dstrcat
  628  000015a0          	.global _dstrcat
  629  000015a0          	_dstrcat:
  630                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  631  000015a0  afbefffc	sw	-4(r29),r30; push fp
  632  000015a4  001df020	add	r30,r0,r29; fp = sp
  633  000015a8  afbffff8	sw	-8(r29),r31; push ret addr
  634  000015ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  635  000015b0  afa20000	sw	0(r29),r2
  636  000015b4  8fc10000	lw	r1,(r30)
  637  000015b8  afc1fff4	sw	-12(r30),r1
  638  000015bc          	L21_LF2:
  639  000015bc  8fc10000	lw	r1,(r30)
  640  000015c0  90220000	lbu	r2,(r1)
  641  000015c4  64410000	snei	r1,r2,#0
  642  000015c8  1420000c	bnez	r1,L23_LF2
  643  000015cc  54000000	nop; delay slot nop
  644  000015d0  0800001c	j	L22_LF2
  645  000015d4  54000000	nop; delay slot nop
  646  000015d8          	L23_LF2:
  647  000015d8  8fc20000	lw	r2,(r30)
  648  000015dc  20410001	addi	r1,r2,#1
  649  000015e0  00011020	add	r2,r0,r1
  650  000015e4  afc20000	sw	(r30),r2
  651  000015e8  0bffffd0	j	L21_LF2
  652  000015ec  54000000	nop; delay slot nop
  653  000015f0          	L22_LF2:
  654  000015f0  23bdfff8	addi	r29,r29,#-8
  655  000015f4  001d0820	add	r1,r0,r29
  656  000015f8  8fc20000	lw	r2,(r30)
  657  000015fc  ac220000	sw	(r1),r2
  658  00001600  8fc20004	lw	r2,4(r30)
  659  00001604  ac220004	sw	4(r1),r2
  660  00001608  0ffffe5c	jal	_dstrcpy
  661  0000160c  54000000	nop; delay slot nop
  662  00001610  23bd0008	addi	r29,r29,#8
  663  00001614  8fc1fff4	lw	r1,-12(r30)
  664  00001618  08000004	j	L20_LF2
  665  0000161c  54000000	nop; delay slot nop
  666  00001620          	L20_LF2:
  667  00001620  8fa20000	lw	r2,0(r29)
  668  00001624  8fdffff8	lw	r31,-8(r30)
  669  00001628  001ee820	add	r29,r0,r30
  670  0000162c  8fdefffc	lw	r30,-4(r30)
  671  00001630  4be00000	jr	r31
  672  00001634  54000000	nop
  673  00001638          	.endproc _dstrcat
  674  00001638          	.align 2
  675  00001638          	.proc _dstrncmp
  676  00001638          	.global _dstrncmp
  677  00001638          	_dstrncmp:
  678                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  679  00001638  afbefffc	sw	-4(r29),r30; push fp
  680  0000163c  001df020	add	r30,r0,r29; fp = sp
  681  00001640  afbffff8	sw	-8(r29),r31; push ret addr
  682  00001644  2fbd0018	subui	r29,r29,#24; alloc local storage
  683  00001648  afa20000	sw	0(r29),r2
  684  0000164c  afa30004	sw	4(r29),r3
  685  00001650  54000000	nop
  686  00001654  20010000	addi	r1,r0,#0
  687  00001658  afc1fff4	sw	-12(r30),r1
  688  0000165c          	L25_LF2:
  689  0000165c  8fc1fff4	lw	r1,-12(r30)
  690  00001660  8fc20008	lw	r2,8(r30)
  691  00001664  0022082a	slt	r1,r1,r2
  692  00001668  1420000c	bnez	r1,L28_LF2
  693  0000166c  54000000	nop; delay slot nop
  694  00001670  08000088	j	L26_LF2
  695  00001674  54000000	nop; delay slot nop
  696  00001678          	L28_LF2:
  697  00001678  8fc10004	lw	r1,4(r30)
  698  0000167c  90220000	lbu	r2,(r1)
  699  00001680  64410000	snei	r1,r2,#0
  700  00001684  14200018	bnez	r1,L29_LF2
  701  00001688  54000000	nop; delay slot nop
  702  0000168c  20010000	addi	r1,r0,#0
  703  00001690  080000d8	j	L24_LF2
  704  00001694  54000000	nop; delay slot nop
  705  00001698  08000028	j	L30_LF2
  706  0000169c  54000000	nop; delay slot nop
  707  000016a0          	L29_LF2:
  708  000016a0  8fc10000	lw	r1,(r30)
  709  000016a4  8fc20004	lw	r2,4(r30)
  710  000016a8  90210000	lbu	r1,(r1)
  711  000016ac  90420000	lbu	r2,(r2)
  712  000016b0  00220829	sne	r1,r1,r2
  713  000016b4  1020000c	beqz	r1,L30_LF2
  714  000016b8  54000000	nop; delay slot nop
  715  000016bc  0800003c	j	L26_LF2
  716  000016c0  54000000	nop; delay slot nop
  717  000016c4          	L31_LF2:
  718  000016c4          	L30_LF2:
  719  000016c4  8fc20000	lw	r2,(r30)
  720  000016c8  20410001	addi	r1,r2,#1
  721  000016cc  00011020	add	r2,r0,r1
  722  000016d0  afc20000	sw	(r30),r2
  723  000016d4  8fc20004	lw	r2,4(r30)
  724  000016d8  20410001	addi	r1,r2,#1
  725  000016dc  00011020	add	r2,r0,r1
  726  000016e0  afc20004	sw	4(r30),r2
  727  000016e4          	L27_LF2:
  728  000016e4  8fc2fff4	lw	r2,-12(r30)
  729  000016e8  20410001	addi	r1,r2,#1
  730  000016ec  00011020	add	r2,r0,r1
  731  000016f0  afc2fff4	sw	-12(r30),r2
  732  000016f4  0bffff64	j	L25_LF2
  733  000016f8  54000000	nop; delay slot nop
  734  000016fc          	L26_LF2:
  735  000016fc  8fc1fff4	lw	r1,-12(r30)
  736  00001700  8fc20008	lw	r2,8(r30)
  737  00001704  00220828	seq	r1,r1,r2
  738  00001708  10200018	beqz	r1,L32_LF2
  739  0000170c  54000000	nop; delay slot nop
  740  00001710  20010000	addi	r1,r0,#0
  741  00001714  08000054	j	L24_LF2
  742  00001718  54000000	nop; delay slot nop
  743  0000171c  0800004c	j	L33_LF2
  744  00001720  54000000	nop; delay slot nop
  745  00001724          	L32_LF2:
  746  00001724  8fc20000	lw	r2,(r30)
  747  00001728  90410000	lbu	r1,(r2)
  748  0000172c  8fc20004	lw	r2,4(r30)
  749  00001730  90430000	lbu	r3,(r2)
  750  00001734  00230822	sub	r1,r1,r3
  751  00001738  74220000	sgei	r2,r1,#0
  752  0000173c  10400020	beqz	r2,L34_LF2
  753  00001740  54000000	nop; delay slot nop
  754  00001744  8fc10000	lw	r1,(r30)
  755  00001748  8fc20004	lw	r2,4(r30)
  756  0000174c  90210000	lbu	r1,(r1)
  757  00001750  90420000	lbu	r2,(r2)
  758  00001754  00220829	sne	r1,r1,r2
  759  00001758  08000008	j	L35_LF2
  760  0000175c  54000000	nop; delay slot nop
  761  00001760          	L34_LF2:
  762  00001760  2001ffff	addi	r1,r0,#-1
  763  00001764          	L35_LF2:
  764  00001764  08000004	j	L24_LF2
  765  00001768  54000000	nop; delay slot nop
  766  0000176c          	L33_LF2:
  767  0000176c          	L24_LF2:
  768  0000176c  8fa20000	lw	r2,0(r29)
  769  00001770  8fa30004	lw	r3,4(r29)
  770  00001774  8fdffff8	lw	r31,-8(r30)
  771  00001778  001ee820	add	r29,r0,r30
  772  0000177c  8fdefffc	lw	r30,-4(r30)
  773  00001780  4be00000	jr	r31
  774  00001784  54000000	nop
  775  00001788          	.endproc _dstrncmp
  776  00001788          	.align 2
  777  00001788          	.proc _dstrlen
  778  00001788          	.global _dstrlen
  779  00001788          	_dstrlen:
  780                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  781  00001788  afbefffc	sw	-4(r29),r30; push fp
  782  0000178c  001df020	add	r30,r0,r29; fp = sp
  783  00001790  afbffff8	sw	-8(r29),r31; push ret addr
  784  00001794  2fbd0018	subui	r29,r29,#24; alloc local storage
  785  00001798  afa20000	sw	0(r29),r2
  786  0000179c  20010000	addi	r1,r0,#0
  787  000017a0  afc1fff4	sw	-12(r30),r1
  788  000017a4          	L37_LF2:
  789  000017a4  8fc10000	lw	r1,(r30)
  790  000017a8  20220001	addi	r2,r1,#1
  791  000017ac  afc20000	sw	(r30),r2
  792  000017b0  90210000	lbu	r1,(r1)
  793  000017b4  64220000	snei	r2,r1,#0
  794  000017b8  1440000c	bnez	r2,L39_LF2
  795  000017bc  54000000	nop; delay slot nop
  796  000017c0  0800001c	j	L38_LF2
  797  000017c4  54000000	nop; delay slot nop
  798  000017c8          	L39_LF2:
  799  000017c8  8fc2fff4	lw	r2,-12(r30)
  800  000017cc  20410001	addi	r1,r2,#1
  801  000017d0  00011020	add	r2,r0,r1
  802  000017d4  afc2fff4	sw	-12(r30),r2
  803  000017d8  0bffffc8	j	L37_LF2
  804  000017dc  54000000	nop; delay slot nop
  805  000017e0          	L38_LF2:
  806  000017e0  8fc1fff4	lw	r1,-12(r30)
  807  000017e4  08000004	j	L36_LF2
  808  000017e8  54000000	nop; delay slot nop
  809  000017ec          	L36_LF2:
  810  000017ec  8fa20000	lw	r2,0(r29)
  811  000017f0  8fdffff8	lw	r31,-8(r30)
  812  000017f4  001ee820	add	r29,r0,r30
  813  000017f8  8fdefffc	lw	r30,-4(r30)
  814  000017fc  4be00000	jr	r31
  815  00001800  54000000	nop
  816  00001804          	.endproc _dstrlen
  817  00001804          	.align 2
  818  00001804          	.proc _dstrstr
  819  00001804          	.global _dstrstr
  820  00001804          	_dstrstr:
  821                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  822  00001804  afbefffc	sw	-4(r29),r30; push fp
  823  00001808  001df020	add	r30,r0,r29; fp = sp
  824  0000180c  afbffff8	sw	-8(r29),r31; push ret addr
  825  00001810  2fbd0018	subui	r29,r29,#24; alloc local storage
  826  00001814  afa20000	sw	0(r29),r2
  827  00001818  23bdfff8	addi	r29,r29,#-8
  828  0000181c  001d0820	add	r1,r0,r29
  829  00001820  8fc20004	lw	r2,4(r30)
  830  00001824  ac220000	sw	(r1),r2
  831  00001828  0fffff5c	jal	_dstrlen
  832  0000182c  54000000	nop; delay slot nop
  833  00001830  23bd0008	addi	r29,r29,#8
  834  00001834  afc1fff4	sw	-12(r30),r1
  835  00001838          	L41_LF2:
  836  00001838  8fc10000	lw	r1,(r30)
  837  0000183c  90220000	lbu	r2,(r1)
  838  00001840  64410000	snei	r1,r2,#0
  839  00001844  1420000c	bnez	r1,L43_LF2
  840  00001848  54000000	nop; delay slot nop
  841  0000184c  08000060	j	L42_LF2
  842  00001850  54000000	nop; delay slot nop
  843  00001854          	L43_LF2:
  844  00001854  23bdfff0	addi	r29,r29,#-16
  845  00001858  001d0820	add	r1,r0,r29
  846  0000185c  8fc20000	lw	r2,(r30)
  847  00001860  ac220000	sw	(r1),r2
  848  00001864  8fc20004	lw	r2,4(r30)
  849  00001868  ac220004	sw	4(r1),r2
  850  0000186c  8fc2fff4	lw	r2,-12(r30)
  851  00001870  ac220008	sw	8(r1),r2
  852  00001874  0ffffdc0	jal	_dstrncmp
  853  00001878  54000000	nop; delay slot nop
  854  0000187c  23bd0010	addi	r29,r29,#16
  855  00001880  64220000	snei	r2,r1,#0
  856  00001884  14400010	bnez	r2,L44_LF2
  857  00001888  54000000	nop; delay slot nop
  858  0000188c  8fc10000	lw	r1,(r30)
  859  00001890  08000028	j	L40_LF2
  860  00001894  54000000	nop; delay slot nop
  861  00001898          	L44_LF2:
  862  00001898  8fc20000	lw	r2,(r30)
  863  0000189c  20410001	addi	r1,r2,#1
  864  000018a0  00011020	add	r2,r0,r1
  865  000018a4  afc20000	sw	(r30),r2
  866  000018a8  0bffff8c	j	L41_LF2
  867  000018ac  54000000	nop; delay slot nop
  868  000018b0          	L42_LF2:
  869  000018b0  20010000	addi	r1,r0,#0
  870  000018b4  08000004	j	L40_LF2
  871  000018b8  54000000	nop; delay slot nop
  872  000018bc          	L40_LF2:
  873  000018bc  8fa20000	lw	r2,0(r29)
  874  000018c0  8fdffff8	lw	r31,-8(r30)
  875  000018c4  001ee820	add	r29,r0,r30
  876  000018c8  8fdefffc	lw	r30,-4(r30)
  877  000018cc  4be00000	jr	r31
  878  000018d0  54000000	nop
  879  000018d4          	.endproc _dstrstr
  880  000018d4          	.align 2
  881  000018d4          	.proc _dmindex
  882  000018d4          	.global _dmindex
  883  000018d4          	_dmindex:
  884                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  885  000018d4  afbefffc	sw	-4(r29),r30; push fp
  886  000018d8  001df020	add	r30,r0,r29; fp = sp
  887  000018dc  afbffff8	sw	-8(r29),r31; push ret addr
  888  000018e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  889  000018e4  afa20000	sw	0(r29),r2
  890  000018e8  54000000	nop
  891  000018ec          	L46_LF2:
  892  000018ec  8fc10000	lw	r1,(r30)
  893  000018f0  90220000	lbu	r2,(r1)
  894  000018f4  64410000	snei	r1,r2,#0
  895  000018f8  1420000c	bnez	r1,L48_LF2
  896  000018fc  54000000	nop; delay slot nop
  897  00001900  08000070	j	L47_LF2
  898  00001904  54000000	nop; delay slot nop
  899  00001908          	L48_LF2:
  900  00001908  8fc10004	lw	r1,4(r30)
  901  0000190c  afc1fff4	sw	-12(r30),r1
  902  00001910          	L49_LF2:
  903  00001910  8fc1fff4	lw	r1,-12(r30)
  904  00001914  90220000	lbu	r2,(r1)
  905  00001918  64410000	snei	r1,r2,#0
  906  0000191c  1420000c	bnez	r1,L52_LF2
  907  00001920  54000000	nop; delay slot nop
  908  00001924  08000044	j	L50_LF2
  909  00001928  54000000	nop; delay slot nop
  910  0000192c          	L52_LF2:
  911  0000192c  8fc10000	lw	r1,(r30)
  912  00001930  8fc2fff4	lw	r2,-12(r30)
  913  00001934  90210000	lbu	r1,(r1)
  914  00001938  90420000	lbu	r2,(r2)
  915  0000193c  00220828	seq	r1,r1,r2
  916  00001940  10200010	beqz	r1,L51_LF2
  917  00001944  54000000	nop; delay slot nop
  918  00001948  8fc10000	lw	r1,(r30)
  919  0000194c  08000030	j	L45_LF2
  920  00001950  54000000	nop; delay slot nop
  921  00001954          	L53_LF2:
  922  00001954          	L51_LF2:
  923  00001954  8fc2fff4	lw	r2,-12(r30)
  924  00001958  20410001	addi	r1,r2,#1
  925  0000195c  00011020	add	r2,r0,r1
  926  00001960  afc2fff4	sw	-12(r30),r2
  927  00001964  0bffffa8	j	L49_LF2
  928  00001968  54000000	nop; delay slot nop
  929  0000196c          	L50_LF2:
  930  0000196c  0bffff7c	j	L46_LF2
  931  00001970  54000000	nop; delay slot nop
  932  00001974          	L47_LF2:
  933  00001974  20010000	addi	r1,r0,#0
  934  00001978  08000004	j	L45_LF2
  935  0000197c  54000000	nop; delay slot nop
  936  00001980          	L45_LF2:
  937  00001980  8fa20000	lw	r2,0(r29)
  938  00001984  8fdffff8	lw	r31,-8(r30)
  939  00001988  001ee820	add	r29,r0,r30
  940  0000198c  8fdefffc	lw	r30,-4(r30)
  941  00001990  4be00000	jr	r31
  942  00001994  54000000	nop
  943  00001998          	.endproc _dmindex
  944  00001998          	.align 2
  945  00001998          	.proc _dindex
  946  00001998          	.global _dindex
  947  00001998          	_dindex:
  948                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  949  00001998  afbefffc	sw	-4(r29),r30; push fp
  950  0000199c  001df020	add	r30,r0,r29; fp = sp
  951  000019a0  afbffff8	sw	-8(r29),r31; push ret addr
  952  000019a4  2fbd0010	subui	r29,r29,#16; alloc local storage
  953  000019a8  afa20000	sw	0(r29),r2
  954  000019ac  54000000	nop
  955  000019b0          	L55_LF2:
  956  000019b0  8fc10000	lw	r1,(r30)
  957  000019b4  90220000	lbu	r2,(r1)
  958  000019b8  64410000	snei	r1,r2,#0
  959  000019bc  1420000c	bnez	r1,L57_LF2
  960  000019c0  54000000	nop; delay slot nop
  961  000019c4  08000040	j	L56_LF2
  962  000019c8  54000000	nop; delay slot nop
  963  000019cc          	L57_LF2:
  964  000019cc  8fc10000	lw	r1,(r30)
  965  000019d0  90220000	lbu	r2,(r1)
  966  000019d4  8fc10004	lw	r1,4(r30)
  967  000019d8  00411028	seq	r2,r2,r1
  968  000019dc  10400010	beqz	r2,L58_LF2
  969  000019e0  54000000	nop; delay slot nop
  970  000019e4  8fc10000	lw	r1,(r30)
  971  000019e8  08000028	j	L54_LF2
  972  000019ec  54000000	nop; delay slot nop
  973  000019f0          	L58_LF2:
  974  000019f0  8fc20000	lw	r2,(r30)
  975  000019f4  20410001	addi	r1,r2,#1
  976  000019f8  00011020	add	r2,r0,r1
  977  000019fc  afc20000	sw	(r30),r2
  978  00001a00  0bffffac	j	L55_LF2
  979  00001a04  54000000	nop; delay slot nop
  980  00001a08          	L56_LF2:
  981  00001a08  20010000	addi	r1,r0,#0
  982  00001a0c  08000004	j	L54_LF2
  983  00001a10  54000000	nop; delay slot nop
  984  00001a14          	L54_LF2:
  985  00001a14  8fa20000	lw	r2,0(r29)
  986  00001a18  8fdffff8	lw	r31,-8(r30)
  987  00001a1c  001ee820	add	r29,r0,r30
  988  00001a20  8fdefffc	lw	r30,-4(r30)
  989  00001a24  4be00000	jr	r31
  990  00001a28  54000000	nop
  991  00001a2c          	.endproc _dindex
  992  00001a2c          	.align 2
  993  00001a2c          	.proc _ditoa
  994  00001a2c          	.global _ditoa
  995  00001a2c          	_ditoa:
  996                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  997  00001a2c  afbefffc	sw	-4(r29),r30; push fp
  998  00001a30  001df020	add	r30,r0,r29; fp = sp
  999  00001a34  afbffff8	sw	-8(r29),r31; push ret addr
 1000  00001a38  2fbd0018	subui	r29,r29,#24; alloc local storage
 1001  00001a3c  afa20000	sw	0(r29),r2
 1002  00001a40  afa30004	sw	4(r29),r3
 1003  00001a44  8fc10000	lw	r1,(r30)
 1004  00001a48  68220000	slti	r2,r1,#0
 1005  00001a4c  1040002c	beqz	r2,L60_LF2
 1006  00001a50  54000000	nop; delay slot nop
 1007  00001a54  8fc10004	lw	r1,4(r30)
 1008  00001a58  20220001	addi	r2,r1,#1
 1009  00001a5c  afc20004	sw	4(r30),r2
 1010  00001a60  2002002d	addi	r2,r0,(#0x2d)&0xff
 1011  00001a64  a0220000	sb	(r1),r2
 1012  00001a68  8fc10000	lw	r1,(r30)
 1013  00001a6c  00011022	sub	r2,r0,r1
 1014  00001a70  afc20000	sw	(r30),r2
 1015  00001a74  08000118	j	L61_LF2
 1016  00001a78  54000000	nop; delay slot nop
 1017  00001a7c          	L60_LF2:
 1018  00001a7c  8fc10000	lw	r1,(r30)
 1019  00001a80  64220000	snei	r2,r1,#0
 1020  00001a84  14400020	bnez	r2,L62_LF2
 1021  00001a88  54000000	nop; delay slot nop
 1022  00001a8c  8fc10004	lw	r1,4(r30)
 1023  00001a90  20220001	addi	r2,r1,#1
 1024  00001a94  afc20004	sw	4(r30),r2
 1025  00001a98  20020030	addi	r2,r0,(#0x30)&0xff
 1026  00001a9c  a0220000	sb	(r1),r2
 1027  00001aa0  080000ec	j	L61_LF2
 1028  00001aa4  54000000	nop; delay slot nop
 1029  00001aa8          	L62_LF2:
 1030  00001aa8  20010001	addi	r1,r0,#1
 1031  00001aac  afc1fff4	sw	-12(r30),r1
 1032  00001ab0          	L64_LF2:
 1033  00001ab0  8fc1fff4	lw	r1,-12(r30)
 1034  00001ab4  8fc20000	lw	r2,(r30)
 1035  00001ab8  0022082c	sle	r1,r1,r2
 1036  00001abc  1420000c	bnez	r1,L66_LF2
 1037  00001ac0  54000000	nop; delay slot nop
 1038  00001ac4  08000024	j	L65_LF2
 1039  00001ac8  54000000	nop; delay slot nop
 1040  00001acc          	L67_LF2:
 1041  00001acc          	L66_LF2:
 1042  00001acc  8fc1fff4	lw	r1,-12(r30)
 1043  00001ad0  00011820	add	r3,r0,r1
 1044  00001ad4  50620002	slli	r2,r3,#0x2
 1045  00001ad8  00411020	add	r2,r2,r1
 1046  00001adc  50410001	slli	r1,r2,#0x1
 1047  00001ae0  afc1fff4	sw	-12(r30),r1
 1048  00001ae4  0bffffc8	j	L64_LF2
 1049  00001ae8  54000000	nop; delay slot nop
 1050  00001aec          	L65_LF2:
 1051  00001aec  54000000	nop
 1052  00001af0          	L68_LF2:
 1053  00001af0  8fc1fff4	lw	r1,-12(r30)
 1054  00001af4  2002000a	addi	r2,r0,#10
 1055  00001af8  00200035	movi2fp	f0,r1
 1056  00001afc  00400835	movi2fp	f1,r2
 1057  00001b00  0401000f	div	f0,f0,f1
 1058  00001b04  00000834	movfp2i	r1,f0
 1059  00001b08  afc1fff4	sw	-12(r30),r1
 1060  00001b0c  8fc10004	lw	r1,4(r30)
 1061  00001b10  20220001	addi	r2,r1,#1
 1062  00001b14  afc20004	sw	4(r30),r2
 1063  00001b18  8fc20000	lw	r2,(r30)
 1064  00001b1c  8fc3fff4	lw	r3,-12(r30)
 1065  00001b20  00400035	movi2fp	f0,r2
 1066  00001b24  00600835	movi2fp	f1,r3
 1067  00001b28  0401000f	div	f0,f0,f1
 1068  00001b2c  00001034	movfp2i	r2,f0
 1069  00001b30  00021820	add	r3,r0,r2
 1070  00001b34  20620030	addi	r2,r3,#48
 1071  00001b38  a0220000	sb	(r1),r2
 1072  00001b3c  8fc10000	lw	r1,(r30)
 1073  00001b40  8fc3fff4	lw	r3,-12(r30)
 1074  00001b44  00200035	movi2fp	f0,r1
 1075  00001b48  00600835	movi2fp	f1,r3
 1076  00001b4c  0401000f	div	f0,f0,f1
 1077  00001b50  00001034	movfp2i	r2,f0
 1078  00001b54  8fc3fff4	lw	r3,-12(r30)
 1079  00001b58  00400035	movi2fp	f0,r2
 1080  00001b5c  00600835	movi2fp	f1,r3
 1081  00001b60  0401000e	mult	f0,f0,f1
 1082  00001b64  00001034	movfp2i	r2,f0
 1083  00001b68  00220822	sub	r1,r1,r2
 1084  00001b6c  afc10000	sw	(r30),r1
 1085  00001b70          	L70_LF2:
 1086  00001b70  8fc1fff4	lw	r1,-12(r30)
 1087  00001b74  6c220001	sgti	r2,r1,#1
 1088  00001b78  1440000c	bnez	r2,L71_LF2
 1089  00001b7c  54000000	nop; delay slot nop
 1090  00001b80  0800000c	j	L61_LF2
 1091  00001b84  54000000	nop; delay slot nop
 1092  00001b88          	L71_LF2:
 1093  00001b88  0bffff64	j	L68_LF2
 1094  00001b8c  54000000	nop; delay slot nop
 1095  00001b90          	L69_LF2:
 1096  00001b90          	L63_LF2:
 1097  00001b90          	L61_LF2:
 1098  00001b90  8fc10004	lw	r1,4(r30)
 1099  00001b94  20020000	addi	r2,r0,(#0x0)&0xff
 1100  00001b98  a0220000	sb	(r1),r2
 1101  00001b9c          	L59_LF2:
 1102  00001b9c  8fa20000	lw	r2,0(r29)
 1103  00001ba0  8fa30004	lw	r3,4(r29)
 1104  00001ba4  8fdffff8	lw	r31,-8(r30)
 1105  00001ba8  001ee820	add	r29,r0,r30
 1106  00001bac  8fdefffc	lw	r30,-4(r30)
 1107  00001bb0  4be00000	jr	r31
 1108  00001bb4  54000000	nop
 1109  00001bb8          	.endproc _ditoa
 1110  00001bb8          	.align 2
 1111  00001bb8          	.proc _dstrtol
 1112  00001bb8          	.global _dstrtol
 1113  00001bb8          	_dstrtol:
 1114                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1115  00001bb8  afbefffc	sw	-4(r29),r30; push fp
 1116  00001bbc  001df020	add	r30,r0,r29; fp = sp
 1117  00001bc0  afbffff8	sw	-8(r29),r31; push ret addr
 1118  00001bc4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1119  00001bc8  afa20000	sw	0(r29),r2
 1120  00001bcc  20010000	addi	r1,r0,#0
 1121  00001bd0  afc1fff4	sw	-12(r30),r1
 1122  00001bd4          	L73_LF2:
 1123  00001bd4  8fc10000	lw	r1,(r30)
 1124  00001bd8  90220000	lbu	r2,(r1)
 1125  00001bdc  60410020	seqi	r1,r2,#32
 1126  00001be0  14200034	bnez	r1,L75_LF2
 1127  00001be4  54000000	nop; delay slot nop
 1128  00001be8  8fc10000	lw	r1,(r30)
 1129  00001bec  90220000	lbu	r2,(r1)
 1130  00001bf0  60410009	seqi	r1,r2,#9
 1131  00001bf4  14200020	bnez	r1,L75_LF2
 1132  00001bf8  54000000	nop; delay slot nop
 1133  00001bfc  8fc10000	lw	r1,(r30)
 1134  00001c00  90220000	lbu	r2,(r1)
 1135  00001c04  6041000a	seqi	r1,r2,#10
 1136  00001c08  1420000c	bnez	r1,L75_LF2
 1137  00001c0c  54000000	nop; delay slot nop
 1138  00001c10  0800001c	j	L74_LF2
 1139  00001c14  54000000	nop; delay slot nop
 1140  00001c18          	L75_LF2:
 1141  00001c18  8fc20000	lw	r2,(r30)
 1142  00001c1c  20410001	addi	r1,r2,#1
 1143  00001c20  00011020	add	r2,r0,r1
 1144  00001c24  afc20000	sw	(r30),r2
 1145  00001c28  0bffffa8	j	L73_LF2
 1146  00001c2c  54000000	nop; delay slot nop
 1147  00001c30          	L74_LF2:
 1148  00001c30  8fc10004	lw	r1,4(r30)
 1149  00001c34  64220000	snei	r2,r1,#0
 1150  00001c38  10400010	beqz	r2,L76_LF2
 1151  00001c3c  54000000	nop; delay slot nop
 1152  00001c40  8fc10004	lw	r1,4(r30)
 1153  00001c44  8fc20000	lw	r2,(r30)
 1154  00001c48  ac220000	sw	(r1),r2
 1155  00001c4c          	L76_LF2:
 1156  00001c4c  8fc10000	lw	r1,(r30)
 1157  00001c50  90220000	lbu	r2,(r1)
 1158  00001c54  64410000	snei	r1,r2,#0
 1159  00001c58  14200010	bnez	r1,L77_LF2
 1160  00001c5c  54000000	nop; delay slot nop
 1161  00001c60  8fc1fff4	lw	r1,-12(r30)
 1162  00001c64  08000294	j	L72_LF2
 1163  00001c68  54000000	nop; delay slot nop
 1164  00001c6c          	L77_LF2:
 1165  00001c6c  8fc10000	lw	r1,(r30)
 1166  00001c70  90220000	lbu	r2,(r1)
 1167  00001c74  6041002d	seqi	r1,r2,#45
 1168  00001c78  10200024	beqz	r1,L78_LF2
 1169  00001c7c  54000000	nop; delay slot nop
 1170  00001c80  2001ffff	addi	r1,r0,#-1
 1171  00001c84  afc1ffec	sw	-20(r30),r1
 1172  00001c88  8fc20000	lw	r2,(r30)
 1173  00001c8c  20410001	addi	r1,r2,#1
 1174  00001c90  00011020	add	r2,r0,r1
 1175  00001c94  afc20000	sw	(r30),r2
 1176  00001c98  0800000c	j	L79_LF2
 1177  00001c9c  54000000	nop; delay slot nop
 1178  00001ca0          	L78_LF2:
 1179  00001ca0  20010001	addi	r1,r0,#1
 1180  00001ca4  afc1ffec	sw	-20(r30),r1
 1181  00001ca8          	L79_LF2:
 1182  00001ca8  8fc10008	lw	r1,8(r30)
 1183  00001cac  64220000	snei	r2,r1,#0
 1184  00001cb0  14400090	bnez	r2,L80_LF2
 1185  00001cb4  54000000	nop; delay slot nop
 1186  00001cb8  8fc10000	lw	r1,(r30)
 1187  00001cbc  90220000	lbu	r2,(r1)
 1188  00001cc0  60410030	seqi	r1,r2,#48
 1189  00001cc4  10200074	beqz	r1,L81_LF2
 1190  00001cc8  54000000	nop; delay slot nop
 1191  00001ccc  8fc20000	lw	r2,(r30)
 1192  00001cd0  20410001	addi	r1,r2,#1
 1193  00001cd4  00011020	add	r2,r0,r1
 1194  00001cd8  afc20000	sw	(r30),r2
 1195  00001cdc  8fc10000	lw	r1,(r30)
 1196  00001ce0  90220000	lbu	r2,(r1)
 1197  00001ce4  60410078	seqi	r1,r2,#120
 1198  00001ce8  14200020	bnez	r1,L83_LF2
 1199  00001cec  54000000	nop; delay slot nop
 1200  00001cf0  8fc10000	lw	r1,(r30)
 1201  00001cf4  90220000	lbu	r2,(r1)
 1202  00001cf8  60410058	seqi	r1,r2,#88
 1203  00001cfc  1420000c	bnez	r1,L83_LF2
 1204  00001d00  54000000	nop; delay slot nop
 1205  00001d04  08000024	j	L82_LF2
 1206  00001d08  54000000	nop; delay slot nop
 1207  00001d0c          	L83_LF2:
 1208  00001d0c  20010010	addi	r1,r0,#16
 1209  00001d10  afc10008	sw	8(r30),r1
 1210  00001d14  8fc20000	lw	r2,(r30)
 1211  00001d18  20410001	addi	r1,r2,#1
 1212  00001d1c  00011020	add	r2,r0,r1
 1213  00001d20  afc20000	sw	(r30),r2
 1214  00001d24  0800000c	j	L84_LF2
 1215  00001d28  54000000	nop; delay slot nop
 1216  00001d2c          	L82_LF2:
 1217  00001d2c  20010008	addi	r1,r0,#8
 1218  00001d30  afc10008	sw	8(r30),r1
 1219  00001d34          	L84_LF2:
 1220  00001d34  0800000c	j	L80_LF2
 1221  00001d38  54000000	nop; delay slot nop
 1222  00001d3c          	L81_LF2:
 1223  00001d3c  2001000a	addi	r1,r0,#10
 1224  00001d40  afc10008	sw	8(r30),r1
 1225  00001d44          	L85_LF2:
 1226  00001d44          	L80_LF2:
 1227  00001d44  8fc10008	lw	r1,8(r30)
 1228  00001d48  70220000	slei	r2,r1,#0
 1229  00001d4c  1440001c	bnez	r2,L87_LF2
 1230  00001d50  54000000	nop; delay slot nop
 1231  00001d54  8fc10008	lw	r1,8(r30)
 1232  00001d58  6c220010	sgti	r2,r1,#16
 1233  00001d5c  1440000c	bnez	r2,L87_LF2
 1234  00001d60  54000000	nop; delay slot nop
 1235  00001d64  08000010	j	L86_LF2
 1236  00001d68  54000000	nop; delay slot nop
 1237  00001d6c          	L87_LF2:
 1238  00001d6c  8fc1fff4	lw	r1,-12(r30)
 1239  00001d70  08000188	j	L72_LF2
 1240  00001d74  54000000	nop; delay slot nop
 1241  00001d78          	L86_LF2:
 1242  00001d78  54000000	nop
 1243  00001d7c          	L88_LF2:
 1244  00001d7c  8fc10000	lw	r1,(r30)
 1245  00001d80  90220000	lbu	r2,(r1)
 1246  00001d84  6c41002f	sgtui	r1,r2,#47
 1247  00001d88  10200030	beqz	r1,L91_LF2
 1248  00001d8c  54000000	nop; delay slot nop
 1249  00001d90  8fc10000	lw	r1,(r30)
 1250  00001d94  90220000	lbu	r2,(r1)
 1251  00001d98  70410039	sleui	r1,r2,#57
 1252  00001d9c  1020001c	beqz	r1,L91_LF2
 1253  00001da0  54000000	nop; delay slot nop
 1254  00001da4  8fc10000	lw	r1,(r30)
 1255  00001da8  90220000	lbu	r2,(r1)
 1256  00001dac  2041ffd0	addi	r1,r2,#-48
 1257  00001db0  afc1fff0	sw	-16(r30),r1
 1258  00001db4  0800008c	j	L92_LF2
 1259  00001db8  54000000	nop; delay slot nop
 1260  00001dbc          	L91_LF2:
 1261  00001dbc  8fc10000	lw	r1,(r30)
 1262  00001dc0  90220000	lbu	r2,(r1)
 1263  00001dc4  6c410060	sgtui	r1,r2,#96
 1264  00001dc8  10200030	beqz	r1,L93_LF2
 1265  00001dcc  54000000	nop; delay slot nop
 1266  00001dd0  8fc10000	lw	r1,(r30)
 1267  00001dd4  90220000	lbu	r2,(r1)
 1268  00001dd8  7041007a	sleui	r1,r2,#122
 1269  00001ddc  1020001c	beqz	r1,L93_LF2
 1270  00001de0  54000000	nop; delay slot nop
 1271  00001de4  8fc10000	lw	r1,(r30)
 1272  00001de8  90220000	lbu	r2,(r1)
 1273  00001dec  2041ffa9	addi	r1,r2,#-87
 1274  00001df0  afc1fff0	sw	-16(r30),r1
 1275  00001df4  0800004c	j	L92_LF2
 1276  00001df8  54000000	nop; delay slot nop
 1277  00001dfc          	L93_LF2:
 1278  00001dfc  8fc10000	lw	r1,(r30)
 1279  00001e00  90220000	lbu	r2,(r1)
 1280  00001e04  6c410040	sgtui	r1,r2,#64
 1281  00001e08  10200030	beqz	r1,L95_LF2
 1282  00001e0c  54000000	nop; delay slot nop
 1283  00001e10  8fc10000	lw	r1,(r30)
 1284  00001e14  90220000	lbu	r2,(r1)
 1285  00001e18  7041005a	sleui	r1,r2,#90
 1286  00001e1c  1020001c	beqz	r1,L95_LF2
 1287  00001e20  54000000	nop; delay slot nop
 1288  00001e24  8fc10000	lw	r1,(r30)
 1289  00001e28  90220000	lbu	r2,(r1)
 1290  00001e2c  2041ffc9	addi	r1,r2,#-55
 1291  00001e30  afc1fff0	sw	-16(r30),r1
 1292  00001e34  0800000c	j	L92_LF2
 1293  00001e38  54000000	nop; delay slot nop
 1294  00001e3c          	L95_LF2:
 1295  00001e3c  200103e8	addi	r1,r0,#1000
 1296  00001e40  afc1fff0	sw	-16(r30),r1
 1297  00001e44          	L96_LF2:
 1298  00001e44          	L94_LF2:
 1299  00001e44          	L92_LF2:
 1300  00001e44  8fc1fff0	lw	r1,-16(r30)
 1301  00001e48  8fc20008	lw	r2,8(r30)
 1302  00001e4c  0022082a	slt	r1,r1,r2
 1303  00001e50  10200040	beqz	r1,L90_LF2
 1304  00001e54  54000000	nop; delay slot nop
 1305  00001e58  8fc1fff4	lw	r1,-12(r30)
 1306  00001e5c  8fc20008	lw	r2,8(r30)
 1307  00001e60  00200035	movi2fp	f0,r1
 1308  00001e64  00400835	movi2fp	f1,r2
 1309  00001e68  0401000e	mult	f0,f0,f1
 1310  00001e6c  00000834	movfp2i	r1,f0
 1311  00001e70  afc1fff4	sw	-12(r30),r1
 1312  00001e74  8fc1fff4	lw	r1,-12(r30)
 1313  00001e78  8fc2fff0	lw	r2,-16(r30)
 1314  00001e7c  00220820	add	r1,r1,r2
 1315  00001e80  afc1fff4	sw	-12(r30),r1
 1316  00001e84  8fc20000	lw	r2,(r30)
 1317  00001e88  20410001	addi	r1,r2,#1
 1318  00001e8c  00011020	add	r2,r0,r1
 1319  00001e90  afc20000	sw	(r30),r2
 1320  00001e94          	L97_LF2:
 1321  00001e94          	L90_LF2:
 1322  00001e94  8fc1fff0	lw	r1,-16(r30)
 1323  00001e98  8fc20008	lw	r2,8(r30)
 1324  00001e9c  0022082a	slt	r1,r1,r2
 1325  00001ea0  1420000c	bnez	r1,L98_LF2
 1326  00001ea4  54000000	nop; delay slot nop
 1327  00001ea8  0800000c	j	L89_LF2
 1328  00001eac  54000000	nop; delay slot nop
 1329  00001eb0          	L98_LF2:
 1330  00001eb0  0bfffec8	j	L88_LF2
 1331  00001eb4  54000000	nop; delay slot nop
 1332  00001eb8          	L89_LF2:
 1333  00001eb8  8fc10004	lw	r1,4(r30)
 1334  00001ebc  64220000	snei	r2,r1,#0
 1335  00001ec0  10400010	beqz	r2,L99_LF2
 1336  00001ec4  54000000	nop; delay slot nop
 1337  00001ec8  8fc10004	lw	r1,4(r30)
 1338  00001ecc  8fc20000	lw	r2,(r30)
 1339  00001ed0  ac220000	sw	(r1),r2
 1340  00001ed4          	L99_LF2:
 1341  00001ed4  8fc1fff4	lw	r1,-12(r30)
 1342  00001ed8  8fc2ffec	lw	r2,-20(r30)
 1343  00001edc  00200035	movi2fp	f0,r1
 1344  00001ee0  00400835	movi2fp	f1,r2
 1345  00001ee4  0401000e	mult	f0,f0,f1
 1346  00001ee8  00000834	movfp2i	r1,f0
 1347  00001eec  afc1fff4	sw	-12(r30),r1
 1348  00001ef0  8fc1fff4	lw	r1,-12(r30)
 1349  00001ef4  08000004	j	L72_LF2
 1350  00001ef8  54000000	nop; delay slot nop
 1351  00001efc          	L72_LF2:
 1352  00001efc  8fa20000	lw	r2,0(r29)
 1353  00001f00  8fdffff8	lw	r31,-8(r30)
 1354  00001f04  001ee820	add	r29,r0,r30
 1355  00001f08  8fdefffc	lw	r30,-4(r30)
 1356  00001f0c  4be00000	jr	r31
 1357  00001f10  54000000	nop
 1358  00001f14          	.endproc _dstrtol
 1359  00001f14          	.align 2
 1360  00001f14          	.proc _bcopy
 1361  00001f14          	.global _bcopy
 1362  00001f14          	_bcopy:
 1363                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1364  00001f14  afbefffc	sw	-4(r29),r30; push fp
 1365  00001f18  001df020	add	r30,r0,r29; fp = sp
 1366  00001f1c  afbffff8	sw	-8(r29),r31; push ret addr
 1367  00001f20  2fbd0010	subui	r29,r29,#16; alloc local storage
 1368  00001f24  afa20000	sw	0(r29),r2
 1369  00001f28  afa30004	sw	4(r29),r3
 1370  00001f2c  54000000	nop
 1371  00001f30          	L101_LF2:
 1372  00001f30  8fc10008	lw	r1,8(r30)
 1373  00001f34  2022ffff	addi	r2,r1,#-1
 1374  00001f38  afc20008	sw	8(r30),r2
 1375  00001f3c  6c210000	sgti	r1,r1,#0
 1376  00001f40  1420000c	bnez	r1,L103_LF2
 1377  00001f44  54000000	nop; delay slot nop
 1378  00001f48  0800002c	j	L102_LF2
 1379  00001f4c  54000000	nop; delay slot nop
 1380  00001f50          	L103_LF2:
 1381  00001f50  8fc10004	lw	r1,4(r30)
 1382  00001f54  20220001	addi	r2,r1,#1
 1383  00001f58  afc20004	sw	4(r30),r2
 1384  00001f5c  8fc20000	lw	r2,(r30)
 1385  00001f60  20430001	addi	r3,r2,#1
 1386  00001f64  afc30000	sw	(r30),r3
 1387  00001f68  80420000	lb	r2,(r2)
 1388  00001f6c  a0220000	sb	(r1),r2
 1389  00001f70  0bffffbc	j	L101_LF2
 1390  00001f74  54000000	nop; delay slot nop
 1391  00001f78          	L102_LF2:
 1392  00001f78          	L100_LF2:
 1393  00001f78  8fa20000	lw	r2,0(r29)
 1394  00001f7c  8fa30004	lw	r3,4(r29)
 1395  00001f80  8fdffff8	lw	r31,-8(r30)
 1396  00001f84  001ee820	add	r29,r0,r30
 1397  00001f88  8fdefffc	lw	r30,-4(r30)
 1398  00001f8c  4be00000	jr	r31
 1399  00001f90  54000000	nop
 1400  00001f94          	.endproc _bcopy
 1401  00001f94          	.align 2
 1402  00001f94          	.proc _bzero
 1403  00001f94          	.global _bzero
 1404  00001f94          	_bzero:
 1405                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1406  00001f94  afbefffc	sw	-4(r29),r30; push fp
 1407  00001f98  001df020	add	r30,r0,r29; fp = sp
 1408  00001f9c  afbffff8	sw	-8(r29),r31; push ret addr
 1409  00001fa0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1410  00001fa4  afa20000	sw	0(r29),r2
 1411  00001fa8  54000000	nop
 1412  00001fac          	L105_LF2:
 1413  00001fac  8fc10004	lw	r1,4(r30)
 1414  00001fb0  2022ffff	addi	r2,r1,#-1
 1415  00001fb4  afc20004	sw	4(r30),r2
 1416  00001fb8  6c210000	sgti	r1,r1,#0
 1417  00001fbc  1420000c	bnez	r1,L107_LF2
 1418  00001fc0  54000000	nop; delay slot nop
 1419  00001fc4  08000020	j	L106_LF2
 1420  00001fc8  54000000	nop; delay slot nop
 1421  00001fcc          	L107_LF2:
 1422  00001fcc  8fc10000	lw	r1,(r30)
 1423  00001fd0  20220001	addi	r2,r1,#1
 1424  00001fd4  afc20000	sw	(r30),r2
 1425  00001fd8  20020000	addi	r2,r0,(#0x0)&0xff
 1426  00001fdc  a0220000	sb	(r1),r2
 1427  00001fe0  0bffffc8	j	L105_LF2
 1428  00001fe4  54000000	nop; delay slot nop
 1429  00001fe8          	L106_LF2:
 1430  00001fe8          	L104_LF2:
 1431  00001fe8  8fa20000	lw	r2,0(r29)
 1432  00001fec  8fdffff8	lw	r31,-8(r30)
 1433  00001ff0  001ee820	add	r29,r0,r30
 1434  00001ff4  8fdefffc	lw	r30,-4(r30)
 1435  00001ff8  4be00000	jr	r31
 1436  00001ffc  54000000	nop
 1437  00002000          	.endproc _bzero
 1438  00002000          	.align 2
 1439  00002000          	.proc _min
 1440  00002000          	.global _min
 1441  00002000          	_min:
 1442                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1443  00002000  afbefffc	sw	-4(r29),r30; push fp
 1444  00002004  001df020	add	r30,r0,r29; fp = sp
 1445  00002008  afbffff8	sw	-8(r29),r31; push ret addr
 1446  0000200c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1447  00002010  afa20000	sw	0(r29),r2
 1448  00002014  afa30004	sw	4(r29),r3
 1449  00002018  8fc10000	lw	r1,(r30)
 1450  0000201c  8fc20004	lw	r2,4(r30)
 1451  00002020  0022182c	sle	r3,r1,r2
 1452  00002024  14600008	bnez	r3,L109_LF2
 1453  00002028  54000000	nop; delay slot nop
 1454  0000202c  8fc10004	lw	r1,4(r30)
 1455  00002030          	L109_LF2:
 1456  00002030  08000004	j	L108_LF2
 1457  00002034  54000000	nop; delay slot nop
 1458  00002038          	L108_LF2:
 1459  00002038  8fa20000	lw	r2,0(r29)
 1460  0000203c  8fa30004	lw	r3,4(r29)
 1461  00002040  8fdffff8	lw	r31,-8(r30)
 1462  00002044  001ee820	add	r29,r0,r30
 1463  00002048  8fdefffc	lw	r30,-4(r30)
 1464  0000204c  4be00000	jr	r31
 1465  00002050  54000000	nop
 1466  00002054          	.endproc _min
 1467  00002054          	.align 2
 1468  00002054          	.proc _max
 1469  00002054          	.global _max
 1470  00002054          	_max:
 1471                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1472  00002054  afbefffc	sw	-4(r29),r30; push fp
 1473  00002058  001df020	add	r30,r0,r29; fp = sp
 1474  0000205c  afbffff8	sw	-8(r29),r31; push ret addr
 1475  00002060  2fbd0010	subui	r29,r29,#16; alloc local storage
 1476  00002064  afa20000	sw	0(r29),r2
 1477  00002068  afa30004	sw	4(r29),r3
 1478  0000206c  8fc10000	lw	r1,(r30)
 1479  00002070  8fc20004	lw	r2,4(r30)
 1480  00002074  0022182d	sge	r3,r1,r2
 1481  00002078  14600008	bnez	r3,L111_LF2
 1482  0000207c  54000000	nop; delay slot nop
 1483  00002080  8fc10004	lw	r1,4(r30)
 1484  00002084          	L111_LF2:
 1485  00002084  08000004	j	L110_LF2
 1486  00002088  54000000	nop; delay slot nop
 1487  0000208c          	L110_LF2:
 1488  0000208c  8fa20000	lw	r2,0(r29)
 1489  00002090  8fa30004	lw	r3,4(r29)
 1490  00002094  8fdffff8	lw	r31,-8(r30)
 1491  00002098  001ee820	add	r29,r0,r30
 1492  0000209c  8fdefffc	lw	r30,-4(r30)
 1493  000020a0  4be00000	jr	r31
 1494  000020a4  54000000	nop
 1495  000020a8          	.endproc _max
 1496                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1497                      ;;;
 1498                      ;;; Most of the traps are called in files from libtraps.
 1501  000020a8          	.align 2
 1502  000020a8          	.proc _exit
 1503  000020a8          	.global _exit
 1504  000020a8          	_exit:
 1505  000020a8  44000300	trap	#0x300
 1506  000020ac  4be00000	jr	r31
 1507  000020b0  54000000	nop
 1508  000020b4          	.endproc _exit
 1510                      ; for the benefit of gcc.
 1511  000020b4          	.proc ___main
 1512  000020b4          	.global ___main
 1513  000020b4          	___main:
 1514  000020b4  4be00000	jr	r31
 1515  000020b8  54000000	nop
 1516  000020bc          	.endproc ___main
 1517  000020bc          	.text
 1518  000020bc          	.global _etext
 1519  000020bc          	_etext:
 1520  000020bc          	.align 3
 1521  000020c0          	.data
 1522  00003069          	.global _edata
 1523  00003069          	_edata:
