 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 193
    4                      ; Text size: 4396
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  42616420	.ascii "Bad semaphore for sulphate increment in sulphate injection : (%d) \000"
   85  0000300c  73656d61	
   85  00003010  70686f72	
   85  00003014  6520666f	
   85  00003018  72207375	
   85  0000301c  6c706861	
   85  00003020  74652069	
   85  00003024  6e637265	
   85  00003028  6d656e74	
   85  0000302c  20696e20	
   85  00003030  73756c70	
   85  00003034  68617465	
   85  00003038  20696e6a	
   85  0000303c  65637469	
   85  00003040  6f6e203a	
   85  00003044  20282564	
   85  00003048  292000  	
   86  0000304b          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  2c206578	.ascii ", exiting...\n\000"
   88  00003050  6974696e	
   88  00003054  672e2e2e	
   88  00003058  0a00    	
   89  0000305a          	.align 2
   90  0000305c          	LC3_LF0:
   91  0000305c  43726561	.ascii "Created a new sulphate molecule\n\000"
   91  00003060  74656420	
   91  00003064  61206e65	
   91  00003068  77207375	
   91  0000306c  6c706861	
   91  00003070  7465206d	
   91  00003074  6f6c6563	
   91  00003078  756c650a	
   91  0000307c  00      	
   92  0000307d          	.align 2
   93  00003080          	LC4_LF0:
   94  00003080  42616420	.ascii "Bad semaphore for proc sem increment in sulphate injection : %d \000"
   94  00003084  73656d61	
   94  00003088  70686f72	
   94  0000308c  6520666f	
   94  00003090  72207072	
   94  00003094  6f632073	
   94  00003098  656d2069	
   94  0000309c  6e637265	
   94  000030a0  6d656e74	
   94  000030a4  20696e20	
   94  000030a8  73756c70	
   94  000030ac  68617465	
   94  000030b0  20696e6a	
   94  000030b4  65637469	
   94  000030b8  6f6e203a	
   94  000030bc  20256420	
   94  000030c0  00      	
   95  000030c1          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc40004	lw	r4,4(r30)
  107  000010ec  0c001034	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410004	snei	r1,r2,#4
  110  000010f8  10200038	beqz	r1,L14_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
  114  00001108  24e73000	addui	r7,r7,(LC0_LF0)&0xffff
  115  0000110c  afa70000	sw	(r29),r7
  116  00001110  0c000208	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  8c870000	lw	r7,(r4)
  119  0000111c  afa70000	sw	(r29),r7
  120  00001120  0c0001f8	jal	_Printf
  121  00001124  54000000	nop; not filled.
  122  00001128  0c0002a4	jal	_Exit
  123  0000112c  54000000	nop; not filled.
  124  00001130  23bd0008	addi	r29,r29,#8
  125  00001134          	L14_LF0:
  126  00001134  23bdfff0	addi	r29,r29,#-16
  127  00001138  8c870004	lw	r7,4(r4)
  128  0000113c  afa70000	sw	(r29),r7
  129  00001140  20070000	addi	r7,r0,#0
  130  00001144  afa70004	sw	4(r29),r7
  131  00001148  2007000a	addi	r7,r0,#10
  132  0000114c  afa70008	sw	8(r29),r7
  133  00001150  0c000b28	jal	_dstrtol
  134  00001154  54000000	nop; not filled.
  135  00001158  00011820	add	r3,r0,r1
  136  0000115c  8c870008	lw	r7,8(r4)
  137  00001160  afa70000	sw	(r29),r7
  138  00001164  20070000	addi	r7,r0,#0
  139  00001168  afa70004	sw	4(r29),r7
  140  0000116c  2007000a	addi	r7,r0,#10
  141  00001170  afa70008	sw	8(r29),r7
  142  00001174  0c000b04	jal	_dstrtol
  143  00001178  54000000	nop; not filled.
  144  0000117c  00012820	add	r5,r0,r1
  145  00001180  8c87000c	lw	r7,12(r4)
  146  00001184  afa70000	sw	(r29),r7
  147  00001188  20070000	addi	r7,r0,#0
  148  0000118c  afa70004	sw	4(r29),r7
  149  00001190  2007000a	addi	r7,r0,#10
  150  00001194  afa70008	sw	8(r29),r7
  151  00001198  0c000ae0	jal	_dstrtol
  152  0000119c  54000000	nop; not filled.
  153  000011a0  00013020	add	r6,r0,r1
  154  000011a4  20020000	addi	r2,r0,#0
  155  000011a8  23bd0010	addi	r29,r29,#16
  156  000011ac  0043082a	slt	r1,r2,r3
  157  000011b0  102000a4	beqz	r1,L16_LF0
  158  000011b4  54000000	nop; not filled.
  159  000011b8          	L18_LF0:
  160  000011b8  23bdfff8	addi	r29,r29,#-8
  161  000011bc  afa50000	sw	(r29),r5
  162  000011c0  0c0001ac	jal	_sem_signal
  163  000011c4  54000000	nop; not filled.
  164  000011c8  23bd0008	addi	r29,r29,#8
  165  000011cc  64210001	snei	r1,r1,#1
  166  000011d0  10200058	beqz	r1,L19_LF0
  167  000011d4  54000000	nop; not filled.
  168  000011d8  0c00014c	jal	_getpid
  169  000011dc  54000000	nop; not filled.
  170  000011e0  23bdfff8	addi	r29,r29,#-8
  171  000011e4  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  172  000011e8  24e73008	addui	r7,r7,(LC1_LF0)&0xffff
  173  000011ec  afa70000	sw	(r29),r7
  174  000011f0  afa10004	sw	4(r29),r1
  175  000011f4  0c000124	jal	_Printf
  176  000011f8  54000000	nop; not filled.
  177  000011fc  8c870000	lw	r7,(r4)
  178  00001200  afa70000	sw	(r29),r7
  179  00001204  0c000114	jal	_Printf
  180  00001208  54000000	nop; not filled.
  181  0000120c  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  182  00001210  24e7304c	addui	r7,r7,(LC2_LF0)&0xffff
  183  00001214  afa70000	sw	(r29),r7
  184  00001218  0c000100	jal	_Printf
  185  0000121c  54000000	nop; not filled.
  186  00001220  0c0001ac	jal	_Exit
  187  00001224  54000000	nop; not filled.
  188  00001228  23bd0008	addi	r29,r29,#8
  189  0000122c          	L19_LF0:
  190  0000122c  23bdfff8	addi	r29,r29,#-8
  191  00001230  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  192  00001234  24e7305c	addui	r7,r7,(LC3_LF0)&0xffff
  193  00001238  afa70000	sw	(r29),r7
  194  0000123c  0c0000dc	jal	_Printf
  195  00001240  54000000	nop; not filled.
  196  00001244  23bd0008	addi	r29,r29,#8
  197  00001248  20420001	addi	r2,r2,#1
  198  0000124c  0043082a	slt	r1,r2,r3
  199  00001250  1420ff64	bnez	r1,L18_LF0
  200  00001254  54000000	nop; not filled.
  201  00001258          	L16_LF0:
  202  00001258  23bdfff8	addi	r29,r29,#-8
  203  0000125c  afa60000	sw	(r29),r6
  204  00001260  0c00010c	jal	_sem_signal
  205  00001264  54000000	nop; not filled.
  206  00001268  23bd0008	addi	r29,r29,#8
  207  0000126c  64210001	snei	r1,r1,#1
  208  00001270  10200058	beqz	r1,L21_LF0
  209  00001274  54000000	nop; not filled.
  210  00001278  0c0000ac	jal	_getpid
  211  0000127c  54000000	nop; not filled.
  212  00001280  23bdfff8	addi	r29,r29,#-8
  213  00001284  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  214  00001288  24e73080	addui	r7,r7,(LC4_LF0)&0xffff
  215  0000128c  afa70000	sw	(r29),r7
  216  00001290  afa10004	sw	4(r29),r1
  217  00001294  0c000084	jal	_Printf
  218  00001298  54000000	nop; not filled.
  219  0000129c  8c840000	lw	r4,(r4)
  220  000012a0  afa40000	sw	(r29),r4
  221  000012a4  0c000074	jal	_Printf
  222  000012a8  54000000	nop; not filled.
  223  000012ac  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  224  000012b0  24e7304c	addui	r7,r7,(LC2_LF0)&0xffff
  225  000012b4  afa70000	sw	(r29),r7
  226  000012b8  0c000060	jal	_Printf
  227  000012bc  54000000	nop; not filled.
  228  000012c0  0c00010c	jal	_Exit
  229  000012c4  54000000	nop; not filled.
  230  000012c8  23bd0008	addi	r29,r29,#8
  231  000012cc          	L21_LF0:
  232  000012cc  0c000e48	jal	_exit
  233  000012d0  54000000	nop
  234  000012d4          	.endproc _main
  235                      ;;;
  236                      ;;; Stub functions for DLX traps.
  237                      ;;;
  238                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  239                      ;;;
  240                      ;;; The traps such as Open and Close
  241                      ;;; (note the capital letters) are for use by user programs.  The traps
  242                      ;;; with names such as open and close (lower case) are for use by the OS.
  243                      ;;;
  246  000012d4          	.align 2
  248                      ;;; The following are the traps to be used by user-level programs
  249                      ;;;
  251  000012d4          	.align 2
  252  000012d4          	.proc _Open
  253  000012d4          	.global _Open
  254  000012d4          	_Open:
  255                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  256                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  257                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  258  000012d4  44000213	trap	#0x213
  259  000012d8  4be00000	jr	r31
  260  000012dc  54000000	nop
  261  000012e0          	.endproc _Open
  263  000012e0          	.proc _Close
  264  000012e0          	.global _Close
  265  000012e0          	_Close:
  266  000012e0  44000214	trap	#0x214
  267  000012e4  4be00000	jr	r31
  268  000012e8  54000000	nop
  269  000012ec          	.endproc _Close
  271  000012ec          	.proc _Read
  272  000012ec          	.global _Read
  273  000012ec          	_Read:
  274  000012ec  44000210	trap	#0x210
  275  000012f0  4be00000	jr	r31
  276  000012f4  54000000	nop
  277  000012f8          	.endproc _Read
  279  000012f8          	.proc _Write
  280  000012f8          	.global _Write
  281  000012f8          	_Write:
  282  000012f8  44000211	trap	#0x211
  283  000012fc  4be00000	jr	r31
  284  00001300  54000000	nop
  285  00001304          	.endproc _Write
  287  00001304          	.proc _Lseek
  288  00001304          	.global _Lseek
  289  00001304          	_Lseek:
  290  00001304  44000212	trap	#0x212
  291  00001308  4be00000	jr	r31
  292  0000130c  54000000	nop
  293  00001310          	.endproc _Lseek
  295  00001310          	.proc _Putchar
  296  00001310          	.global _Putchar
  297  00001310          	_Putchar:
  298  00001310  44000280	trap	#0x280
  299  00001314  4be00000	jr	r31
  300  00001318  54000000	nop
  301  0000131c          	.endproc _Putchar
  303  0000131c          	.proc _Printf
  304  0000131c          	.global _Printf
  305  0000131c          	_Printf:
  306  0000131c  44000201	trap	#0x201
  307  00001320  4be00000	jr	r31
  308  00001324  54000000	nop
  309  00001328          	.endproc _Printf
  311  00001328          	.proc _getpid
  312  00001328          	.global _getpid
  313  00001328          	_getpid:
  314  00001328  44000431	trap	#0x431
  315  0000132c  4be00000	jr	r31
  316  00001330  54000000	nop
  317  00001334          	.endproc _getpid
  319  00001334          	.proc _process_create
  320  00001334          	.global _process_create
  321  00001334          	_process_create:
  322  00001334  44000432	trap	#0x432
  323  00001338  4be00000	jr	r31
  324  0000133c  54000000	nop
  325  00001340          	.endproc _process_create
  327  00001340          	.proc _shmget
  328  00001340          	.global _shmget
  329  00001340          	_shmget:
  330  00001340  44000440	trap	#0x440
  331  00001344  4be00000	jr	r31
  332  00001348  54000000	nop
  333  0000134c          	.endproc _shmget
  335  0000134c          	.proc _shmat
  336  0000134c          	.global _shmat
  337  0000134c          	_shmat:
  338  0000134c  44000441	trap	#0x441
  339  00001350  4be00000	jr	r31
  340  00001354  54000000	nop
  341  00001358          	.endproc _shmat
  343  00001358          	.proc _sem_create
  344  00001358          	.global _sem_create
  345  00001358          	_sem_create:
  346  00001358  44000450	trap	#0x450
  347  0000135c  4be00000	jr	r31
  348  00001360  54000000	nop
  349  00001364          	.endproc _sem_create
  351  00001364          	.proc _sem_wait
  352  00001364          	.global _sem_wait
  353  00001364          	_sem_wait:
  354  00001364  44000451	trap	#0x451
  355  00001368  4be00000	jr	r31
  356  0000136c  54000000	nop
  357  00001370          	.endproc _sem_wait
  359  00001370          	.proc _sem_signal
  360  00001370          	.global _sem_signal
  361  00001370          	_sem_signal:
  362  00001370  44000452	trap	#0x452
  363  00001374  4be00000	jr	r31
  364  00001378  54000000	nop
  365  0000137c          	.endproc _sem_signal
  367  0000137c          	.proc _lock_create
  368  0000137c          	.global _lock_create
  369  0000137c          	_lock_create:
  370  0000137c  44000453	trap	#0x453
  371  00001380  4be00000	jr	r31
  372  00001384  54000000	nop
  373  00001388          	.endproc _lock_create
  375  00001388          	.proc _lock_acquire
  376  00001388          	.global _lock_acquire
  377  00001388          	_lock_acquire:
  378  00001388  44000454	trap	#0x454
  379  0000138c  4be00000	jr	r31
  380  00001390  54000000	nop
  381  00001394          	.endproc _lock_acquire
  383  00001394          	.proc _lock_release
  384  00001394          	.global _lock_release
  385  00001394          	_lock_release:
  386  00001394  44000455	trap	#0x455
  387  00001398  4be00000	jr	r31
  388  0000139c  54000000	nop
  389  000013a0          	.endproc _lock_release
  391  000013a0          	.proc _cond_create
  392  000013a0          	.global _cond_create
  393  000013a0          	_cond_create:
  394  000013a0  44000456	trap	#0x456
  395  000013a4  4be00000	jr	r31
  396  000013a8  54000000	nop
  397  000013ac          	.endproc _cond_create
  399  000013ac          	.proc _cond_wait
  400  000013ac          	.global _cond_wait
  401  000013ac          	_cond_wait:
  402  000013ac  44000457	trap	#0x457
  403  000013b0  4be00000	jr	r31
  404  000013b4  54000000	nop
  405  000013b8          	.endproc _cond_wait
  407  000013b8          	.proc _cond_signal
  408  000013b8          	.global _cond_signal
  409  000013b8          	_cond_signal:
  410  000013b8  44000458	trap	#0x458
  411  000013bc  4be00000	jr	r31
  412  000013c0  54000000	nop
  413  000013c4          	.endproc _cond_signal
  415  000013c4          	.proc _cond_broadcast
  416  000013c4          	.global _cond_broadcast
  417  000013c4          	_cond_broadcast:
  418  000013c4  44000459	trap	#0x459
  419  000013c8  4be00000	jr	r31
  420  000013cc  54000000	nop
  421  000013d0          	.endproc _cond_broadcast
  423  000013d0          	.proc _Exit
  424  000013d0          	.global _Exit
  425  000013d0          	_Exit:
  426  000013d0  44000500	trap	#0x500
  427  000013d4  4be00000	jr	r31
  428  000013d8  54000000	nop
  429  000013dc          	.endproc _Exit
  430                      ; Compiled by GCC
  432  000013dc          	.align 2
  433  000013dc          	.proc _isspace
  434  000013dc          	.global _isspace
  435  000013dc          	_isspace:
  436                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  437  000013dc  afbefffc	sw	-4(r29),r30; push fp
  438  000013e0  001df020	add	r30,r0,r29; fp = sp
  439  000013e4  afbffff8	sw	-8(r29),r31; push ret addr
  440  000013e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  441  000013ec  afa20000	sw	0(r29),r2
  442  000013f0  afa30004	sw	4(r29),r3
  443  000013f4  afa40008	sw	8(r29),r4
  444  000013f8  83c20003	lb	r2,3(r30)
  445  000013fc  20010000	addi	r1,r0,#0
  446  00001400  304300ff	andi	r3,r2,#0x00ff
  447  00001404  60640020	seqi	r4,r3,#32
  448  00001408  1480002c	bnez	r4,L3_LF2
  449  0000140c  54000000	nop; delay slot nop
  450  00001410  304300ff	andi	r3,r2,#0x00ff
  451  00001414  60640009	seqi	r4,r3,#9
  452  00001418  1480001c	bnez	r4,L3_LF2
  453  0000141c  54000000	nop; delay slot nop
  454  00001420  304300ff	andi	r3,r2,#0x00ff
  455  00001424  6064000a	seqi	r4,r3,#10
  456  00001428  1480000c	bnez	r4,L3_LF2
  457  0000142c  54000000	nop; delay slot nop
  458  00001430  08000008	j	L2_LF2
  459  00001434  54000000	nop; delay slot nop
  460  00001438          	L3_LF2:
  461  00001438  20010001	addi	r1,r0,#1
  462  0000143c          	L2_LF2:
  463  0000143c  08000004	j	L1_LF2
  464  00001440  54000000	nop; delay slot nop
  465  00001444          	L1_LF2:
  466  00001444  8fa20000	lw	r2,0(r29)
  467  00001448  8fa30004	lw	r3,4(r29)
  468  0000144c  8fa40008	lw	r4,8(r29)
  469  00001450  8fdffff8	lw	r31,-8(r30)
  470  00001454  001ee820	add	r29,r0,r30
  471  00001458  8fdefffc	lw	r30,-4(r30)
  472  0000145c  4be00000	jr	r31
  473  00001460  54000000	nop
  474  00001464          	.endproc _isspace
  475  00001464          	.align 2
  476  00001464          	.proc _isxdigit
  477  00001464          	.global _isxdigit
  478  00001464          	_isxdigit:
  479                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  480  00001464  afbefffc	sw	-4(r29),r30; push fp
  481  00001468  001df020	add	r30,r0,r29; fp = sp
  482  0000146c  afbffff8	sw	-8(r29),r31; push ret addr
  483  00001470  2fbd0018	subui	r29,r29,#24; alloc local storage
  484  00001474  afa20000	sw	0(r29),r2
  485  00001478  afa30004	sw	4(r29),r3
  486  0000147c  afa40008	sw	8(r29),r4
  487  00001480  83c20003	lb	r2,3(r30)
  488  00001484  20010000	addi	r1,r0,#0
  489  00001488  304300ff	andi	r3,r2,#0x00ff
  490  0000148c  6c64002f	sgtui	r4,r3,#47
  491  00001490  1080001c	beqz	r4,L7_LF2
  492  00001494  54000000	nop; delay slot nop
  493  00001498  304300ff	andi	r3,r2,#0x00ff
  494  0000149c  70640039	sleui	r4,r3,#57
  495  000014a0  1480005c	bnez	r4,L6_LF2
  496  000014a4  54000000	nop; delay slot nop
  497  000014a8  08000004	j	L7_LF2
  498  000014ac  54000000	nop; delay slot nop
  499  000014b0          	L7_LF2:
  500  000014b0  304300ff	andi	r3,r2,#0x00ff
  501  000014b4  6c640060	sgtui	r4,r3,#96
  502  000014b8  1080001c	beqz	r4,L8_LF2
  503  000014bc  54000000	nop; delay slot nop
  504  000014c0  304300ff	andi	r3,r2,#0x00ff
  505  000014c4  70640066	sleui	r4,r3,#102
  506  000014c8  14800034	bnez	r4,L6_LF2
  507  000014cc  54000000	nop; delay slot nop
  508  000014d0  08000004	j	L8_LF2
  509  000014d4  54000000	nop; delay slot nop
  510  000014d8          	L8_LF2:
  511  000014d8  304300ff	andi	r3,r2,#0x00ff
  512  000014dc  6c640040	sgtui	r4,r3,#64
  513  000014e0  10800020	beqz	r4,L5_LF2
  514  000014e4  54000000	nop; delay slot nop
  515  000014e8  304300ff	andi	r3,r2,#0x00ff
  516  000014ec  70640041	sleui	r4,r3,#65
  517  000014f0  1480000c	bnez	r4,L6_LF2
  518  000014f4  54000000	nop; delay slot nop
  519  000014f8  08000008	j	L5_LF2
  520  000014fc  54000000	nop; delay slot nop
  521  00001500          	L6_LF2:
  522  00001500  20010001	addi	r1,r0,#1
  523  00001504          	L5_LF2:
  524  00001504  08000004	j	L4_LF2
  525  00001508  54000000	nop; delay slot nop
  526  0000150c          	L4_LF2:
  527  0000150c  8fa20000	lw	r2,0(r29)
  528  00001510  8fa30004	lw	r3,4(r29)
  529  00001514  8fa40008	lw	r4,8(r29)
  530  00001518  8fdffff8	lw	r31,-8(r30)
  531  0000151c  001ee820	add	r29,r0,r30
  532  00001520  8fdefffc	lw	r30,-4(r30)
  533  00001524  4be00000	jr	r31
  534  00001528  54000000	nop
  535  0000152c          	.endproc _isxdigit
  536  0000152c          	.align 2
  537  0000152c          	.proc _dstrcpy
  538  0000152c          	.global _dstrcpy
  539  0000152c          	_dstrcpy:
  540                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  541  0000152c  afbefffc	sw	-4(r29),r30; push fp
  542  00001530  001df020	add	r30,r0,r29; fp = sp
  543  00001534  afbffff8	sw	-8(r29),r31; push ret addr
  544  00001538  2fbd0018	subui	r29,r29,#24; alloc local storage
  545  0000153c  afa20000	sw	0(r29),r2
  546  00001540  afa30004	sw	4(r29),r3
  547  00001544  8fc10000	lw	r1,(r30)
  548  00001548  afc1fff4	sw	-12(r30),r1
  549  0000154c          	L10_LF2:
  550  0000154c  8fc10000	lw	r1,(r30)
  551  00001550  20220001	addi	r2,r1,#1
  552  00001554  afc20000	sw	(r30),r2
  553  00001558  8fc20004	lw	r2,4(r30)
  554  0000155c  20430001	addi	r3,r2,#1
  555  00001560  afc30004	sw	4(r30),r3
  556  00001564  80420000	lb	r2,(r2)
  557  00001568  a0220000	sb	(r1),r2
  558  0000156c  a3c2fff3	sb	-13(r30),r2
  559  00001570          	L12_LF2:
  560  00001570  93c1fff3	lbu	r1,-13(r30)
  561  00001574  64220000	snei	r2,r1,#0
  562  00001578  1440000c	bnez	r2,L13_LF2
  563  0000157c  54000000	nop; delay slot nop
  564  00001580  0800000c	j	L11_LF2
  565  00001584  54000000	nop; delay slot nop
  566  00001588          	L13_LF2:
  567  00001588  0bffffc0	j	L10_LF2
  568  0000158c  54000000	nop; delay slot nop
  569  00001590          	L11_LF2:
  570  00001590  8fc1fff4	lw	r1,-12(r30)
  571  00001594  08000004	j	L9_LF2
  572  00001598  54000000	nop; delay slot nop
  573  0000159c          	L9_LF2:
  574  0000159c  8fa20000	lw	r2,0(r29)
  575  000015a0  8fa30004	lw	r3,4(r29)
  576  000015a4  8fdffff8	lw	r31,-8(r30)
  577  000015a8  001ee820	add	r29,r0,r30
  578  000015ac  8fdefffc	lw	r30,-4(r30)
  579  000015b0  4be00000	jr	r31
  580  000015b4  54000000	nop
  581  000015b8          	.endproc _dstrcpy
  582  000015b8          	.align 2
  583  000015b8          	.proc _dstrncpy
  584  000015b8          	.global _dstrncpy
  585  000015b8          	_dstrncpy:
  586                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  587  000015b8  afbefffc	sw	-4(r29),r30; push fp
  588  000015bc  001df020	add	r30,r0,r29; fp = sp
  589  000015c0  afbffff8	sw	-8(r29),r31; push ret addr
  590  000015c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  591  000015c8  afa20000	sw	0(r29),r2
  592  000015cc  afa30004	sw	4(r29),r3
  593  000015d0  8fc10000	lw	r1,(r30)
  594  000015d4  afc1fff4	sw	-12(r30),r1
  595  000015d8          	L15_LF2:
  596  000015d8  8fc10008	lw	r1,8(r30)
  597  000015dc  2022ffff	addi	r2,r1,#-1
  598  000015e0  afc20008	sw	8(r30),r2
  599  000015e4  70210000	slei	r1,r1,#0
  600  000015e8  1020000c	beqz	r1,L18_LF2
  601  000015ec  54000000	nop; delay slot nop
  602  000015f0  08000048	j	L16_LF2
  603  000015f4  54000000	nop; delay slot nop
  604  000015f8          	L18_LF2:
  605  000015f8  8fc10000	lw	r1,(r30)
  606  000015fc  20220001	addi	r2,r1,#1
  607  00001600  afc20000	sw	(r30),r2
  608  00001604  8fc20004	lw	r2,4(r30)
  609  00001608  20430001	addi	r3,r2,#1
  610  0000160c  afc30004	sw	4(r30),r3
  611  00001610  80420000	lb	r2,(r2)
  612  00001614  a0220000	sb	(r1),r2
  613  00001618  a3c2fff3	sb	-13(r30),r2
  614  0000161c          	L17_LF2:
  615  0000161c  93c1fff3	lbu	r1,-13(r30)
  616  00001620  64220000	snei	r2,r1,#0
  617  00001624  1440000c	bnez	r2,L19_LF2
  618  00001628  54000000	nop; delay slot nop
  619  0000162c  0800000c	j	L16_LF2
  620  00001630  54000000	nop; delay slot nop
  621  00001634          	L19_LF2:
  622  00001634  0bffffa0	j	L15_LF2
  623  00001638  54000000	nop; delay slot nop
  624  0000163c          	L16_LF2:
  625  0000163c  8fc1fff4	lw	r1,-12(r30)
  626  00001640  08000004	j	L14_LF2
  627  00001644  54000000	nop; delay slot nop
  628  00001648          	L14_LF2:
  629  00001648  8fa20000	lw	r2,0(r29)
  630  0000164c  8fa30004	lw	r3,4(r29)
  631  00001650  8fdffff8	lw	r31,-8(r30)
  632  00001654  001ee820	add	r29,r0,r30
  633  00001658  8fdefffc	lw	r30,-4(r30)
  634  0000165c  4be00000	jr	r31
  635  00001660  54000000	nop
  636  00001664          	.endproc _dstrncpy
  637  00001664          	.align 2
  638  00001664          	.proc _dstrcat
  639  00001664          	.global _dstrcat
  640  00001664          	_dstrcat:
  641                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  642  00001664  afbefffc	sw	-4(r29),r30; push fp
  643  00001668  001df020	add	r30,r0,r29; fp = sp
  644  0000166c  afbffff8	sw	-8(r29),r31; push ret addr
  645  00001670  2fbd0018	subui	r29,r29,#24; alloc local storage
  646  00001674  afa20000	sw	0(r29),r2
  647  00001678  8fc10000	lw	r1,(r30)
  648  0000167c  afc1fff4	sw	-12(r30),r1
  649  00001680          	L21_LF2:
  650  00001680  8fc10000	lw	r1,(r30)
  651  00001684  90220000	lbu	r2,(r1)
  652  00001688  64410000	snei	r1,r2,#0
  653  0000168c  1420000c	bnez	r1,L23_LF2
  654  00001690  54000000	nop; delay slot nop
  655  00001694  0800001c	j	L22_LF2
  656  00001698  54000000	nop; delay slot nop
  657  0000169c          	L23_LF2:
  658  0000169c  8fc20000	lw	r2,(r30)
  659  000016a0  20410001	addi	r1,r2,#1
  660  000016a4  00011020	add	r2,r0,r1
  661  000016a8  afc20000	sw	(r30),r2
  662  000016ac  0bffffd0	j	L21_LF2
  663  000016b0  54000000	nop; delay slot nop
  664  000016b4          	L22_LF2:
  665  000016b4  23bdfff8	addi	r29,r29,#-8
  666  000016b8  001d0820	add	r1,r0,r29
  667  000016bc  8fc20000	lw	r2,(r30)
  668  000016c0  ac220000	sw	(r1),r2
  669  000016c4  8fc20004	lw	r2,4(r30)
  670  000016c8  ac220004	sw	4(r1),r2
  671  000016cc  0ffffe5c	jal	_dstrcpy
  672  000016d0  54000000	nop; delay slot nop
  673  000016d4  23bd0008	addi	r29,r29,#8
  674  000016d8  8fc1fff4	lw	r1,-12(r30)
  675  000016dc  08000004	j	L20_LF2
  676  000016e0  54000000	nop; delay slot nop
  677  000016e4          	L20_LF2:
  678  000016e4  8fa20000	lw	r2,0(r29)
  679  000016e8  8fdffff8	lw	r31,-8(r30)
  680  000016ec  001ee820	add	r29,r0,r30
  681  000016f0  8fdefffc	lw	r30,-4(r30)
  682  000016f4  4be00000	jr	r31
  683  000016f8  54000000	nop
  684  000016fc          	.endproc _dstrcat
  685  000016fc          	.align 2
  686  000016fc          	.proc _dstrncmp
  687  000016fc          	.global _dstrncmp
  688  000016fc          	_dstrncmp:
  689                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  690  000016fc  afbefffc	sw	-4(r29),r30; push fp
  691  00001700  001df020	add	r30,r0,r29; fp = sp
  692  00001704  afbffff8	sw	-8(r29),r31; push ret addr
  693  00001708  2fbd0018	subui	r29,r29,#24; alloc local storage
  694  0000170c  afa20000	sw	0(r29),r2
  695  00001710  afa30004	sw	4(r29),r3
  696  00001714  54000000	nop
  697  00001718  20010000	addi	r1,r0,#0
  698  0000171c  afc1fff4	sw	-12(r30),r1
  699  00001720          	L25_LF2:
  700  00001720  8fc1fff4	lw	r1,-12(r30)
  701  00001724  8fc20008	lw	r2,8(r30)
  702  00001728  0022082a	slt	r1,r1,r2
  703  0000172c  1420000c	bnez	r1,L28_LF2
  704  00001730  54000000	nop; delay slot nop
  705  00001734  08000088	j	L26_LF2
  706  00001738  54000000	nop; delay slot nop
  707  0000173c          	L28_LF2:
  708  0000173c  8fc10004	lw	r1,4(r30)
  709  00001740  90220000	lbu	r2,(r1)
  710  00001744  64410000	snei	r1,r2,#0
  711  00001748  14200018	bnez	r1,L29_LF2
  712  0000174c  54000000	nop; delay slot nop
  713  00001750  20010000	addi	r1,r0,#0
  714  00001754  080000d8	j	L24_LF2
  715  00001758  54000000	nop; delay slot nop
  716  0000175c  08000028	j	L30_LF2
  717  00001760  54000000	nop; delay slot nop
  718  00001764          	L29_LF2:
  719  00001764  8fc10000	lw	r1,(r30)
  720  00001768  8fc20004	lw	r2,4(r30)
  721  0000176c  90210000	lbu	r1,(r1)
  722  00001770  90420000	lbu	r2,(r2)
  723  00001774  00220829	sne	r1,r1,r2
  724  00001778  1020000c	beqz	r1,L30_LF2
  725  0000177c  54000000	nop; delay slot nop
  726  00001780  0800003c	j	L26_LF2
  727  00001784  54000000	nop; delay slot nop
  728  00001788          	L31_LF2:
  729  00001788          	L30_LF2:
  730  00001788  8fc20000	lw	r2,(r30)
  731  0000178c  20410001	addi	r1,r2,#1
  732  00001790  00011020	add	r2,r0,r1
  733  00001794  afc20000	sw	(r30),r2
  734  00001798  8fc20004	lw	r2,4(r30)
  735  0000179c  20410001	addi	r1,r2,#1
  736  000017a0  00011020	add	r2,r0,r1
  737  000017a4  afc20004	sw	4(r30),r2
  738  000017a8          	L27_LF2:
  739  000017a8  8fc2fff4	lw	r2,-12(r30)
  740  000017ac  20410001	addi	r1,r2,#1
  741  000017b0  00011020	add	r2,r0,r1
  742  000017b4  afc2fff4	sw	-12(r30),r2
  743  000017b8  0bffff64	j	L25_LF2
  744  000017bc  54000000	nop; delay slot nop
  745  000017c0          	L26_LF2:
  746  000017c0  8fc1fff4	lw	r1,-12(r30)
  747  000017c4  8fc20008	lw	r2,8(r30)
  748  000017c8  00220828	seq	r1,r1,r2
  749  000017cc  10200018	beqz	r1,L32_LF2
  750  000017d0  54000000	nop; delay slot nop
  751  000017d4  20010000	addi	r1,r0,#0
  752  000017d8  08000054	j	L24_LF2
  753  000017dc  54000000	nop; delay slot nop
  754  000017e0  0800004c	j	L33_LF2
  755  000017e4  54000000	nop; delay slot nop
  756  000017e8          	L32_LF2:
  757  000017e8  8fc20000	lw	r2,(r30)
  758  000017ec  90410000	lbu	r1,(r2)
  759  000017f0  8fc20004	lw	r2,4(r30)
  760  000017f4  90430000	lbu	r3,(r2)
  761  000017f8  00230822	sub	r1,r1,r3
  762  000017fc  74220000	sgei	r2,r1,#0
  763  00001800  10400020	beqz	r2,L34_LF2
  764  00001804  54000000	nop; delay slot nop
  765  00001808  8fc10000	lw	r1,(r30)
  766  0000180c  8fc20004	lw	r2,4(r30)
  767  00001810  90210000	lbu	r1,(r1)
  768  00001814  90420000	lbu	r2,(r2)
  769  00001818  00220829	sne	r1,r1,r2
  770  0000181c  08000008	j	L35_LF2
  771  00001820  54000000	nop; delay slot nop
  772  00001824          	L34_LF2:
  773  00001824  2001ffff	addi	r1,r0,#-1
  774  00001828          	L35_LF2:
  775  00001828  08000004	j	L24_LF2
  776  0000182c  54000000	nop; delay slot nop
  777  00001830          	L33_LF2:
  778  00001830          	L24_LF2:
  779  00001830  8fa20000	lw	r2,0(r29)
  780  00001834  8fa30004	lw	r3,4(r29)
  781  00001838  8fdffff8	lw	r31,-8(r30)
  782  0000183c  001ee820	add	r29,r0,r30
  783  00001840  8fdefffc	lw	r30,-4(r30)
  784  00001844  4be00000	jr	r31
  785  00001848  54000000	nop
  786  0000184c          	.endproc _dstrncmp
  787  0000184c          	.align 2
  788  0000184c          	.proc _dstrlen
  789  0000184c          	.global _dstrlen
  790  0000184c          	_dstrlen:
  791                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  792  0000184c  afbefffc	sw	-4(r29),r30; push fp
  793  00001850  001df020	add	r30,r0,r29; fp = sp
  794  00001854  afbffff8	sw	-8(r29),r31; push ret addr
  795  00001858  2fbd0018	subui	r29,r29,#24; alloc local storage
  796  0000185c  afa20000	sw	0(r29),r2
  797  00001860  20010000	addi	r1,r0,#0
  798  00001864  afc1fff4	sw	-12(r30),r1
  799  00001868          	L37_LF2:
  800  00001868  8fc10000	lw	r1,(r30)
  801  0000186c  20220001	addi	r2,r1,#1
  802  00001870  afc20000	sw	(r30),r2
  803  00001874  90210000	lbu	r1,(r1)
  804  00001878  64220000	snei	r2,r1,#0
  805  0000187c  1440000c	bnez	r2,L39_LF2
  806  00001880  54000000	nop; delay slot nop
  807  00001884  0800001c	j	L38_LF2
  808  00001888  54000000	nop; delay slot nop
  809  0000188c          	L39_LF2:
  810  0000188c  8fc2fff4	lw	r2,-12(r30)
  811  00001890  20410001	addi	r1,r2,#1
  812  00001894  00011020	add	r2,r0,r1
  813  00001898  afc2fff4	sw	-12(r30),r2
  814  0000189c  0bffffc8	j	L37_LF2
  815  000018a0  54000000	nop; delay slot nop
  816  000018a4          	L38_LF2:
  817  000018a4  8fc1fff4	lw	r1,-12(r30)
  818  000018a8  08000004	j	L36_LF2
  819  000018ac  54000000	nop; delay slot nop
  820  000018b0          	L36_LF2:
  821  000018b0  8fa20000	lw	r2,0(r29)
  822  000018b4  8fdffff8	lw	r31,-8(r30)
  823  000018b8  001ee820	add	r29,r0,r30
  824  000018bc  8fdefffc	lw	r30,-4(r30)
  825  000018c0  4be00000	jr	r31
  826  000018c4  54000000	nop
  827  000018c8          	.endproc _dstrlen
  828  000018c8          	.align 2
  829  000018c8          	.proc _dstrstr
  830  000018c8          	.global _dstrstr
  831  000018c8          	_dstrstr:
  832                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  833  000018c8  afbefffc	sw	-4(r29),r30; push fp
  834  000018cc  001df020	add	r30,r0,r29; fp = sp
  835  000018d0  afbffff8	sw	-8(r29),r31; push ret addr
  836  000018d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  837  000018d8  afa20000	sw	0(r29),r2
  838  000018dc  23bdfff8	addi	r29,r29,#-8
  839  000018e0  001d0820	add	r1,r0,r29
  840  000018e4  8fc20004	lw	r2,4(r30)
  841  000018e8  ac220000	sw	(r1),r2
  842  000018ec  0fffff5c	jal	_dstrlen
  843  000018f0  54000000	nop; delay slot nop
  844  000018f4  23bd0008	addi	r29,r29,#8
  845  000018f8  afc1fff4	sw	-12(r30),r1
  846  000018fc          	L41_LF2:
  847  000018fc  8fc10000	lw	r1,(r30)
  848  00001900  90220000	lbu	r2,(r1)
  849  00001904  64410000	snei	r1,r2,#0
  850  00001908  1420000c	bnez	r1,L43_LF2
  851  0000190c  54000000	nop; delay slot nop
  852  00001910  08000060	j	L42_LF2
  853  00001914  54000000	nop; delay slot nop
  854  00001918          	L43_LF2:
  855  00001918  23bdfff0	addi	r29,r29,#-16
  856  0000191c  001d0820	add	r1,r0,r29
  857  00001920  8fc20000	lw	r2,(r30)
  858  00001924  ac220000	sw	(r1),r2
  859  00001928  8fc20004	lw	r2,4(r30)
  860  0000192c  ac220004	sw	4(r1),r2
  861  00001930  8fc2fff4	lw	r2,-12(r30)
  862  00001934  ac220008	sw	8(r1),r2
  863  00001938  0ffffdc0	jal	_dstrncmp
  864  0000193c  54000000	nop; delay slot nop
  865  00001940  23bd0010	addi	r29,r29,#16
  866  00001944  64220000	snei	r2,r1,#0
  867  00001948  14400010	bnez	r2,L44_LF2
  868  0000194c  54000000	nop; delay slot nop
  869  00001950  8fc10000	lw	r1,(r30)
  870  00001954  08000028	j	L40_LF2
  871  00001958  54000000	nop; delay slot nop
  872  0000195c          	L44_LF2:
  873  0000195c  8fc20000	lw	r2,(r30)
  874  00001960  20410001	addi	r1,r2,#1
  875  00001964  00011020	add	r2,r0,r1
  876  00001968  afc20000	sw	(r30),r2
  877  0000196c  0bffff8c	j	L41_LF2
  878  00001970  54000000	nop; delay slot nop
  879  00001974          	L42_LF2:
  880  00001974  20010000	addi	r1,r0,#0
  881  00001978  08000004	j	L40_LF2
  882  0000197c  54000000	nop; delay slot nop
  883  00001980          	L40_LF2:
  884  00001980  8fa20000	lw	r2,0(r29)
  885  00001984  8fdffff8	lw	r31,-8(r30)
  886  00001988  001ee820	add	r29,r0,r30
  887  0000198c  8fdefffc	lw	r30,-4(r30)
  888  00001990  4be00000	jr	r31
  889  00001994  54000000	nop
  890  00001998          	.endproc _dstrstr
  891  00001998          	.align 2
  892  00001998          	.proc _dmindex
  893  00001998          	.global _dmindex
  894  00001998          	_dmindex:
  895                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  896  00001998  afbefffc	sw	-4(r29),r30; push fp
  897  0000199c  001df020	add	r30,r0,r29; fp = sp
  898  000019a0  afbffff8	sw	-8(r29),r31; push ret addr
  899  000019a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  900  000019a8  afa20000	sw	0(r29),r2
  901  000019ac  54000000	nop
  902  000019b0          	L46_LF2:
  903  000019b0  8fc10000	lw	r1,(r30)
  904  000019b4  90220000	lbu	r2,(r1)
  905  000019b8  64410000	snei	r1,r2,#0
  906  000019bc  1420000c	bnez	r1,L48_LF2
  907  000019c0  54000000	nop; delay slot nop
  908  000019c4  08000070	j	L47_LF2
  909  000019c8  54000000	nop; delay slot nop
  910  000019cc          	L48_LF2:
  911  000019cc  8fc10004	lw	r1,4(r30)
  912  000019d0  afc1fff4	sw	-12(r30),r1
  913  000019d4          	L49_LF2:
  914  000019d4  8fc1fff4	lw	r1,-12(r30)
  915  000019d8  90220000	lbu	r2,(r1)
  916  000019dc  64410000	snei	r1,r2,#0
  917  000019e0  1420000c	bnez	r1,L52_LF2
  918  000019e4  54000000	nop; delay slot nop
  919  000019e8  08000044	j	L50_LF2
  920  000019ec  54000000	nop; delay slot nop
  921  000019f0          	L52_LF2:
  922  000019f0  8fc10000	lw	r1,(r30)
  923  000019f4  8fc2fff4	lw	r2,-12(r30)
  924  000019f8  90210000	lbu	r1,(r1)
  925  000019fc  90420000	lbu	r2,(r2)
  926  00001a00  00220828	seq	r1,r1,r2
  927  00001a04  10200010	beqz	r1,L51_LF2
  928  00001a08  54000000	nop; delay slot nop
  929  00001a0c  8fc10000	lw	r1,(r30)
  930  00001a10  08000030	j	L45_LF2
  931  00001a14  54000000	nop; delay slot nop
  932  00001a18          	L53_LF2:
  933  00001a18          	L51_LF2:
  934  00001a18  8fc2fff4	lw	r2,-12(r30)
  935  00001a1c  20410001	addi	r1,r2,#1
  936  00001a20  00011020	add	r2,r0,r1
  937  00001a24  afc2fff4	sw	-12(r30),r2
  938  00001a28  0bffffa8	j	L49_LF2
  939  00001a2c  54000000	nop; delay slot nop
  940  00001a30          	L50_LF2:
  941  00001a30  0bffff7c	j	L46_LF2
  942  00001a34  54000000	nop; delay slot nop
  943  00001a38          	L47_LF2:
  944  00001a38  20010000	addi	r1,r0,#0
  945  00001a3c  08000004	j	L45_LF2
  946  00001a40  54000000	nop; delay slot nop
  947  00001a44          	L45_LF2:
  948  00001a44  8fa20000	lw	r2,0(r29)
  949  00001a48  8fdffff8	lw	r31,-8(r30)
  950  00001a4c  001ee820	add	r29,r0,r30
  951  00001a50  8fdefffc	lw	r30,-4(r30)
  952  00001a54  4be00000	jr	r31
  953  00001a58  54000000	nop
  954  00001a5c          	.endproc _dmindex
  955  00001a5c          	.align 2
  956  00001a5c          	.proc _dindex
  957  00001a5c          	.global _dindex
  958  00001a5c          	_dindex:
  959                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  960  00001a5c  afbefffc	sw	-4(r29),r30; push fp
  961  00001a60  001df020	add	r30,r0,r29; fp = sp
  962  00001a64  afbffff8	sw	-8(r29),r31; push ret addr
  963  00001a68  2fbd0010	subui	r29,r29,#16; alloc local storage
  964  00001a6c  afa20000	sw	0(r29),r2
  965  00001a70  54000000	nop
  966  00001a74          	L55_LF2:
  967  00001a74  8fc10000	lw	r1,(r30)
  968  00001a78  90220000	lbu	r2,(r1)
  969  00001a7c  64410000	snei	r1,r2,#0
  970  00001a80  1420000c	bnez	r1,L57_LF2
  971  00001a84  54000000	nop; delay slot nop
  972  00001a88  08000040	j	L56_LF2
  973  00001a8c  54000000	nop; delay slot nop
  974  00001a90          	L57_LF2:
  975  00001a90  8fc10000	lw	r1,(r30)
  976  00001a94  90220000	lbu	r2,(r1)
  977  00001a98  8fc10004	lw	r1,4(r30)
  978  00001a9c  00411028	seq	r2,r2,r1
  979  00001aa0  10400010	beqz	r2,L58_LF2
  980  00001aa4  54000000	nop; delay slot nop
  981  00001aa8  8fc10000	lw	r1,(r30)
  982  00001aac  08000028	j	L54_LF2
  983  00001ab0  54000000	nop; delay slot nop
  984  00001ab4          	L58_LF2:
  985  00001ab4  8fc20000	lw	r2,(r30)
  986  00001ab8  20410001	addi	r1,r2,#1
  987  00001abc  00011020	add	r2,r0,r1
  988  00001ac0  afc20000	sw	(r30),r2
  989  00001ac4  0bffffac	j	L55_LF2
  990  00001ac8  54000000	nop; delay slot nop
  991  00001acc          	L56_LF2:
  992  00001acc  20010000	addi	r1,r0,#0
  993  00001ad0  08000004	j	L54_LF2
  994  00001ad4  54000000	nop; delay slot nop
  995  00001ad8          	L54_LF2:
  996  00001ad8  8fa20000	lw	r2,0(r29)
  997  00001adc  8fdffff8	lw	r31,-8(r30)
  998  00001ae0  001ee820	add	r29,r0,r30
  999  00001ae4  8fdefffc	lw	r30,-4(r30)
 1000  00001ae8  4be00000	jr	r31
 1001  00001aec  54000000	nop
 1002  00001af0          	.endproc _dindex
 1003  00001af0          	.align 2
 1004  00001af0          	.proc _ditoa
 1005  00001af0          	.global _ditoa
 1006  00001af0          	_ditoa:
 1007                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1008  00001af0  afbefffc	sw	-4(r29),r30; push fp
 1009  00001af4  001df020	add	r30,r0,r29; fp = sp
 1010  00001af8  afbffff8	sw	-8(r29),r31; push ret addr
 1011  00001afc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1012  00001b00  afa20000	sw	0(r29),r2
 1013  00001b04  afa30004	sw	4(r29),r3
 1014  00001b08  8fc10000	lw	r1,(r30)
 1015  00001b0c  68220000	slti	r2,r1,#0
 1016  00001b10  1040002c	beqz	r2,L60_LF2
 1017  00001b14  54000000	nop; delay slot nop
 1018  00001b18  8fc10004	lw	r1,4(r30)
 1019  00001b1c  20220001	addi	r2,r1,#1
 1020  00001b20  afc20004	sw	4(r30),r2
 1021  00001b24  2002002d	addi	r2,r0,(#0x2d)&0xff
 1022  00001b28  a0220000	sb	(r1),r2
 1023  00001b2c  8fc10000	lw	r1,(r30)
 1024  00001b30  00011022	sub	r2,r0,r1
 1025  00001b34  afc20000	sw	(r30),r2
 1026  00001b38  08000118	j	L61_LF2
 1027  00001b3c  54000000	nop; delay slot nop
 1028  00001b40          	L60_LF2:
 1029  00001b40  8fc10000	lw	r1,(r30)
 1030  00001b44  64220000	snei	r2,r1,#0
 1031  00001b48  14400020	bnez	r2,L62_LF2
 1032  00001b4c  54000000	nop; delay slot nop
 1033  00001b50  8fc10004	lw	r1,4(r30)
 1034  00001b54  20220001	addi	r2,r1,#1
 1035  00001b58  afc20004	sw	4(r30),r2
 1036  00001b5c  20020030	addi	r2,r0,(#0x30)&0xff
 1037  00001b60  a0220000	sb	(r1),r2
 1038  00001b64  080000ec	j	L61_LF2
 1039  00001b68  54000000	nop; delay slot nop
 1040  00001b6c          	L62_LF2:
 1041  00001b6c  20010001	addi	r1,r0,#1
 1042  00001b70  afc1fff4	sw	-12(r30),r1
 1043  00001b74          	L64_LF2:
 1044  00001b74  8fc1fff4	lw	r1,-12(r30)
 1045  00001b78  8fc20000	lw	r2,(r30)
 1046  00001b7c  0022082c	sle	r1,r1,r2
 1047  00001b80  1420000c	bnez	r1,L66_LF2
 1048  00001b84  54000000	nop; delay slot nop
 1049  00001b88  08000024	j	L65_LF2
 1050  00001b8c  54000000	nop; delay slot nop
 1051  00001b90          	L67_LF2:
 1052  00001b90          	L66_LF2:
 1053  00001b90  8fc1fff4	lw	r1,-12(r30)
 1054  00001b94  00011820	add	r3,r0,r1
 1055  00001b98  50620002	slli	r2,r3,#0x2
 1056  00001b9c  00411020	add	r2,r2,r1
 1057  00001ba0  50410001	slli	r1,r2,#0x1
 1058  00001ba4  afc1fff4	sw	-12(r30),r1
 1059  00001ba8  0bffffc8	j	L64_LF2
 1060  00001bac  54000000	nop; delay slot nop
 1061  00001bb0          	L65_LF2:
 1062  00001bb0  54000000	nop
 1063  00001bb4          	L68_LF2:
 1064  00001bb4  8fc1fff4	lw	r1,-12(r30)
 1065  00001bb8  2002000a	addi	r2,r0,#10
 1066  00001bbc  00200035	movi2fp	f0,r1
 1067  00001bc0  00400835	movi2fp	f1,r2
 1068  00001bc4  0401000f	div	f0,f0,f1
 1069  00001bc8  00000834	movfp2i	r1,f0
 1070  00001bcc  afc1fff4	sw	-12(r30),r1
 1071  00001bd0  8fc10004	lw	r1,4(r30)
 1072  00001bd4  20220001	addi	r2,r1,#1
 1073  00001bd8  afc20004	sw	4(r30),r2
 1074  00001bdc  8fc20000	lw	r2,(r30)
 1075  00001be0  8fc3fff4	lw	r3,-12(r30)
 1076  00001be4  00400035	movi2fp	f0,r2
 1077  00001be8  00600835	movi2fp	f1,r3
 1078  00001bec  0401000f	div	f0,f0,f1
 1079  00001bf0  00001034	movfp2i	r2,f0
 1080  00001bf4  00021820	add	r3,r0,r2
 1081  00001bf8  20620030	addi	r2,r3,#48
 1082  00001bfc  a0220000	sb	(r1),r2
 1083  00001c00  8fc10000	lw	r1,(r30)
 1084  00001c04  8fc3fff4	lw	r3,-12(r30)
 1085  00001c08  00200035	movi2fp	f0,r1
 1086  00001c0c  00600835	movi2fp	f1,r3
 1087  00001c10  0401000f	div	f0,f0,f1
 1088  00001c14  00001034	movfp2i	r2,f0
 1089  00001c18  8fc3fff4	lw	r3,-12(r30)
 1090  00001c1c  00400035	movi2fp	f0,r2
 1091  00001c20  00600835	movi2fp	f1,r3
 1092  00001c24  0401000e	mult	f0,f0,f1
 1093  00001c28  00001034	movfp2i	r2,f0
 1094  00001c2c  00220822	sub	r1,r1,r2
 1095  00001c30  afc10000	sw	(r30),r1
 1096  00001c34          	L70_LF2:
 1097  00001c34  8fc1fff4	lw	r1,-12(r30)
 1098  00001c38  6c220001	sgti	r2,r1,#1
 1099  00001c3c  1440000c	bnez	r2,L71_LF2
 1100  00001c40  54000000	nop; delay slot nop
 1101  00001c44  0800000c	j	L61_LF2
 1102  00001c48  54000000	nop; delay slot nop
 1103  00001c4c          	L71_LF2:
 1104  00001c4c  0bffff64	j	L68_LF2
 1105  00001c50  54000000	nop; delay slot nop
 1106  00001c54          	L69_LF2:
 1107  00001c54          	L63_LF2:
 1108  00001c54          	L61_LF2:
 1109  00001c54  8fc10004	lw	r1,4(r30)
 1110  00001c58  20020000	addi	r2,r0,(#0x0)&0xff
 1111  00001c5c  a0220000	sb	(r1),r2
 1112  00001c60          	L59_LF2:
 1113  00001c60  8fa20000	lw	r2,0(r29)
 1114  00001c64  8fa30004	lw	r3,4(r29)
 1115  00001c68  8fdffff8	lw	r31,-8(r30)
 1116  00001c6c  001ee820	add	r29,r0,r30
 1117  00001c70  8fdefffc	lw	r30,-4(r30)
 1118  00001c74  4be00000	jr	r31
 1119  00001c78  54000000	nop
 1120  00001c7c          	.endproc _ditoa
 1121  00001c7c          	.align 2
 1122  00001c7c          	.proc _dstrtol
 1123  00001c7c          	.global _dstrtol
 1124  00001c7c          	_dstrtol:
 1125                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1126  00001c7c  afbefffc	sw	-4(r29),r30; push fp
 1127  00001c80  001df020	add	r30,r0,r29; fp = sp
 1128  00001c84  afbffff8	sw	-8(r29),r31; push ret addr
 1129  00001c88  2fbd0020	subui	r29,r29,#32; alloc local storage
 1130  00001c8c  afa20000	sw	0(r29),r2
 1131  00001c90  20010000	addi	r1,r0,#0
 1132  00001c94  afc1fff4	sw	-12(r30),r1
 1133  00001c98          	L73_LF2:
 1134  00001c98  8fc10000	lw	r1,(r30)
 1135  00001c9c  90220000	lbu	r2,(r1)
 1136  00001ca0  60410020	seqi	r1,r2,#32
 1137  00001ca4  14200034	bnez	r1,L75_LF2
 1138  00001ca8  54000000	nop; delay slot nop
 1139  00001cac  8fc10000	lw	r1,(r30)
 1140  00001cb0  90220000	lbu	r2,(r1)
 1141  00001cb4  60410009	seqi	r1,r2,#9
 1142  00001cb8  14200020	bnez	r1,L75_LF2
 1143  00001cbc  54000000	nop; delay slot nop
 1144  00001cc0  8fc10000	lw	r1,(r30)
 1145  00001cc4  90220000	lbu	r2,(r1)
 1146  00001cc8  6041000a	seqi	r1,r2,#10
 1147  00001ccc  1420000c	bnez	r1,L75_LF2
 1148  00001cd0  54000000	nop; delay slot nop
 1149  00001cd4  0800001c	j	L74_LF2
 1150  00001cd8  54000000	nop; delay slot nop
 1151  00001cdc          	L75_LF2:
 1152  00001cdc  8fc20000	lw	r2,(r30)
 1153  00001ce0  20410001	addi	r1,r2,#1
 1154  00001ce4  00011020	add	r2,r0,r1
 1155  00001ce8  afc20000	sw	(r30),r2
 1156  00001cec  0bffffa8	j	L73_LF2
 1157  00001cf0  54000000	nop; delay slot nop
 1158  00001cf4          	L74_LF2:
 1159  00001cf4  8fc10004	lw	r1,4(r30)
 1160  00001cf8  64220000	snei	r2,r1,#0
 1161  00001cfc  10400010	beqz	r2,L76_LF2
 1162  00001d00  54000000	nop; delay slot nop
 1163  00001d04  8fc10004	lw	r1,4(r30)
 1164  00001d08  8fc20000	lw	r2,(r30)
 1165  00001d0c  ac220000	sw	(r1),r2
 1166  00001d10          	L76_LF2:
 1167  00001d10  8fc10000	lw	r1,(r30)
 1168  00001d14  90220000	lbu	r2,(r1)
 1169  00001d18  64410000	snei	r1,r2,#0
 1170  00001d1c  14200010	bnez	r1,L77_LF2
 1171  00001d20  54000000	nop; delay slot nop
 1172  00001d24  8fc1fff4	lw	r1,-12(r30)
 1173  00001d28  08000294	j	L72_LF2
 1174  00001d2c  54000000	nop; delay slot nop
 1175  00001d30          	L77_LF2:
 1176  00001d30  8fc10000	lw	r1,(r30)
 1177  00001d34  90220000	lbu	r2,(r1)
 1178  00001d38  6041002d	seqi	r1,r2,#45
 1179  00001d3c  10200024	beqz	r1,L78_LF2
 1180  00001d40  54000000	nop; delay slot nop
 1181  00001d44  2001ffff	addi	r1,r0,#-1
 1182  00001d48  afc1ffec	sw	-20(r30),r1
 1183  00001d4c  8fc20000	lw	r2,(r30)
 1184  00001d50  20410001	addi	r1,r2,#1
 1185  00001d54  00011020	add	r2,r0,r1
 1186  00001d58  afc20000	sw	(r30),r2
 1187  00001d5c  0800000c	j	L79_LF2
 1188  00001d60  54000000	nop; delay slot nop
 1189  00001d64          	L78_LF2:
 1190  00001d64  20010001	addi	r1,r0,#1
 1191  00001d68  afc1ffec	sw	-20(r30),r1
 1192  00001d6c          	L79_LF2:
 1193  00001d6c  8fc10008	lw	r1,8(r30)
 1194  00001d70  64220000	snei	r2,r1,#0
 1195  00001d74  14400090	bnez	r2,L80_LF2
 1196  00001d78  54000000	nop; delay slot nop
 1197  00001d7c  8fc10000	lw	r1,(r30)
 1198  00001d80  90220000	lbu	r2,(r1)
 1199  00001d84  60410030	seqi	r1,r2,#48
 1200  00001d88  10200074	beqz	r1,L81_LF2
 1201  00001d8c  54000000	nop; delay slot nop
 1202  00001d90  8fc20000	lw	r2,(r30)
 1203  00001d94  20410001	addi	r1,r2,#1
 1204  00001d98  00011020	add	r2,r0,r1
 1205  00001d9c  afc20000	sw	(r30),r2
 1206  00001da0  8fc10000	lw	r1,(r30)
 1207  00001da4  90220000	lbu	r2,(r1)
 1208  00001da8  60410078	seqi	r1,r2,#120
 1209  00001dac  14200020	bnez	r1,L83_LF2
 1210  00001db0  54000000	nop; delay slot nop
 1211  00001db4  8fc10000	lw	r1,(r30)
 1212  00001db8  90220000	lbu	r2,(r1)
 1213  00001dbc  60410058	seqi	r1,r2,#88
 1214  00001dc0  1420000c	bnez	r1,L83_LF2
 1215  00001dc4  54000000	nop; delay slot nop
 1216  00001dc8  08000024	j	L82_LF2
 1217  00001dcc  54000000	nop; delay slot nop
 1218  00001dd0          	L83_LF2:
 1219  00001dd0  20010010	addi	r1,r0,#16
 1220  00001dd4  afc10008	sw	8(r30),r1
 1221  00001dd8  8fc20000	lw	r2,(r30)
 1222  00001ddc  20410001	addi	r1,r2,#1
 1223  00001de0  00011020	add	r2,r0,r1
 1224  00001de4  afc20000	sw	(r30),r2
 1225  00001de8  0800000c	j	L84_LF2
 1226  00001dec  54000000	nop; delay slot nop
 1227  00001df0          	L82_LF2:
 1228  00001df0  20010008	addi	r1,r0,#8
 1229  00001df4  afc10008	sw	8(r30),r1
 1230  00001df8          	L84_LF2:
 1231  00001df8  0800000c	j	L80_LF2
 1232  00001dfc  54000000	nop; delay slot nop
 1233  00001e00          	L81_LF2:
 1234  00001e00  2001000a	addi	r1,r0,#10
 1235  00001e04  afc10008	sw	8(r30),r1
 1236  00001e08          	L85_LF2:
 1237  00001e08          	L80_LF2:
 1238  00001e08  8fc10008	lw	r1,8(r30)
 1239  00001e0c  70220000	slei	r2,r1,#0
 1240  00001e10  1440001c	bnez	r2,L87_LF2
 1241  00001e14  54000000	nop; delay slot nop
 1242  00001e18  8fc10008	lw	r1,8(r30)
 1243  00001e1c  6c220010	sgti	r2,r1,#16
 1244  00001e20  1440000c	bnez	r2,L87_LF2
 1245  00001e24  54000000	nop; delay slot nop
 1246  00001e28  08000010	j	L86_LF2
 1247  00001e2c  54000000	nop; delay slot nop
 1248  00001e30          	L87_LF2:
 1249  00001e30  8fc1fff4	lw	r1,-12(r30)
 1250  00001e34  08000188	j	L72_LF2
 1251  00001e38  54000000	nop; delay slot nop
 1252  00001e3c          	L86_LF2:
 1253  00001e3c  54000000	nop
 1254  00001e40          	L88_LF2:
 1255  00001e40  8fc10000	lw	r1,(r30)
 1256  00001e44  90220000	lbu	r2,(r1)
 1257  00001e48  6c41002f	sgtui	r1,r2,#47
 1258  00001e4c  10200030	beqz	r1,L91_LF2
 1259  00001e50  54000000	nop; delay slot nop
 1260  00001e54  8fc10000	lw	r1,(r30)
 1261  00001e58  90220000	lbu	r2,(r1)
 1262  00001e5c  70410039	sleui	r1,r2,#57
 1263  00001e60  1020001c	beqz	r1,L91_LF2
 1264  00001e64  54000000	nop; delay slot nop
 1265  00001e68  8fc10000	lw	r1,(r30)
 1266  00001e6c  90220000	lbu	r2,(r1)
 1267  00001e70  2041ffd0	addi	r1,r2,#-48
 1268  00001e74  afc1fff0	sw	-16(r30),r1
 1269  00001e78  0800008c	j	L92_LF2
 1270  00001e7c  54000000	nop; delay slot nop
 1271  00001e80          	L91_LF2:
 1272  00001e80  8fc10000	lw	r1,(r30)
 1273  00001e84  90220000	lbu	r2,(r1)
 1274  00001e88  6c410060	sgtui	r1,r2,#96
 1275  00001e8c  10200030	beqz	r1,L93_LF2
 1276  00001e90  54000000	nop; delay slot nop
 1277  00001e94  8fc10000	lw	r1,(r30)
 1278  00001e98  90220000	lbu	r2,(r1)
 1279  00001e9c  7041007a	sleui	r1,r2,#122
 1280  00001ea0  1020001c	beqz	r1,L93_LF2
 1281  00001ea4  54000000	nop; delay slot nop
 1282  00001ea8  8fc10000	lw	r1,(r30)
 1283  00001eac  90220000	lbu	r2,(r1)
 1284  00001eb0  2041ffa9	addi	r1,r2,#-87
 1285  00001eb4  afc1fff0	sw	-16(r30),r1
 1286  00001eb8  0800004c	j	L92_LF2
 1287  00001ebc  54000000	nop; delay slot nop
 1288  00001ec0          	L93_LF2:
 1289  00001ec0  8fc10000	lw	r1,(r30)
 1290  00001ec4  90220000	lbu	r2,(r1)
 1291  00001ec8  6c410040	sgtui	r1,r2,#64
 1292  00001ecc  10200030	beqz	r1,L95_LF2
 1293  00001ed0  54000000	nop; delay slot nop
 1294  00001ed4  8fc10000	lw	r1,(r30)
 1295  00001ed8  90220000	lbu	r2,(r1)
 1296  00001edc  7041005a	sleui	r1,r2,#90
 1297  00001ee0  1020001c	beqz	r1,L95_LF2
 1298  00001ee4  54000000	nop; delay slot nop
 1299  00001ee8  8fc10000	lw	r1,(r30)
 1300  00001eec  90220000	lbu	r2,(r1)
 1301  00001ef0  2041ffc9	addi	r1,r2,#-55
 1302  00001ef4  afc1fff0	sw	-16(r30),r1
 1303  00001ef8  0800000c	j	L92_LF2
 1304  00001efc  54000000	nop; delay slot nop
 1305  00001f00          	L95_LF2:
 1306  00001f00  200103e8	addi	r1,r0,#1000
 1307  00001f04  afc1fff0	sw	-16(r30),r1
 1308  00001f08          	L96_LF2:
 1309  00001f08          	L94_LF2:
 1310  00001f08          	L92_LF2:
 1311  00001f08  8fc1fff0	lw	r1,-16(r30)
 1312  00001f0c  8fc20008	lw	r2,8(r30)
 1313  00001f10  0022082a	slt	r1,r1,r2
 1314  00001f14  10200040	beqz	r1,L90_LF2
 1315  00001f18  54000000	nop; delay slot nop
 1316  00001f1c  8fc1fff4	lw	r1,-12(r30)
 1317  00001f20  8fc20008	lw	r2,8(r30)
 1318  00001f24  00200035	movi2fp	f0,r1
 1319  00001f28  00400835	movi2fp	f1,r2
 1320  00001f2c  0401000e	mult	f0,f0,f1
 1321  00001f30  00000834	movfp2i	r1,f0
 1322  00001f34  afc1fff4	sw	-12(r30),r1
 1323  00001f38  8fc1fff4	lw	r1,-12(r30)
 1324  00001f3c  8fc2fff0	lw	r2,-16(r30)
 1325  00001f40  00220820	add	r1,r1,r2
 1326  00001f44  afc1fff4	sw	-12(r30),r1
 1327  00001f48  8fc20000	lw	r2,(r30)
 1328  00001f4c  20410001	addi	r1,r2,#1
 1329  00001f50  00011020	add	r2,r0,r1
 1330  00001f54  afc20000	sw	(r30),r2
 1331  00001f58          	L97_LF2:
 1332  00001f58          	L90_LF2:
 1333  00001f58  8fc1fff0	lw	r1,-16(r30)
 1334  00001f5c  8fc20008	lw	r2,8(r30)
 1335  00001f60  0022082a	slt	r1,r1,r2
 1336  00001f64  1420000c	bnez	r1,L98_LF2
 1337  00001f68  54000000	nop; delay slot nop
 1338  00001f6c  0800000c	j	L89_LF2
 1339  00001f70  54000000	nop; delay slot nop
 1340  00001f74          	L98_LF2:
 1341  00001f74  0bfffec8	j	L88_LF2
 1342  00001f78  54000000	nop; delay slot nop
 1343  00001f7c          	L89_LF2:
 1344  00001f7c  8fc10004	lw	r1,4(r30)
 1345  00001f80  64220000	snei	r2,r1,#0
 1346  00001f84  10400010	beqz	r2,L99_LF2
 1347  00001f88  54000000	nop; delay slot nop
 1348  00001f8c  8fc10004	lw	r1,4(r30)
 1349  00001f90  8fc20000	lw	r2,(r30)
 1350  00001f94  ac220000	sw	(r1),r2
 1351  00001f98          	L99_LF2:
 1352  00001f98  8fc1fff4	lw	r1,-12(r30)
 1353  00001f9c  8fc2ffec	lw	r2,-20(r30)
 1354  00001fa0  00200035	movi2fp	f0,r1
 1355  00001fa4  00400835	movi2fp	f1,r2
 1356  00001fa8  0401000e	mult	f0,f0,f1
 1357  00001fac  00000834	movfp2i	r1,f0
 1358  00001fb0  afc1fff4	sw	-12(r30),r1
 1359  00001fb4  8fc1fff4	lw	r1,-12(r30)
 1360  00001fb8  08000004	j	L72_LF2
 1361  00001fbc  54000000	nop; delay slot nop
 1362  00001fc0          	L72_LF2:
 1363  00001fc0  8fa20000	lw	r2,0(r29)
 1364  00001fc4  8fdffff8	lw	r31,-8(r30)
 1365  00001fc8  001ee820	add	r29,r0,r30
 1366  00001fcc  8fdefffc	lw	r30,-4(r30)
 1367  00001fd0  4be00000	jr	r31
 1368  00001fd4  54000000	nop
 1369  00001fd8          	.endproc _dstrtol
 1370  00001fd8          	.align 2
 1371  00001fd8          	.proc _bcopy
 1372  00001fd8          	.global _bcopy
 1373  00001fd8          	_bcopy:
 1374                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1375  00001fd8  afbefffc	sw	-4(r29),r30; push fp
 1376  00001fdc  001df020	add	r30,r0,r29; fp = sp
 1377  00001fe0  afbffff8	sw	-8(r29),r31; push ret addr
 1378  00001fe4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1379  00001fe8  afa20000	sw	0(r29),r2
 1380  00001fec  afa30004	sw	4(r29),r3
 1381  00001ff0  54000000	nop
 1382  00001ff4          	L101_LF2:
 1383  00001ff4  8fc10008	lw	r1,8(r30)
 1384  00001ff8  2022ffff	addi	r2,r1,#-1
 1385  00001ffc  afc20008	sw	8(r30),r2
 1386  00002000  6c210000	sgti	r1,r1,#0
 1387  00002004  1420000c	bnez	r1,L103_LF2
 1388  00002008  54000000	nop; delay slot nop
 1389  0000200c  0800002c	j	L102_LF2
 1390  00002010  54000000	nop; delay slot nop
 1391  00002014          	L103_LF2:
 1392  00002014  8fc10004	lw	r1,4(r30)
 1393  00002018  20220001	addi	r2,r1,#1
 1394  0000201c  afc20004	sw	4(r30),r2
 1395  00002020  8fc20000	lw	r2,(r30)
 1396  00002024  20430001	addi	r3,r2,#1
 1397  00002028  afc30000	sw	(r30),r3
 1398  0000202c  80420000	lb	r2,(r2)
 1399  00002030  a0220000	sb	(r1),r2
 1400  00002034  0bffffbc	j	L101_LF2
 1401  00002038  54000000	nop; delay slot nop
 1402  0000203c          	L102_LF2:
 1403  0000203c          	L100_LF2:
 1404  0000203c  8fa20000	lw	r2,0(r29)
 1405  00002040  8fa30004	lw	r3,4(r29)
 1406  00002044  8fdffff8	lw	r31,-8(r30)
 1407  00002048  001ee820	add	r29,r0,r30
 1408  0000204c  8fdefffc	lw	r30,-4(r30)
 1409  00002050  4be00000	jr	r31
 1410  00002054  54000000	nop
 1411  00002058          	.endproc _bcopy
 1412  00002058          	.align 2
 1413  00002058          	.proc _bzero
 1414  00002058          	.global _bzero
 1415  00002058          	_bzero:
 1416                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1417  00002058  afbefffc	sw	-4(r29),r30; push fp
 1418  0000205c  001df020	add	r30,r0,r29; fp = sp
 1419  00002060  afbffff8	sw	-8(r29),r31; push ret addr
 1420  00002064  2fbd0010	subui	r29,r29,#16; alloc local storage
 1421  00002068  afa20000	sw	0(r29),r2
 1422  0000206c  54000000	nop
 1423  00002070          	L105_LF2:
 1424  00002070  8fc10004	lw	r1,4(r30)
 1425  00002074  2022ffff	addi	r2,r1,#-1
 1426  00002078  afc20004	sw	4(r30),r2
 1427  0000207c  6c210000	sgti	r1,r1,#0
 1428  00002080  1420000c	bnez	r1,L107_LF2
 1429  00002084  54000000	nop; delay slot nop
 1430  00002088  08000020	j	L106_LF2
 1431  0000208c  54000000	nop; delay slot nop
 1432  00002090          	L107_LF2:
 1433  00002090  8fc10000	lw	r1,(r30)
 1434  00002094  20220001	addi	r2,r1,#1
 1435  00002098  afc20000	sw	(r30),r2
 1436  0000209c  20020000	addi	r2,r0,(#0x0)&0xff
 1437  000020a0  a0220000	sb	(r1),r2
 1438  000020a4  0bffffc8	j	L105_LF2
 1439  000020a8  54000000	nop; delay slot nop
 1440  000020ac          	L106_LF2:
 1441  000020ac          	L104_LF2:
 1442  000020ac  8fa20000	lw	r2,0(r29)
 1443  000020b0  8fdffff8	lw	r31,-8(r30)
 1444  000020b4  001ee820	add	r29,r0,r30
 1445  000020b8  8fdefffc	lw	r30,-4(r30)
 1446  000020bc  4be00000	jr	r31
 1447  000020c0  54000000	nop
 1448  000020c4          	.endproc _bzero
 1449  000020c4          	.align 2
 1450  000020c4          	.proc _min
 1451  000020c4          	.global _min
 1452  000020c4          	_min:
 1453                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1454  000020c4  afbefffc	sw	-4(r29),r30; push fp
 1455  000020c8  001df020	add	r30,r0,r29; fp = sp
 1456  000020cc  afbffff8	sw	-8(r29),r31; push ret addr
 1457  000020d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1458  000020d4  afa20000	sw	0(r29),r2
 1459  000020d8  afa30004	sw	4(r29),r3
 1460  000020dc  8fc10000	lw	r1,(r30)
 1461  000020e0  8fc20004	lw	r2,4(r30)
 1462  000020e4  0022182c	sle	r3,r1,r2
 1463  000020e8  14600008	bnez	r3,L109_LF2
 1464  000020ec  54000000	nop; delay slot nop
 1465  000020f0  8fc10004	lw	r1,4(r30)
 1466  000020f4          	L109_LF2:
 1467  000020f4  08000004	j	L108_LF2
 1468  000020f8  54000000	nop; delay slot nop
 1469  000020fc          	L108_LF2:
 1470  000020fc  8fa20000	lw	r2,0(r29)
 1471  00002100  8fa30004	lw	r3,4(r29)
 1472  00002104  8fdffff8	lw	r31,-8(r30)
 1473  00002108  001ee820	add	r29,r0,r30
 1474  0000210c  8fdefffc	lw	r30,-4(r30)
 1475  00002110  4be00000	jr	r31
 1476  00002114  54000000	nop
 1477  00002118          	.endproc _min
 1478                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1479                      ;;;
 1480                      ;;; Most of the traps are called in files from libtraps.
 1483  00002118          	.align 2
 1484  00002118          	.proc _exit
 1485  00002118          	.global _exit
 1486  00002118          	_exit:
 1487  00002118  44000300	trap	#0x300
 1488  0000211c  4be00000	jr	r31
 1489  00002120  54000000	nop
 1490  00002124          	.endproc _exit
 1492                      ; for the benefit of gcc.
 1493  00002124          	.proc ___main
 1494  00002124          	.global ___main
 1495  00002124          	___main:
 1496  00002124  4be00000	jr	r31
 1497  00002128  54000000	nop
 1498  0000212c          	.endproc ___main
 1499  0000212c          	.text
 1500  0000212c          	.global _etext
 1501  0000212c          	_etext:
 1502  0000212c          	.align 3
 1503  00002130          	.data
 1504  000030c1          	.global _edata
 1505  000030c1          	_edata:
