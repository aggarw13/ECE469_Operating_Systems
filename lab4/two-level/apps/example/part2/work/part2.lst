 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 96
    4                      ; Text size: 4228
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  41636365	.ascii "Accessing virtual memory address before the current user stack page in"
   82  00003004  7373696e	
   82  00003008  67207669	
   82  0000300c  72747561	
   82  00003010  6c206d65	
   82  00003014  6d6f7279	
   82  00003018  20616464	
   82  0000301c  72657373	
   82  00003020  20626566	
   82  00003024  6f726520	
   82  00003028  74686520	
   82  0000302c  63757272	
   82  00003030  656e7420	
   82  00003034  75736572	
   82  00003038  20737461	
   82  0000303c  636b2070	
   82  00003040  61676520	
   82  00003044  696e    	
   83  00003046  20636869	.ascii " child process : %d!\n\000"
   83  0000304a  6c642070	
   83  0000304e  726f6365	
   83  00003052  7373203a	
   83  00003056  20256421	
   83  0000305a  0a00    	
   84  0000305c          	.align 2
   85  0000305c          	LC1_LF0:
   86  0000305c  25640a00	.ascii "%d\n\000"
   87  00003060          	.text
   88  000010d4          	.align 2
   89  000010d4          	.proc _main
   90  000010d4          	.global _main
   91  000010d4          	_main:
   92                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   93  000010d4  afbefffc	sw	-4(r29),r30; push fp
   94  000010d8  001df020	add	r30,r0,r29; fp = sp
   95  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   96  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   97  000010e4  8fc20004	lw	r2,4(r30)
   98  000010e8  0c000f90	jal	___main
   99  000010ec  54000000	nop; not filled.
  100  000010f0  23bdfff0	addi	r29,r29,#-16
  101  000010f4  8c420004	lw	r2,4(r2)
  102  000010f8  afa20000	sw	(r29),r2
  103  000010fc  20030000	addi	r3,r0,#0
  104  00001100  afa30004	sw	4(r29),r3
  105  00001104  2003000a	addi	r3,r0,#10
  106  00001108  afa30008	sw	8(r29),r3
  107  0000110c  0c000a70	jal	_dstrtol
  108  00001110  54000000	nop; not filled.
  109  00001114  00011020	add	r2,r0,r1
  110  00001118  0c0000ac	jal	_getpid
  111  0000111c  54000000	nop; not filled.
  112  00001120  3c030000	lhi	r3,((LC0_LF0)>>16)&0xffff
  113  00001124  24633000	addui	r3,r3,(LC0_LF0)&0xffff
  114  00001128  afa30000	sw	(r29),r3
  115  0000112c  afa10004	sw	4(r29),r1
  116  00001130  0c000088	jal	_Printf
  117  00001134  54000000	nop; not filled.
  118  00001138  afa20000	sw	(r29),r2
  119  0000113c  0c0000d0	jal	_sem_signal
  120  00001140  54000000	nop; not filled.
  121  00001144  3c030000	lhi	r3,((LC1_LF0)>>16)&0xffff
  122  00001148  2463305c	addui	r3,r3,(LC1_LF0)&0xffff
  123  0000114c  afa30000	sw	(r29),r3
  124  00001150  3c01003f	lhi	r1,#63
  125  00001154  2421effc	addui	r1,r1,#61436
  126  00001158  8c210000	lw	r1,(r1)
  127  0000115c  afa10004	sw	4(r29),r1
  128  00001160  0c000058	jal	_Printf
  129  00001164  54000000	nop; not filled.
  130  00001168  23bd0010	addi	r29,r29,#16
  131  0000116c  0c000f00	jal	_exit
  132  00001170  54000000	nop
  133  00001174          	.endproc _main
  134                      ;;;
  135                      ;;; Stub functions for DLX traps.
  136                      ;;;
  137                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  138                      ;;;
  139                      ;;; The traps such as Open and Close
  140                      ;;; (note the capital letters) are for use by user programs.  The traps
  141                      ;;; with names such as open and close (lower case) are for use by the OS.
  142                      ;;;
  145  00001174          	.align 2
  147                      ;;; The following are the traps to be used by user-level programs
  148                      ;;;
  150  00001174          	.align 2
  151  00001174          	.proc _Open
  152  00001174          	.global _Open
  153  00001174          	_Open:
  154                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  155                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  156                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  157  00001174  44000213	trap	#0x213
  158  00001178  4be00000	jr	r31
  159  0000117c  54000000	nop
  160  00001180          	.endproc _Open
  162  00001180          	.proc _Close
  163  00001180          	.global _Close
  164  00001180          	_Close:
  165  00001180  44000214	trap	#0x214
  166  00001184  4be00000	jr	r31
  167  00001188  54000000	nop
  168  0000118c          	.endproc _Close
  170  0000118c          	.proc _Read
  171  0000118c          	.global _Read
  172  0000118c          	_Read:
  173  0000118c  44000210	trap	#0x210
  174  00001190  4be00000	jr	r31
  175  00001194  54000000	nop
  176  00001198          	.endproc _Read
  178  00001198          	.proc _Write
  179  00001198          	.global _Write
  180  00001198          	_Write:
  181  00001198  44000211	trap	#0x211
  182  0000119c  4be00000	jr	r31
  183  000011a0  54000000	nop
  184  000011a4          	.endproc _Write
  186  000011a4          	.proc _Lseek
  187  000011a4          	.global _Lseek
  188  000011a4          	_Lseek:
  189  000011a4  44000212	trap	#0x212
  190  000011a8  4be00000	jr	r31
  191  000011ac  54000000	nop
  192  000011b0          	.endproc _Lseek
  194  000011b0          	.proc _Putchar
  195  000011b0          	.global _Putchar
  196  000011b0          	_Putchar:
  197  000011b0  44000280	trap	#0x280
  198  000011b4  4be00000	jr	r31
  199  000011b8  54000000	nop
  200  000011bc          	.endproc _Putchar
  202  000011bc          	.proc _Printf
  203  000011bc          	.global _Printf
  204  000011bc          	_Printf:
  205  000011bc  44000201	trap	#0x201
  206  000011c0  4be00000	jr	r31
  207  000011c4  54000000	nop
  208  000011c8          	.endproc _Printf
  210  000011c8          	.proc _getpid
  211  000011c8          	.global _getpid
  212  000011c8          	_getpid:
  213  000011c8  44000431	trap	#0x431
  214  000011cc  4be00000	jr	r31
  215  000011d0  54000000	nop
  216  000011d4          	.endproc _getpid
  218  000011d4          	.proc _process_create
  219  000011d4          	.global _process_create
  220  000011d4          	_process_create:
  221  000011d4  44000432	trap	#0x432
  222  000011d8  4be00000	jr	r31
  223  000011dc  54000000	nop
  224  000011e0          	.endproc _process_create
  226  000011e0          	.proc _shmget
  227  000011e0          	.global _shmget
  228  000011e0          	_shmget:
  229  000011e0  44000440	trap	#0x440
  230  000011e4  4be00000	jr	r31
  231  000011e8  54000000	nop
  232  000011ec          	.endproc _shmget
  234  000011ec          	.proc _shmat
  235  000011ec          	.global _shmat
  236  000011ec          	_shmat:
  237  000011ec  44000441	trap	#0x441
  238  000011f0  4be00000	jr	r31
  239  000011f4  54000000	nop
  240  000011f8          	.endproc _shmat
  242  000011f8          	.proc _sem_create
  243  000011f8          	.global _sem_create
  244  000011f8          	_sem_create:
  245  000011f8  44000450	trap	#0x450
  246  000011fc  4be00000	jr	r31
  247  00001200  54000000	nop
  248  00001204          	.endproc _sem_create
  250  00001204          	.proc _sem_wait
  251  00001204          	.global _sem_wait
  252  00001204          	_sem_wait:
  253  00001204  44000451	trap	#0x451
  254  00001208  4be00000	jr	r31
  255  0000120c  54000000	nop
  256  00001210          	.endproc _sem_wait
  258  00001210          	.proc _sem_signal
  259  00001210          	.global _sem_signal
  260  00001210          	_sem_signal:
  261  00001210  44000452	trap	#0x452
  262  00001214  4be00000	jr	r31
  263  00001218  54000000	nop
  264  0000121c          	.endproc _sem_signal
  266  0000121c          	.proc _lock_create
  267  0000121c          	.global _lock_create
  268  0000121c          	_lock_create:
  269  0000121c  44000453	trap	#0x453
  270  00001220  4be00000	jr	r31
  271  00001224  54000000	nop
  272  00001228          	.endproc _lock_create
  274  00001228          	.proc _lock_acquire
  275  00001228          	.global _lock_acquire
  276  00001228          	_lock_acquire:
  277  00001228  44000454	trap	#0x454
  278  0000122c  4be00000	jr	r31
  279  00001230  54000000	nop
  280  00001234          	.endproc _lock_acquire
  282  00001234          	.proc _lock_release
  283  00001234          	.global _lock_release
  284  00001234          	_lock_release:
  285  00001234  44000455	trap	#0x455
  286  00001238  4be00000	jr	r31
  287  0000123c  54000000	nop
  288  00001240          	.endproc _lock_release
  290  00001240          	.proc _cond_create
  291  00001240          	.global _cond_create
  292  00001240          	_cond_create:
  293  00001240  44000456	trap	#0x456
  294  00001244  4be00000	jr	r31
  295  00001248  54000000	nop
  296  0000124c          	.endproc _cond_create
  298  0000124c          	.proc _cond_wait
  299  0000124c          	.global _cond_wait
  300  0000124c          	_cond_wait:
  301  0000124c  44000457	trap	#0x457
  302  00001250  4be00000	jr	r31
  303  00001254  54000000	nop
  304  00001258          	.endproc _cond_wait
  306  00001258          	.proc _cond_signal
  307  00001258          	.global _cond_signal
  308  00001258          	_cond_signal:
  309  00001258  44000458	trap	#0x458
  310  0000125c  4be00000	jr	r31
  311  00001260  54000000	nop
  312  00001264          	.endproc _cond_signal
  314  00001264          	.proc _cond_broadcast
  315  00001264          	.global _cond_broadcast
  316  00001264          	_cond_broadcast:
  317  00001264  44000459	trap	#0x459
  318  00001268  4be00000	jr	r31
  319  0000126c  54000000	nop
  320  00001270          	.endproc _cond_broadcast
  322  00001270          	.proc _mbox_create
  323  00001270          	.global _mbox_create
  324  00001270          	_mbox_create:
  325  00001270  44000460	trap	#0x460
  326  00001274  4be00000	jr	r31
  327  00001278  54000000	nop
  328  0000127c          	.endproc _mbox_create
  330  0000127c          	.proc _mbox_open
  331  0000127c          	.global _mbox_open
  332  0000127c          	_mbox_open:
  333  0000127c  44000461	trap	#0x461
  334  00001280  4be00000	jr	r31
  335  00001284  54000000	nop
  336  00001288          	.endproc _mbox_open
  338  00001288          	.proc _mbox_close
  339  00001288          	.global _mbox_close
  340  00001288          	_mbox_close:
  341  00001288  44000462	trap	#0x462
  342  0000128c  4be00000	jr	r31
  343  00001290  54000000	nop
  344  00001294          	.endproc _mbox_close
  346  00001294          	.proc _mbox_send
  347  00001294          	.global _mbox_send
  348  00001294          	_mbox_send:
  349  00001294  44000463	trap	#0x463
  350  00001298  4be00000	jr	r31
  351  0000129c  54000000	nop
  352  000012a0          	.endproc _mbox_send
  354  000012a0          	.proc _mbox_recv
  355  000012a0          	.global _mbox_recv
  356  000012a0          	_mbox_recv:
  357  000012a0  44000464	trap	#0x464
  358  000012a4  4be00000	jr	r31
  359  000012a8  54000000	nop
  360  000012ac          	.endproc _mbox_recv
  362  000012ac          	.proc _sleep
  363  000012ac          	.global _sleep
  364  000012ac          	_sleep:
  365  000012ac  44000465	trap	#0x465
  366  000012b0  4be00000	jr	r31
  367  000012b4  54000000	nop
  368  000012b8          	.endproc _sleep
  370  000012b8          	.proc _yield
  371  000012b8          	.global _yield
  372  000012b8          	_yield:
  373  000012b8  44000466	trap	#0x466
  374  000012bc  4be00000	jr	r31
  375  000012c0  54000000	nop
  376  000012c4          	.endproc _yield
  379  000012c4          	.proc _Exit
  380  000012c4          	.global _Exit
  381  000012c4          	_Exit:
  382  000012c4  44000500	trap	#0x500
  383  000012c8  4be00000	jr	r31
  384  000012cc  54000000	nop
  385  000012d0          	.endproc _Exit
  388  000012d0          	.proc _malloc
  389  000012d0          	.global _malloc
  390  000012d0          	_malloc:
  391  000012d0  44000467	trap	#0x467
  392  000012d4  4be00000	jr	r31
  393  000012d8          	.endproc _malloc
  396  000012d8          	.proc _mfree
  397  000012d8          	.global _mfree
  398  000012d8          	_mfree:
  399  000012d8  44000468	trap	#0x468
  400  000012dc  4be00000	jr	r31
  401  000012e0          	.endproc _mfree
  402                      ; Compiled by GCC
  404  000012e0          	.align 2
  405  000012e0          	.proc _isspace
  406  000012e0          	.global _isspace
  407  000012e0          	_isspace:
  408                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  409  000012e0  afbefffc	sw	-4(r29),r30; push fp
  410  000012e4  001df020	add	r30,r0,r29; fp = sp
  411  000012e8  afbffff8	sw	-8(r29),r31; push ret addr
  412  000012ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  413  000012f0  afa20000	sw	0(r29),r2
  414  000012f4  afa30004	sw	4(r29),r3
  415  000012f8  afa40008	sw	8(r29),r4
  416  000012fc  83c20003	lb	r2,3(r30)
  417  00001300  20010000	addi	r1,r0,#0
  418  00001304  304300ff	andi	r3,r2,#0x00ff
  419  00001308  60640020	seqi	r4,r3,#32
  420  0000130c  1480002c	bnez	r4,L3_LF2
  421  00001310  54000000	nop; delay slot nop
  422  00001314  304300ff	andi	r3,r2,#0x00ff
  423  00001318  60640009	seqi	r4,r3,#9
  424  0000131c  1480001c	bnez	r4,L3_LF2
  425  00001320  54000000	nop; delay slot nop
  426  00001324  304300ff	andi	r3,r2,#0x00ff
  427  00001328  6064000a	seqi	r4,r3,#10
  428  0000132c  1480000c	bnez	r4,L3_LF2
  429  00001330  54000000	nop; delay slot nop
  430  00001334  08000008	j	L2_LF2
  431  00001338  54000000	nop; delay slot nop
  432  0000133c          	L3_LF2:
  433  0000133c  20010001	addi	r1,r0,#1
  434  00001340          	L2_LF2:
  435  00001340  08000004	j	L1_LF2
  436  00001344  54000000	nop; delay slot nop
  437  00001348          	L1_LF2:
  438  00001348  8fa20000	lw	r2,0(r29)
  439  0000134c  8fa30004	lw	r3,4(r29)
  440  00001350  8fa40008	lw	r4,8(r29)
  441  00001354  8fdffff8	lw	r31,-8(r30)
  442  00001358  001ee820	add	r29,r0,r30
  443  0000135c  8fdefffc	lw	r30,-4(r30)
  444  00001360  4be00000	jr	r31
  445  00001364  54000000	nop
  446  00001368          	.endproc _isspace
  447  00001368          	.align 2
  448  00001368          	.proc _isxdigit
  449  00001368          	.global _isxdigit
  450  00001368          	_isxdigit:
  451                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  452  00001368  afbefffc	sw	-4(r29),r30; push fp
  453  0000136c  001df020	add	r30,r0,r29; fp = sp
  454  00001370  afbffff8	sw	-8(r29),r31; push ret addr
  455  00001374  2fbd0018	subui	r29,r29,#24; alloc local storage
  456  00001378  afa20000	sw	0(r29),r2
  457  0000137c  afa30004	sw	4(r29),r3
  458  00001380  afa40008	sw	8(r29),r4
  459  00001384  83c20003	lb	r2,3(r30)
  460  00001388  20010000	addi	r1,r0,#0
  461  0000138c  304300ff	andi	r3,r2,#0x00ff
  462  00001390  6c64002f	sgtui	r4,r3,#47
  463  00001394  1080001c	beqz	r4,L7_LF2
  464  00001398  54000000	nop; delay slot nop
  465  0000139c  304300ff	andi	r3,r2,#0x00ff
  466  000013a0  70640039	sleui	r4,r3,#57
  467  000013a4  1480005c	bnez	r4,L6_LF2
  468  000013a8  54000000	nop; delay slot nop
  469  000013ac  08000004	j	L7_LF2
  470  000013b0  54000000	nop; delay slot nop
  471  000013b4          	L7_LF2:
  472  000013b4  304300ff	andi	r3,r2,#0x00ff
  473  000013b8  6c640060	sgtui	r4,r3,#96
  474  000013bc  1080001c	beqz	r4,L8_LF2
  475  000013c0  54000000	nop; delay slot nop
  476  000013c4  304300ff	andi	r3,r2,#0x00ff
  477  000013c8  70640066	sleui	r4,r3,#102
  478  000013cc  14800034	bnez	r4,L6_LF2
  479  000013d0  54000000	nop; delay slot nop
  480  000013d4  08000004	j	L8_LF2
  481  000013d8  54000000	nop; delay slot nop
  482  000013dc          	L8_LF2:
  483  000013dc  304300ff	andi	r3,r2,#0x00ff
  484  000013e0  6c640040	sgtui	r4,r3,#64
  485  000013e4  10800020	beqz	r4,L5_LF2
  486  000013e8  54000000	nop; delay slot nop
  487  000013ec  304300ff	andi	r3,r2,#0x00ff
  488  000013f0  70640041	sleui	r4,r3,#65
  489  000013f4  1480000c	bnez	r4,L6_LF2
  490  000013f8  54000000	nop; delay slot nop
  491  000013fc  08000008	j	L5_LF2
  492  00001400  54000000	nop; delay slot nop
  493  00001404          	L6_LF2:
  494  00001404  20010001	addi	r1,r0,#1
  495  00001408          	L5_LF2:
  496  00001408  08000004	j	L4_LF2
  497  0000140c  54000000	nop; delay slot nop
  498  00001410          	L4_LF2:
  499  00001410  8fa20000	lw	r2,0(r29)
  500  00001414  8fa30004	lw	r3,4(r29)
  501  00001418  8fa40008	lw	r4,8(r29)
  502  0000141c  8fdffff8	lw	r31,-8(r30)
  503  00001420  001ee820	add	r29,r0,r30
  504  00001424  8fdefffc	lw	r30,-4(r30)
  505  00001428  4be00000	jr	r31
  506  0000142c  54000000	nop
  507  00001430          	.endproc _isxdigit
  508  00001430          	.align 2
  509  00001430          	.proc _dstrcpy
  510  00001430          	.global _dstrcpy
  511  00001430          	_dstrcpy:
  512                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  513  00001430  afbefffc	sw	-4(r29),r30; push fp
  514  00001434  001df020	add	r30,r0,r29; fp = sp
  515  00001438  afbffff8	sw	-8(r29),r31; push ret addr
  516  0000143c  2fbd0018	subui	r29,r29,#24; alloc local storage
  517  00001440  afa20000	sw	0(r29),r2
  518  00001444  afa30004	sw	4(r29),r3
  519  00001448  8fc10000	lw	r1,(r30)
  520  0000144c  afc1fff4	sw	-12(r30),r1
  521  00001450          	L10_LF2:
  522  00001450  8fc10000	lw	r1,(r30)
  523  00001454  20220001	addi	r2,r1,#1
  524  00001458  afc20000	sw	(r30),r2
  525  0000145c  8fc20004	lw	r2,4(r30)
  526  00001460  20430001	addi	r3,r2,#1
  527  00001464  afc30004	sw	4(r30),r3
  528  00001468  80420000	lb	r2,(r2)
  529  0000146c  a0220000	sb	(r1),r2
  530  00001470  a3c2fff3	sb	-13(r30),r2
  531  00001474          	L12_LF2:
  532  00001474  93c1fff3	lbu	r1,-13(r30)
  533  00001478  64220000	snei	r2,r1,#0
  534  0000147c  1440000c	bnez	r2,L13_LF2
  535  00001480  54000000	nop; delay slot nop
  536  00001484  0800000c	j	L11_LF2
  537  00001488  54000000	nop; delay slot nop
  538  0000148c          	L13_LF2:
  539  0000148c  0bffffc0	j	L10_LF2
  540  00001490  54000000	nop; delay slot nop
  541  00001494          	L11_LF2:
  542  00001494  8fc1fff4	lw	r1,-12(r30)
  543  00001498  08000004	j	L9_LF2
  544  0000149c  54000000	nop; delay slot nop
  545  000014a0          	L9_LF2:
  546  000014a0  8fa20000	lw	r2,0(r29)
  547  000014a4  8fa30004	lw	r3,4(r29)
  548  000014a8  8fdffff8	lw	r31,-8(r30)
  549  000014ac  001ee820	add	r29,r0,r30
  550  000014b0  8fdefffc	lw	r30,-4(r30)
  551  000014b4  4be00000	jr	r31
  552  000014b8  54000000	nop
  553  000014bc          	.endproc _dstrcpy
  554  000014bc          	.align 2
  555  000014bc          	.proc _dstrncpy
  556  000014bc          	.global _dstrncpy
  557  000014bc          	_dstrncpy:
  558                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  559  000014bc  afbefffc	sw	-4(r29),r30; push fp
  560  000014c0  001df020	add	r30,r0,r29; fp = sp
  561  000014c4  afbffff8	sw	-8(r29),r31; push ret addr
  562  000014c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  563  000014cc  afa20000	sw	0(r29),r2
  564  000014d0  afa30004	sw	4(r29),r3
  565  000014d4  8fc10000	lw	r1,(r30)
  566  000014d8  afc1fff4	sw	-12(r30),r1
  567  000014dc          	L15_LF2:
  568  000014dc  8fc10008	lw	r1,8(r30)
  569  000014e0  2022ffff	addi	r2,r1,#-1
  570  000014e4  afc20008	sw	8(r30),r2
  571  000014e8  70210000	slei	r1,r1,#0
  572  000014ec  1020000c	beqz	r1,L18_LF2
  573  000014f0  54000000	nop; delay slot nop
  574  000014f4  08000048	j	L16_LF2
  575  000014f8  54000000	nop; delay slot nop
  576  000014fc          	L18_LF2:
  577  000014fc  8fc10000	lw	r1,(r30)
  578  00001500  20220001	addi	r2,r1,#1
  579  00001504  afc20000	sw	(r30),r2
  580  00001508  8fc20004	lw	r2,4(r30)
  581  0000150c  20430001	addi	r3,r2,#1
  582  00001510  afc30004	sw	4(r30),r3
  583  00001514  80420000	lb	r2,(r2)
  584  00001518  a0220000	sb	(r1),r2
  585  0000151c  a3c2fff3	sb	-13(r30),r2
  586  00001520          	L17_LF2:
  587  00001520  93c1fff3	lbu	r1,-13(r30)
  588  00001524  64220000	snei	r2,r1,#0
  589  00001528  1440000c	bnez	r2,L19_LF2
  590  0000152c  54000000	nop; delay slot nop
  591  00001530  0800000c	j	L16_LF2
  592  00001534  54000000	nop; delay slot nop
  593  00001538          	L19_LF2:
  594  00001538  0bffffa0	j	L15_LF2
  595  0000153c  54000000	nop; delay slot nop
  596  00001540          	L16_LF2:
  597  00001540  8fc1fff4	lw	r1,-12(r30)
  598  00001544  08000004	j	L14_LF2
  599  00001548  54000000	nop; delay slot nop
  600  0000154c          	L14_LF2:
  601  0000154c  8fa20000	lw	r2,0(r29)
  602  00001550  8fa30004	lw	r3,4(r29)
  603  00001554  8fdffff8	lw	r31,-8(r30)
  604  00001558  001ee820	add	r29,r0,r30
  605  0000155c  8fdefffc	lw	r30,-4(r30)
  606  00001560  4be00000	jr	r31
  607  00001564  54000000	nop
  608  00001568          	.endproc _dstrncpy
  609  00001568          	.align 2
  610  00001568          	.proc _dstrcat
  611  00001568          	.global _dstrcat
  612  00001568          	_dstrcat:
  613                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  614  00001568  afbefffc	sw	-4(r29),r30; push fp
  615  0000156c  001df020	add	r30,r0,r29; fp = sp
  616  00001570  afbffff8	sw	-8(r29),r31; push ret addr
  617  00001574  2fbd0018	subui	r29,r29,#24; alloc local storage
  618  00001578  afa20000	sw	0(r29),r2
  619  0000157c  8fc10000	lw	r1,(r30)
  620  00001580  afc1fff4	sw	-12(r30),r1
  621  00001584          	L21_LF2:
  622  00001584  8fc10000	lw	r1,(r30)
  623  00001588  90220000	lbu	r2,(r1)
  624  0000158c  64410000	snei	r1,r2,#0
  625  00001590  1420000c	bnez	r1,L23_LF2
  626  00001594  54000000	nop; delay slot nop
  627  00001598  0800001c	j	L22_LF2
  628  0000159c  54000000	nop; delay slot nop
  629  000015a0          	L23_LF2:
  630  000015a0  8fc20000	lw	r2,(r30)
  631  000015a4  20410001	addi	r1,r2,#1
  632  000015a8  00011020	add	r2,r0,r1
  633  000015ac  afc20000	sw	(r30),r2
  634  000015b0  0bffffd0	j	L21_LF2
  635  000015b4  54000000	nop; delay slot nop
  636  000015b8          	L22_LF2:
  637  000015b8  23bdfff8	addi	r29,r29,#-8
  638  000015bc  001d0820	add	r1,r0,r29
  639  000015c0  8fc20000	lw	r2,(r30)
  640  000015c4  ac220000	sw	(r1),r2
  641  000015c8  8fc20004	lw	r2,4(r30)
  642  000015cc  ac220004	sw	4(r1),r2
  643  000015d0  0ffffe5c	jal	_dstrcpy
  644  000015d4  54000000	nop; delay slot nop
  645  000015d8  23bd0008	addi	r29,r29,#8
  646  000015dc  8fc1fff4	lw	r1,-12(r30)
  647  000015e0  08000004	j	L20_LF2
  648  000015e4  54000000	nop; delay slot nop
  649  000015e8          	L20_LF2:
  650  000015e8  8fa20000	lw	r2,0(r29)
  651  000015ec  8fdffff8	lw	r31,-8(r30)
  652  000015f0  001ee820	add	r29,r0,r30
  653  000015f4  8fdefffc	lw	r30,-4(r30)
  654  000015f8  4be00000	jr	r31
  655  000015fc  54000000	nop
  656  00001600          	.endproc _dstrcat
  657  00001600          	.align 2
  658  00001600          	.proc _dstrncmp
  659  00001600          	.global _dstrncmp
  660  00001600          	_dstrncmp:
  661                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  662  00001600  afbefffc	sw	-4(r29),r30; push fp
  663  00001604  001df020	add	r30,r0,r29; fp = sp
  664  00001608  afbffff8	sw	-8(r29),r31; push ret addr
  665  0000160c  2fbd0018	subui	r29,r29,#24; alloc local storage
  666  00001610  afa20000	sw	0(r29),r2
  667  00001614  afa30004	sw	4(r29),r3
  668  00001618  54000000	nop
  669  0000161c  20010000	addi	r1,r0,#0
  670  00001620  afc1fff4	sw	-12(r30),r1
  671  00001624          	L25_LF2:
  672  00001624  8fc1fff4	lw	r1,-12(r30)
  673  00001628  8fc20008	lw	r2,8(r30)
  674  0000162c  0022082a	slt	r1,r1,r2
  675  00001630  1420000c	bnez	r1,L28_LF2
  676  00001634  54000000	nop; delay slot nop
  677  00001638  08000088	j	L26_LF2
  678  0000163c  54000000	nop; delay slot nop
  679  00001640          	L28_LF2:
  680  00001640  8fc10004	lw	r1,4(r30)
  681  00001644  90220000	lbu	r2,(r1)
  682  00001648  64410000	snei	r1,r2,#0
  683  0000164c  14200018	bnez	r1,L29_LF2
  684  00001650  54000000	nop; delay slot nop
  685  00001654  20010000	addi	r1,r0,#0
  686  00001658  080000d8	j	L24_LF2
  687  0000165c  54000000	nop; delay slot nop
  688  00001660  08000028	j	L30_LF2
  689  00001664  54000000	nop; delay slot nop
  690  00001668          	L29_LF2:
  691  00001668  8fc10000	lw	r1,(r30)
  692  0000166c  8fc20004	lw	r2,4(r30)
  693  00001670  90210000	lbu	r1,(r1)
  694  00001674  90420000	lbu	r2,(r2)
  695  00001678  00220829	sne	r1,r1,r2
  696  0000167c  1020000c	beqz	r1,L30_LF2
  697  00001680  54000000	nop; delay slot nop
  698  00001684  0800003c	j	L26_LF2
  699  00001688  54000000	nop; delay slot nop
  700  0000168c          	L31_LF2:
  701  0000168c          	L30_LF2:
  702  0000168c  8fc20000	lw	r2,(r30)
  703  00001690  20410001	addi	r1,r2,#1
  704  00001694  00011020	add	r2,r0,r1
  705  00001698  afc20000	sw	(r30),r2
  706  0000169c  8fc20004	lw	r2,4(r30)
  707  000016a0  20410001	addi	r1,r2,#1
  708  000016a4  00011020	add	r2,r0,r1
  709  000016a8  afc20004	sw	4(r30),r2
  710  000016ac          	L27_LF2:
  711  000016ac  8fc2fff4	lw	r2,-12(r30)
  712  000016b0  20410001	addi	r1,r2,#1
  713  000016b4  00011020	add	r2,r0,r1
  714  000016b8  afc2fff4	sw	-12(r30),r2
  715  000016bc  0bffff64	j	L25_LF2
  716  000016c0  54000000	nop; delay slot nop
  717  000016c4          	L26_LF2:
  718  000016c4  8fc1fff4	lw	r1,-12(r30)
  719  000016c8  8fc20008	lw	r2,8(r30)
  720  000016cc  00220828	seq	r1,r1,r2
  721  000016d0  10200018	beqz	r1,L32_LF2
  722  000016d4  54000000	nop; delay slot nop
  723  000016d8  20010000	addi	r1,r0,#0
  724  000016dc  08000054	j	L24_LF2
  725  000016e0  54000000	nop; delay slot nop
  726  000016e4  0800004c	j	L33_LF2
  727  000016e8  54000000	nop; delay slot nop
  728  000016ec          	L32_LF2:
  729  000016ec  8fc20000	lw	r2,(r30)
  730  000016f0  90410000	lbu	r1,(r2)
  731  000016f4  8fc20004	lw	r2,4(r30)
  732  000016f8  90430000	lbu	r3,(r2)
  733  000016fc  00230822	sub	r1,r1,r3
  734  00001700  74220000	sgei	r2,r1,#0
  735  00001704  10400020	beqz	r2,L34_LF2
  736  00001708  54000000	nop; delay slot nop
  737  0000170c  8fc10000	lw	r1,(r30)
  738  00001710  8fc20004	lw	r2,4(r30)
  739  00001714  90210000	lbu	r1,(r1)
  740  00001718  90420000	lbu	r2,(r2)
  741  0000171c  00220829	sne	r1,r1,r2
  742  00001720  08000008	j	L35_LF2
  743  00001724  54000000	nop; delay slot nop
  744  00001728          	L34_LF2:
  745  00001728  2001ffff	addi	r1,r0,#-1
  746  0000172c          	L35_LF2:
  747  0000172c  08000004	j	L24_LF2
  748  00001730  54000000	nop; delay slot nop
  749  00001734          	L33_LF2:
  750  00001734          	L24_LF2:
  751  00001734  8fa20000	lw	r2,0(r29)
  752  00001738  8fa30004	lw	r3,4(r29)
  753  0000173c  8fdffff8	lw	r31,-8(r30)
  754  00001740  001ee820	add	r29,r0,r30
  755  00001744  8fdefffc	lw	r30,-4(r30)
  756  00001748  4be00000	jr	r31
  757  0000174c  54000000	nop
  758  00001750          	.endproc _dstrncmp
  759  00001750          	.align 2
  760  00001750          	.proc _dstrlen
  761  00001750          	.global _dstrlen
  762  00001750          	_dstrlen:
  763                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  764  00001750  afbefffc	sw	-4(r29),r30; push fp
  765  00001754  001df020	add	r30,r0,r29; fp = sp
  766  00001758  afbffff8	sw	-8(r29),r31; push ret addr
  767  0000175c  2fbd0018	subui	r29,r29,#24; alloc local storage
  768  00001760  afa20000	sw	0(r29),r2
  769  00001764  20010000	addi	r1,r0,#0
  770  00001768  afc1fff4	sw	-12(r30),r1
  771  0000176c          	L37_LF2:
  772  0000176c  8fc10000	lw	r1,(r30)
  773  00001770  20220001	addi	r2,r1,#1
  774  00001774  afc20000	sw	(r30),r2
  775  00001778  90210000	lbu	r1,(r1)
  776  0000177c  64220000	snei	r2,r1,#0
  777  00001780  1440000c	bnez	r2,L39_LF2
  778  00001784  54000000	nop; delay slot nop
  779  00001788  0800001c	j	L38_LF2
  780  0000178c  54000000	nop; delay slot nop
  781  00001790          	L39_LF2:
  782  00001790  8fc2fff4	lw	r2,-12(r30)
  783  00001794  20410001	addi	r1,r2,#1
  784  00001798  00011020	add	r2,r0,r1
  785  0000179c  afc2fff4	sw	-12(r30),r2
  786  000017a0  0bffffc8	j	L37_LF2
  787  000017a4  54000000	nop; delay slot nop
  788  000017a8          	L38_LF2:
  789  000017a8  8fc1fff4	lw	r1,-12(r30)
  790  000017ac  08000004	j	L36_LF2
  791  000017b0  54000000	nop; delay slot nop
  792  000017b4          	L36_LF2:
  793  000017b4  8fa20000	lw	r2,0(r29)
  794  000017b8  8fdffff8	lw	r31,-8(r30)
  795  000017bc  001ee820	add	r29,r0,r30
  796  000017c0  8fdefffc	lw	r30,-4(r30)
  797  000017c4  4be00000	jr	r31
  798  000017c8  54000000	nop
  799  000017cc          	.endproc _dstrlen
  800  000017cc          	.align 2
  801  000017cc          	.proc _dstrstr
  802  000017cc          	.global _dstrstr
  803  000017cc          	_dstrstr:
  804                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  805  000017cc  afbefffc	sw	-4(r29),r30; push fp
  806  000017d0  001df020	add	r30,r0,r29; fp = sp
  807  000017d4  afbffff8	sw	-8(r29),r31; push ret addr
  808  000017d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  809  000017dc  afa20000	sw	0(r29),r2
  810  000017e0  23bdfff8	addi	r29,r29,#-8
  811  000017e4  001d0820	add	r1,r0,r29
  812  000017e8  8fc20004	lw	r2,4(r30)
  813  000017ec  ac220000	sw	(r1),r2
  814  000017f0  0fffff5c	jal	_dstrlen
  815  000017f4  54000000	nop; delay slot nop
  816  000017f8  23bd0008	addi	r29,r29,#8
  817  000017fc  afc1fff4	sw	-12(r30),r1
  818  00001800          	L41_LF2:
  819  00001800  8fc10000	lw	r1,(r30)
  820  00001804  90220000	lbu	r2,(r1)
  821  00001808  64410000	snei	r1,r2,#0
  822  0000180c  1420000c	bnez	r1,L43_LF2
  823  00001810  54000000	nop; delay slot nop
  824  00001814  08000060	j	L42_LF2
  825  00001818  54000000	nop; delay slot nop
  826  0000181c          	L43_LF2:
  827  0000181c  23bdfff0	addi	r29,r29,#-16
  828  00001820  001d0820	add	r1,r0,r29
  829  00001824  8fc20000	lw	r2,(r30)
  830  00001828  ac220000	sw	(r1),r2
  831  0000182c  8fc20004	lw	r2,4(r30)
  832  00001830  ac220004	sw	4(r1),r2
  833  00001834  8fc2fff4	lw	r2,-12(r30)
  834  00001838  ac220008	sw	8(r1),r2
  835  0000183c  0ffffdc0	jal	_dstrncmp
  836  00001840  54000000	nop; delay slot nop
  837  00001844  23bd0010	addi	r29,r29,#16
  838  00001848  64220000	snei	r2,r1,#0
  839  0000184c  14400010	bnez	r2,L44_LF2
  840  00001850  54000000	nop; delay slot nop
  841  00001854  8fc10000	lw	r1,(r30)
  842  00001858  08000028	j	L40_LF2
  843  0000185c  54000000	nop; delay slot nop
  844  00001860          	L44_LF2:
  845  00001860  8fc20000	lw	r2,(r30)
  846  00001864  20410001	addi	r1,r2,#1
  847  00001868  00011020	add	r2,r0,r1
  848  0000186c  afc20000	sw	(r30),r2
  849  00001870  0bffff8c	j	L41_LF2
  850  00001874  54000000	nop; delay slot nop
  851  00001878          	L42_LF2:
  852  00001878  20010000	addi	r1,r0,#0
  853  0000187c  08000004	j	L40_LF2
  854  00001880  54000000	nop; delay slot nop
  855  00001884          	L40_LF2:
  856  00001884  8fa20000	lw	r2,0(r29)
  857  00001888  8fdffff8	lw	r31,-8(r30)
  858  0000188c  001ee820	add	r29,r0,r30
  859  00001890  8fdefffc	lw	r30,-4(r30)
  860  00001894  4be00000	jr	r31
  861  00001898  54000000	nop
  862  0000189c          	.endproc _dstrstr
  863  0000189c          	.align 2
  864  0000189c          	.proc _dmindex
  865  0000189c          	.global _dmindex
  866  0000189c          	_dmindex:
  867                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  868  0000189c  afbefffc	sw	-4(r29),r30; push fp
  869  000018a0  001df020	add	r30,r0,r29; fp = sp
  870  000018a4  afbffff8	sw	-8(r29),r31; push ret addr
  871  000018a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  872  000018ac  afa20000	sw	0(r29),r2
  873  000018b0  54000000	nop
  874  000018b4          	L46_LF2:
  875  000018b4  8fc10000	lw	r1,(r30)
  876  000018b8  90220000	lbu	r2,(r1)
  877  000018bc  64410000	snei	r1,r2,#0
  878  000018c0  1420000c	bnez	r1,L48_LF2
  879  000018c4  54000000	nop; delay slot nop
  880  000018c8  08000070	j	L47_LF2
  881  000018cc  54000000	nop; delay slot nop
  882  000018d0          	L48_LF2:
  883  000018d0  8fc10004	lw	r1,4(r30)
  884  000018d4  afc1fff4	sw	-12(r30),r1
  885  000018d8          	L49_LF2:
  886  000018d8  8fc1fff4	lw	r1,-12(r30)
  887  000018dc  90220000	lbu	r2,(r1)
  888  000018e0  64410000	snei	r1,r2,#0
  889  000018e4  1420000c	bnez	r1,L52_LF2
  890  000018e8  54000000	nop; delay slot nop
  891  000018ec  08000044	j	L50_LF2
  892  000018f0  54000000	nop; delay slot nop
  893  000018f4          	L52_LF2:
  894  000018f4  8fc10000	lw	r1,(r30)
  895  000018f8  8fc2fff4	lw	r2,-12(r30)
  896  000018fc  90210000	lbu	r1,(r1)
  897  00001900  90420000	lbu	r2,(r2)
  898  00001904  00220828	seq	r1,r1,r2
  899  00001908  10200010	beqz	r1,L51_LF2
  900  0000190c  54000000	nop; delay slot nop
  901  00001910  8fc10000	lw	r1,(r30)
  902  00001914  08000030	j	L45_LF2
  903  00001918  54000000	nop; delay slot nop
  904  0000191c          	L53_LF2:
  905  0000191c          	L51_LF2:
  906  0000191c  8fc2fff4	lw	r2,-12(r30)
  907  00001920  20410001	addi	r1,r2,#1
  908  00001924  00011020	add	r2,r0,r1
  909  00001928  afc2fff4	sw	-12(r30),r2
  910  0000192c  0bffffa8	j	L49_LF2
  911  00001930  54000000	nop; delay slot nop
  912  00001934          	L50_LF2:
  913  00001934  0bffff7c	j	L46_LF2
  914  00001938  54000000	nop; delay slot nop
  915  0000193c          	L47_LF2:
  916  0000193c  20010000	addi	r1,r0,#0
  917  00001940  08000004	j	L45_LF2
  918  00001944  54000000	nop; delay slot nop
  919  00001948          	L45_LF2:
  920  00001948  8fa20000	lw	r2,0(r29)
  921  0000194c  8fdffff8	lw	r31,-8(r30)
  922  00001950  001ee820	add	r29,r0,r30
  923  00001954  8fdefffc	lw	r30,-4(r30)
  924  00001958  4be00000	jr	r31
  925  0000195c  54000000	nop
  926  00001960          	.endproc _dmindex
  927  00001960          	.align 2
  928  00001960          	.proc _dindex
  929  00001960          	.global _dindex
  930  00001960          	_dindex:
  931                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  932  00001960  afbefffc	sw	-4(r29),r30; push fp
  933  00001964  001df020	add	r30,r0,r29; fp = sp
  934  00001968  afbffff8	sw	-8(r29),r31; push ret addr
  935  0000196c  2fbd0010	subui	r29,r29,#16; alloc local storage
  936  00001970  afa20000	sw	0(r29),r2
  937  00001974  54000000	nop
  938  00001978          	L55_LF2:
  939  00001978  8fc10000	lw	r1,(r30)
  940  0000197c  90220000	lbu	r2,(r1)
  941  00001980  64410000	snei	r1,r2,#0
  942  00001984  1420000c	bnez	r1,L57_LF2
  943  00001988  54000000	nop; delay slot nop
  944  0000198c  08000040	j	L56_LF2
  945  00001990  54000000	nop; delay slot nop
  946  00001994          	L57_LF2:
  947  00001994  8fc10000	lw	r1,(r30)
  948  00001998  90220000	lbu	r2,(r1)
  949  0000199c  8fc10004	lw	r1,4(r30)
  950  000019a0  00411028	seq	r2,r2,r1
  951  000019a4  10400010	beqz	r2,L58_LF2
  952  000019a8  54000000	nop; delay slot nop
  953  000019ac  8fc10000	lw	r1,(r30)
  954  000019b0  08000028	j	L54_LF2
  955  000019b4  54000000	nop; delay slot nop
  956  000019b8          	L58_LF2:
  957  000019b8  8fc20000	lw	r2,(r30)
  958  000019bc  20410001	addi	r1,r2,#1
  959  000019c0  00011020	add	r2,r0,r1
  960  000019c4  afc20000	sw	(r30),r2
  961  000019c8  0bffffac	j	L55_LF2
  962  000019cc  54000000	nop; delay slot nop
  963  000019d0          	L56_LF2:
  964  000019d0  20010000	addi	r1,r0,#0
  965  000019d4  08000004	j	L54_LF2
  966  000019d8  54000000	nop; delay slot nop
  967  000019dc          	L54_LF2:
  968  000019dc  8fa20000	lw	r2,0(r29)
  969  000019e0  8fdffff8	lw	r31,-8(r30)
  970  000019e4  001ee820	add	r29,r0,r30
  971  000019e8  8fdefffc	lw	r30,-4(r30)
  972  000019ec  4be00000	jr	r31
  973  000019f0  54000000	nop
  974  000019f4          	.endproc _dindex
  975  000019f4          	.align 2
  976  000019f4          	.proc _ditoa
  977  000019f4          	.global _ditoa
  978  000019f4          	_ditoa:
  979                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  980  000019f4  afbefffc	sw	-4(r29),r30; push fp
  981  000019f8  001df020	add	r30,r0,r29; fp = sp
  982  000019fc  afbffff8	sw	-8(r29),r31; push ret addr
  983  00001a00  2fbd0018	subui	r29,r29,#24; alloc local storage
  984  00001a04  afa20000	sw	0(r29),r2
  985  00001a08  afa30004	sw	4(r29),r3
  986  00001a0c  8fc10000	lw	r1,(r30)
  987  00001a10  68220000	slti	r2,r1,#0
  988  00001a14  1040002c	beqz	r2,L60_LF2
  989  00001a18  54000000	nop; delay slot nop
  990  00001a1c  8fc10004	lw	r1,4(r30)
  991  00001a20  20220001	addi	r2,r1,#1
  992  00001a24  afc20004	sw	4(r30),r2
  993  00001a28  2002002d	addi	r2,r0,(#0x2d)&0xff
  994  00001a2c  a0220000	sb	(r1),r2
  995  00001a30  8fc10000	lw	r1,(r30)
  996  00001a34  00011022	sub	r2,r0,r1
  997  00001a38  afc20000	sw	(r30),r2
  998  00001a3c  08000118	j	L61_LF2
  999  00001a40  54000000	nop; delay slot nop
 1000  00001a44          	L60_LF2:
 1001  00001a44  8fc10000	lw	r1,(r30)
 1002  00001a48  64220000	snei	r2,r1,#0
 1003  00001a4c  14400020	bnez	r2,L62_LF2
 1004  00001a50  54000000	nop; delay slot nop
 1005  00001a54  8fc10004	lw	r1,4(r30)
 1006  00001a58  20220001	addi	r2,r1,#1
 1007  00001a5c  afc20004	sw	4(r30),r2
 1008  00001a60  20020030	addi	r2,r0,(#0x30)&0xff
 1009  00001a64  a0220000	sb	(r1),r2
 1010  00001a68  080000ec	j	L61_LF2
 1011  00001a6c  54000000	nop; delay slot nop
 1012  00001a70          	L62_LF2:
 1013  00001a70  20010001	addi	r1,r0,#1
 1014  00001a74  afc1fff4	sw	-12(r30),r1
 1015  00001a78          	L64_LF2:
 1016  00001a78  8fc1fff4	lw	r1,-12(r30)
 1017  00001a7c  8fc20000	lw	r2,(r30)
 1018  00001a80  0022082c	sle	r1,r1,r2
 1019  00001a84  1420000c	bnez	r1,L66_LF2
 1020  00001a88  54000000	nop; delay slot nop
 1021  00001a8c  08000024	j	L65_LF2
 1022  00001a90  54000000	nop; delay slot nop
 1023  00001a94          	L67_LF2:
 1024  00001a94          	L66_LF2:
 1025  00001a94  8fc1fff4	lw	r1,-12(r30)
 1026  00001a98  00011820	add	r3,r0,r1
 1027  00001a9c  50620002	slli	r2,r3,#0x2
 1028  00001aa0  00411020	add	r2,r2,r1
 1029  00001aa4  50410001	slli	r1,r2,#0x1
 1030  00001aa8  afc1fff4	sw	-12(r30),r1
 1031  00001aac  0bffffc8	j	L64_LF2
 1032  00001ab0  54000000	nop; delay slot nop
 1033  00001ab4          	L65_LF2:
 1034  00001ab4  54000000	nop
 1035  00001ab8          	L68_LF2:
 1036  00001ab8  8fc1fff4	lw	r1,-12(r30)
 1037  00001abc  2002000a	addi	r2,r0,#10
 1038  00001ac0  00200035	movi2fp	f0,r1
 1039  00001ac4  00400835	movi2fp	f1,r2
 1040  00001ac8  0401000f	div	f0,f0,f1
 1041  00001acc  00000834	movfp2i	r1,f0
 1042  00001ad0  afc1fff4	sw	-12(r30),r1
 1043  00001ad4  8fc10004	lw	r1,4(r30)
 1044  00001ad8  20220001	addi	r2,r1,#1
 1045  00001adc  afc20004	sw	4(r30),r2
 1046  00001ae0  8fc20000	lw	r2,(r30)
 1047  00001ae4  8fc3fff4	lw	r3,-12(r30)
 1048  00001ae8  00400035	movi2fp	f0,r2
 1049  00001aec  00600835	movi2fp	f1,r3
 1050  00001af0  0401000f	div	f0,f0,f1
 1051  00001af4  00001034	movfp2i	r2,f0
 1052  00001af8  00021820	add	r3,r0,r2
 1053  00001afc  20620030	addi	r2,r3,#48
 1054  00001b00  a0220000	sb	(r1),r2
 1055  00001b04  8fc10000	lw	r1,(r30)
 1056  00001b08  8fc3fff4	lw	r3,-12(r30)
 1057  00001b0c  00200035	movi2fp	f0,r1
 1058  00001b10  00600835	movi2fp	f1,r3
 1059  00001b14  0401000f	div	f0,f0,f1
 1060  00001b18  00001034	movfp2i	r2,f0
 1061  00001b1c  8fc3fff4	lw	r3,-12(r30)
 1062  00001b20  00400035	movi2fp	f0,r2
 1063  00001b24  00600835	movi2fp	f1,r3
 1064  00001b28  0401000e	mult	f0,f0,f1
 1065  00001b2c  00001034	movfp2i	r2,f0
 1066  00001b30  00220822	sub	r1,r1,r2
 1067  00001b34  afc10000	sw	(r30),r1
 1068  00001b38          	L70_LF2:
 1069  00001b38  8fc1fff4	lw	r1,-12(r30)
 1070  00001b3c  6c220001	sgti	r2,r1,#1
 1071  00001b40  1440000c	bnez	r2,L71_LF2
 1072  00001b44  54000000	nop; delay slot nop
 1073  00001b48  0800000c	j	L61_LF2
 1074  00001b4c  54000000	nop; delay slot nop
 1075  00001b50          	L71_LF2:
 1076  00001b50  0bffff64	j	L68_LF2
 1077  00001b54  54000000	nop; delay slot nop
 1078  00001b58          	L69_LF2:
 1079  00001b58          	L63_LF2:
 1080  00001b58          	L61_LF2:
 1081  00001b58  8fc10004	lw	r1,4(r30)
 1082  00001b5c  20020000	addi	r2,r0,(#0x0)&0xff
 1083  00001b60  a0220000	sb	(r1),r2
 1084  00001b64          	L59_LF2:
 1085  00001b64  8fa20000	lw	r2,0(r29)
 1086  00001b68  8fa30004	lw	r3,4(r29)
 1087  00001b6c  8fdffff8	lw	r31,-8(r30)
 1088  00001b70  001ee820	add	r29,r0,r30
 1089  00001b74  8fdefffc	lw	r30,-4(r30)
 1090  00001b78  4be00000	jr	r31
 1091  00001b7c  54000000	nop
 1092  00001b80          	.endproc _ditoa
 1093  00001b80          	.align 2
 1094  00001b80          	.proc _dstrtol
 1095  00001b80          	.global _dstrtol
 1096  00001b80          	_dstrtol:
 1097                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1098  00001b80  afbefffc	sw	-4(r29),r30; push fp
 1099  00001b84  001df020	add	r30,r0,r29; fp = sp
 1100  00001b88  afbffff8	sw	-8(r29),r31; push ret addr
 1101  00001b8c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1102  00001b90  afa20000	sw	0(r29),r2
 1103  00001b94  20010000	addi	r1,r0,#0
 1104  00001b98  afc1fff4	sw	-12(r30),r1
 1105  00001b9c          	L73_LF2:
 1106  00001b9c  8fc10000	lw	r1,(r30)
 1107  00001ba0  90220000	lbu	r2,(r1)
 1108  00001ba4  60410020	seqi	r1,r2,#32
 1109  00001ba8  14200034	bnez	r1,L75_LF2
 1110  00001bac  54000000	nop; delay slot nop
 1111  00001bb0  8fc10000	lw	r1,(r30)
 1112  00001bb4  90220000	lbu	r2,(r1)
 1113  00001bb8  60410009	seqi	r1,r2,#9
 1114  00001bbc  14200020	bnez	r1,L75_LF2
 1115  00001bc0  54000000	nop; delay slot nop
 1116  00001bc4  8fc10000	lw	r1,(r30)
 1117  00001bc8  90220000	lbu	r2,(r1)
 1118  00001bcc  6041000a	seqi	r1,r2,#10
 1119  00001bd0  1420000c	bnez	r1,L75_LF2
 1120  00001bd4  54000000	nop; delay slot nop
 1121  00001bd8  0800001c	j	L74_LF2
 1122  00001bdc  54000000	nop; delay slot nop
 1123  00001be0          	L75_LF2:
 1124  00001be0  8fc20000	lw	r2,(r30)
 1125  00001be4  20410001	addi	r1,r2,#1
 1126  00001be8  00011020	add	r2,r0,r1
 1127  00001bec  afc20000	sw	(r30),r2
 1128  00001bf0  0bffffa8	j	L73_LF2
 1129  00001bf4  54000000	nop; delay slot nop
 1130  00001bf8          	L74_LF2:
 1131  00001bf8  8fc10004	lw	r1,4(r30)
 1132  00001bfc  64220000	snei	r2,r1,#0
 1133  00001c00  10400010	beqz	r2,L76_LF2
 1134  00001c04  54000000	nop; delay slot nop
 1135  00001c08  8fc10004	lw	r1,4(r30)
 1136  00001c0c  8fc20000	lw	r2,(r30)
 1137  00001c10  ac220000	sw	(r1),r2
 1138  00001c14          	L76_LF2:
 1139  00001c14  8fc10000	lw	r1,(r30)
 1140  00001c18  90220000	lbu	r2,(r1)
 1141  00001c1c  64410000	snei	r1,r2,#0
 1142  00001c20  14200010	bnez	r1,L77_LF2
 1143  00001c24  54000000	nop; delay slot nop
 1144  00001c28  8fc1fff4	lw	r1,-12(r30)
 1145  00001c2c  08000294	j	L72_LF2
 1146  00001c30  54000000	nop; delay slot nop
 1147  00001c34          	L77_LF2:
 1148  00001c34  8fc10000	lw	r1,(r30)
 1149  00001c38  90220000	lbu	r2,(r1)
 1150  00001c3c  6041002d	seqi	r1,r2,#45
 1151  00001c40  10200024	beqz	r1,L78_LF2
 1152  00001c44  54000000	nop; delay slot nop
 1153  00001c48  2001ffff	addi	r1,r0,#-1
 1154  00001c4c  afc1ffec	sw	-20(r30),r1
 1155  00001c50  8fc20000	lw	r2,(r30)
 1156  00001c54  20410001	addi	r1,r2,#1
 1157  00001c58  00011020	add	r2,r0,r1
 1158  00001c5c  afc20000	sw	(r30),r2
 1159  00001c60  0800000c	j	L79_LF2
 1160  00001c64  54000000	nop; delay slot nop
 1161  00001c68          	L78_LF2:
 1162  00001c68  20010001	addi	r1,r0,#1
 1163  00001c6c  afc1ffec	sw	-20(r30),r1
 1164  00001c70          	L79_LF2:
 1165  00001c70  8fc10008	lw	r1,8(r30)
 1166  00001c74  64220000	snei	r2,r1,#0
 1167  00001c78  14400090	bnez	r2,L80_LF2
 1168  00001c7c  54000000	nop; delay slot nop
 1169  00001c80  8fc10000	lw	r1,(r30)
 1170  00001c84  90220000	lbu	r2,(r1)
 1171  00001c88  60410030	seqi	r1,r2,#48
 1172  00001c8c  10200074	beqz	r1,L81_LF2
 1173  00001c90  54000000	nop; delay slot nop
 1174  00001c94  8fc20000	lw	r2,(r30)
 1175  00001c98  20410001	addi	r1,r2,#1
 1176  00001c9c  00011020	add	r2,r0,r1
 1177  00001ca0  afc20000	sw	(r30),r2
 1178  00001ca4  8fc10000	lw	r1,(r30)
 1179  00001ca8  90220000	lbu	r2,(r1)
 1180  00001cac  60410078	seqi	r1,r2,#120
 1181  00001cb0  14200020	bnez	r1,L83_LF2
 1182  00001cb4  54000000	nop; delay slot nop
 1183  00001cb8  8fc10000	lw	r1,(r30)
 1184  00001cbc  90220000	lbu	r2,(r1)
 1185  00001cc0  60410058	seqi	r1,r2,#88
 1186  00001cc4  1420000c	bnez	r1,L83_LF2
 1187  00001cc8  54000000	nop; delay slot nop
 1188  00001ccc  08000024	j	L82_LF2
 1189  00001cd0  54000000	nop; delay slot nop
 1190  00001cd4          	L83_LF2:
 1191  00001cd4  20010010	addi	r1,r0,#16
 1192  00001cd8  afc10008	sw	8(r30),r1
 1193  00001cdc  8fc20000	lw	r2,(r30)
 1194  00001ce0  20410001	addi	r1,r2,#1
 1195  00001ce4  00011020	add	r2,r0,r1
 1196  00001ce8  afc20000	sw	(r30),r2
 1197  00001cec  0800000c	j	L84_LF2
 1198  00001cf0  54000000	nop; delay slot nop
 1199  00001cf4          	L82_LF2:
 1200  00001cf4  20010008	addi	r1,r0,#8
 1201  00001cf8  afc10008	sw	8(r30),r1
 1202  00001cfc          	L84_LF2:
 1203  00001cfc  0800000c	j	L80_LF2
 1204  00001d00  54000000	nop; delay slot nop
 1205  00001d04          	L81_LF2:
 1206  00001d04  2001000a	addi	r1,r0,#10
 1207  00001d08  afc10008	sw	8(r30),r1
 1208  00001d0c          	L85_LF2:
 1209  00001d0c          	L80_LF2:
 1210  00001d0c  8fc10008	lw	r1,8(r30)
 1211  00001d10  70220000	slei	r2,r1,#0
 1212  00001d14  1440001c	bnez	r2,L87_LF2
 1213  00001d18  54000000	nop; delay slot nop
 1214  00001d1c  8fc10008	lw	r1,8(r30)
 1215  00001d20  6c220010	sgti	r2,r1,#16
 1216  00001d24  1440000c	bnez	r2,L87_LF2
 1217  00001d28  54000000	nop; delay slot nop
 1218  00001d2c  08000010	j	L86_LF2
 1219  00001d30  54000000	nop; delay slot nop
 1220  00001d34          	L87_LF2:
 1221  00001d34  8fc1fff4	lw	r1,-12(r30)
 1222  00001d38  08000188	j	L72_LF2
 1223  00001d3c  54000000	nop; delay slot nop
 1224  00001d40          	L86_LF2:
 1225  00001d40  54000000	nop
 1226  00001d44          	L88_LF2:
 1227  00001d44  8fc10000	lw	r1,(r30)
 1228  00001d48  90220000	lbu	r2,(r1)
 1229  00001d4c  6c41002f	sgtui	r1,r2,#47
 1230  00001d50  10200030	beqz	r1,L91_LF2
 1231  00001d54  54000000	nop; delay slot nop
 1232  00001d58  8fc10000	lw	r1,(r30)
 1233  00001d5c  90220000	lbu	r2,(r1)
 1234  00001d60  70410039	sleui	r1,r2,#57
 1235  00001d64  1020001c	beqz	r1,L91_LF2
 1236  00001d68  54000000	nop; delay slot nop
 1237  00001d6c  8fc10000	lw	r1,(r30)
 1238  00001d70  90220000	lbu	r2,(r1)
 1239  00001d74  2041ffd0	addi	r1,r2,#-48
 1240  00001d78  afc1fff0	sw	-16(r30),r1
 1241  00001d7c  0800008c	j	L92_LF2
 1242  00001d80  54000000	nop; delay slot nop
 1243  00001d84          	L91_LF2:
 1244  00001d84  8fc10000	lw	r1,(r30)
 1245  00001d88  90220000	lbu	r2,(r1)
 1246  00001d8c  6c410060	sgtui	r1,r2,#96
 1247  00001d90  10200030	beqz	r1,L93_LF2
 1248  00001d94  54000000	nop; delay slot nop
 1249  00001d98  8fc10000	lw	r1,(r30)
 1250  00001d9c  90220000	lbu	r2,(r1)
 1251  00001da0  7041007a	sleui	r1,r2,#122
 1252  00001da4  1020001c	beqz	r1,L93_LF2
 1253  00001da8  54000000	nop; delay slot nop
 1254  00001dac  8fc10000	lw	r1,(r30)
 1255  00001db0  90220000	lbu	r2,(r1)
 1256  00001db4  2041ffa9	addi	r1,r2,#-87
 1257  00001db8  afc1fff0	sw	-16(r30),r1
 1258  00001dbc  0800004c	j	L92_LF2
 1259  00001dc0  54000000	nop; delay slot nop
 1260  00001dc4          	L93_LF2:
 1261  00001dc4  8fc10000	lw	r1,(r30)
 1262  00001dc8  90220000	lbu	r2,(r1)
 1263  00001dcc  6c410040	sgtui	r1,r2,#64
 1264  00001dd0  10200030	beqz	r1,L95_LF2
 1265  00001dd4  54000000	nop; delay slot nop
 1266  00001dd8  8fc10000	lw	r1,(r30)
 1267  00001ddc  90220000	lbu	r2,(r1)
 1268  00001de0  7041005a	sleui	r1,r2,#90
 1269  00001de4  1020001c	beqz	r1,L95_LF2
 1270  00001de8  54000000	nop; delay slot nop
 1271  00001dec  8fc10000	lw	r1,(r30)
 1272  00001df0  90220000	lbu	r2,(r1)
 1273  00001df4  2041ffc9	addi	r1,r2,#-55
 1274  00001df8  afc1fff0	sw	-16(r30),r1
 1275  00001dfc  0800000c	j	L92_LF2
 1276  00001e00  54000000	nop; delay slot nop
 1277  00001e04          	L95_LF2:
 1278  00001e04  200103e8	addi	r1,r0,#1000
 1279  00001e08  afc1fff0	sw	-16(r30),r1
 1280  00001e0c          	L96_LF2:
 1281  00001e0c          	L94_LF2:
 1282  00001e0c          	L92_LF2:
 1283  00001e0c  8fc1fff0	lw	r1,-16(r30)
 1284  00001e10  8fc20008	lw	r2,8(r30)
 1285  00001e14  0022082a	slt	r1,r1,r2
 1286  00001e18  10200040	beqz	r1,L90_LF2
 1287  00001e1c  54000000	nop; delay slot nop
 1288  00001e20  8fc1fff4	lw	r1,-12(r30)
 1289  00001e24  8fc20008	lw	r2,8(r30)
 1290  00001e28  00200035	movi2fp	f0,r1
 1291  00001e2c  00400835	movi2fp	f1,r2
 1292  00001e30  0401000e	mult	f0,f0,f1
 1293  00001e34  00000834	movfp2i	r1,f0
 1294  00001e38  afc1fff4	sw	-12(r30),r1
 1295  00001e3c  8fc1fff4	lw	r1,-12(r30)
 1296  00001e40  8fc2fff0	lw	r2,-16(r30)
 1297  00001e44  00220820	add	r1,r1,r2
 1298  00001e48  afc1fff4	sw	-12(r30),r1
 1299  00001e4c  8fc20000	lw	r2,(r30)
 1300  00001e50  20410001	addi	r1,r2,#1
 1301  00001e54  00011020	add	r2,r0,r1
 1302  00001e58  afc20000	sw	(r30),r2
 1303  00001e5c          	L97_LF2:
 1304  00001e5c          	L90_LF2:
 1305  00001e5c  8fc1fff0	lw	r1,-16(r30)
 1306  00001e60  8fc20008	lw	r2,8(r30)
 1307  00001e64  0022082a	slt	r1,r1,r2
 1308  00001e68  1420000c	bnez	r1,L98_LF2
 1309  00001e6c  54000000	nop; delay slot nop
 1310  00001e70  0800000c	j	L89_LF2
 1311  00001e74  54000000	nop; delay slot nop
 1312  00001e78          	L98_LF2:
 1313  00001e78  0bfffec8	j	L88_LF2
 1314  00001e7c  54000000	nop; delay slot nop
 1315  00001e80          	L89_LF2:
 1316  00001e80  8fc10004	lw	r1,4(r30)
 1317  00001e84  64220000	snei	r2,r1,#0
 1318  00001e88  10400010	beqz	r2,L99_LF2
 1319  00001e8c  54000000	nop; delay slot nop
 1320  00001e90  8fc10004	lw	r1,4(r30)
 1321  00001e94  8fc20000	lw	r2,(r30)
 1322  00001e98  ac220000	sw	(r1),r2
 1323  00001e9c          	L99_LF2:
 1324  00001e9c  8fc1fff4	lw	r1,-12(r30)
 1325  00001ea0  8fc2ffec	lw	r2,-20(r30)
 1326  00001ea4  00200035	movi2fp	f0,r1
 1327  00001ea8  00400835	movi2fp	f1,r2
 1328  00001eac  0401000e	mult	f0,f0,f1
 1329  00001eb0  00000834	movfp2i	r1,f0
 1330  00001eb4  afc1fff4	sw	-12(r30),r1
 1331  00001eb8  8fc1fff4	lw	r1,-12(r30)
 1332  00001ebc  08000004	j	L72_LF2
 1333  00001ec0  54000000	nop; delay slot nop
 1334  00001ec4          	L72_LF2:
 1335  00001ec4  8fa20000	lw	r2,0(r29)
 1336  00001ec8  8fdffff8	lw	r31,-8(r30)
 1337  00001ecc  001ee820	add	r29,r0,r30
 1338  00001ed0  8fdefffc	lw	r30,-4(r30)
 1339  00001ed4  4be00000	jr	r31
 1340  00001ed8  54000000	nop
 1341  00001edc          	.endproc _dstrtol
 1342  00001edc          	.align 2
 1343  00001edc          	.proc _bcopy
 1344  00001edc          	.global _bcopy
 1345  00001edc          	_bcopy:
 1346                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1347  00001edc  afbefffc	sw	-4(r29),r30; push fp
 1348  00001ee0  001df020	add	r30,r0,r29; fp = sp
 1349  00001ee4  afbffff8	sw	-8(r29),r31; push ret addr
 1350  00001ee8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1351  00001eec  afa20000	sw	0(r29),r2
 1352  00001ef0  afa30004	sw	4(r29),r3
 1353  00001ef4  54000000	nop
 1354  00001ef8          	L101_LF2:
 1355  00001ef8  8fc10008	lw	r1,8(r30)
 1356  00001efc  2022ffff	addi	r2,r1,#-1
 1357  00001f00  afc20008	sw	8(r30),r2
 1358  00001f04  6c210000	sgti	r1,r1,#0
 1359  00001f08  1420000c	bnez	r1,L103_LF2
 1360  00001f0c  54000000	nop; delay slot nop
 1361  00001f10  0800002c	j	L102_LF2
 1362  00001f14  54000000	nop; delay slot nop
 1363  00001f18          	L103_LF2:
 1364  00001f18  8fc10004	lw	r1,4(r30)
 1365  00001f1c  20220001	addi	r2,r1,#1
 1366  00001f20  afc20004	sw	4(r30),r2
 1367  00001f24  8fc20000	lw	r2,(r30)
 1368  00001f28  20430001	addi	r3,r2,#1
 1369  00001f2c  afc30000	sw	(r30),r3
 1370  00001f30  80420000	lb	r2,(r2)
 1371  00001f34  a0220000	sb	(r1),r2
 1372  00001f38  0bffffbc	j	L101_LF2
 1373  00001f3c  54000000	nop; delay slot nop
 1374  00001f40          	L102_LF2:
 1375  00001f40          	L100_LF2:
 1376  00001f40  8fa20000	lw	r2,0(r29)
 1377  00001f44  8fa30004	lw	r3,4(r29)
 1378  00001f48  8fdffff8	lw	r31,-8(r30)
 1379  00001f4c  001ee820	add	r29,r0,r30
 1380  00001f50  8fdefffc	lw	r30,-4(r30)
 1381  00001f54  4be00000	jr	r31
 1382  00001f58  54000000	nop
 1383  00001f5c          	.endproc _bcopy
 1384  00001f5c          	.align 2
 1385  00001f5c          	.proc _bzero
 1386  00001f5c          	.global _bzero
 1387  00001f5c          	_bzero:
 1388                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1389  00001f5c  afbefffc	sw	-4(r29),r30; push fp
 1390  00001f60  001df020	add	r30,r0,r29; fp = sp
 1391  00001f64  afbffff8	sw	-8(r29),r31; push ret addr
 1392  00001f68  2fbd0010	subui	r29,r29,#16; alloc local storage
 1393  00001f6c  afa20000	sw	0(r29),r2
 1394  00001f70  54000000	nop
 1395  00001f74          	L105_LF2:
 1396  00001f74  8fc10004	lw	r1,4(r30)
 1397  00001f78  2022ffff	addi	r2,r1,#-1
 1398  00001f7c  afc20004	sw	4(r30),r2
 1399  00001f80  6c210000	sgti	r1,r1,#0
 1400  00001f84  1420000c	bnez	r1,L107_LF2
 1401  00001f88  54000000	nop; delay slot nop
 1402  00001f8c  08000020	j	L106_LF2
 1403  00001f90  54000000	nop; delay slot nop
 1404  00001f94          	L107_LF2:
 1405  00001f94  8fc10000	lw	r1,(r30)
 1406  00001f98  20220001	addi	r2,r1,#1
 1407  00001f9c  afc20000	sw	(r30),r2
 1408  00001fa0  20020000	addi	r2,r0,(#0x0)&0xff
 1409  00001fa4  a0220000	sb	(r1),r2
 1410  00001fa8  0bffffc8	j	L105_LF2
 1411  00001fac  54000000	nop; delay slot nop
 1412  00001fb0          	L106_LF2:
 1413  00001fb0          	L104_LF2:
 1414  00001fb0  8fa20000	lw	r2,0(r29)
 1415  00001fb4  8fdffff8	lw	r31,-8(r30)
 1416  00001fb8  001ee820	add	r29,r0,r30
 1417  00001fbc  8fdefffc	lw	r30,-4(r30)
 1418  00001fc0  4be00000	jr	r31
 1419  00001fc4  54000000	nop
 1420  00001fc8          	.endproc _bzero
 1421  00001fc8          	.align 2
 1422  00001fc8          	.proc _min
 1423  00001fc8          	.global _min
 1424  00001fc8          	_min:
 1425                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1426  00001fc8  afbefffc	sw	-4(r29),r30; push fp
 1427  00001fcc  001df020	add	r30,r0,r29; fp = sp
 1428  00001fd0  afbffff8	sw	-8(r29),r31; push ret addr
 1429  00001fd4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1430  00001fd8  afa20000	sw	0(r29),r2
 1431  00001fdc  afa30004	sw	4(r29),r3
 1432  00001fe0  8fc10000	lw	r1,(r30)
 1433  00001fe4  8fc20004	lw	r2,4(r30)
 1434  00001fe8  0022182c	sle	r3,r1,r2
 1435  00001fec  14600008	bnez	r3,L109_LF2
 1436  00001ff0  54000000	nop; delay slot nop
 1437  00001ff4  8fc10004	lw	r1,4(r30)
 1438  00001ff8          	L109_LF2:
 1439  00001ff8  08000004	j	L108_LF2
 1440  00001ffc  54000000	nop; delay slot nop
 1441  00002000          	L108_LF2:
 1442  00002000  8fa20000	lw	r2,0(r29)
 1443  00002004  8fa30004	lw	r3,4(r29)
 1444  00002008  8fdffff8	lw	r31,-8(r30)
 1445  0000200c  001ee820	add	r29,r0,r30
 1446  00002010  8fdefffc	lw	r30,-4(r30)
 1447  00002014  4be00000	jr	r31
 1448  00002018  54000000	nop
 1449  0000201c          	.endproc _min
 1450  0000201c          	.align 2
 1451  0000201c          	.proc _max
 1452  0000201c          	.global _max
 1453  0000201c          	_max:
 1454                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1455  0000201c  afbefffc	sw	-4(r29),r30; push fp
 1456  00002020  001df020	add	r30,r0,r29; fp = sp
 1457  00002024  afbffff8	sw	-8(r29),r31; push ret addr
 1458  00002028  2fbd0010	subui	r29,r29,#16; alloc local storage
 1459  0000202c  afa20000	sw	0(r29),r2
 1460  00002030  afa30004	sw	4(r29),r3
 1461  00002034  8fc10000	lw	r1,(r30)
 1462  00002038  8fc20004	lw	r2,4(r30)
 1463  0000203c  0022182d	sge	r3,r1,r2
 1464  00002040  14600008	bnez	r3,L111_LF2
 1465  00002044  54000000	nop; delay slot nop
 1466  00002048  8fc10004	lw	r1,4(r30)
 1467  0000204c          	L111_LF2:
 1468  0000204c  08000004	j	L110_LF2
 1469  00002050  54000000	nop; delay slot nop
 1470  00002054          	L110_LF2:
 1471  00002054  8fa20000	lw	r2,0(r29)
 1472  00002058  8fa30004	lw	r3,4(r29)
 1473  0000205c  8fdffff8	lw	r31,-8(r30)
 1474  00002060  001ee820	add	r29,r0,r30
 1475  00002064  8fdefffc	lw	r30,-4(r30)
 1476  00002068  4be00000	jr	r31
 1477  0000206c  54000000	nop
 1478  00002070          	.endproc _max
 1479                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1480                      ;;;
 1481                      ;;; Most of the traps are called in files from libtraps.
 1484  00002070          	.align 2
 1485  00002070          	.proc _exit
 1486  00002070          	.global _exit
 1487  00002070          	_exit:
 1488  00002070  44000300	trap	#0x300
 1489  00002074  4be00000	jr	r31
 1490  00002078  54000000	nop
 1491  0000207c          	.endproc _exit
 1493                      ; for the benefit of gcc.
 1494  0000207c          	.proc ___main
 1495  0000207c          	.global ___main
 1496  0000207c          	___main:
 1497  0000207c  4be00000	jr	r31
 1498  00002080  54000000	nop
 1499  00002084          	.endproc ___main
 1500  00002084          	.text
 1501  00002084          	.global _etext
 1502  00002084          	_etext:
 1503  00002084          	.align 3
 1504  00002088          	.data
 1505  00003060          	.global _edata
 1506  00003060          	_edata:
