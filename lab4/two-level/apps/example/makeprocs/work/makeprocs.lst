 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 974
    4                      ; Text size: 4736
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  41667465	.ascii "After allocating 4KB character buffer, new variable has address : 0x%x"
   82  00003004  7220616c	
   82  00003008  6c6f6361	
   82  0000300c  74696e67	
   82  00003010  20344b42	
   82  00003014  20636861	
   82  00003018  72616374	
   82  0000301c  65722062	
   82  00003020  75666665	
   82  00003024  722c206e	
   82  00003028  65772076	
   82  0000302c  61726961	
   82  00003030  626c6520	
   82  00003034  68617320	
   82  00003038  61646472	
   82  0000303c  65737320	
   82  00003040  3a203078	
   82  00003044  2578    	
   83  00003046  0a00    	.ascii "\n\000"
   84  00003048          	.text
   85  000010d4          	.align 2
   86  000010d4          	.proc _consume_userstack
   87  000010d4          	.global _consume_userstack
   88  000010d4          	_consume_userstack:
   89                      ;  Function 'consume_userstack'; 4104 bytes of locals, 1 regs to save.
   90  000010d4  afbefffc	sw	-4(r29),r30; push fp
   91  000010d8  001df020	add	r30,r0,r29; fp = sp
   92  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   93  000010e0  2fbd1018	subui	r29,r29,#4120; alloc local storage
   94  000010e4  afa20000	sw	0(r29),r2
   95  000010e8  23bdfff8	addi	r29,r29,#-8
   96  000010ec  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
   97  000010f0  24423000	addui	r2,r2,(LC0_LF0)&0xffff
   98  000010f4  afa20000	sw	(r29),r2
   99  000010f8  23c1eff4	addi	r1,r30,#-4108
  100  000010fc  afa10004	sw	4(r29),r1
  101  00001100  0c0002b4	jal	_Printf
  102  00001104  54000000	nop; not filled.
  103  00001108  23bd0008	addi	r29,r29,#8
  104  0000110c  8fa20000	lw	r2,0(r29)
  105  00001110  8fdffff8	lw	r31,-8(r30)
  106  00001114  001ee820	add	r29,r0,r30
  107  00001118  8fdefffc	lw	r30,-4(r30)
  108  0000111c  4be00000	jr	r31
  109  00001120  54000000	nop
  110  00001124          	.endproc _consume_userstack
  111  00001124          	.data
  112  00003048          	.align 2
  113  00003048          	LC1_LF0:
  114  00003048  55736167	.ascii "Usage: %s <number of hello world processes to create>\n\000"
  114  0000304c  653a2025	
  114  00003050  73203c6e	
  114  00003054  756d6265	
  114  00003058  72206f66	
  114  0000305c  2068656c	
  114  00003060  6c6f2077	
  114  00003064  6f726c64	
  114  00003068  2070726f	
  114  0000306c  63657373	
  114  00003070  65732074	
  114  00003074  6f206372	
  114  00003078  65617465	
  114  0000307c  3e0a00  	
  115  0000307f          	.align 2
  116  00003080          	LC2_LF0:
  117  00003080  2d2d2d2d	.ascii "------------------------User Process Execution Menu (Enter choice numb"
  117  00003084  2d2d2d2d	
  117  00003088  2d2d2d2d	
  117  0000308c  2d2d2d2d	
  117  00003090  2d2d2d2d	
  117  00003094  2d2d2d2d	
  117  00003098  55736572	
  117  0000309c  2050726f	
  117  000030a0  63657373	
  117  000030a4  20457865	
  117  000030a8  63757469	
  117  000030ac  6f6e204d	
  117  000030b0  656e7520	
  117  000030b4  28456e74	
  117  000030b8  65722063	
  117  000030bc  686f6963	
  117  000030c0  65206e75	
  117  000030c4  6d62    	
  118  000030c6  6572292d	.ascii "er)--------------------\n\000"
  118  000030ca  2d2d2d2d	
  118  000030ce  2d2d2d2d	
  118  000030d2  2d2d2d2d	
  118  000030d6  2d2d2d2d	
  118  000030da  2d2d2d0a	
  118  000030de  00      	
  119  000030df          	.align 2
  120  000030e0          	LC3_LF0:
  121  000030e0  312e5275	.ascii "1.Run Hello World process\n\000"
  121  000030e4  6e204865	
  121  000030e8  6c6c6f20	
  121  000030ec  576f726c	
  121  000030f0  64207072	
  121  000030f4  6f636573	
  121  000030f8  730a00  	
  122  000030fb          	.align 2
  123  000030fc          	LC4_LF0:
  124  000030fc  322e4163	.ascii "2.Access memory outside allocated process pages\n\000"
  124  00003100  63657373	
  124  00003104  206d656d	
  124  00003108  6f727920	
  124  0000310c  6f757473	
  124  00003110  69646520	
  124  00003114  616c6c6f	
  124  00003118  63617465	
  124  0000311c  64207072	
  124  00003120  6f636573	
  124  00003124  73207061	
  124  00003128  6765730a	
  124  0000312c  00      	
  125  0000312d          	.align 2
  126  00003130          	LC5_LF0:
  127  00003130  332e4361	.ascii "3.Cause user stack to grow more than 1 page\n\000"
  127  00003134  75736520	
  127  00003138  75736572	
  127  0000313c  20737461	
  127  00003140  636b2074	
  127  00003144  6f206772	
  127  00003148  6f77206d	
  127  0000314c  6f726520	
  127  00003150  7468616e	
  127  00003154  20312070	
  127  00003158  6167650a	
  127  0000315c  00      	
  128  0000315d          	.align 2
  129  00003160          	LC6_LF0:
  130  00003160  342e4361	.ascii "4.Call Hello World program 100 in a row\n\000"
  130  00003164  6c6c2048	
  130  00003168  656c6c6f	
  130  0000316c  20576f72	
  130  00003170  6c642070	
  130  00003174  726f6772	
  130  00003178  616d2031	
  130  0000317c  30302069	
  130  00003180  6e206120	
  130  00003184  726f770a	
  130  00003188  00      	
  131  00003189          	.align 2
  132  0000318c          	LC7_LF0:
  133  0000318c  352e5370	.ascii "5.Spwan 330 processes simultaenously to count to a large value\n\000"
  133  00003190  77616e20	
  133  00003194  33333020	
  133  00003198  70726f63	
  133  0000319c  65737365	
  133  000031a0  73207369	
  133  000031a4  6d756c74	
  133  000031a8  61656e6f	
  133  000031ac  75736c79	
  133  000031b0  20746f20	
  133  000031b4  636f756e	
  133  000031b8  7420746f	
  133  000031bc  2061206c	
  133  000031c0  61726765	
  133  000031c4  2076616c	
  133  000031c8  75650a00	
  134  000031cc          	.align 2
  135  000031cc          	LC8_LF0:
  136  000031cc  362e4163	.ascii "6.Access memory beyond the virtual memory address space\n\000"
  136  000031d0  63657373	
  136  000031d4  206d656d	
  136  000031d8  6f727920	
  136  000031dc  6265796f	
  136  000031e0  6e642074	
  136  000031e4  68652076	
  136  000031e8  69727475	
  136  000031ec  616c206d	
  136  000031f0  656d6f72	
  136  000031f4  79206164	
  136  000031f8  64726573	
  136  000031fc  73207370	
  136  00003200  6163650a	
  136  00003204  00      	
  137  00003205          	.align 2
  138  00003208          	LC9_LF0:
  139  00003208  6d616b65	.ascii "makeprocs (%d): Creating %d hello_world processes\n\000"
  139  0000320c  70726f63	
  139  00003210  73202825	
  139  00003214  64293a20	
  139  00003218  43726561	
  139  0000321c  74696e67	
  139  00003220  20256420	
  139  00003224  68656c6c	
  139  00003228  6f5f776f	
  139  0000322c  726c6420	
  139  00003230  70726f63	
  139  00003234  65737365	
  139  00003238  730a00  	
  140  0000323b          	.align 2
  141  0000323c          	LC10_LF0:
  142  0000323c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
  142  00003240  70726f63	
  142  00003244  73202825	
  142  00003248  64293a20	
  142  0000324c  42616420	
  142  00003250  73656d5f	
  142  00003254  63726561	
  142  00003258  74650a00	
  143  0000325c          	.align 2
  144  0000325c          	LC11_LF0:
  145  0000325c  2d2d2d2d	.ascii "-------------------------------Part 1------------------------------\n\000"
  145  00003260  2d2d2d2d	
  145  00003264  2d2d2d2d	
  145  00003268  2d2d2d2d	
  145  0000326c  2d2d2d2d	
  145  00003270  2d2d2d2d	
  145  00003274  2d2d2d2d	
  145  00003278  2d2d2d50	
  145  0000327c  61727420	
  145  00003280  312d2d2d	
  145  00003284  2d2d2d2d	
  145  00003288  2d2d2d2d	
  145  0000328c  2d2d2d2d	
  145  00003290  2d2d2d2d	
  145  00003294  2d2d2d2d	
  145  00003298  2d2d2d2d	
  145  0000329c  2d2d2d0a	
  145  000032a0  00      	
  146  000032a1          	.align 2
  147  000032a4          	LC12_LF0:
  148  000032a4  6d616b65	.ascii "makeprocs (%d): Creating 1 hello world process\n\000"
  148  000032a8  70726f63	
  148  000032ac  73202825	
  148  000032b0  64293a20	
  148  000032b4  43726561	
  148  000032b8  74696e67	
  148  000032bc  20312068	
  148  000032c0  656c6c6f	
  148  000032c4  20776f72	
  148  000032c8  6c642070	
  148  000032cc  726f6365	
  148  000032d0  73730a00	
  149  000032d4          	.align 2
  150  000032d4          	LC13_LF0:
  151  000032d4  68656c6c	.ascii "hello_world.dlx.obj\000"
  151  000032d8  6f5f776f	
  151  000032dc  726c642e	
  151  000032e0  646c782e	
  151  000032e4  6f626a00	
  152  000032e8          	.align 2
  153  000032e8          	LC14_LF0:
  154  000032e8  2d2d2d2d	.ascii "-------------------------------Part 3-------------------------------\n"
  154  000032ec  2d2d2d2d	
  154  000032f0  2d2d2d2d	
  154  000032f4  2d2d2d2d	
  154  000032f8  2d2d2d2d	
  154  000032fc  2d2d2d2d	
  154  00003300  2d2d2d2d	
  154  00003304  2d2d2d50	
  154  00003308  61727420	
  154  0000330c  332d2d2d	
  154  00003310  2d2d2d2d	
  154  00003314  2d2d2d2d	
  154  00003318  2d2d2d2d	
  154  0000331c  2d2d2d2d	
  154  00003320  2d2d2d2d	
  154  00003324  2d2d2d2d	
  154  00003328  2d2d2d2d	
  154  0000332c  0a      	
  155  0000332d  00      	.ascii "\000"
  156  0000332e          	.align 2
  157  00003330          	LC15_LF0:
  158  00003330  2d2d2d2d	.ascii "----------------------------------------------------------------------"
  158  00003334  2d2d2d2d	
  158  00003338  2d2d2d2d	
  158  0000333c  2d2d2d2d	
  158  00003340  2d2d2d2d	
  158  00003344  2d2d2d2d	
  158  00003348  2d2d2d2d	
  158  0000334c  2d2d2d2d	
  158  00003350  2d2d2d2d	
  158  00003354  2d2d2d2d	
  158  00003358  2d2d2d2d	
  158  0000335c  2d2d2d2d	
  158  00003360  2d2d2d2d	
  158  00003364  2d2d2d2d	
  158  00003368  2d2d2d2d	
  158  0000336c  2d2d2d2d	
  158  00003370  2d2d2d2d	
  158  00003374  2d2d    	
  159  00003376  2d2d2d2d	.ascii "---------------\n\000"
  159  0000337a  2d2d2d2d	
  159  0000337e  2d2d2d2d	
  159  00003382  2d2d2d0a	
  159  00003386  00      	
  160  00003387          	.align 2
  161  00003388          	LC16_LF0:
  162  00003388  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  162  0000338c  70726f63	
  162  00003390  73202825	
  162  00003394  64293a20	
  162  00003398  416c6c20	
  162  0000339c  6f746865	
  162  000033a0  72207072	
  162  000033a4  6f636573	
  162  000033a8  73657320	
  162  000033ac  636f6d70	
  162  000033b0  6c657465	
  162  000033b4  642c2065	
  162  000033b8  78697469	
  162  000033bc  6e67206d	
  162  000033c0  61696e20	
  162  000033c4  70726f63	
  162  000033c8  6573732e	
  162  000033cc  0a      	
  163  000033cd  00      	.ascii "\000"
  164  000033ce          	.text
  165  00001124          	.align 2
  166  00001124          	.proc _main
  167  00001124          	.global _main
  168  00001124          	_main:
  169                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  170  00001124  afbefffc	sw	-4(r29),r30; push fp
  171  00001128  001df020	add	r30,r0,r29; fp = sp
  172  0000112c  afbffff8	sw	-8(r29),r31; push ret addr
  173  00001130  2fbd0018	subui	r29,r29,#24; alloc local storage
  174  00001134  8fc20000	lw	r2,(r30)
  175  00001138  8fc30004	lw	r3,4(r30)
  176  0000113c  0c001138	jal	___main
  177  00001140  54000000	nop; not filled.
  178  00001144  64410002	snei	r1,r2,#2
  179  00001148  10200030	beqz	r1,L16_LF0
  180  0000114c  54000000	nop; not filled.
  181  00001150  23bdfff8	addi	r29,r29,#-8
  182  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  183  00001158  24843048	addui	r4,r4,(LC1_LF0)&0xffff
  184  0000115c  afa40000	sw	(r29),r4
  185  00001160  8c610000	lw	r1,(r3)
  186  00001164  afa10004	sw	4(r29),r1
  187  00001168  0c00024c	jal	_Printf
  188  0000116c  54000000	nop; not filled.
  189  00001170  0c00034c	jal	_Exit
  190  00001174  54000000	nop; not filled.
  191  00001178  23bd0008	addi	r29,r29,#8
  192  0000117c          	L16_LF0:
  193  0000117c  23bdfff8	addi	r29,r29,#-8
  194  00001180  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  195  00001184  24843080	addui	r4,r4,(LC2_LF0)&0xffff
  196  00001188  afa40000	sw	(r29),r4
  197  0000118c  0c000228	jal	_Printf
  198  00001190  54000000	nop; not filled.
  199  00001194  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  200  00001198  248430e0	addui	r4,r4,(LC3_LF0)&0xffff
  201  0000119c  afa40000	sw	(r29),r4
  202  000011a0  0c000214	jal	_Printf
  203  000011a4  54000000	nop; not filled.
  204  000011a8  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  205  000011ac  248430fc	addui	r4,r4,(LC4_LF0)&0xffff
  206  000011b0  afa40000	sw	(r29),r4
  207  000011b4  0c000200	jal	_Printf
  208  000011b8  54000000	nop; not filled.
  209  000011bc  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  210  000011c0  24843130	addui	r4,r4,(LC5_LF0)&0xffff
  211  000011c4  afa40000	sw	(r29),r4
  212  000011c8  0c0001ec	jal	_Printf
  213  000011cc  54000000	nop; not filled.
  214  000011d0  3c040000	lhi	r4,((LC6_LF0)>>16)&0xffff
  215  000011d4  24843160	addui	r4,r4,(LC6_LF0)&0xffff
  216  000011d8  afa40000	sw	(r29),r4
  217  000011dc  0c0001d8	jal	_Printf
  218  000011e0  54000000	nop; not filled.
  219  000011e4  3c040000	lhi	r4,((LC7_LF0)>>16)&0xffff
  220  000011e8  2484318c	addui	r4,r4,(LC7_LF0)&0xffff
  221  000011ec  afa40000	sw	(r29),r4
  222  000011f0  0c0001c4	jal	_Printf
  223  000011f4  54000000	nop; not filled.
  224  000011f8  3c040000	lhi	r4,((LC8_LF0)>>16)&0xffff
  225  000011fc  248431cc	addui	r4,r4,(LC8_LF0)&0xffff
  226  00001200  afa40000	sw	(r29),r4
  227  00001204  0c0001b0	jal	_Printf
  228  00001208  54000000	nop; not filled.
  229  0000120c  23bdfff8	addi	r29,r29,#-8
  230  00001210  8c630004	lw	r3,4(r3)
  231  00001214  afa30000	sw	(r29),r3
  232  00001218  20040000	addi	r4,r0,#0
  233  0000121c  afa40004	sw	4(r29),r4
  234  00001220  2004000a	addi	r4,r0,#10
  235  00001224  afa40008	sw	8(r29),r4
  236  00001228  0c000b50	jal	_dstrtol
  237  0000122c  54000000	nop; not filled.
  238  00001230  00011020	add	r2,r0,r1
  239  00001234  0c00018c	jal	_getpid
  240  00001238  54000000	nop; not filled.
  241  0000123c  3c040000	lhi	r4,((LC9_LF0)>>16)&0xffff
  242  00001240  24843208	addui	r4,r4,(LC9_LF0)&0xffff
  243  00001244  afa40000	sw	(r29),r4
  244  00001248  afa10004	sw	4(r29),r1
  245  0000124c  afa20008	sw	8(r29),r2
  246  00001250  0c000164	jal	_Printf
  247  00001254  54000000	nop; not filled.
  248  00001258  20040000	addi	r4,r0,#0
  249  0000125c  afa40000	sw	(r29),r4
  250  00001260  0c000190	jal	_sem_create
  251  00001264  54000000	nop; not filled.
  252  00001268  00011820	add	r3,r0,r1
  253  0000126c  23bd0010	addi	r29,r29,#16
  254  00001270  6061ffff	seqi	r1,r3,#-1
  255  00001274  10200034	beqz	r1,L17_LF0
  256  00001278  54000000	nop; not filled.
  257  0000127c  0c000144	jal	_getpid
  258  00001280  54000000	nop; not filled.
  259  00001284  23bdfff8	addi	r29,r29,#-8
  260  00001288  3c040000	lhi	r4,((LC10_LF0)>>16)&0xffff
  261  0000128c  2484323c	addui	r4,r4,(LC10_LF0)&0xffff
  262  00001290  afa40000	sw	(r29),r4
  263  00001294  afa10004	sw	4(r29),r1
  264  00001298  0c00011c	jal	_Printf
  265  0000129c  54000000	nop; not filled.
  266  000012a0  0c00021c	jal	_Exit
  267  000012a4  54000000	nop; not filled.
  268  000012a8  23bd0008	addi	r29,r29,#8
  269  000012ac          	L17_LF0:
  270  000012ac  23bdfff8	addi	r29,r29,#-8
  271  000012b0  afa30000	sw	(r29),r3
  272  000012b4  23c2ffe8	addi	r2,r30,#-24
  273  000012b8  afa20004	sw	4(r29),r2
  274  000012bc  0c000930	jal	_ditoa
  275  000012c0  54000000	nop; not filled.
  276  000012c4  3c040000	lhi	r4,((LC11_LF0)>>16)&0xffff
  277  000012c8  2484325c	addui	r4,r4,(LC11_LF0)&0xffff
  278  000012cc  afa40000	sw	(r29),r4
  279  000012d0  0c0000e4	jal	_Printf
  280  000012d4  54000000	nop; not filled.
  281  000012d8  3c040000	lhi	r4,((LC12_LF0)>>16)&0xffff
  282  000012dc  248432a4	addui	r4,r4,(LC12_LF0)&0xffff
  283  000012e0  afa40000	sw	(r29),r4
  284  000012e4  0c0000d0	jal	_Printf
  285  000012e8  54000000	nop; not filled.
  286  000012ec  23bdfff8	addi	r29,r29,#-8
  287  000012f0  3c040000	lhi	r4,((LC13_LF0)>>16)&0xffff
  288  000012f4  248432d4	addui	r4,r4,(LC13_LF0)&0xffff
  289  000012f8  afa40000	sw	(r29),r4
  290  000012fc  afa20004	sw	4(r29),r2
  291  00001300  20040000	addi	r4,r0,#0
  292  00001304  afa40008	sw	8(r29),r4
  293  00001308  0c0000c4	jal	_process_create
  294  0000130c  54000000	nop; not filled.
  295  00001310  afa30000	sw	(r29),r3
  296  00001314  0c0000e8	jal	_sem_wait
  297  00001318  54000000	nop; not filled.
  298  0000131c  3c040000	lhi	r4,((LC14_LF0)>>16)&0xffff
  299  00001320  248432e8	addui	r4,r4,(LC14_LF0)&0xffff
  300  00001324  afa40000	sw	(r29),r4
  301  00001328  0c00008c	jal	_Printf
  302  0000132c  54000000	nop; not filled.
  303  00001330  3c040000	lhi	r4,((LC15_LF0)>>16)&0xffff
  304  00001334  24843330	addui	r4,r4,(LC15_LF0)&0xffff
  305  00001338  afa40000	sw	(r29),r4
  306  0000133c  0c000078	jal	_Printf
  307  00001340  54000000	nop; not filled.
  308  00001344  0c00007c	jal	_getpid
  309  00001348  54000000	nop; not filled.
  310  0000134c  3c040000	lhi	r4,((LC16_LF0)>>16)&0xffff
  311  00001350  24843388	addui	r4,r4,(LC16_LF0)&0xffff
  312  00001354  afa40000	sw	(r29),r4
  313  00001358  afa10004	sw	4(r29),r1
  314  0000135c  0c000058	jal	_Printf
  315  00001360  54000000	nop; not filled.
  316  00001364  23bd0010	addi	r29,r29,#16
  317  00001368  0c000f00	jal	_exit
  318  0000136c  54000000	nop
  319  00001370          	.endproc _main
  320                      ;;;
  321                      ;;; Stub functions for DLX traps.
  322                      ;;;
  323                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  324                      ;;;
  325                      ;;; The traps such as Open and Close
  326                      ;;; (note the capital letters) are for use by user programs.  The traps
  327                      ;;; with names such as open and close (lower case) are for use by the OS.
  328                      ;;;
  331  00001370          	.align 2
  333                      ;;; The following are the traps to be used by user-level programs
  334                      ;;;
  336  00001370          	.align 2
  337  00001370          	.proc _Open
  338  00001370          	.global _Open
  339  00001370          	_Open:
  340                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  341                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  342                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  343  00001370  44000213	trap	#0x213
  344  00001374  4be00000	jr	r31
  345  00001378  54000000	nop
  346  0000137c          	.endproc _Open
  348  0000137c          	.proc _Close
  349  0000137c          	.global _Close
  350  0000137c          	_Close:
  351  0000137c  44000214	trap	#0x214
  352  00001380  4be00000	jr	r31
  353  00001384  54000000	nop
  354  00001388          	.endproc _Close
  356  00001388          	.proc _Read
  357  00001388          	.global _Read
  358  00001388          	_Read:
  359  00001388  44000210	trap	#0x210
  360  0000138c  4be00000	jr	r31
  361  00001390  54000000	nop
  362  00001394          	.endproc _Read
  364  00001394          	.proc _Write
  365  00001394          	.global _Write
  366  00001394          	_Write:
  367  00001394  44000211	trap	#0x211
  368  00001398  4be00000	jr	r31
  369  0000139c  54000000	nop
  370  000013a0          	.endproc _Write
  372  000013a0          	.proc _Lseek
  373  000013a0          	.global _Lseek
  374  000013a0          	_Lseek:
  375  000013a0  44000212	trap	#0x212
  376  000013a4  4be00000	jr	r31
  377  000013a8  54000000	nop
  378  000013ac          	.endproc _Lseek
  380  000013ac          	.proc _Putchar
  381  000013ac          	.global _Putchar
  382  000013ac          	_Putchar:
  383  000013ac  44000280	trap	#0x280
  384  000013b0  4be00000	jr	r31
  385  000013b4  54000000	nop
  386  000013b8          	.endproc _Putchar
  388  000013b8          	.proc _Printf
  389  000013b8          	.global _Printf
  390  000013b8          	_Printf:
  391  000013b8  44000201	trap	#0x201
  392  000013bc  4be00000	jr	r31
  393  000013c0  54000000	nop
  394  000013c4          	.endproc _Printf
  396  000013c4          	.proc _getpid
  397  000013c4          	.global _getpid
  398  000013c4          	_getpid:
  399  000013c4  44000431	trap	#0x431
  400  000013c8  4be00000	jr	r31
  401  000013cc  54000000	nop
  402  000013d0          	.endproc _getpid
  404  000013d0          	.proc _process_create
  405  000013d0          	.global _process_create
  406  000013d0          	_process_create:
  407  000013d0  44000432	trap	#0x432
  408  000013d4  4be00000	jr	r31
  409  000013d8  54000000	nop
  410  000013dc          	.endproc _process_create
  412  000013dc          	.proc _shmget
  413  000013dc          	.global _shmget
  414  000013dc          	_shmget:
  415  000013dc  44000440	trap	#0x440
  416  000013e0  4be00000	jr	r31
  417  000013e4  54000000	nop
  418  000013e8          	.endproc _shmget
  420  000013e8          	.proc _shmat
  421  000013e8          	.global _shmat
  422  000013e8          	_shmat:
  423  000013e8  44000441	trap	#0x441
  424  000013ec  4be00000	jr	r31
  425  000013f0  54000000	nop
  426  000013f4          	.endproc _shmat
  428  000013f4          	.proc _sem_create
  429  000013f4          	.global _sem_create
  430  000013f4          	_sem_create:
  431  000013f4  44000450	trap	#0x450
  432  000013f8  4be00000	jr	r31
  433  000013fc  54000000	nop
  434  00001400          	.endproc _sem_create
  436  00001400          	.proc _sem_wait
  437  00001400          	.global _sem_wait
  438  00001400          	_sem_wait:
  439  00001400  44000451	trap	#0x451
  440  00001404  4be00000	jr	r31
  441  00001408  54000000	nop
  442  0000140c          	.endproc _sem_wait
  444  0000140c          	.proc _sem_signal
  445  0000140c          	.global _sem_signal
  446  0000140c          	_sem_signal:
  447  0000140c  44000452	trap	#0x452
  448  00001410  4be00000	jr	r31
  449  00001414  54000000	nop
  450  00001418          	.endproc _sem_signal
  452  00001418          	.proc _lock_create
  453  00001418          	.global _lock_create
  454  00001418          	_lock_create:
  455  00001418  44000453	trap	#0x453
  456  0000141c  4be00000	jr	r31
  457  00001420  54000000	nop
  458  00001424          	.endproc _lock_create
  460  00001424          	.proc _lock_acquire
  461  00001424          	.global _lock_acquire
  462  00001424          	_lock_acquire:
  463  00001424  44000454	trap	#0x454
  464  00001428  4be00000	jr	r31
  465  0000142c  54000000	nop
  466  00001430          	.endproc _lock_acquire
  468  00001430          	.proc _lock_release
  469  00001430          	.global _lock_release
  470  00001430          	_lock_release:
  471  00001430  44000455	trap	#0x455
  472  00001434  4be00000	jr	r31
  473  00001438  54000000	nop
  474  0000143c          	.endproc _lock_release
  476  0000143c          	.proc _cond_create
  477  0000143c          	.global _cond_create
  478  0000143c          	_cond_create:
  479  0000143c  44000456	trap	#0x456
  480  00001440  4be00000	jr	r31
  481  00001444  54000000	nop
  482  00001448          	.endproc _cond_create
  484  00001448          	.proc _cond_wait
  485  00001448          	.global _cond_wait
  486  00001448          	_cond_wait:
  487  00001448  44000457	trap	#0x457
  488  0000144c  4be00000	jr	r31
  489  00001450  54000000	nop
  490  00001454          	.endproc _cond_wait
  492  00001454          	.proc _cond_signal
  493  00001454          	.global _cond_signal
  494  00001454          	_cond_signal:
  495  00001454  44000458	trap	#0x458
  496  00001458  4be00000	jr	r31
  497  0000145c  54000000	nop
  498  00001460          	.endproc _cond_signal
  500  00001460          	.proc _cond_broadcast
  501  00001460          	.global _cond_broadcast
  502  00001460          	_cond_broadcast:
  503  00001460  44000459	trap	#0x459
  504  00001464  4be00000	jr	r31
  505  00001468  54000000	nop
  506  0000146c          	.endproc _cond_broadcast
  508  0000146c          	.proc _mbox_create
  509  0000146c          	.global _mbox_create
  510  0000146c          	_mbox_create:
  511  0000146c  44000460	trap	#0x460
  512  00001470  4be00000	jr	r31
  513  00001474  54000000	nop
  514  00001478          	.endproc _mbox_create
  516  00001478          	.proc _mbox_open
  517  00001478          	.global _mbox_open
  518  00001478          	_mbox_open:
  519  00001478  44000461	trap	#0x461
  520  0000147c  4be00000	jr	r31
  521  00001480  54000000	nop
  522  00001484          	.endproc _mbox_open
  524  00001484          	.proc _mbox_close
  525  00001484          	.global _mbox_close
  526  00001484          	_mbox_close:
  527  00001484  44000462	trap	#0x462
  528  00001488  4be00000	jr	r31
  529  0000148c  54000000	nop
  530  00001490          	.endproc _mbox_close
  532  00001490          	.proc _mbox_send
  533  00001490          	.global _mbox_send
  534  00001490          	_mbox_send:
  535  00001490  44000463	trap	#0x463
  536  00001494  4be00000	jr	r31
  537  00001498  54000000	nop
  538  0000149c          	.endproc _mbox_send
  540  0000149c          	.proc _mbox_recv
  541  0000149c          	.global _mbox_recv
  542  0000149c          	_mbox_recv:
  543  0000149c  44000464	trap	#0x464
  544  000014a0  4be00000	jr	r31
  545  000014a4  54000000	nop
  546  000014a8          	.endproc _mbox_recv
  548  000014a8          	.proc _sleep
  549  000014a8          	.global _sleep
  550  000014a8          	_sleep:
  551  000014a8  44000465	trap	#0x465
  552  000014ac  4be00000	jr	r31
  553  000014b0  54000000	nop
  554  000014b4          	.endproc _sleep
  556  000014b4          	.proc _yield
  557  000014b4          	.global _yield
  558  000014b4          	_yield:
  559  000014b4  44000466	trap	#0x466
  560  000014b8  4be00000	jr	r31
  561  000014bc  54000000	nop
  562  000014c0          	.endproc _yield
  565  000014c0          	.proc _Exit
  566  000014c0          	.global _Exit
  567  000014c0          	_Exit:
  568  000014c0  44000500	trap	#0x500
  569  000014c4  4be00000	jr	r31
  570  000014c8  54000000	nop
  571  000014cc          	.endproc _Exit
  574  000014cc          	.proc _malloc
  575  000014cc          	.global _malloc
  576  000014cc          	_malloc:
  577  000014cc  44000467	trap	#0x467
  578  000014d0  4be00000	jr	r31
  579  000014d4          	.endproc _malloc
  582  000014d4          	.proc _mfree
  583  000014d4          	.global _mfree
  584  000014d4          	_mfree:
  585  000014d4  44000468	trap	#0x468
  586  000014d8  4be00000	jr	r31
  587  000014dc          	.endproc _mfree
  588                      ; Compiled by GCC
  590  000014dc          	.align 2
  591  000014dc          	.proc _isspace
  592  000014dc          	.global _isspace
  593  000014dc          	_isspace:
  594                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  595  000014dc  afbefffc	sw	-4(r29),r30; push fp
  596  000014e0  001df020	add	r30,r0,r29; fp = sp
  597  000014e4  afbffff8	sw	-8(r29),r31; push ret addr
  598  000014e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  599  000014ec  afa20000	sw	0(r29),r2
  600  000014f0  afa30004	sw	4(r29),r3
  601  000014f4  afa40008	sw	8(r29),r4
  602  000014f8  83c20003	lb	r2,3(r30)
  603  000014fc  20010000	addi	r1,r0,#0
  604  00001500  304300ff	andi	r3,r2,#0x00ff
  605  00001504  60640020	seqi	r4,r3,#32
  606  00001508  1480002c	bnez	r4,L3_LF2
  607  0000150c  54000000	nop; delay slot nop
  608  00001510  304300ff	andi	r3,r2,#0x00ff
  609  00001514  60640009	seqi	r4,r3,#9
  610  00001518  1480001c	bnez	r4,L3_LF2
  611  0000151c  54000000	nop; delay slot nop
  612  00001520  304300ff	andi	r3,r2,#0x00ff
  613  00001524  6064000a	seqi	r4,r3,#10
  614  00001528  1480000c	bnez	r4,L3_LF2
  615  0000152c  54000000	nop; delay slot nop
  616  00001530  08000008	j	L2_LF2
  617  00001534  54000000	nop; delay slot nop
  618  00001538          	L3_LF2:
  619  00001538  20010001	addi	r1,r0,#1
  620  0000153c          	L2_LF2:
  621  0000153c  08000004	j	L1_LF2
  622  00001540  54000000	nop; delay slot nop
  623  00001544          	L1_LF2:
  624  00001544  8fa20000	lw	r2,0(r29)
  625  00001548  8fa30004	lw	r3,4(r29)
  626  0000154c  8fa40008	lw	r4,8(r29)
  627  00001550  8fdffff8	lw	r31,-8(r30)
  628  00001554  001ee820	add	r29,r0,r30
  629  00001558  8fdefffc	lw	r30,-4(r30)
  630  0000155c  4be00000	jr	r31
  631  00001560  54000000	nop
  632  00001564          	.endproc _isspace
  633  00001564          	.align 2
  634  00001564          	.proc _isxdigit
  635  00001564          	.global _isxdigit
  636  00001564          	_isxdigit:
  637                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  638  00001564  afbefffc	sw	-4(r29),r30; push fp
  639  00001568  001df020	add	r30,r0,r29; fp = sp
  640  0000156c  afbffff8	sw	-8(r29),r31; push ret addr
  641  00001570  2fbd0018	subui	r29,r29,#24; alloc local storage
  642  00001574  afa20000	sw	0(r29),r2
  643  00001578  afa30004	sw	4(r29),r3
  644  0000157c  afa40008	sw	8(r29),r4
  645  00001580  83c20003	lb	r2,3(r30)
  646  00001584  20010000	addi	r1,r0,#0
  647  00001588  304300ff	andi	r3,r2,#0x00ff
  648  0000158c  6c64002f	sgtui	r4,r3,#47
  649  00001590  1080001c	beqz	r4,L7_LF2
  650  00001594  54000000	nop; delay slot nop
  651  00001598  304300ff	andi	r3,r2,#0x00ff
  652  0000159c  70640039	sleui	r4,r3,#57
  653  000015a0  1480005c	bnez	r4,L6_LF2
  654  000015a4  54000000	nop; delay slot nop
  655  000015a8  08000004	j	L7_LF2
  656  000015ac  54000000	nop; delay slot nop
  657  000015b0          	L7_LF2:
  658  000015b0  304300ff	andi	r3,r2,#0x00ff
  659  000015b4  6c640060	sgtui	r4,r3,#96
  660  000015b8  1080001c	beqz	r4,L8_LF2
  661  000015bc  54000000	nop; delay slot nop
  662  000015c0  304300ff	andi	r3,r2,#0x00ff
  663  000015c4  70640066	sleui	r4,r3,#102
  664  000015c8  14800034	bnez	r4,L6_LF2
  665  000015cc  54000000	nop; delay slot nop
  666  000015d0  08000004	j	L8_LF2
  667  000015d4  54000000	nop; delay slot nop
  668  000015d8          	L8_LF2:
  669  000015d8  304300ff	andi	r3,r2,#0x00ff
  670  000015dc  6c640040	sgtui	r4,r3,#64
  671  000015e0  10800020	beqz	r4,L5_LF2
  672  000015e4  54000000	nop; delay slot nop
  673  000015e8  304300ff	andi	r3,r2,#0x00ff
  674  000015ec  70640041	sleui	r4,r3,#65
  675  000015f0  1480000c	bnez	r4,L6_LF2
  676  000015f4  54000000	nop; delay slot nop
  677  000015f8  08000008	j	L5_LF2
  678  000015fc  54000000	nop; delay slot nop
  679  00001600          	L6_LF2:
  680  00001600  20010001	addi	r1,r0,#1
  681  00001604          	L5_LF2:
  682  00001604  08000004	j	L4_LF2
  683  00001608  54000000	nop; delay slot nop
  684  0000160c          	L4_LF2:
  685  0000160c  8fa20000	lw	r2,0(r29)
  686  00001610  8fa30004	lw	r3,4(r29)
  687  00001614  8fa40008	lw	r4,8(r29)
  688  00001618  8fdffff8	lw	r31,-8(r30)
  689  0000161c  001ee820	add	r29,r0,r30
  690  00001620  8fdefffc	lw	r30,-4(r30)
  691  00001624  4be00000	jr	r31
  692  00001628  54000000	nop
  693  0000162c          	.endproc _isxdigit
  694  0000162c          	.align 2
  695  0000162c          	.proc _dstrcpy
  696  0000162c          	.global _dstrcpy
  697  0000162c          	_dstrcpy:
  698                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  699  0000162c  afbefffc	sw	-4(r29),r30; push fp
  700  00001630  001df020	add	r30,r0,r29; fp = sp
  701  00001634  afbffff8	sw	-8(r29),r31; push ret addr
  702  00001638  2fbd0018	subui	r29,r29,#24; alloc local storage
  703  0000163c  afa20000	sw	0(r29),r2
  704  00001640  afa30004	sw	4(r29),r3
  705  00001644  8fc10000	lw	r1,(r30)
  706  00001648  afc1fff4	sw	-12(r30),r1
  707  0000164c          	L10_LF2:
  708  0000164c  8fc10000	lw	r1,(r30)
  709  00001650  20220001	addi	r2,r1,#1
  710  00001654  afc20000	sw	(r30),r2
  711  00001658  8fc20004	lw	r2,4(r30)
  712  0000165c  20430001	addi	r3,r2,#1
  713  00001660  afc30004	sw	4(r30),r3
  714  00001664  80420000	lb	r2,(r2)
  715  00001668  a0220000	sb	(r1),r2
  716  0000166c  a3c2fff3	sb	-13(r30),r2
  717  00001670          	L12_LF2:
  718  00001670  93c1fff3	lbu	r1,-13(r30)
  719  00001674  64220000	snei	r2,r1,#0
  720  00001678  1440000c	bnez	r2,L13_LF2
  721  0000167c  54000000	nop; delay slot nop
  722  00001680  0800000c	j	L11_LF2
  723  00001684  54000000	nop; delay slot nop
  724  00001688          	L13_LF2:
  725  00001688  0bffffc0	j	L10_LF2
  726  0000168c  54000000	nop; delay slot nop
  727  00001690          	L11_LF2:
  728  00001690  8fc1fff4	lw	r1,-12(r30)
  729  00001694  08000004	j	L9_LF2
  730  00001698  54000000	nop; delay slot nop
  731  0000169c          	L9_LF2:
  732  0000169c  8fa20000	lw	r2,0(r29)
  733  000016a0  8fa30004	lw	r3,4(r29)
  734  000016a4  8fdffff8	lw	r31,-8(r30)
  735  000016a8  001ee820	add	r29,r0,r30
  736  000016ac  8fdefffc	lw	r30,-4(r30)
  737  000016b0  4be00000	jr	r31
  738  000016b4  54000000	nop
  739  000016b8          	.endproc _dstrcpy
  740  000016b8          	.align 2
  741  000016b8          	.proc _dstrncpy
  742  000016b8          	.global _dstrncpy
  743  000016b8          	_dstrncpy:
  744                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  745  000016b8  afbefffc	sw	-4(r29),r30; push fp
  746  000016bc  001df020	add	r30,r0,r29; fp = sp
  747  000016c0  afbffff8	sw	-8(r29),r31; push ret addr
  748  000016c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  749  000016c8  afa20000	sw	0(r29),r2
  750  000016cc  afa30004	sw	4(r29),r3
  751  000016d0  8fc10000	lw	r1,(r30)
  752  000016d4  afc1fff4	sw	-12(r30),r1
  753  000016d8          	L15_LF2:
  754  000016d8  8fc10008	lw	r1,8(r30)
  755  000016dc  2022ffff	addi	r2,r1,#-1
  756  000016e0  afc20008	sw	8(r30),r2
  757  000016e4  70210000	slei	r1,r1,#0
  758  000016e8  1020000c	beqz	r1,L18_LF2
  759  000016ec  54000000	nop; delay slot nop
  760  000016f0  08000048	j	L16_LF2
  761  000016f4  54000000	nop; delay slot nop
  762  000016f8          	L18_LF2:
  763  000016f8  8fc10000	lw	r1,(r30)
  764  000016fc  20220001	addi	r2,r1,#1
  765  00001700  afc20000	sw	(r30),r2
  766  00001704  8fc20004	lw	r2,4(r30)
  767  00001708  20430001	addi	r3,r2,#1
  768  0000170c  afc30004	sw	4(r30),r3
  769  00001710  80420000	lb	r2,(r2)
  770  00001714  a0220000	sb	(r1),r2
  771  00001718  a3c2fff3	sb	-13(r30),r2
  772  0000171c          	L17_LF2:
  773  0000171c  93c1fff3	lbu	r1,-13(r30)
  774  00001720  64220000	snei	r2,r1,#0
  775  00001724  1440000c	bnez	r2,L19_LF2
  776  00001728  54000000	nop; delay slot nop
  777  0000172c  0800000c	j	L16_LF2
  778  00001730  54000000	nop; delay slot nop
  779  00001734          	L19_LF2:
  780  00001734  0bffffa0	j	L15_LF2
  781  00001738  54000000	nop; delay slot nop
  782  0000173c          	L16_LF2:
  783  0000173c  8fc1fff4	lw	r1,-12(r30)
  784  00001740  08000004	j	L14_LF2
  785  00001744  54000000	nop; delay slot nop
  786  00001748          	L14_LF2:
  787  00001748  8fa20000	lw	r2,0(r29)
  788  0000174c  8fa30004	lw	r3,4(r29)
  789  00001750  8fdffff8	lw	r31,-8(r30)
  790  00001754  001ee820	add	r29,r0,r30
  791  00001758  8fdefffc	lw	r30,-4(r30)
  792  0000175c  4be00000	jr	r31
  793  00001760  54000000	nop
  794  00001764          	.endproc _dstrncpy
  795  00001764          	.align 2
  796  00001764          	.proc _dstrcat
  797  00001764          	.global _dstrcat
  798  00001764          	_dstrcat:
  799                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  800  00001764  afbefffc	sw	-4(r29),r30; push fp
  801  00001768  001df020	add	r30,r0,r29; fp = sp
  802  0000176c  afbffff8	sw	-8(r29),r31; push ret addr
  803  00001770  2fbd0018	subui	r29,r29,#24; alloc local storage
  804  00001774  afa20000	sw	0(r29),r2
  805  00001778  8fc10000	lw	r1,(r30)
  806  0000177c  afc1fff4	sw	-12(r30),r1
  807  00001780          	L21_LF2:
  808  00001780  8fc10000	lw	r1,(r30)
  809  00001784  90220000	lbu	r2,(r1)
  810  00001788  64410000	snei	r1,r2,#0
  811  0000178c  1420000c	bnez	r1,L23_LF2
  812  00001790  54000000	nop; delay slot nop
  813  00001794  0800001c	j	L22_LF2
  814  00001798  54000000	nop; delay slot nop
  815  0000179c          	L23_LF2:
  816  0000179c  8fc20000	lw	r2,(r30)
  817  000017a0  20410001	addi	r1,r2,#1
  818  000017a4  00011020	add	r2,r0,r1
  819  000017a8  afc20000	sw	(r30),r2
  820  000017ac  0bffffd0	j	L21_LF2
  821  000017b0  54000000	nop; delay slot nop
  822  000017b4          	L22_LF2:
  823  000017b4  23bdfff8	addi	r29,r29,#-8
  824  000017b8  001d0820	add	r1,r0,r29
  825  000017bc  8fc20000	lw	r2,(r30)
  826  000017c0  ac220000	sw	(r1),r2
  827  000017c4  8fc20004	lw	r2,4(r30)
  828  000017c8  ac220004	sw	4(r1),r2
  829  000017cc  0ffffe5c	jal	_dstrcpy
  830  000017d0  54000000	nop; delay slot nop
  831  000017d4  23bd0008	addi	r29,r29,#8
  832  000017d8  8fc1fff4	lw	r1,-12(r30)
  833  000017dc  08000004	j	L20_LF2
  834  000017e0  54000000	nop; delay slot nop
  835  000017e4          	L20_LF2:
  836  000017e4  8fa20000	lw	r2,0(r29)
  837  000017e8  8fdffff8	lw	r31,-8(r30)
  838  000017ec  001ee820	add	r29,r0,r30
  839  000017f0  8fdefffc	lw	r30,-4(r30)
  840  000017f4  4be00000	jr	r31
  841  000017f8  54000000	nop
  842  000017fc          	.endproc _dstrcat
  843  000017fc          	.align 2
  844  000017fc          	.proc _dstrncmp
  845  000017fc          	.global _dstrncmp
  846  000017fc          	_dstrncmp:
  847                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  848  000017fc  afbefffc	sw	-4(r29),r30; push fp
  849  00001800  001df020	add	r30,r0,r29; fp = sp
  850  00001804  afbffff8	sw	-8(r29),r31; push ret addr
  851  00001808  2fbd0018	subui	r29,r29,#24; alloc local storage
  852  0000180c  afa20000	sw	0(r29),r2
  853  00001810  afa30004	sw	4(r29),r3
  854  00001814  54000000	nop
  855  00001818  20010000	addi	r1,r0,#0
  856  0000181c  afc1fff4	sw	-12(r30),r1
  857  00001820          	L25_LF2:
  858  00001820  8fc1fff4	lw	r1,-12(r30)
  859  00001824  8fc20008	lw	r2,8(r30)
  860  00001828  0022082a	slt	r1,r1,r2
  861  0000182c  1420000c	bnez	r1,L28_LF2
  862  00001830  54000000	nop; delay slot nop
  863  00001834  08000088	j	L26_LF2
  864  00001838  54000000	nop; delay slot nop
  865  0000183c          	L28_LF2:
  866  0000183c  8fc10004	lw	r1,4(r30)
  867  00001840  90220000	lbu	r2,(r1)
  868  00001844  64410000	snei	r1,r2,#0
  869  00001848  14200018	bnez	r1,L29_LF2
  870  0000184c  54000000	nop; delay slot nop
  871  00001850  20010000	addi	r1,r0,#0
  872  00001854  080000d8	j	L24_LF2
  873  00001858  54000000	nop; delay slot nop
  874  0000185c  08000028	j	L30_LF2
  875  00001860  54000000	nop; delay slot nop
  876  00001864          	L29_LF2:
  877  00001864  8fc10000	lw	r1,(r30)
  878  00001868  8fc20004	lw	r2,4(r30)
  879  0000186c  90210000	lbu	r1,(r1)
  880  00001870  90420000	lbu	r2,(r2)
  881  00001874  00220829	sne	r1,r1,r2
  882  00001878  1020000c	beqz	r1,L30_LF2
  883  0000187c  54000000	nop; delay slot nop
  884  00001880  0800003c	j	L26_LF2
  885  00001884  54000000	nop; delay slot nop
  886  00001888          	L31_LF2:
  887  00001888          	L30_LF2:
  888  00001888  8fc20000	lw	r2,(r30)
  889  0000188c  20410001	addi	r1,r2,#1
  890  00001890  00011020	add	r2,r0,r1
  891  00001894  afc20000	sw	(r30),r2
  892  00001898  8fc20004	lw	r2,4(r30)
  893  0000189c  20410001	addi	r1,r2,#1
  894  000018a0  00011020	add	r2,r0,r1
  895  000018a4  afc20004	sw	4(r30),r2
  896  000018a8          	L27_LF2:
  897  000018a8  8fc2fff4	lw	r2,-12(r30)
  898  000018ac  20410001	addi	r1,r2,#1
  899  000018b0  00011020	add	r2,r0,r1
  900  000018b4  afc2fff4	sw	-12(r30),r2
  901  000018b8  0bffff64	j	L25_LF2
  902  000018bc  54000000	nop; delay slot nop
  903  000018c0          	L26_LF2:
  904  000018c0  8fc1fff4	lw	r1,-12(r30)
  905  000018c4  8fc20008	lw	r2,8(r30)
  906  000018c8  00220828	seq	r1,r1,r2
  907  000018cc  10200018	beqz	r1,L32_LF2
  908  000018d0  54000000	nop; delay slot nop
  909  000018d4  20010000	addi	r1,r0,#0
  910  000018d8  08000054	j	L24_LF2
  911  000018dc  54000000	nop; delay slot nop
  912  000018e0  0800004c	j	L33_LF2
  913  000018e4  54000000	nop; delay slot nop
  914  000018e8          	L32_LF2:
  915  000018e8  8fc20000	lw	r2,(r30)
  916  000018ec  90410000	lbu	r1,(r2)
  917  000018f0  8fc20004	lw	r2,4(r30)
  918  000018f4  90430000	lbu	r3,(r2)
  919  000018f8  00230822	sub	r1,r1,r3
  920  000018fc  74220000	sgei	r2,r1,#0
  921  00001900  10400020	beqz	r2,L34_LF2
  922  00001904  54000000	nop; delay slot nop
  923  00001908  8fc10000	lw	r1,(r30)
  924  0000190c  8fc20004	lw	r2,4(r30)
  925  00001910  90210000	lbu	r1,(r1)
  926  00001914  90420000	lbu	r2,(r2)
  927  00001918  00220829	sne	r1,r1,r2
  928  0000191c  08000008	j	L35_LF2
  929  00001920  54000000	nop; delay slot nop
  930  00001924          	L34_LF2:
  931  00001924  2001ffff	addi	r1,r0,#-1
  932  00001928          	L35_LF2:
  933  00001928  08000004	j	L24_LF2
  934  0000192c  54000000	nop; delay slot nop
  935  00001930          	L33_LF2:
  936  00001930          	L24_LF2:
  937  00001930  8fa20000	lw	r2,0(r29)
  938  00001934  8fa30004	lw	r3,4(r29)
  939  00001938  8fdffff8	lw	r31,-8(r30)
  940  0000193c  001ee820	add	r29,r0,r30
  941  00001940  8fdefffc	lw	r30,-4(r30)
  942  00001944  4be00000	jr	r31
  943  00001948  54000000	nop
  944  0000194c          	.endproc _dstrncmp
  945  0000194c          	.align 2
  946  0000194c          	.proc _dstrlen
  947  0000194c          	.global _dstrlen
  948  0000194c          	_dstrlen:
  949                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  950  0000194c  afbefffc	sw	-4(r29),r30; push fp
  951  00001950  001df020	add	r30,r0,r29; fp = sp
  952  00001954  afbffff8	sw	-8(r29),r31; push ret addr
  953  00001958  2fbd0018	subui	r29,r29,#24; alloc local storage
  954  0000195c  afa20000	sw	0(r29),r2
  955  00001960  20010000	addi	r1,r0,#0
  956  00001964  afc1fff4	sw	-12(r30),r1
  957  00001968          	L37_LF2:
  958  00001968  8fc10000	lw	r1,(r30)
  959  0000196c  20220001	addi	r2,r1,#1
  960  00001970  afc20000	sw	(r30),r2
  961  00001974  90210000	lbu	r1,(r1)
  962  00001978  64220000	snei	r2,r1,#0
  963  0000197c  1440000c	bnez	r2,L39_LF2
  964  00001980  54000000	nop; delay slot nop
  965  00001984  0800001c	j	L38_LF2
  966  00001988  54000000	nop; delay slot nop
  967  0000198c          	L39_LF2:
  968  0000198c  8fc2fff4	lw	r2,-12(r30)
  969  00001990  20410001	addi	r1,r2,#1
  970  00001994  00011020	add	r2,r0,r1
  971  00001998  afc2fff4	sw	-12(r30),r2
  972  0000199c  0bffffc8	j	L37_LF2
  973  000019a0  54000000	nop; delay slot nop
  974  000019a4          	L38_LF2:
  975  000019a4  8fc1fff4	lw	r1,-12(r30)
  976  000019a8  08000004	j	L36_LF2
  977  000019ac  54000000	nop; delay slot nop
  978  000019b0          	L36_LF2:
  979  000019b0  8fa20000	lw	r2,0(r29)
  980  000019b4  8fdffff8	lw	r31,-8(r30)
  981  000019b8  001ee820	add	r29,r0,r30
  982  000019bc  8fdefffc	lw	r30,-4(r30)
  983  000019c0  4be00000	jr	r31
  984  000019c4  54000000	nop
  985  000019c8          	.endproc _dstrlen
  986  000019c8          	.align 2
  987  000019c8          	.proc _dstrstr
  988  000019c8          	.global _dstrstr
  989  000019c8          	_dstrstr:
  990                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  991  000019c8  afbefffc	sw	-4(r29),r30; push fp
  992  000019cc  001df020	add	r30,r0,r29; fp = sp
  993  000019d0  afbffff8	sw	-8(r29),r31; push ret addr
  994  000019d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  995  000019d8  afa20000	sw	0(r29),r2
  996  000019dc  23bdfff8	addi	r29,r29,#-8
  997  000019e0  001d0820	add	r1,r0,r29
  998  000019e4  8fc20004	lw	r2,4(r30)
  999  000019e8  ac220000	sw	(r1),r2
 1000  000019ec  0fffff5c	jal	_dstrlen
 1001  000019f0  54000000	nop; delay slot nop
 1002  000019f4  23bd0008	addi	r29,r29,#8
 1003  000019f8  afc1fff4	sw	-12(r30),r1
 1004  000019fc          	L41_LF2:
 1005  000019fc  8fc10000	lw	r1,(r30)
 1006  00001a00  90220000	lbu	r2,(r1)
 1007  00001a04  64410000	snei	r1,r2,#0
 1008  00001a08  1420000c	bnez	r1,L43_LF2
 1009  00001a0c  54000000	nop; delay slot nop
 1010  00001a10  08000060	j	L42_LF2
 1011  00001a14  54000000	nop; delay slot nop
 1012  00001a18          	L43_LF2:
 1013  00001a18  23bdfff0	addi	r29,r29,#-16
 1014  00001a1c  001d0820	add	r1,r0,r29
 1015  00001a20  8fc20000	lw	r2,(r30)
 1016  00001a24  ac220000	sw	(r1),r2
 1017  00001a28  8fc20004	lw	r2,4(r30)
 1018  00001a2c  ac220004	sw	4(r1),r2
 1019  00001a30  8fc2fff4	lw	r2,-12(r30)
 1020  00001a34  ac220008	sw	8(r1),r2
 1021  00001a38  0ffffdc0	jal	_dstrncmp
 1022  00001a3c  54000000	nop; delay slot nop
 1023  00001a40  23bd0010	addi	r29,r29,#16
 1024  00001a44  64220000	snei	r2,r1,#0
 1025  00001a48  14400010	bnez	r2,L44_LF2
 1026  00001a4c  54000000	nop; delay slot nop
 1027  00001a50  8fc10000	lw	r1,(r30)
 1028  00001a54  08000028	j	L40_LF2
 1029  00001a58  54000000	nop; delay slot nop
 1030  00001a5c          	L44_LF2:
 1031  00001a5c  8fc20000	lw	r2,(r30)
 1032  00001a60  20410001	addi	r1,r2,#1
 1033  00001a64  00011020	add	r2,r0,r1
 1034  00001a68  afc20000	sw	(r30),r2
 1035  00001a6c  0bffff8c	j	L41_LF2
 1036  00001a70  54000000	nop; delay slot nop
 1037  00001a74          	L42_LF2:
 1038  00001a74  20010000	addi	r1,r0,#0
 1039  00001a78  08000004	j	L40_LF2
 1040  00001a7c  54000000	nop; delay slot nop
 1041  00001a80          	L40_LF2:
 1042  00001a80  8fa20000	lw	r2,0(r29)
 1043  00001a84  8fdffff8	lw	r31,-8(r30)
 1044  00001a88  001ee820	add	r29,r0,r30
 1045  00001a8c  8fdefffc	lw	r30,-4(r30)
 1046  00001a90  4be00000	jr	r31
 1047  00001a94  54000000	nop
 1048  00001a98          	.endproc _dstrstr
 1049  00001a98          	.align 2
 1050  00001a98          	.proc _dmindex
 1051  00001a98          	.global _dmindex
 1052  00001a98          	_dmindex:
 1053                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1054  00001a98  afbefffc	sw	-4(r29),r30; push fp
 1055  00001a9c  001df020	add	r30,r0,r29; fp = sp
 1056  00001aa0  afbffff8	sw	-8(r29),r31; push ret addr
 1057  00001aa4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1058  00001aa8  afa20000	sw	0(r29),r2
 1059  00001aac  54000000	nop
 1060  00001ab0          	L46_LF2:
 1061  00001ab0  8fc10000	lw	r1,(r30)
 1062  00001ab4  90220000	lbu	r2,(r1)
 1063  00001ab8  64410000	snei	r1,r2,#0
 1064  00001abc  1420000c	bnez	r1,L48_LF2
 1065  00001ac0  54000000	nop; delay slot nop
 1066  00001ac4  08000070	j	L47_LF2
 1067  00001ac8  54000000	nop; delay slot nop
 1068  00001acc          	L48_LF2:
 1069  00001acc  8fc10004	lw	r1,4(r30)
 1070  00001ad0  afc1fff4	sw	-12(r30),r1
 1071  00001ad4          	L49_LF2:
 1072  00001ad4  8fc1fff4	lw	r1,-12(r30)
 1073  00001ad8  90220000	lbu	r2,(r1)
 1074  00001adc  64410000	snei	r1,r2,#0
 1075  00001ae0  1420000c	bnez	r1,L52_LF2
 1076  00001ae4  54000000	nop; delay slot nop
 1077  00001ae8  08000044	j	L50_LF2
 1078  00001aec  54000000	nop; delay slot nop
 1079  00001af0          	L52_LF2:
 1080  00001af0  8fc10000	lw	r1,(r30)
 1081  00001af4  8fc2fff4	lw	r2,-12(r30)
 1082  00001af8  90210000	lbu	r1,(r1)
 1083  00001afc  90420000	lbu	r2,(r2)
 1084  00001b00  00220828	seq	r1,r1,r2
 1085  00001b04  10200010	beqz	r1,L51_LF2
 1086  00001b08  54000000	nop; delay slot nop
 1087  00001b0c  8fc10000	lw	r1,(r30)
 1088  00001b10  08000030	j	L45_LF2
 1089  00001b14  54000000	nop; delay slot nop
 1090  00001b18          	L53_LF2:
 1091  00001b18          	L51_LF2:
 1092  00001b18  8fc2fff4	lw	r2,-12(r30)
 1093  00001b1c  20410001	addi	r1,r2,#1
 1094  00001b20  00011020	add	r2,r0,r1
 1095  00001b24  afc2fff4	sw	-12(r30),r2
 1096  00001b28  0bffffa8	j	L49_LF2
 1097  00001b2c  54000000	nop; delay slot nop
 1098  00001b30          	L50_LF2:
 1099  00001b30  0bffff7c	j	L46_LF2
 1100  00001b34  54000000	nop; delay slot nop
 1101  00001b38          	L47_LF2:
 1102  00001b38  20010000	addi	r1,r0,#0
 1103  00001b3c  08000004	j	L45_LF2
 1104  00001b40  54000000	nop; delay slot nop
 1105  00001b44          	L45_LF2:
 1106  00001b44  8fa20000	lw	r2,0(r29)
 1107  00001b48  8fdffff8	lw	r31,-8(r30)
 1108  00001b4c  001ee820	add	r29,r0,r30
 1109  00001b50  8fdefffc	lw	r30,-4(r30)
 1110  00001b54  4be00000	jr	r31
 1111  00001b58  54000000	nop
 1112  00001b5c          	.endproc _dmindex
 1113  00001b5c          	.align 2
 1114  00001b5c          	.proc _dindex
 1115  00001b5c          	.global _dindex
 1116  00001b5c          	_dindex:
 1117                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1118  00001b5c  afbefffc	sw	-4(r29),r30; push fp
 1119  00001b60  001df020	add	r30,r0,r29; fp = sp
 1120  00001b64  afbffff8	sw	-8(r29),r31; push ret addr
 1121  00001b68  2fbd0010	subui	r29,r29,#16; alloc local storage
 1122  00001b6c  afa20000	sw	0(r29),r2
 1123  00001b70  54000000	nop
 1124  00001b74          	L55_LF2:
 1125  00001b74  8fc10000	lw	r1,(r30)
 1126  00001b78  90220000	lbu	r2,(r1)
 1127  00001b7c  64410000	snei	r1,r2,#0
 1128  00001b80  1420000c	bnez	r1,L57_LF2
 1129  00001b84  54000000	nop; delay slot nop
 1130  00001b88  08000040	j	L56_LF2
 1131  00001b8c  54000000	nop; delay slot nop
 1132  00001b90          	L57_LF2:
 1133  00001b90  8fc10000	lw	r1,(r30)
 1134  00001b94  90220000	lbu	r2,(r1)
 1135  00001b98  8fc10004	lw	r1,4(r30)
 1136  00001b9c  00411028	seq	r2,r2,r1
 1137  00001ba0  10400010	beqz	r2,L58_LF2
 1138  00001ba4  54000000	nop; delay slot nop
 1139  00001ba8  8fc10000	lw	r1,(r30)
 1140  00001bac  08000028	j	L54_LF2
 1141  00001bb0  54000000	nop; delay slot nop
 1142  00001bb4          	L58_LF2:
 1143  00001bb4  8fc20000	lw	r2,(r30)
 1144  00001bb8  20410001	addi	r1,r2,#1
 1145  00001bbc  00011020	add	r2,r0,r1
 1146  00001bc0  afc20000	sw	(r30),r2
 1147  00001bc4  0bffffac	j	L55_LF2
 1148  00001bc8  54000000	nop; delay slot nop
 1149  00001bcc          	L56_LF2:
 1150  00001bcc  20010000	addi	r1,r0,#0
 1151  00001bd0  08000004	j	L54_LF2
 1152  00001bd4  54000000	nop; delay slot nop
 1153  00001bd8          	L54_LF2:
 1154  00001bd8  8fa20000	lw	r2,0(r29)
 1155  00001bdc  8fdffff8	lw	r31,-8(r30)
 1156  00001be0  001ee820	add	r29,r0,r30
 1157  00001be4  8fdefffc	lw	r30,-4(r30)
 1158  00001be8  4be00000	jr	r31
 1159  00001bec  54000000	nop
 1160  00001bf0          	.endproc _dindex
 1161  00001bf0          	.align 2
 1162  00001bf0          	.proc _ditoa
 1163  00001bf0          	.global _ditoa
 1164  00001bf0          	_ditoa:
 1165                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1166  00001bf0  afbefffc	sw	-4(r29),r30; push fp
 1167  00001bf4  001df020	add	r30,r0,r29; fp = sp
 1168  00001bf8  afbffff8	sw	-8(r29),r31; push ret addr
 1169  00001bfc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1170  00001c00  afa20000	sw	0(r29),r2
 1171  00001c04  afa30004	sw	4(r29),r3
 1172  00001c08  8fc10000	lw	r1,(r30)
 1173  00001c0c  68220000	slti	r2,r1,#0
 1174  00001c10  1040002c	beqz	r2,L60_LF2
 1175  00001c14  54000000	nop; delay slot nop
 1176  00001c18  8fc10004	lw	r1,4(r30)
 1177  00001c1c  20220001	addi	r2,r1,#1
 1178  00001c20  afc20004	sw	4(r30),r2
 1179  00001c24  2002002d	addi	r2,r0,(#0x2d)&0xff
 1180  00001c28  a0220000	sb	(r1),r2
 1181  00001c2c  8fc10000	lw	r1,(r30)
 1182  00001c30  00011022	sub	r2,r0,r1
 1183  00001c34  afc20000	sw	(r30),r2
 1184  00001c38  08000118	j	L61_LF2
 1185  00001c3c  54000000	nop; delay slot nop
 1186  00001c40          	L60_LF2:
 1187  00001c40  8fc10000	lw	r1,(r30)
 1188  00001c44  64220000	snei	r2,r1,#0
 1189  00001c48  14400020	bnez	r2,L62_LF2
 1190  00001c4c  54000000	nop; delay slot nop
 1191  00001c50  8fc10004	lw	r1,4(r30)
 1192  00001c54  20220001	addi	r2,r1,#1
 1193  00001c58  afc20004	sw	4(r30),r2
 1194  00001c5c  20020030	addi	r2,r0,(#0x30)&0xff
 1195  00001c60  a0220000	sb	(r1),r2
 1196  00001c64  080000ec	j	L61_LF2
 1197  00001c68  54000000	nop; delay slot nop
 1198  00001c6c          	L62_LF2:
 1199  00001c6c  20010001	addi	r1,r0,#1
 1200  00001c70  afc1fff4	sw	-12(r30),r1
 1201  00001c74          	L64_LF2:
 1202  00001c74  8fc1fff4	lw	r1,-12(r30)
 1203  00001c78  8fc20000	lw	r2,(r30)
 1204  00001c7c  0022082c	sle	r1,r1,r2
 1205  00001c80  1420000c	bnez	r1,L66_LF2
 1206  00001c84  54000000	nop; delay slot nop
 1207  00001c88  08000024	j	L65_LF2
 1208  00001c8c  54000000	nop; delay slot nop
 1209  00001c90          	L67_LF2:
 1210  00001c90          	L66_LF2:
 1211  00001c90  8fc1fff4	lw	r1,-12(r30)
 1212  00001c94  00011820	add	r3,r0,r1
 1213  00001c98  50620002	slli	r2,r3,#0x2
 1214  00001c9c  00411020	add	r2,r2,r1
 1215  00001ca0  50410001	slli	r1,r2,#0x1
 1216  00001ca4  afc1fff4	sw	-12(r30),r1
 1217  00001ca8  0bffffc8	j	L64_LF2
 1218  00001cac  54000000	nop; delay slot nop
 1219  00001cb0          	L65_LF2:
 1220  00001cb0  54000000	nop
 1221  00001cb4          	L68_LF2:
 1222  00001cb4  8fc1fff4	lw	r1,-12(r30)
 1223  00001cb8  2002000a	addi	r2,r0,#10
 1224  00001cbc  00200035	movi2fp	f0,r1
 1225  00001cc0  00400835	movi2fp	f1,r2
 1226  00001cc4  0401000f	div	f0,f0,f1
 1227  00001cc8  00000834	movfp2i	r1,f0
 1228  00001ccc  afc1fff4	sw	-12(r30),r1
 1229  00001cd0  8fc10004	lw	r1,4(r30)
 1230  00001cd4  20220001	addi	r2,r1,#1
 1231  00001cd8  afc20004	sw	4(r30),r2
 1232  00001cdc  8fc20000	lw	r2,(r30)
 1233  00001ce0  8fc3fff4	lw	r3,-12(r30)
 1234  00001ce4  00400035	movi2fp	f0,r2
 1235  00001ce8  00600835	movi2fp	f1,r3
 1236  00001cec  0401000f	div	f0,f0,f1
 1237  00001cf0  00001034	movfp2i	r2,f0
 1238  00001cf4  00021820	add	r3,r0,r2
 1239  00001cf8  20620030	addi	r2,r3,#48
 1240  00001cfc  a0220000	sb	(r1),r2
 1241  00001d00  8fc10000	lw	r1,(r30)
 1242  00001d04  8fc3fff4	lw	r3,-12(r30)
 1243  00001d08  00200035	movi2fp	f0,r1
 1244  00001d0c  00600835	movi2fp	f1,r3
 1245  00001d10  0401000f	div	f0,f0,f1
 1246  00001d14  00001034	movfp2i	r2,f0
 1247  00001d18  8fc3fff4	lw	r3,-12(r30)
 1248  00001d1c  00400035	movi2fp	f0,r2
 1249  00001d20  00600835	movi2fp	f1,r3
 1250  00001d24  0401000e	mult	f0,f0,f1
 1251  00001d28  00001034	movfp2i	r2,f0
 1252  00001d2c  00220822	sub	r1,r1,r2
 1253  00001d30  afc10000	sw	(r30),r1
 1254  00001d34          	L70_LF2:
 1255  00001d34  8fc1fff4	lw	r1,-12(r30)
 1256  00001d38  6c220001	sgti	r2,r1,#1
 1257  00001d3c  1440000c	bnez	r2,L71_LF2
 1258  00001d40  54000000	nop; delay slot nop
 1259  00001d44  0800000c	j	L61_LF2
 1260  00001d48  54000000	nop; delay slot nop
 1261  00001d4c          	L71_LF2:
 1262  00001d4c  0bffff64	j	L68_LF2
 1263  00001d50  54000000	nop; delay slot nop
 1264  00001d54          	L69_LF2:
 1265  00001d54          	L63_LF2:
 1266  00001d54          	L61_LF2:
 1267  00001d54  8fc10004	lw	r1,4(r30)
 1268  00001d58  20020000	addi	r2,r0,(#0x0)&0xff
 1269  00001d5c  a0220000	sb	(r1),r2
 1270  00001d60          	L59_LF2:
 1271  00001d60  8fa20000	lw	r2,0(r29)
 1272  00001d64  8fa30004	lw	r3,4(r29)
 1273  00001d68  8fdffff8	lw	r31,-8(r30)
 1274  00001d6c  001ee820	add	r29,r0,r30
 1275  00001d70  8fdefffc	lw	r30,-4(r30)
 1276  00001d74  4be00000	jr	r31
 1277  00001d78  54000000	nop
 1278  00001d7c          	.endproc _ditoa
 1279  00001d7c          	.align 2
 1280  00001d7c          	.proc _dstrtol
 1281  00001d7c          	.global _dstrtol
 1282  00001d7c          	_dstrtol:
 1283                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1284  00001d7c  afbefffc	sw	-4(r29),r30; push fp
 1285  00001d80  001df020	add	r30,r0,r29; fp = sp
 1286  00001d84  afbffff8	sw	-8(r29),r31; push ret addr
 1287  00001d88  2fbd0020	subui	r29,r29,#32; alloc local storage
 1288  00001d8c  afa20000	sw	0(r29),r2
 1289  00001d90  20010000	addi	r1,r0,#0
 1290  00001d94  afc1fff4	sw	-12(r30),r1
 1291  00001d98          	L73_LF2:
 1292  00001d98  8fc10000	lw	r1,(r30)
 1293  00001d9c  90220000	lbu	r2,(r1)
 1294  00001da0  60410020	seqi	r1,r2,#32
 1295  00001da4  14200034	bnez	r1,L75_LF2
 1296  00001da8  54000000	nop; delay slot nop
 1297  00001dac  8fc10000	lw	r1,(r30)
 1298  00001db0  90220000	lbu	r2,(r1)
 1299  00001db4  60410009	seqi	r1,r2,#9
 1300  00001db8  14200020	bnez	r1,L75_LF2
 1301  00001dbc  54000000	nop; delay slot nop
 1302  00001dc0  8fc10000	lw	r1,(r30)
 1303  00001dc4  90220000	lbu	r2,(r1)
 1304  00001dc8  6041000a	seqi	r1,r2,#10
 1305  00001dcc  1420000c	bnez	r1,L75_LF2
 1306  00001dd0  54000000	nop; delay slot nop
 1307  00001dd4  0800001c	j	L74_LF2
 1308  00001dd8  54000000	nop; delay slot nop
 1309  00001ddc          	L75_LF2:
 1310  00001ddc  8fc20000	lw	r2,(r30)
 1311  00001de0  20410001	addi	r1,r2,#1
 1312  00001de4  00011020	add	r2,r0,r1
 1313  00001de8  afc20000	sw	(r30),r2
 1314  00001dec  0bffffa8	j	L73_LF2
 1315  00001df0  54000000	nop; delay slot nop
 1316  00001df4          	L74_LF2:
 1317  00001df4  8fc10004	lw	r1,4(r30)
 1318  00001df8  64220000	snei	r2,r1,#0
 1319  00001dfc  10400010	beqz	r2,L76_LF2
 1320  00001e00  54000000	nop; delay slot nop
 1321  00001e04  8fc10004	lw	r1,4(r30)
 1322  00001e08  8fc20000	lw	r2,(r30)
 1323  00001e0c  ac220000	sw	(r1),r2
 1324  00001e10          	L76_LF2:
 1325  00001e10  8fc10000	lw	r1,(r30)
 1326  00001e14  90220000	lbu	r2,(r1)
 1327  00001e18  64410000	snei	r1,r2,#0
 1328  00001e1c  14200010	bnez	r1,L77_LF2
 1329  00001e20  54000000	nop; delay slot nop
 1330  00001e24  8fc1fff4	lw	r1,-12(r30)
 1331  00001e28  08000294	j	L72_LF2
 1332  00001e2c  54000000	nop; delay slot nop
 1333  00001e30          	L77_LF2:
 1334  00001e30  8fc10000	lw	r1,(r30)
 1335  00001e34  90220000	lbu	r2,(r1)
 1336  00001e38  6041002d	seqi	r1,r2,#45
 1337  00001e3c  10200024	beqz	r1,L78_LF2
 1338  00001e40  54000000	nop; delay slot nop
 1339  00001e44  2001ffff	addi	r1,r0,#-1
 1340  00001e48  afc1ffec	sw	-20(r30),r1
 1341  00001e4c  8fc20000	lw	r2,(r30)
 1342  00001e50  20410001	addi	r1,r2,#1
 1343  00001e54  00011020	add	r2,r0,r1
 1344  00001e58  afc20000	sw	(r30),r2
 1345  00001e5c  0800000c	j	L79_LF2
 1346  00001e60  54000000	nop; delay slot nop
 1347  00001e64          	L78_LF2:
 1348  00001e64  20010001	addi	r1,r0,#1
 1349  00001e68  afc1ffec	sw	-20(r30),r1
 1350  00001e6c          	L79_LF2:
 1351  00001e6c  8fc10008	lw	r1,8(r30)
 1352  00001e70  64220000	snei	r2,r1,#0
 1353  00001e74  14400090	bnez	r2,L80_LF2
 1354  00001e78  54000000	nop; delay slot nop
 1355  00001e7c  8fc10000	lw	r1,(r30)
 1356  00001e80  90220000	lbu	r2,(r1)
 1357  00001e84  60410030	seqi	r1,r2,#48
 1358  00001e88  10200074	beqz	r1,L81_LF2
 1359  00001e8c  54000000	nop; delay slot nop
 1360  00001e90  8fc20000	lw	r2,(r30)
 1361  00001e94  20410001	addi	r1,r2,#1
 1362  00001e98  00011020	add	r2,r0,r1
 1363  00001e9c  afc20000	sw	(r30),r2
 1364  00001ea0  8fc10000	lw	r1,(r30)
 1365  00001ea4  90220000	lbu	r2,(r1)
 1366  00001ea8  60410078	seqi	r1,r2,#120
 1367  00001eac  14200020	bnez	r1,L83_LF2
 1368  00001eb0  54000000	nop; delay slot nop
 1369  00001eb4  8fc10000	lw	r1,(r30)
 1370  00001eb8  90220000	lbu	r2,(r1)
 1371  00001ebc  60410058	seqi	r1,r2,#88
 1372  00001ec0  1420000c	bnez	r1,L83_LF2
 1373  00001ec4  54000000	nop; delay slot nop
 1374  00001ec8  08000024	j	L82_LF2
 1375  00001ecc  54000000	nop; delay slot nop
 1376  00001ed0          	L83_LF2:
 1377  00001ed0  20010010	addi	r1,r0,#16
 1378  00001ed4  afc10008	sw	8(r30),r1
 1379  00001ed8  8fc20000	lw	r2,(r30)
 1380  00001edc  20410001	addi	r1,r2,#1
 1381  00001ee0  00011020	add	r2,r0,r1
 1382  00001ee4  afc20000	sw	(r30),r2
 1383  00001ee8  0800000c	j	L84_LF2
 1384  00001eec  54000000	nop; delay slot nop
 1385  00001ef0          	L82_LF2:
 1386  00001ef0  20010008	addi	r1,r0,#8
 1387  00001ef4  afc10008	sw	8(r30),r1
 1388  00001ef8          	L84_LF2:
 1389  00001ef8  0800000c	j	L80_LF2
 1390  00001efc  54000000	nop; delay slot nop
 1391  00001f00          	L81_LF2:
 1392  00001f00  2001000a	addi	r1,r0,#10
 1393  00001f04  afc10008	sw	8(r30),r1
 1394  00001f08          	L85_LF2:
 1395  00001f08          	L80_LF2:
 1396  00001f08  8fc10008	lw	r1,8(r30)
 1397  00001f0c  70220000	slei	r2,r1,#0
 1398  00001f10  1440001c	bnez	r2,L87_LF2
 1399  00001f14  54000000	nop; delay slot nop
 1400  00001f18  8fc10008	lw	r1,8(r30)
 1401  00001f1c  6c220010	sgti	r2,r1,#16
 1402  00001f20  1440000c	bnez	r2,L87_LF2
 1403  00001f24  54000000	nop; delay slot nop
 1404  00001f28  08000010	j	L86_LF2
 1405  00001f2c  54000000	nop; delay slot nop
 1406  00001f30          	L87_LF2:
 1407  00001f30  8fc1fff4	lw	r1,-12(r30)
 1408  00001f34  08000188	j	L72_LF2
 1409  00001f38  54000000	nop; delay slot nop
 1410  00001f3c          	L86_LF2:
 1411  00001f3c  54000000	nop
 1412  00001f40          	L88_LF2:
 1413  00001f40  8fc10000	lw	r1,(r30)
 1414  00001f44  90220000	lbu	r2,(r1)
 1415  00001f48  6c41002f	sgtui	r1,r2,#47
 1416  00001f4c  10200030	beqz	r1,L91_LF2
 1417  00001f50  54000000	nop; delay slot nop
 1418  00001f54  8fc10000	lw	r1,(r30)
 1419  00001f58  90220000	lbu	r2,(r1)
 1420  00001f5c  70410039	sleui	r1,r2,#57
 1421  00001f60  1020001c	beqz	r1,L91_LF2
 1422  00001f64  54000000	nop; delay slot nop
 1423  00001f68  8fc10000	lw	r1,(r30)
 1424  00001f6c  90220000	lbu	r2,(r1)
 1425  00001f70  2041ffd0	addi	r1,r2,#-48
 1426  00001f74  afc1fff0	sw	-16(r30),r1
 1427  00001f78  0800008c	j	L92_LF2
 1428  00001f7c  54000000	nop; delay slot nop
 1429  00001f80          	L91_LF2:
 1430  00001f80  8fc10000	lw	r1,(r30)
 1431  00001f84  90220000	lbu	r2,(r1)
 1432  00001f88  6c410060	sgtui	r1,r2,#96
 1433  00001f8c  10200030	beqz	r1,L93_LF2
 1434  00001f90  54000000	nop; delay slot nop
 1435  00001f94  8fc10000	lw	r1,(r30)
 1436  00001f98  90220000	lbu	r2,(r1)
 1437  00001f9c  7041007a	sleui	r1,r2,#122
 1438  00001fa0  1020001c	beqz	r1,L93_LF2
 1439  00001fa4  54000000	nop; delay slot nop
 1440  00001fa8  8fc10000	lw	r1,(r30)
 1441  00001fac  90220000	lbu	r2,(r1)
 1442  00001fb0  2041ffa9	addi	r1,r2,#-87
 1443  00001fb4  afc1fff0	sw	-16(r30),r1
 1444  00001fb8  0800004c	j	L92_LF2
 1445  00001fbc  54000000	nop; delay slot nop
 1446  00001fc0          	L93_LF2:
 1447  00001fc0  8fc10000	lw	r1,(r30)
 1448  00001fc4  90220000	lbu	r2,(r1)
 1449  00001fc8  6c410040	sgtui	r1,r2,#64
 1450  00001fcc  10200030	beqz	r1,L95_LF2
 1451  00001fd0  54000000	nop; delay slot nop
 1452  00001fd4  8fc10000	lw	r1,(r30)
 1453  00001fd8  90220000	lbu	r2,(r1)
 1454  00001fdc  7041005a	sleui	r1,r2,#90
 1455  00001fe0  1020001c	beqz	r1,L95_LF2
 1456  00001fe4  54000000	nop; delay slot nop
 1457  00001fe8  8fc10000	lw	r1,(r30)
 1458  00001fec  90220000	lbu	r2,(r1)
 1459  00001ff0  2041ffc9	addi	r1,r2,#-55
 1460  00001ff4  afc1fff0	sw	-16(r30),r1
 1461  00001ff8  0800000c	j	L92_LF2
 1462  00001ffc  54000000	nop; delay slot nop
 1463  00002000          	L95_LF2:
 1464  00002000  200103e8	addi	r1,r0,#1000
 1465  00002004  afc1fff0	sw	-16(r30),r1
 1466  00002008          	L96_LF2:
 1467  00002008          	L94_LF2:
 1468  00002008          	L92_LF2:
 1469  00002008  8fc1fff0	lw	r1,-16(r30)
 1470  0000200c  8fc20008	lw	r2,8(r30)
 1471  00002010  0022082a	slt	r1,r1,r2
 1472  00002014  10200040	beqz	r1,L90_LF2
 1473  00002018  54000000	nop; delay slot nop
 1474  0000201c  8fc1fff4	lw	r1,-12(r30)
 1475  00002020  8fc20008	lw	r2,8(r30)
 1476  00002024  00200035	movi2fp	f0,r1
 1477  00002028  00400835	movi2fp	f1,r2
 1478  0000202c  0401000e	mult	f0,f0,f1
 1479  00002030  00000834	movfp2i	r1,f0
 1480  00002034  afc1fff4	sw	-12(r30),r1
 1481  00002038  8fc1fff4	lw	r1,-12(r30)
 1482  0000203c  8fc2fff0	lw	r2,-16(r30)
 1483  00002040  00220820	add	r1,r1,r2
 1484  00002044  afc1fff4	sw	-12(r30),r1
 1485  00002048  8fc20000	lw	r2,(r30)
 1486  0000204c  20410001	addi	r1,r2,#1
 1487  00002050  00011020	add	r2,r0,r1
 1488  00002054  afc20000	sw	(r30),r2
 1489  00002058          	L97_LF2:
 1490  00002058          	L90_LF2:
 1491  00002058  8fc1fff0	lw	r1,-16(r30)
 1492  0000205c  8fc20008	lw	r2,8(r30)
 1493  00002060  0022082a	slt	r1,r1,r2
 1494  00002064  1420000c	bnez	r1,L98_LF2
 1495  00002068  54000000	nop; delay slot nop
 1496  0000206c  0800000c	j	L89_LF2
 1497  00002070  54000000	nop; delay slot nop
 1498  00002074          	L98_LF2:
 1499  00002074  0bfffec8	j	L88_LF2
 1500  00002078  54000000	nop; delay slot nop
 1501  0000207c          	L89_LF2:
 1502  0000207c  8fc10004	lw	r1,4(r30)
 1503  00002080  64220000	snei	r2,r1,#0
 1504  00002084  10400010	beqz	r2,L99_LF2
 1505  00002088  54000000	nop; delay slot nop
 1506  0000208c  8fc10004	lw	r1,4(r30)
 1507  00002090  8fc20000	lw	r2,(r30)
 1508  00002094  ac220000	sw	(r1),r2
 1509  00002098          	L99_LF2:
 1510  00002098  8fc1fff4	lw	r1,-12(r30)
 1511  0000209c  8fc2ffec	lw	r2,-20(r30)
 1512  000020a0  00200035	movi2fp	f0,r1
 1513  000020a4  00400835	movi2fp	f1,r2
 1514  000020a8  0401000e	mult	f0,f0,f1
 1515  000020ac  00000834	movfp2i	r1,f0
 1516  000020b0  afc1fff4	sw	-12(r30),r1
 1517  000020b4  8fc1fff4	lw	r1,-12(r30)
 1518  000020b8  08000004	j	L72_LF2
 1519  000020bc  54000000	nop; delay slot nop
 1520  000020c0          	L72_LF2:
 1521  000020c0  8fa20000	lw	r2,0(r29)
 1522  000020c4  8fdffff8	lw	r31,-8(r30)
 1523  000020c8  001ee820	add	r29,r0,r30
 1524  000020cc  8fdefffc	lw	r30,-4(r30)
 1525  000020d0  4be00000	jr	r31
 1526  000020d4  54000000	nop
 1527  000020d8          	.endproc _dstrtol
 1528  000020d8          	.align 2
 1529  000020d8          	.proc _bcopy
 1530  000020d8          	.global _bcopy
 1531  000020d8          	_bcopy:
 1532                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1533  000020d8  afbefffc	sw	-4(r29),r30; push fp
 1534  000020dc  001df020	add	r30,r0,r29; fp = sp
 1535  000020e0  afbffff8	sw	-8(r29),r31; push ret addr
 1536  000020e4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1537  000020e8  afa20000	sw	0(r29),r2
 1538  000020ec  afa30004	sw	4(r29),r3
 1539  000020f0  54000000	nop
 1540  000020f4          	L101_LF2:
 1541  000020f4  8fc10008	lw	r1,8(r30)
 1542  000020f8  2022ffff	addi	r2,r1,#-1
 1543  000020fc  afc20008	sw	8(r30),r2
 1544  00002100  6c210000	sgti	r1,r1,#0
 1545  00002104  1420000c	bnez	r1,L103_LF2
 1546  00002108  54000000	nop; delay slot nop
 1547  0000210c  0800002c	j	L102_LF2
 1548  00002110  54000000	nop; delay slot nop
 1549  00002114          	L103_LF2:
 1550  00002114  8fc10004	lw	r1,4(r30)
 1551  00002118  20220001	addi	r2,r1,#1
 1552  0000211c  afc20004	sw	4(r30),r2
 1553  00002120  8fc20000	lw	r2,(r30)
 1554  00002124  20430001	addi	r3,r2,#1
 1555  00002128  afc30000	sw	(r30),r3
 1556  0000212c  80420000	lb	r2,(r2)
 1557  00002130  a0220000	sb	(r1),r2
 1558  00002134  0bffffbc	j	L101_LF2
 1559  00002138  54000000	nop; delay slot nop
 1560  0000213c          	L102_LF2:
 1561  0000213c          	L100_LF2:
 1562  0000213c  8fa20000	lw	r2,0(r29)
 1563  00002140  8fa30004	lw	r3,4(r29)
 1564  00002144  8fdffff8	lw	r31,-8(r30)
 1565  00002148  001ee820	add	r29,r0,r30
 1566  0000214c  8fdefffc	lw	r30,-4(r30)
 1567  00002150  4be00000	jr	r31
 1568  00002154  54000000	nop
 1569  00002158          	.endproc _bcopy
 1570  00002158          	.align 2
 1571  00002158          	.proc _bzero
 1572  00002158          	.global _bzero
 1573  00002158          	_bzero:
 1574                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1575  00002158  afbefffc	sw	-4(r29),r30; push fp
 1576  0000215c  001df020	add	r30,r0,r29; fp = sp
 1577  00002160  afbffff8	sw	-8(r29),r31; push ret addr
 1578  00002164  2fbd0010	subui	r29,r29,#16; alloc local storage
 1579  00002168  afa20000	sw	0(r29),r2
 1580  0000216c  54000000	nop
 1581  00002170          	L105_LF2:
 1582  00002170  8fc10004	lw	r1,4(r30)
 1583  00002174  2022ffff	addi	r2,r1,#-1
 1584  00002178  afc20004	sw	4(r30),r2
 1585  0000217c  6c210000	sgti	r1,r1,#0
 1586  00002180  1420000c	bnez	r1,L107_LF2
 1587  00002184  54000000	nop; delay slot nop
 1588  00002188  08000020	j	L106_LF2
 1589  0000218c  54000000	nop; delay slot nop
 1590  00002190          	L107_LF2:
 1591  00002190  8fc10000	lw	r1,(r30)
 1592  00002194  20220001	addi	r2,r1,#1
 1593  00002198  afc20000	sw	(r30),r2
 1594  0000219c  20020000	addi	r2,r0,(#0x0)&0xff
 1595  000021a0  a0220000	sb	(r1),r2
 1596  000021a4  0bffffc8	j	L105_LF2
 1597  000021a8  54000000	nop; delay slot nop
 1598  000021ac          	L106_LF2:
 1599  000021ac          	L104_LF2:
 1600  000021ac  8fa20000	lw	r2,0(r29)
 1601  000021b0  8fdffff8	lw	r31,-8(r30)
 1602  000021b4  001ee820	add	r29,r0,r30
 1603  000021b8  8fdefffc	lw	r30,-4(r30)
 1604  000021bc  4be00000	jr	r31
 1605  000021c0  54000000	nop
 1606  000021c4          	.endproc _bzero
 1607  000021c4          	.align 2
 1608  000021c4          	.proc _min
 1609  000021c4          	.global _min
 1610  000021c4          	_min:
 1611                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1612  000021c4  afbefffc	sw	-4(r29),r30; push fp
 1613  000021c8  001df020	add	r30,r0,r29; fp = sp
 1614  000021cc  afbffff8	sw	-8(r29),r31; push ret addr
 1615  000021d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1616  000021d4  afa20000	sw	0(r29),r2
 1617  000021d8  afa30004	sw	4(r29),r3
 1618  000021dc  8fc10000	lw	r1,(r30)
 1619  000021e0  8fc20004	lw	r2,4(r30)
 1620  000021e4  0022182c	sle	r3,r1,r2
 1621  000021e8  14600008	bnez	r3,L109_LF2
 1622  000021ec  54000000	nop; delay slot nop
 1623  000021f0  8fc10004	lw	r1,4(r30)
 1624  000021f4          	L109_LF2:
 1625  000021f4  08000004	j	L108_LF2
 1626  000021f8  54000000	nop; delay slot nop
 1627  000021fc          	L108_LF2:
 1628  000021fc  8fa20000	lw	r2,0(r29)
 1629  00002200  8fa30004	lw	r3,4(r29)
 1630  00002204  8fdffff8	lw	r31,-8(r30)
 1631  00002208  001ee820	add	r29,r0,r30
 1632  0000220c  8fdefffc	lw	r30,-4(r30)
 1633  00002210  4be00000	jr	r31
 1634  00002214  54000000	nop
 1635  00002218          	.endproc _min
 1636  00002218          	.align 2
 1637  00002218          	.proc _max
 1638  00002218          	.global _max
 1639  00002218          	_max:
 1640                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1641  00002218  afbefffc	sw	-4(r29),r30; push fp
 1642  0000221c  001df020	add	r30,r0,r29; fp = sp
 1643  00002220  afbffff8	sw	-8(r29),r31; push ret addr
 1644  00002224  2fbd0010	subui	r29,r29,#16; alloc local storage
 1645  00002228  afa20000	sw	0(r29),r2
 1646  0000222c  afa30004	sw	4(r29),r3
 1647  00002230  8fc10000	lw	r1,(r30)
 1648  00002234  8fc20004	lw	r2,4(r30)
 1649  00002238  0022182d	sge	r3,r1,r2
 1650  0000223c  14600008	bnez	r3,L111_LF2
 1651  00002240  54000000	nop; delay slot nop
 1652  00002244  8fc10004	lw	r1,4(r30)
 1653  00002248          	L111_LF2:
 1654  00002248  08000004	j	L110_LF2
 1655  0000224c  54000000	nop; delay slot nop
 1656  00002250          	L110_LF2:
 1657  00002250  8fa20000	lw	r2,0(r29)
 1658  00002254  8fa30004	lw	r3,4(r29)
 1659  00002258  8fdffff8	lw	r31,-8(r30)
 1660  0000225c  001ee820	add	r29,r0,r30
 1661  00002260  8fdefffc	lw	r30,-4(r30)
 1662  00002264  4be00000	jr	r31
 1663  00002268  54000000	nop
 1664  0000226c          	.endproc _max
 1665                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1666                      ;;;
 1667                      ;;; Most of the traps are called in files from libtraps.
 1670  0000226c          	.align 2
 1671  0000226c          	.proc _exit
 1672  0000226c          	.global _exit
 1673  0000226c          	_exit:
 1674  0000226c  44000300	trap	#0x300
 1675  00002270  4be00000	jr	r31
 1676  00002274  54000000	nop
 1677  00002278          	.endproc _exit
 1679                      ; for the benefit of gcc.
 1680  00002278          	.proc ___main
 1681  00002278          	.global ___main
 1682  00002278          	___main:
 1683  00002278  4be00000	jr	r31
 1684  0000227c  54000000	nop
 1685  00002280          	.endproc ___main
 1686  00002280          	.text
 1687  00002280          	.global _etext
 1688  00002280          	_etext:
 1689  00002280          	.align 3
 1690  00002280          	.data
 1691  000033ce          	.global _edata
 1692  000033ce          	_edata:
