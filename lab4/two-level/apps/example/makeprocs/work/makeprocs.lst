 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 1782
    4                      ; Text size: 5688
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  41667465	.ascii "After allocating 4KB character buffer, new variable has address : 0x%x"
   82  00003004  7220616c	
   82  00003008  6c6f6361	
   82  0000300c  74696e67	
   82  00003010  20344b42	
   82  00003014  20636861	
   82  00003018  72616374	
   82  0000301c  65722062	
   82  00003020  75666665	
   82  00003024  722c206e	
   82  00003028  65772076	
   82  0000302c  61726961	
   82  00003030  626c6520	
   82  00003034  68617320	
   82  00003038  61646472	
   82  0000303c  65737320	
   82  00003040  3a203078	
   82  00003044  2578    	
   83  00003046  0a00    	.ascii "\n\000"
   84  00003048          	.text
   85  000010d4          	.align 2
   86  000010d4          	.proc _consume_userstack
   87  000010d4          	.global _consume_userstack
   88  000010d4          	_consume_userstack:
   89                      ;  Function 'consume_userstack'; 4104 bytes of locals, 1 regs to save.
   90  000010d4  afbefffc	sw	-4(r29),r30; push fp
   91  000010d8  001df020	add	r30,r0,r29; fp = sp
   92  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   93  000010e0  2fbd1018	subui	r29,r29,#4120; alloc local storage
   94  000010e4  afa20000	sw	0(r29),r2
   95  000010e8  23bdfff8	addi	r29,r29,#-8
   96  000010ec  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
   97  000010f0  24423000	addui	r2,r2,(LC0_LF0)&0xffff
   98  000010f4  afa20000	sw	(r29),r2
   99  000010f8  23c1eff4	addi	r1,r30,#-4108
  100  000010fc  afa10004	sw	4(r29),r1
  101  00001100  0c00066c	jal	_Printf
  102  00001104  54000000	nop; not filled.
  103  00001108  23bd0008	addi	r29,r29,#8
  104  0000110c  8fa20000	lw	r2,0(r29)
  105  00001110  8fdffff8	lw	r31,-8(r30)
  106  00001114  001ee820	add	r29,r0,r30
  107  00001118  8fdefffc	lw	r30,-4(r30)
  108  0000111c  4be00000	jr	r31
  109  00001120  54000000	nop
  110  00001124          	.endproc _consume_userstack
  111  00001124          	.data
  112  00003048          	.align 2
  113  00003048          	LC1_LF0:
  114  00003048  55736167	.ascii "Usage: %s <number of hello world processes to create>\n\000"
  114  0000304c  653a2025	
  114  00003050  73203c6e	
  114  00003054  756d6265	
  114  00003058  72206f66	
  114  0000305c  2068656c	
  114  00003060  6c6f2077	
  114  00003064  6f726c64	
  114  00003068  2070726f	
  114  0000306c  63657373	
  114  00003070  65732074	
  114  00003074  6f206372	
  114  00003078  65617465	
  114  0000307c  3e0a00  	
  115  0000307f          	.align 2
  116  00003080          	LC2_LF0:
  117  00003080  2d2d2d2d	.ascii "------------------------User Process Execution Menu (Enter choice numb"
  117  00003084  2d2d2d2d	
  117  00003088  2d2d2d2d	
  117  0000308c  2d2d2d2d	
  117  00003090  2d2d2d2d	
  117  00003094  2d2d2d2d	
  117  00003098  55736572	
  117  0000309c  2050726f	
  117  000030a0  63657373	
  117  000030a4  20457865	
  117  000030a8  63757469	
  117  000030ac  6f6e204d	
  117  000030b0  656e7520	
  117  000030b4  28456e74	
  117  000030b8  65722063	
  117  000030bc  686f6963	
  117  000030c0  65206e75	
  117  000030c4  6d62    	
  118  000030c6  6572292d	.ascii "er)--------------------\n\000"
  118  000030ca  2d2d2d2d	
  118  000030ce  2d2d2d2d	
  118  000030d2  2d2d2d2d	
  118  000030d6  2d2d2d2d	
  118  000030da  2d2d2d0a	
  118  000030de  00      	
  119  000030df          	.align 2
  120  000030e0          	LC3_LF0:
  121  000030e0  312e5275	.ascii "1.Run Hello World process\n\000"
  121  000030e4  6e204865	
  121  000030e8  6c6c6f20	
  121  000030ec  576f726c	
  121  000030f0  64207072	
  121  000030f4  6f636573	
  121  000030f8  730a00  	
  122  000030fb          	.align 2
  123  000030fc          	LC4_LF0:
  124  000030fc  322e4163	.ascii "2.Access memory outside allocated process pages\n\000"
  124  00003100  63657373	
  124  00003104  206d656d	
  124  00003108  6f727920	
  124  0000310c  6f757473	
  124  00003110  69646520	
  124  00003114  616c6c6f	
  124  00003118  63617465	
  124  0000311c  64207072	
  124  00003120  6f636573	
  124  00003124  73207061	
  124  00003128  6765730a	
  124  0000312c  00      	
  125  0000312d          	.align 2
  126  00003130          	LC5_LF0:
  127  00003130  332e4361	.ascii "3.Cause user stack to grow more than 1 page\n\000"
  127  00003134  75736520	
  127  00003138  75736572	
  127  0000313c  20737461	
  127  00003140  636b2074	
  127  00003144  6f206772	
  127  00003148  6f77206d	
  127  0000314c  6f726520	
  127  00003150  7468616e	
  127  00003154  20312070	
  127  00003158  6167650a	
  127  0000315c  00      	
  128  0000315d          	.align 2
  129  00003160          	LC6_LF0:
  130  00003160  342e4361	.ascii "4.Call Hello World program 100 in a row\n\000"
  130  00003164  6c6c2048	
  130  00003168  656c6c6f	
  130  0000316c  20576f72	
  130  00003170  6c642070	
  130  00003174  726f6772	
  130  00003178  616d2031	
  130  0000317c  30302069	
  130  00003180  6e206120	
  130  00003184  726f770a	
  130  00003188  00      	
  131  00003189          	.align 2
  132  0000318c          	LC7_LF0:
  133  0000318c  352e5370	.ascii "5.Spwan 330 processes simultaenously to count to a large value\n\000"
  133  00003190  77616e20	
  133  00003194  33333020	
  133  00003198  70726f63	
  133  0000319c  65737365	
  133  000031a0  73207369	
  133  000031a4  6d756c74	
  133  000031a8  61656e6f	
  133  000031ac  75736c79	
  133  000031b0  20746f20	
  133  000031b4  636f756e	
  133  000031b8  7420746f	
  133  000031bc  2061206c	
  133  000031c0  61726765	
  133  000031c4  2076616c	
  133  000031c8  75650a00	
  134  000031cc          	.align 2
  135  000031cc          	LC8_LF0:
  136  000031cc  362e4163	.ascii "6.Access memory beyond the virtual memory address space\n\000"
  136  000031d0  63657373	
  136  000031d4  206d656d	
  136  000031d8  6f727920	
  136  000031dc  6265796f	
  136  000031e0  6e642074	
  136  000031e4  68652076	
  136  000031e8  69727475	
  136  000031ec  616c206d	
  136  000031f0  656d6f72	
  136  000031f4  79206164	
  136  000031f8  64726573	
  136  000031fc  73207370	
  136  00003200  6163650a	
  136  00003204  00      	
  137  00003205          	.align 2
  138  00003208          	LC9_LF0:
  139  00003208  6d616b65	.ascii "makeprocs (%d): Creating %d hello_world processes\n\000"
  139  0000320c  70726f63	
  139  00003210  73202825	
  139  00003214  64293a20	
  139  00003218  43726561	
  139  0000321c  74696e67	
  139  00003220  20256420	
  139  00003224  68656c6c	
  139  00003228  6f5f776f	
  139  0000322c  726c6420	
  139  00003230  70726f63	
  139  00003234  65737365	
  139  00003238  730a00  	
  140  0000323b          	.align 2
  141  0000323c          	LC10_LF0:
  142  0000323c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
  142  00003240  70726f63	
  142  00003244  73202825	
  142  00003248  64293a20	
  142  0000324c  42616420	
  142  00003250  73656d5f	
  142  00003254  63726561	
  142  00003258  74650a00	
  143  0000325c          	.align 2
  144  0000325c          	LC11_LF0:
  145  0000325c  2d2d2d2d	.ascii "-------------------------------Part 1------------------------------\n\000"
  145  00003260  2d2d2d2d	
  145  00003264  2d2d2d2d	
  145  00003268  2d2d2d2d	
  145  0000326c  2d2d2d2d	
  145  00003270  2d2d2d2d	
  145  00003274  2d2d2d2d	
  145  00003278  2d2d2d50	
  145  0000327c  61727420	
  145  00003280  312d2d2d	
  145  00003284  2d2d2d2d	
  145  00003288  2d2d2d2d	
  145  0000328c  2d2d2d2d	
  145  00003290  2d2d2d2d	
  145  00003294  2d2d2d2d	
  145  00003298  2d2d2d2d	
  145  0000329c  2d2d2d0a	
  145  000032a0  00      	
  146  000032a1          	.align 2
  147  000032a4          	LC12_LF0:
  148  000032a4  6d616b65	.ascii "makeprocs (%d): Creating 1 hello world process\n\000"
  148  000032a8  70726f63	
  148  000032ac  73202825	
  148  000032b0  64293a20	
  148  000032b4  43726561	
  148  000032b8  74696e67	
  148  000032bc  20312068	
  148  000032c0  656c6c6f	
  148  000032c4  20776f72	
  148  000032c8  6c642070	
  148  000032cc  726f6365	
  148  000032d0  73730a00	
  149  000032d4          	.align 2
  150  000032d4          	LC13_LF0:
  151  000032d4  68656c6c	.ascii "hello_world.dlx.obj\000"
  151  000032d8  6f5f776f	
  151  000032dc  726c642e	
  151  000032e0  646c782e	
  151  000032e4  6f626a00	
  152  000032e8          	.align 2
  153  000032e8          	LC14_LF0:
  154  000032e8  2d2d2d2d	.ascii "-------------------------------Part 2-------------------------------\n"
  154  000032ec  2d2d2d2d	
  154  000032f0  2d2d2d2d	
  154  000032f4  2d2d2d2d	
  154  000032f8  2d2d2d2d	
  154  000032fc  2d2d2d2d	
  154  00003300  2d2d2d2d	
  154  00003304  2d2d2d50	
  154  00003308  61727420	
  154  0000330c  322d2d2d	
  154  00003310  2d2d2d2d	
  154  00003314  2d2d2d2d	
  154  00003318  2d2d2d2d	
  154  0000331c  2d2d2d2d	
  154  00003320  2d2d2d2d	
  154  00003324  2d2d2d2d	
  154  00003328  2d2d2d2d	
  154  0000332c  0a      	
  155  0000332d  00      	.ascii "\000"
  156  0000332e          	.align 2
  157  00003330          	LC15_LF0:
  158  00003330  43726561	.ascii "Creating child process : %s\n\000"
  158  00003334  74696e67	
  158  00003338  20636869	
  158  0000333c  6c642070	
  158  00003340  726f6365	
  158  00003344  7373203a	
  158  00003348  2025730a	
  158  0000334c  00      	
  159  0000334d          	.align 2
  160  00003350          	LC16_LF0:
  161  00003350  70617274	.ascii "part2.dlx.obj\000"
  161  00003354  322e646c	
  161  00003358  782e6f62	
  161  0000335c  6a00    	
  162  0000335e          	.align 2
  163  00003360          	LC17_LF0:
  164  00003360  5369676e	.ascii "Signal from child process (that accesses virtual address outside alloc"
  164  00003364  616c2066	
  164  00003368  726f6d20	
  164  0000336c  6368696c	
  164  00003370  64207072	
  164  00003374  6f636573	
  164  00003378  73202874	
  164  0000337c  68617420	
  164  00003380  61636365	
  164  00003384  73736573	
  164  00003388  20766972	
  164  0000338c  7475616c	
  164  00003390  20616464	
  164  00003394  72657373	
  164  00003398  206f7574	
  164  0000339c  73696465	
  164  000033a0  20616c6c	
  164  000033a4  6f63    	
  165  000033a6  61746564	.ascii "ated pages)\n\000"
  165  000033aa  20706167	
  165  000033ae  6573290a	
  165  000033b2  00      	
  166  000033b3          	.align 2
  167  000033b4          	LC18_LF0:
  168  000033b4  2d2d2d2d	.ascii "-------------------------------Part 3-------------------------------\n"
  168  000033b8  2d2d2d2d	
  168  000033bc  2d2d2d2d	
  168  000033c0  2d2d2d2d	
  168  000033c4  2d2d2d2d	
  168  000033c8  2d2d2d2d	
  168  000033cc  2d2d2d2d	
  168  000033d0  2d2d2d50	
  168  000033d4  61727420	
  168  000033d8  332d2d2d	
  168  000033dc  2d2d2d2d	
  168  000033e0  2d2d2d2d	
  168  000033e4  2d2d2d2d	
  168  000033e8  2d2d2d2d	
  168  000033ec  2d2d2d2d	
  168  000033f0  2d2d2d2d	
  168  000033f4  2d2d2d2d	
  168  000033f8  0a      	
  169  000033f9  00      	.ascii "\000"
  170  000033fa          	.align 2
  171  000033fc          	LC19_LF0:
  172  000033fc  2d2d2d2d	.ascii "-------------------------------Part 4-------------------------------\n"
  172  00003400  2d2d2d2d	
  172  00003404  2d2d2d2d	
  172  00003408  2d2d2d2d	
  172  0000340c  2d2d2d2d	
  172  00003410  2d2d2d2d	
  172  00003414  2d2d2d2d	
  172  00003418  2d2d2d50	
  172  0000341c  61727420	
  172  00003420  342d2d2d	
  172  00003424  2d2d2d2d	
  172  00003428  2d2d2d2d	
  172  0000342c  2d2d2d2d	
  172  00003430  2d2d2d2d	
  172  00003434  2d2d2d2d	
  172  00003438  2d2d2d2d	
  172  0000343c  2d2d2d2d	
  172  00003440  0a      	
  173  00003441  00      	.ascii "\000"
  174  00003442          	.align 2
  175  00003444          	LC20_LF0:
  176  00003444  43726561	.ascii "Creating a row of 100 Hello World processes in sequence to test correc"
  176  00003448  74696e67	
  176  0000344c  20612072	
  176  00003450  6f77206f	
  176  00003454  66203130	
  176  00003458  30204865	
  176  0000345c  6c6c6f20	
  176  00003460  576f726c	
  176  00003464  64207072	
  176  00003468  6f636573	
  176  0000346c  73657320	
  176  00003470  696e2073	
  176  00003474  65717565	
  176  00003478  6e636520	
  176  0000347c  746f2074	
  176  00003480  65737420	
  176  00003484  636f7272	
  176  00003488  6563    	
  177  0000348a  74206d65	.ascii "t memory paging allocation and deallocation\n\000"
  177  0000348e  6d6f7279	
  177  00003492  20706167	
  177  00003496  696e6720	
  177  0000349a  616c6c6f	
  177  0000349e  63617469	
  177  000034a2  6f6e2061	
  177  000034a6  6e642064	
  177  000034aa  65616c6c	
  177  000034ae  6f636174	
  177  000034b2  696f6e0a	
  177  000034b6  00      	
  178  000034b7          	.align 2
  179  000034b8          	LC21_LF0:
  180  000034b8  6d616b65	.ascii "makeprocs (%d): Creating hello world #%d\n\000"
  180  000034bc  70726f63	
  180  000034c0  73202825	
  180  000034c4  64293a20	
  180  000034c8  43726561	
  180  000034cc  74696e67	
  180  000034d0  2068656c	
  180  000034d4  6c6f2077	
  180  000034d8  6f726c64	
  180  000034dc  20232564	
  180  000034e0  0a00    	
  181  000034e2          	.align 2
  182  000034e4          	LC22_LF0:
  183  000034e4  42616420	.ascii "Bad semaphore s_procs_completed (%d) in %s\n\000"
  183  000034e8  73656d61	
  183  000034ec  70686f72	
  183  000034f0  6520735f	
  183  000034f4  70726f63	
  183  000034f8  735f636f	
  183  000034fc  6d706c65	
  183  00003500  74656420	
  183  00003504  28256429	
  183  00003508  20696e20	
  183  0000350c  25730a00	
  184  00003510          	.align 2
  185  00003510          	LC23_LF0:
  186  00003510  436f6d70	.ascii "Completed execution of 100 sequential Hello World processes with succe"
  186  00003514  6c657465	
  186  00003518  64206578	
  186  0000351c  65637574	
  186  00003520  696f6e20	
  186  00003524  6f662031	
  186  00003528  30302073	
  186  0000352c  65717565	
  186  00003530  6e746961	
  186  00003534  6c204865	
  186  00003538  6c6c6f20	
  186  0000353c  576f726c	
  186  00003540  64207072	
  186  00003544  6f636573	
  186  00003548  73657320	
  186  0000354c  77697468	
  186  00003550  20737563	
  186  00003554  6365    	
  187  00003556  73736675	.ascii "ssful memory management\n\000"
  187  0000355a  6c206d65	
  187  0000355e  6d6f7279	
  187  00003562  206d616e	
  187  00003566  6167656d	
  187  0000356a  656e740a	
  187  0000356e  00      	
  188  0000356f          	.align 2
  189  00003570          	LC24_LF0:
  190  00003570  2d2d2d2d	.ascii "-----------------------------Part 5----------------------------------\n"
  190  00003574  2d2d2d2d	
  190  00003578  2d2d2d2d	
  190  0000357c  2d2d2d2d	
  190  00003580  2d2d2d2d	
  190  00003584  2d2d2d2d	
  190  00003588  2d2d2d2d	
  190  0000358c  2d506172	
  190  00003590  7420352d	
  190  00003594  2d2d2d2d	
  190  00003598  2d2d2d2d	
  190  0000359c  2d2d2d2d	
  190  000035a0  2d2d2d2d	
  190  000035a4  2d2d2d2d	
  190  000035a8  2d2d2d2d	
  190  000035ac  2d2d2d2d	
  190  000035b0  2d2d2d2d	
  190  000035b4  2d0a    	
  191  000035b6  00      	.ascii "\000"
  192  000035b7          	.align 2
  193  000035b8          	LC25_LF0:
  194  000035b8  6d616b65	.ascii "makeprocs (%d): Creating counting process, spawn_counting #%d\n\000"
  194  000035bc  70726f63	
  194  000035c0  73202825	
  194  000035c4  64293a20	
  194  000035c8  43726561	
  194  000035cc  74696e67	
  194  000035d0  20636f75	
  194  000035d4  6e74696e	
  194  000035d8  67207072	
  194  000035dc  6f636573	
  194  000035e0  732c2073	
  194  000035e4  7061776e	
  194  000035e8  5f636f75	
  194  000035ec  6e74696e	
  194  000035f0  67202325	
  194  000035f4  640a00  	
  195  000035f7          	.align 2
  196  000035f8          	LC26_LF0:
  197  000035f8  73706177	.ascii "spawn_counting.dlx.obj\000"
  197  000035fc  6e5f636f	
  197  00003600  756e7469	
  197  00003604  6e672e64	
  197  00003608  6c782e6f	
  197  0000360c  626a00  	
  198  0000360f          	.align 2
  199  00003610          	LC27_LF0:
  200  00003610  2d2d2d2d	.ascii "-------------------------------Part 6--------------------------------\n"
  200  00003614  2d2d2d2d	
  200  00003618  2d2d2d2d	
  200  0000361c  2d2d2d2d	
  200  00003620  2d2d2d2d	
  200  00003624  2d2d2d2d	
  200  00003628  2d2d2d2d	
  200  0000362c  2d2d2d50	
  200  00003630  61727420	
  200  00003634  362d2d2d	
  200  00003638  2d2d2d2d	
  200  0000363c  2d2d2d2d	
  200  00003640  2d2d2d2d	
  200  00003644  2d2d2d2d	
  200  00003648  2d2d2d2d	
  200  0000364c  2d2d2d2d	
  200  00003650  2d2d2d2d	
  200  00003654  2d0a    	
  201  00003656  00      	.ascii "\000"
  202  00003657          	.align 2
  203  00003658          	LC28_LF0:
  204  00003658  2d2d2d2d	.ascii "----------------------------------------------------------------------"
  204  0000365c  2d2d2d2d	
  204  00003660  2d2d2d2d	
  204  00003664  2d2d2d2d	
  204  00003668  2d2d2d2d	
  204  0000366c  2d2d2d2d	
  204  00003670  2d2d2d2d	
  204  00003674  2d2d2d2d	
  204  00003678  2d2d2d2d	
  204  0000367c  2d2d2d2d	
  204  00003680  2d2d2d2d	
  204  00003684  2d2d2d2d	
  204  00003688  2d2d2d2d	
  204  0000368c  2d2d2d2d	
  204  00003690  2d2d2d2d	
  204  00003694  2d2d2d2d	
  204  00003698  2d2d2d2d	
  204  0000369c  2d2d    	
  205  0000369e  2d2d2d2d	.ascii "---------------\n\000"
  205  000036a2  2d2d2d2d	
  205  000036a6  2d2d2d2d	
  205  000036aa  2d2d2d0a	
  205  000036ae  00      	
  206  000036af          	.align 2
  207  000036b0          	LC29_LF0:
  208  000036b0  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  208  000036b4  70726f63	
  208  000036b8  73202825	
  208  000036bc  64293a20	
  208  000036c0  416c6c20	
  208  000036c4  6f746865	
  208  000036c8  72207072	
  208  000036cc  6f636573	
  208  000036d0  73657320	
  208  000036d4  636f6d70	
  208  000036d8  6c657465	
  208  000036dc  642c2065	
  208  000036e0  78697469	
  208  000036e4  6e67206d	
  208  000036e8  61696e20	
  208  000036ec  70726f63	
  208  000036f0  6573732e	
  208  000036f4  0a      	
  209  000036f5  00      	.ascii "\000"
  210  000036f6          	.text
  211  00001124          	.align 2
  212  00001124          	.proc _main
  213  00001124          	.global _main
  214  00001124          	_main:
  215                      ;  Function 'main'; 4120 bytes of locals, 0 regs to save.
  216  00001124  afbefffc	sw	-4(r29),r30; push fp
  217  00001128  001df020	add	r30,r0,r29; fp = sp
  218  0000112c  afbffff8	sw	-8(r29),r31; push ret addr
  219  00001130  2fbd1020	subui	r29,r29,#4128; alloc local storage
  220  00001134  8fc20000	lw	r2,(r30)
  221  00001138  8fc50004	lw	r5,4(r30)
  222  0000113c  0c0014f0	jal	___main
  223  00001140  54000000	nop; not filled.
  224  00001144  64410002	snei	r1,r2,#2
  225  00001148  10200030	beqz	r1,L16_LF0
  226  0000114c  54000000	nop; not filled.
  227  00001150  23bdfff8	addi	r29,r29,#-8
  228  00001154  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  229  00001158  24c63048	addui	r6,r6,(LC1_LF0)&0xffff
  230  0000115c  afa60000	sw	(r29),r6
  231  00001160  8ca10000	lw	r1,(r5)
  232  00001164  afa10004	sw	4(r29),r1
  233  00001168  0c000604	jal	_Printf
  234  0000116c  54000000	nop; not filled.
  235  00001170  0c000704	jal	_Exit
  236  00001174  54000000	nop; not filled.
  237  00001178  23bd0008	addi	r29,r29,#8
  238  0000117c          	L16_LF0:
  239  0000117c  23bdfff8	addi	r29,r29,#-8
  240  00001180  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  241  00001184  24c63080	addui	r6,r6,(LC2_LF0)&0xffff
  242  00001188  afa60000	sw	(r29),r6
  243  0000118c  0c0005e0	jal	_Printf
  244  00001190  54000000	nop; not filled.
  245  00001194  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  246  00001198  24c630e0	addui	r6,r6,(LC3_LF0)&0xffff
  247  0000119c  afa60000	sw	(r29),r6
  248  000011a0  0c0005cc	jal	_Printf
  249  000011a4  54000000	nop; not filled.
  250  000011a8  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  251  000011ac  24c630fc	addui	r6,r6,(LC4_LF0)&0xffff
  252  000011b0  afa60000	sw	(r29),r6
  253  000011b4  0c0005b8	jal	_Printf
  254  000011b8  54000000	nop; not filled.
  255  000011bc  3c060000	lhi	r6,((LC5_LF0)>>16)&0xffff
  256  000011c0  24c63130	addui	r6,r6,(LC5_LF0)&0xffff
  257  000011c4  afa60000	sw	(r29),r6
  258  000011c8  0c0005a4	jal	_Printf
  259  000011cc  54000000	nop; not filled.
  260  000011d0  3c060000	lhi	r6,((LC6_LF0)>>16)&0xffff
  261  000011d4  24c63160	addui	r6,r6,(LC6_LF0)&0xffff
  262  000011d8  afa60000	sw	(r29),r6
  263  000011dc  0c000590	jal	_Printf
  264  000011e0  54000000	nop; not filled.
  265  000011e4  3c060000	lhi	r6,((LC7_LF0)>>16)&0xffff
  266  000011e8  24c6318c	addui	r6,r6,(LC7_LF0)&0xffff
  267  000011ec  afa60000	sw	(r29),r6
  268  000011f0  0c00057c	jal	_Printf
  269  000011f4  54000000	nop; not filled.
  270  000011f8  3c060000	lhi	r6,((LC8_LF0)>>16)&0xffff
  271  000011fc  24c631cc	addui	r6,r6,(LC8_LF0)&0xffff
  272  00001200  afa60000	sw	(r29),r6
  273  00001204  0c000568	jal	_Printf
  274  00001208  54000000	nop; not filled.
  275  0000120c  23bdfff8	addi	r29,r29,#-8
  276  00001210  8ca60004	lw	r6,4(r5)
  277  00001214  afa60000	sw	(r29),r6
  278  00001218  20060000	addi	r6,r0,#0
  279  0000121c  afa60004	sw	4(r29),r6
  280  00001220  2006000a	addi	r6,r0,#10
  281  00001224  afa60008	sw	8(r29),r6
  282  00001228  0c000f08	jal	_dstrtol
  283  0000122c  54000000	nop; not filled.
  284  00001230  00011020	add	r2,r0,r1
  285  00001234  0c000544	jal	_getpid
  286  00001238  54000000	nop; not filled.
  287  0000123c  3c060000	lhi	r6,((LC9_LF0)>>16)&0xffff
  288  00001240  24c63208	addui	r6,r6,(LC9_LF0)&0xffff
  289  00001244  afa60000	sw	(r29),r6
  290  00001248  afa10004	sw	4(r29),r1
  291  0000124c  afa20008	sw	8(r29),r2
  292  00001250  0c00051c	jal	_Printf
  293  00001254  54000000	nop; not filled.
  294  00001258  20060000	addi	r6,r0,#0
  295  0000125c  afa60000	sw	(r29),r6
  296  00001260  0c000548	jal	_sem_create
  297  00001264  54000000	nop; not filled.
  298  00001268  00012020	add	r4,r0,r1
  299  0000126c  23bd0010	addi	r29,r29,#16
  300  00001270  6081ffff	seqi	r1,r4,#-1
  301  00001274  10200034	beqz	r1,L17_LF0
  302  00001278  54000000	nop; not filled.
  303  0000127c  0c0004fc	jal	_getpid
  304  00001280  54000000	nop; not filled.
  305  00001284  23bdfff8	addi	r29,r29,#-8
  306  00001288  3c060000	lhi	r6,((LC10_LF0)>>16)&0xffff
  307  0000128c  24c6323c	addui	r6,r6,(LC10_LF0)&0xffff
  308  00001290  afa60000	sw	(r29),r6
  309  00001294  afa10004	sw	4(r29),r1
  310  00001298  0c0004d4	jal	_Printf
  311  0000129c  54000000	nop; not filled.
  312  000012a0  0c0005d4	jal	_Exit
  313  000012a4  54000000	nop; not filled.
  314  000012a8  23bd0008	addi	r29,r29,#8
  315  000012ac          	L17_LF0:
  316  000012ac  23bdfff8	addi	r29,r29,#-8
  317  000012b0  afa40000	sw	(r29),r4
  318  000012b4  23c2ffe8	addi	r2,r30,#-24
  319  000012b8  afa20004	sw	4(r29),r2
  320  000012bc  0c000ce8	jal	_ditoa
  321  000012c0  54000000	nop; not filled.
  322  000012c4  3c060000	lhi	r6,((LC11_LF0)>>16)&0xffff
  323  000012c8  24c6325c	addui	r6,r6,(LC11_LF0)&0xffff
  324  000012cc  afa60000	sw	(r29),r6
  325  000012d0  0c00049c	jal	_Printf
  326  000012d4  54000000	nop; not filled.
  327  000012d8  3c060000	lhi	r6,((LC12_LF0)>>16)&0xffff
  328  000012dc  24c632a4	addui	r6,r6,(LC12_LF0)&0xffff
  329  000012e0  afa60000	sw	(r29),r6
  330  000012e4  0c000488	jal	_Printf
  331  000012e8  54000000	nop; not filled.
  332  000012ec  23bdfff8	addi	r29,r29,#-8
  333  000012f0  3c060000	lhi	r6,((LC13_LF0)>>16)&0xffff
  334  000012f4  24c632d4	addui	r6,r6,(LC13_LF0)&0xffff
  335  000012f8  afa60000	sw	(r29),r6
  336  000012fc  afa20004	sw	4(r29),r2
  337  00001300  20060000	addi	r6,r0,#0
  338  00001304  afa60008	sw	8(r29),r6
  339  00001308  0c00047c	jal	_process_create
  340  0000130c  54000000	nop; not filled.
  341  00001310  afa40000	sw	(r29),r4
  342  00001314  0c0004a0	jal	_sem_wait
  343  00001318  54000000	nop; not filled.
  344  0000131c  3c060000	lhi	r6,((LC14_LF0)>>16)&0xffff
  345  00001320  24c632e8	addui	r6,r6,(LC14_LF0)&0xffff
  346  00001324  afa60000	sw	(r29),r6
  347  00001328  0c000444	jal	_Printf
  348  0000132c  54000000	nop; not filled.
  349  00001330  3c060000	lhi	r6,((LC15_LF0)>>16)&0xffff
  350  00001334  24c63330	addui	r6,r6,(LC15_LF0)&0xffff
  351  00001338  afa60000	sw	(r29),r6
  352  0000133c  3c030000	lhi	r3,((LC16_LF0)>>16)&0xffff
  353  00001340  24633350	addui	r3,r3,(LC16_LF0)&0xffff
  354  00001344  afa30004	sw	4(r29),r3
  355  00001348  0c000424	jal	_Printf
  356  0000134c  54000000	nop; not filled.
  357  00001350  20060000	addi	r6,r0,#0
  358  00001354  afa60000	sw	(r29),r6
  359  00001358  0c000450	jal	_sem_create
  360  0000135c  54000000	nop; not filled.
  361  00001360  00012020	add	r4,r0,r1
  362  00001364  23bd0010	addi	r29,r29,#16
  363  00001368  6081ffff	seqi	r1,r4,#-1
  364  0000136c  10200034	beqz	r1,L18_LF0
  365  00001370  54000000	nop; not filled.
  366  00001374  0c000404	jal	_getpid
  367  00001378  54000000	nop; not filled.
  368  0000137c  23bdfff8	addi	r29,r29,#-8
  369  00001380  3c060000	lhi	r6,((LC10_LF0)>>16)&0xffff
  370  00001384  24c6323c	addui	r6,r6,(LC10_LF0)&0xffff
  371  00001388  afa60000	sw	(r29),r6
  372  0000138c  afa10004	sw	4(r29),r1
  373  00001390  0c0003dc	jal	_Printf
  374  00001394  54000000	nop; not filled.
  375  00001398  0c0004dc	jal	_Exit
  376  0000139c  54000000	nop; not filled.
  377  000013a0  23bd0008	addi	r29,r29,#8
  378  000013a4          	L18_LF0:
  379  000013a4  23bdfff8	addi	r29,r29,#-8
  380  000013a8  afa40000	sw	(r29),r4
  381  000013ac  afa20004	sw	4(r29),r2
  382  000013b0  0c000bf4	jal	_ditoa
  383  000013b4  54000000	nop; not filled.
  384  000013b8  23bdfff8	addi	r29,r29,#-8
  385  000013bc  afa30000	sw	(r29),r3
  386  000013c0  afa20004	sw	4(r29),r2
  387  000013c4  20060000	addi	r6,r0,#0
  388  000013c8  afa60008	sw	8(r29),r6
  389  000013cc  0c0003b8	jal	_process_create
  390  000013d0  54000000	nop; not filled.
  391  000013d4  afa40000	sw	(r29),r4
  392  000013d8  0c0003dc	jal	_sem_wait
  393  000013dc  54000000	nop; not filled.
  394  000013e0  3c060000	lhi	r6,((LC17_LF0)>>16)&0xffff
  395  000013e4  24c63360	addui	r6,r6,(LC17_LF0)&0xffff
  396  000013e8  afa60000	sw	(r29),r6
  397  000013ec  0c000380	jal	_Printf
  398  000013f0  54000000	nop; not filled.
  399  000013f4  3c060000	lhi	r6,((LC18_LF0)>>16)&0xffff
  400  000013f8  24c633b4	addui	r6,r6,(LC18_LF0)&0xffff
  401  000013fc  afa60000	sw	(r29),r6
  402  00001400  0c00036c	jal	_Printf
  403  00001404  54000000	nop; not filled.
  404  00001408  23bd0010	addi	r29,r29,#16
  405  0000140c  23bdfff8	addi	r29,r29,#-8
  406  00001410  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  407  00001414  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  408  00001418  afa60000	sw	(r29),r6
  409  0000141c  23c1efe4	addi	r1,r30,#-4124
  410  00001420  afa10004	sw	4(r29),r1
  411  00001424  0c000348	jal	_Printf
  412  00001428  54000000	nop; not filled.
  413  0000142c  23bd0008	addi	r29,r29,#8
  414  00001430  23bdfff8	addi	r29,r29,#-8
  415  00001434  3c060000	lhi	r6,((LC19_LF0)>>16)&0xffff
  416  00001438  24c633fc	addui	r6,r6,(LC19_LF0)&0xffff
  417  0000143c  afa60000	sw	(r29),r6
  418  00001440  0c00032c	jal	_Printf
  419  00001444  54000000	nop; not filled.
  420  00001448  20060000	addi	r6,r0,#0
  421  0000144c  afa60000	sw	(r29),r6
  422  00001450  0c000358	jal	_sem_create
  423  00001454  54000000	nop; not filled.
  424  00001458  00012020	add	r4,r0,r1
  425  0000145c  23bd0008	addi	r29,r29,#8
  426  00001460  6081ffff	seqi	r1,r4,#-1
  427  00001464  10200034	beqz	r1,L20_LF0
  428  00001468  54000000	nop; not filled.
  429  0000146c  0c00030c	jal	_getpid
  430  00001470  54000000	nop; not filled.
  431  00001474  23bdfff8	addi	r29,r29,#-8
  432  00001478  3c060000	lhi	r6,((LC10_LF0)>>16)&0xffff
  433  0000147c  24c6323c	addui	r6,r6,(LC10_LF0)&0xffff
  434  00001480  afa60000	sw	(r29),r6
  435  00001484  afa10004	sw	4(r29),r1
  436  00001488  0c0002e4	jal	_Printf
  437  0000148c  54000000	nop; not filled.
  438  00001490  0c0003e4	jal	_Exit
  439  00001494  54000000	nop; not filled.
  440  00001498  23bd0008	addi	r29,r29,#8
  441  0000149c          	L20_LF0:
  442  0000149c  23bdfff8	addi	r29,r29,#-8
  443  000014a0  afa40000	sw	(r29),r4
  444  000014a4  afa20004	sw	4(r29),r2
  445  000014a8  0c000afc	jal	_ditoa
  446  000014ac  54000000	nop; not filled.
  447  000014b0  3c060000	lhi	r6,((LC20_LF0)>>16)&0xffff
  448  000014b4  24c63444	addui	r6,r6,(LC20_LF0)&0xffff
  449  000014b8  afa60000	sw	(r29),r6
  450  000014bc  0c0002b0	jal	_Printf
  451  000014c0  54000000	nop; not filled.
  452  000014c4  20030000	addi	r3,r0,#0
  453  000014c8  23bd0008	addi	r29,r29,#8
  454  000014cc          	L24_LF0:
  455  000014cc  0c0002ac	jal	_getpid
  456  000014d0  54000000	nop; not filled.
  457  000014d4  23bdfff0	addi	r29,r29,#-16
  458  000014d8  3c060000	lhi	r6,((LC21_LF0)>>16)&0xffff
  459  000014dc  24c634b8	addui	r6,r6,(LC21_LF0)&0xffff
  460  000014e0  afa60000	sw	(r29),r6
  461  000014e4  afa10004	sw	4(r29),r1
  462  000014e8  afa30008	sw	8(r29),r3
  463  000014ec  0c000280	jal	_Printf
  464  000014f0  54000000	nop; not filled.
  465  000014f4  3c060000	lhi	r6,((LC13_LF0)>>16)&0xffff
  466  000014f8  24c632d4	addui	r6,r6,(LC13_LF0)&0xffff
  467  000014fc  afa60000	sw	(r29),r6
  468  00001500  afa20004	sw	4(r29),r2
  469  00001504  20060000	addi	r6,r0,#0
  470  00001508  afa60008	sw	8(r29),r6
  471  0000150c  0c000278	jal	_process_create
  472  00001510  54000000	nop; not filled.
  473  00001514  afa40000	sw	(r29),r4
  474  00001518  0c00029c	jal	_sem_wait
  475  0000151c  54000000	nop; not filled.
  476  00001520  23bd0010	addi	r29,r29,#16
  477  00001524  64210001	snei	r1,r1,#1
  478  00001528  10200034	beqz	r1,L23_LF0
  479  0000152c  54000000	nop; not filled.
  480  00001530  23bdfff0	addi	r29,r29,#-16
  481  00001534  3c060000	lhi	r6,((LC22_LF0)>>16)&0xffff
  482  00001538  24c634e4	addui	r6,r6,(LC22_LF0)&0xffff
  483  0000153c  afa60000	sw	(r29),r6
  484  00001540  afa40004	sw	4(r29),r4
  485  00001544  8ca60000	lw	r6,(r5)
  486  00001548  afa60008	sw	8(r29),r6
  487  0000154c  0c000220	jal	_Printf
  488  00001550  54000000	nop; not filled.
  489  00001554  0c000320	jal	_Exit
  490  00001558  54000000	nop; not filled.
  491  0000155c  23bd0010	addi	r29,r29,#16
  492  00001560          	L23_LF0:
  493  00001560  20630001	addi	r3,r3,#1
  494  00001564  70610063	slei	r1,r3,#99
  495  00001568  1420ff60	bnez	r1,L24_LF0
  496  0000156c  54000000	nop; not filled.
  497  00001570  23bdfff8	addi	r29,r29,#-8
  498  00001574  3c060000	lhi	r6,((LC23_LF0)>>16)&0xffff
  499  00001578  24c63510	addui	r6,r6,(LC23_LF0)&0xffff
  500  0000157c  afa60000	sw	(r29),r6
  501  00001580  0c0001ec	jal	_Printf
  502  00001584  54000000	nop; not filled.
  503  00001588  3c060000	lhi	r6,((LC24_LF0)>>16)&0xffff
  504  0000158c  24c63570	addui	r6,r6,(LC24_LF0)&0xffff
  505  00001590  afa60000	sw	(r29),r6
  506  00001594  0c0001d8	jal	_Printf
  507  00001598  54000000	nop; not filled.
  508  0000159c  2006ffe3	addi	r6,r0,#-29
  509  000015a0  afa60000	sw	(r29),r6
  510  000015a4  0c000204	jal	_sem_create
  511  000015a8  54000000	nop; not filled.
  512  000015ac  00012020	add	r4,r0,r1
  513  000015b0  23bd0008	addi	r29,r29,#8
  514  000015b4  6081ffff	seqi	r1,r4,#-1
  515  000015b8  10200034	beqz	r1,L27_LF0
  516  000015bc  54000000	nop; not filled.
  517  000015c0  0c0001b8	jal	_getpid
  518  000015c4  54000000	nop; not filled.
  519  000015c8  23bdfff8	addi	r29,r29,#-8
  520  000015cc  3c060000	lhi	r6,((LC10_LF0)>>16)&0xffff
  521  000015d0  24c6323c	addui	r6,r6,(LC10_LF0)&0xffff
  522  000015d4  afa60000	sw	(r29),r6
  523  000015d8  afa10004	sw	4(r29),r1
  524  000015dc  0c000190	jal	_Printf
  525  000015e0  54000000	nop; not filled.
  526  000015e4  0c000290	jal	_Exit
  527  000015e8  54000000	nop; not filled.
  528  000015ec  23bd0008	addi	r29,r29,#8
  529  000015f0          	L27_LF0:
  530  000015f0  23bdfff8	addi	r29,r29,#-8
  531  000015f4  afa40000	sw	(r29),r4
  532  000015f8  23c2ffe8	addi	r2,r30,#-24
  533  000015fc  afa20004	sw	4(r29),r2
  534  00001600  0c0009a4	jal	_ditoa
  535  00001604  54000000	nop; not filled.
  536  00001608  20030000	addi	r3,r0,#0
  537  0000160c  23bd0008	addi	r29,r29,#8
  538  00001610          	L31_LF0:
  539  00001610  0c000168	jal	_getpid
  540  00001614  54000000	nop; not filled.
  541  00001618  23bdfff0	addi	r29,r29,#-16
  542  0000161c  3c060000	lhi	r6,((LC25_LF0)>>16)&0xffff
  543  00001620  24c635b8	addui	r6,r6,(LC25_LF0)&0xffff
  544  00001624  afa60000	sw	(r29),r6
  545  00001628  afa10004	sw	4(r29),r1
  546  0000162c  afa30008	sw	8(r29),r3
  547  00001630  0c00013c	jal	_Printf
  548  00001634  54000000	nop; not filled.
  549  00001638  3c060000	lhi	r6,((LC26_LF0)>>16)&0xffff
  550  0000163c  24c635f8	addui	r6,r6,(LC26_LF0)&0xffff
  551  00001640  afa60000	sw	(r29),r6
  552  00001644  afa20004	sw	4(r29),r2
  553  00001648  20060000	addi	r6,r0,#0
  554  0000164c  afa60008	sw	8(r29),r6
  555  00001650  0c000134	jal	_process_create
  556  00001654  54000000	nop; not filled.
  557  00001658  23bd0010	addi	r29,r29,#16
  558  0000165c  20630001	addi	r3,r3,#1
  559  00001660  7061001d	slei	r1,r3,#29
  560  00001664  1420ffa8	bnez	r1,L31_LF0
  561  00001668  54000000	nop; not filled.
  562  0000166c  23bdfff8	addi	r29,r29,#-8
  563  00001670  afa40000	sw	(r29),r4
  564  00001674  0c000140	jal	_sem_wait
  565  00001678  54000000	nop; not filled.
  566  0000167c  23bd0008	addi	r29,r29,#8
  567  00001680  64210001	snei	r1,r1,#1
  568  00001684  10200034	beqz	r1,L33_LF0
  569  00001688  54000000	nop; not filled.
  570  0000168c  23bdfff0	addi	r29,r29,#-16
  571  00001690  3c060000	lhi	r6,((LC22_LF0)>>16)&0xffff
  572  00001694  24c634e4	addui	r6,r6,(LC22_LF0)&0xffff
  573  00001698  afa60000	sw	(r29),r6
  574  0000169c  afa40004	sw	4(r29),r4
  575  000016a0  8ca50000	lw	r5,(r5)
  576  000016a4  afa50008	sw	8(r29),r5
  577  000016a8  0c0000c4	jal	_Printf
  578  000016ac  54000000	nop; not filled.
  579  000016b0  0c0001c4	jal	_Exit
  580  000016b4  54000000	nop; not filled.
  581  000016b8  23bd0010	addi	r29,r29,#16
  582  000016bc          	L33_LF0:
  583  000016bc  23bdfff8	addi	r29,r29,#-8
  584  000016c0  3c060000	lhi	r6,((LC27_LF0)>>16)&0xffff
  585  000016c4  24c63610	addui	r6,r6,(LC27_LF0)&0xffff
  586  000016c8  afa60000	sw	(r29),r6
  587  000016cc  0c0000a0	jal	_Printf
  588  000016d0  54000000	nop; not filled.
  589  000016d4  3c010040	lhi	r1,#64
  590  000016d8  24210003	addui	r1,r1,#3
  591  000016dc  3c067fff	lhi	r6,#32767
  592  000016e0  24c6ffff	addui	r6,r6,#65535
  593  000016e4  ac260000	sw	(r1),r6
  594  000016e8  3c060000	lhi	r6,((LC28_LF0)>>16)&0xffff
  595  000016ec  24c63658	addui	r6,r6,(LC28_LF0)&0xffff
  596  000016f0  afa60000	sw	(r29),r6
  597  000016f4  0c000078	jal	_Printf
  598  000016f8  54000000	nop; not filled.
  599  000016fc  0c00007c	jal	_getpid
  600  00001700  54000000	nop; not filled.
  601  00001704  3c060000	lhi	r6,((LC29_LF0)>>16)&0xffff
  602  00001708  24c636b0	addui	r6,r6,(LC29_LF0)&0xffff
  603  0000170c  afa60000	sw	(r29),r6
  604  00001710  afa10004	sw	4(r29),r1
  605  00001714  0c000058	jal	_Printf
  606  00001718  54000000	nop; not filled.
  607  0000171c  23bd0008	addi	r29,r29,#8
  608  00001720  0c000f00	jal	_exit
  609  00001724  54000000	nop
  610  00001728          	.endproc _main
  611                      ;;;
  612                      ;;; Stub functions for DLX traps.
  613                      ;;;
  614                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  615                      ;;;
  616                      ;;; The traps such as Open and Close
  617                      ;;; (note the capital letters) are for use by user programs.  The traps
  618                      ;;; with names such as open and close (lower case) are for use by the OS.
  619                      ;;;
  622  00001728          	.align 2
  624                      ;;; The following are the traps to be used by user-level programs
  625                      ;;;
  627  00001728          	.align 2
  628  00001728          	.proc _Open
  629  00001728          	.global _Open
  630  00001728          	_Open:
  631                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  632                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  633                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  634  00001728  44000213	trap	#0x213
  635  0000172c  4be00000	jr	r31
  636  00001730  54000000	nop
  637  00001734          	.endproc _Open
  639  00001734          	.proc _Close
  640  00001734          	.global _Close
  641  00001734          	_Close:
  642  00001734  44000214	trap	#0x214
  643  00001738  4be00000	jr	r31
  644  0000173c  54000000	nop
  645  00001740          	.endproc _Close
  647  00001740          	.proc _Read
  648  00001740          	.global _Read
  649  00001740          	_Read:
  650  00001740  44000210	trap	#0x210
  651  00001744  4be00000	jr	r31
  652  00001748  54000000	nop
  653  0000174c          	.endproc _Read
  655  0000174c          	.proc _Write
  656  0000174c          	.global _Write
  657  0000174c          	_Write:
  658  0000174c  44000211	trap	#0x211
  659  00001750  4be00000	jr	r31
  660  00001754  54000000	nop
  661  00001758          	.endproc _Write
  663  00001758          	.proc _Lseek
  664  00001758          	.global _Lseek
  665  00001758          	_Lseek:
  666  00001758  44000212	trap	#0x212
  667  0000175c  4be00000	jr	r31
  668  00001760  54000000	nop
  669  00001764          	.endproc _Lseek
  671  00001764          	.proc _Putchar
  672  00001764          	.global _Putchar
  673  00001764          	_Putchar:
  674  00001764  44000280	trap	#0x280
  675  00001768  4be00000	jr	r31
  676  0000176c  54000000	nop
  677  00001770          	.endproc _Putchar
  679  00001770          	.proc _Printf
  680  00001770          	.global _Printf
  681  00001770          	_Printf:
  682  00001770  44000201	trap	#0x201
  683  00001774  4be00000	jr	r31
  684  00001778  54000000	nop
  685  0000177c          	.endproc _Printf
  687  0000177c          	.proc _getpid
  688  0000177c          	.global _getpid
  689  0000177c          	_getpid:
  690  0000177c  44000431	trap	#0x431
  691  00001780  4be00000	jr	r31
  692  00001784  54000000	nop
  693  00001788          	.endproc _getpid
  695  00001788          	.proc _process_create
  696  00001788          	.global _process_create
  697  00001788          	_process_create:
  698  00001788  44000432	trap	#0x432
  699  0000178c  4be00000	jr	r31
  700  00001790  54000000	nop
  701  00001794          	.endproc _process_create
  703  00001794          	.proc _shmget
  704  00001794          	.global _shmget
  705  00001794          	_shmget:
  706  00001794  44000440	trap	#0x440
  707  00001798  4be00000	jr	r31
  708  0000179c  54000000	nop
  709  000017a0          	.endproc _shmget
  711  000017a0          	.proc _shmat
  712  000017a0          	.global _shmat
  713  000017a0          	_shmat:
  714  000017a0  44000441	trap	#0x441
  715  000017a4  4be00000	jr	r31
  716  000017a8  54000000	nop
  717  000017ac          	.endproc _shmat
  719  000017ac          	.proc _sem_create
  720  000017ac          	.global _sem_create
  721  000017ac          	_sem_create:
  722  000017ac  44000450	trap	#0x450
  723  000017b0  4be00000	jr	r31
  724  000017b4  54000000	nop
  725  000017b8          	.endproc _sem_create
  727  000017b8          	.proc _sem_wait
  728  000017b8          	.global _sem_wait
  729  000017b8          	_sem_wait:
  730  000017b8  44000451	trap	#0x451
  731  000017bc  4be00000	jr	r31
  732  000017c0  54000000	nop
  733  000017c4          	.endproc _sem_wait
  735  000017c4          	.proc _sem_signal
  736  000017c4          	.global _sem_signal
  737  000017c4          	_sem_signal:
  738  000017c4  44000452	trap	#0x452
  739  000017c8  4be00000	jr	r31
  740  000017cc  54000000	nop
  741  000017d0          	.endproc _sem_signal
  743  000017d0          	.proc _lock_create
  744  000017d0          	.global _lock_create
  745  000017d0          	_lock_create:
  746  000017d0  44000453	trap	#0x453
  747  000017d4  4be00000	jr	r31
  748  000017d8  54000000	nop
  749  000017dc          	.endproc _lock_create
  751  000017dc          	.proc _lock_acquire
  752  000017dc          	.global _lock_acquire
  753  000017dc          	_lock_acquire:
  754  000017dc  44000454	trap	#0x454
  755  000017e0  4be00000	jr	r31
  756  000017e4  54000000	nop
  757  000017e8          	.endproc _lock_acquire
  759  000017e8          	.proc _lock_release
  760  000017e8          	.global _lock_release
  761  000017e8          	_lock_release:
  762  000017e8  44000455	trap	#0x455
  763  000017ec  4be00000	jr	r31
  764  000017f0  54000000	nop
  765  000017f4          	.endproc _lock_release
  767  000017f4          	.proc _cond_create
  768  000017f4          	.global _cond_create
  769  000017f4          	_cond_create:
  770  000017f4  44000456	trap	#0x456
  771  000017f8  4be00000	jr	r31
  772  000017fc  54000000	nop
  773  00001800          	.endproc _cond_create
  775  00001800          	.proc _cond_wait
  776  00001800          	.global _cond_wait
  777  00001800          	_cond_wait:
  778  00001800  44000457	trap	#0x457
  779  00001804  4be00000	jr	r31
  780  00001808  54000000	nop
  781  0000180c          	.endproc _cond_wait
  783  0000180c          	.proc _cond_signal
  784  0000180c          	.global _cond_signal
  785  0000180c          	_cond_signal:
  786  0000180c  44000458	trap	#0x458
  787  00001810  4be00000	jr	r31
  788  00001814  54000000	nop
  789  00001818          	.endproc _cond_signal
  791  00001818          	.proc _cond_broadcast
  792  00001818          	.global _cond_broadcast
  793  00001818          	_cond_broadcast:
  794  00001818  44000459	trap	#0x459
  795  0000181c  4be00000	jr	r31
  796  00001820  54000000	nop
  797  00001824          	.endproc _cond_broadcast
  799  00001824          	.proc _mbox_create
  800  00001824          	.global _mbox_create
  801  00001824          	_mbox_create:
  802  00001824  44000460	trap	#0x460
  803  00001828  4be00000	jr	r31
  804  0000182c  54000000	nop
  805  00001830          	.endproc _mbox_create
  807  00001830          	.proc _mbox_open
  808  00001830          	.global _mbox_open
  809  00001830          	_mbox_open:
  810  00001830  44000461	trap	#0x461
  811  00001834  4be00000	jr	r31
  812  00001838  54000000	nop
  813  0000183c          	.endproc _mbox_open
  815  0000183c          	.proc _mbox_close
  816  0000183c          	.global _mbox_close
  817  0000183c          	_mbox_close:
  818  0000183c  44000462	trap	#0x462
  819  00001840  4be00000	jr	r31
  820  00001844  54000000	nop
  821  00001848          	.endproc _mbox_close
  823  00001848          	.proc _mbox_send
  824  00001848          	.global _mbox_send
  825  00001848          	_mbox_send:
  826  00001848  44000463	trap	#0x463
  827  0000184c  4be00000	jr	r31
  828  00001850  54000000	nop
  829  00001854          	.endproc _mbox_send
  831  00001854          	.proc _mbox_recv
  832  00001854          	.global _mbox_recv
  833  00001854          	_mbox_recv:
  834  00001854  44000464	trap	#0x464
  835  00001858  4be00000	jr	r31
  836  0000185c  54000000	nop
  837  00001860          	.endproc _mbox_recv
  839  00001860          	.proc _sleep
  840  00001860          	.global _sleep
  841  00001860          	_sleep:
  842  00001860  44000465	trap	#0x465
  843  00001864  4be00000	jr	r31
  844  00001868  54000000	nop
  845  0000186c          	.endproc _sleep
  847  0000186c          	.proc _yield
  848  0000186c          	.global _yield
  849  0000186c          	_yield:
  850  0000186c  44000466	trap	#0x466
  851  00001870  4be00000	jr	r31
  852  00001874  54000000	nop
  853  00001878          	.endproc _yield
  856  00001878          	.proc _Exit
  857  00001878          	.global _Exit
  858  00001878          	_Exit:
  859  00001878  44000500	trap	#0x500
  860  0000187c  4be00000	jr	r31
  861  00001880  54000000	nop
  862  00001884          	.endproc _Exit
  865  00001884          	.proc _malloc
  866  00001884          	.global _malloc
  867  00001884          	_malloc:
  868  00001884  44000467	trap	#0x467
  869  00001888  4be00000	jr	r31
  870  0000188c          	.endproc _malloc
  873  0000188c          	.proc _mfree
  874  0000188c          	.global _mfree
  875  0000188c          	_mfree:
  876  0000188c  44000468	trap	#0x468
  877  00001890  4be00000	jr	r31
  878  00001894          	.endproc _mfree
  879                      ; Compiled by GCC
  881  00001894          	.align 2
  882  00001894          	.proc _isspace
  883  00001894          	.global _isspace
  884  00001894          	_isspace:
  885                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  886  00001894  afbefffc	sw	-4(r29),r30; push fp
  887  00001898  001df020	add	r30,r0,r29; fp = sp
  888  0000189c  afbffff8	sw	-8(r29),r31; push ret addr
  889  000018a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  890  000018a4  afa20000	sw	0(r29),r2
  891  000018a8  afa30004	sw	4(r29),r3
  892  000018ac  afa40008	sw	8(r29),r4
  893  000018b0  83c20003	lb	r2,3(r30)
  894  000018b4  20010000	addi	r1,r0,#0
  895  000018b8  304300ff	andi	r3,r2,#0x00ff
  896  000018bc  60640020	seqi	r4,r3,#32
  897  000018c0  1480002c	bnez	r4,L3_LF2
  898  000018c4  54000000	nop; delay slot nop
  899  000018c8  304300ff	andi	r3,r2,#0x00ff
  900  000018cc  60640009	seqi	r4,r3,#9
  901  000018d0  1480001c	bnez	r4,L3_LF2
  902  000018d4  54000000	nop; delay slot nop
  903  000018d8  304300ff	andi	r3,r2,#0x00ff
  904  000018dc  6064000a	seqi	r4,r3,#10
  905  000018e0  1480000c	bnez	r4,L3_LF2
  906  000018e4  54000000	nop; delay slot nop
  907  000018e8  08000008	j	L2_LF2
  908  000018ec  54000000	nop; delay slot nop
  909  000018f0          	L3_LF2:
  910  000018f0  20010001	addi	r1,r0,#1
  911  000018f4          	L2_LF2:
  912  000018f4  08000004	j	L1_LF2
  913  000018f8  54000000	nop; delay slot nop
  914  000018fc          	L1_LF2:
  915  000018fc  8fa20000	lw	r2,0(r29)
  916  00001900  8fa30004	lw	r3,4(r29)
  917  00001904  8fa40008	lw	r4,8(r29)
  918  00001908  8fdffff8	lw	r31,-8(r30)
  919  0000190c  001ee820	add	r29,r0,r30
  920  00001910  8fdefffc	lw	r30,-4(r30)
  921  00001914  4be00000	jr	r31
  922  00001918  54000000	nop
  923  0000191c          	.endproc _isspace
  924  0000191c          	.align 2
  925  0000191c          	.proc _isxdigit
  926  0000191c          	.global _isxdigit
  927  0000191c          	_isxdigit:
  928                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  929  0000191c  afbefffc	sw	-4(r29),r30; push fp
  930  00001920  001df020	add	r30,r0,r29; fp = sp
  931  00001924  afbffff8	sw	-8(r29),r31; push ret addr
  932  00001928  2fbd0018	subui	r29,r29,#24; alloc local storage
  933  0000192c  afa20000	sw	0(r29),r2
  934  00001930  afa30004	sw	4(r29),r3
  935  00001934  afa40008	sw	8(r29),r4
  936  00001938  83c20003	lb	r2,3(r30)
  937  0000193c  20010000	addi	r1,r0,#0
  938  00001940  304300ff	andi	r3,r2,#0x00ff
  939  00001944  6c64002f	sgtui	r4,r3,#47
  940  00001948  1080001c	beqz	r4,L7_LF2
  941  0000194c  54000000	nop; delay slot nop
  942  00001950  304300ff	andi	r3,r2,#0x00ff
  943  00001954  70640039	sleui	r4,r3,#57
  944  00001958  1480005c	bnez	r4,L6_LF2
  945  0000195c  54000000	nop; delay slot nop
  946  00001960  08000004	j	L7_LF2
  947  00001964  54000000	nop; delay slot nop
  948  00001968          	L7_LF2:
  949  00001968  304300ff	andi	r3,r2,#0x00ff
  950  0000196c  6c640060	sgtui	r4,r3,#96
  951  00001970  1080001c	beqz	r4,L8_LF2
  952  00001974  54000000	nop; delay slot nop
  953  00001978  304300ff	andi	r3,r2,#0x00ff
  954  0000197c  70640066	sleui	r4,r3,#102
  955  00001980  14800034	bnez	r4,L6_LF2
  956  00001984  54000000	nop; delay slot nop
  957  00001988  08000004	j	L8_LF2
  958  0000198c  54000000	nop; delay slot nop
  959  00001990          	L8_LF2:
  960  00001990  304300ff	andi	r3,r2,#0x00ff
  961  00001994  6c640040	sgtui	r4,r3,#64
  962  00001998  10800020	beqz	r4,L5_LF2
  963  0000199c  54000000	nop; delay slot nop
  964  000019a0  304300ff	andi	r3,r2,#0x00ff
  965  000019a4  70640041	sleui	r4,r3,#65
  966  000019a8  1480000c	bnez	r4,L6_LF2
  967  000019ac  54000000	nop; delay slot nop
  968  000019b0  08000008	j	L5_LF2
  969  000019b4  54000000	nop; delay slot nop
  970  000019b8          	L6_LF2:
  971  000019b8  20010001	addi	r1,r0,#1
  972  000019bc          	L5_LF2:
  973  000019bc  08000004	j	L4_LF2
  974  000019c0  54000000	nop; delay slot nop
  975  000019c4          	L4_LF2:
  976  000019c4  8fa20000	lw	r2,0(r29)
  977  000019c8  8fa30004	lw	r3,4(r29)
  978  000019cc  8fa40008	lw	r4,8(r29)
  979  000019d0  8fdffff8	lw	r31,-8(r30)
  980  000019d4  001ee820	add	r29,r0,r30
  981  000019d8  8fdefffc	lw	r30,-4(r30)
  982  000019dc  4be00000	jr	r31
  983  000019e0  54000000	nop
  984  000019e4          	.endproc _isxdigit
  985  000019e4          	.align 2
  986  000019e4          	.proc _dstrcpy
  987  000019e4          	.global _dstrcpy
  988  000019e4          	_dstrcpy:
  989                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  990  000019e4  afbefffc	sw	-4(r29),r30; push fp
  991  000019e8  001df020	add	r30,r0,r29; fp = sp
  992  000019ec  afbffff8	sw	-8(r29),r31; push ret addr
  993  000019f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  994  000019f4  afa20000	sw	0(r29),r2
  995  000019f8  afa30004	sw	4(r29),r3
  996  000019fc  8fc10000	lw	r1,(r30)
  997  00001a00  afc1fff4	sw	-12(r30),r1
  998  00001a04          	L10_LF2:
  999  00001a04  8fc10000	lw	r1,(r30)
 1000  00001a08  20220001	addi	r2,r1,#1
 1001  00001a0c  afc20000	sw	(r30),r2
 1002  00001a10  8fc20004	lw	r2,4(r30)
 1003  00001a14  20430001	addi	r3,r2,#1
 1004  00001a18  afc30004	sw	4(r30),r3
 1005  00001a1c  80420000	lb	r2,(r2)
 1006  00001a20  a0220000	sb	(r1),r2
 1007  00001a24  a3c2fff3	sb	-13(r30),r2
 1008  00001a28          	L12_LF2:
 1009  00001a28  93c1fff3	lbu	r1,-13(r30)
 1010  00001a2c  64220000	snei	r2,r1,#0
 1011  00001a30  1440000c	bnez	r2,L13_LF2
 1012  00001a34  54000000	nop; delay slot nop
 1013  00001a38  0800000c	j	L11_LF2
 1014  00001a3c  54000000	nop; delay slot nop
 1015  00001a40          	L13_LF2:
 1016  00001a40  0bffffc0	j	L10_LF2
 1017  00001a44  54000000	nop; delay slot nop
 1018  00001a48          	L11_LF2:
 1019  00001a48  8fc1fff4	lw	r1,-12(r30)
 1020  00001a4c  08000004	j	L9_LF2
 1021  00001a50  54000000	nop; delay slot nop
 1022  00001a54          	L9_LF2:
 1023  00001a54  8fa20000	lw	r2,0(r29)
 1024  00001a58  8fa30004	lw	r3,4(r29)
 1025  00001a5c  8fdffff8	lw	r31,-8(r30)
 1026  00001a60  001ee820	add	r29,r0,r30
 1027  00001a64  8fdefffc	lw	r30,-4(r30)
 1028  00001a68  4be00000	jr	r31
 1029  00001a6c  54000000	nop
 1030  00001a70          	.endproc _dstrcpy
 1031  00001a70          	.align 2
 1032  00001a70          	.proc _dstrncpy
 1033  00001a70          	.global _dstrncpy
 1034  00001a70          	_dstrncpy:
 1035                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
 1036  00001a70  afbefffc	sw	-4(r29),r30; push fp
 1037  00001a74  001df020	add	r30,r0,r29; fp = sp
 1038  00001a78  afbffff8	sw	-8(r29),r31; push ret addr
 1039  00001a7c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1040  00001a80  afa20000	sw	0(r29),r2
 1041  00001a84  afa30004	sw	4(r29),r3
 1042  00001a88  8fc10000	lw	r1,(r30)
 1043  00001a8c  afc1fff4	sw	-12(r30),r1
 1044  00001a90          	L15_LF2:
 1045  00001a90  8fc10008	lw	r1,8(r30)
 1046  00001a94  2022ffff	addi	r2,r1,#-1
 1047  00001a98  afc20008	sw	8(r30),r2
 1048  00001a9c  70210000	slei	r1,r1,#0
 1049  00001aa0  1020000c	beqz	r1,L18_LF2
 1050  00001aa4  54000000	nop; delay slot nop
 1051  00001aa8  08000048	j	L16_LF2
 1052  00001aac  54000000	nop; delay slot nop
 1053  00001ab0          	L18_LF2:
 1054  00001ab0  8fc10000	lw	r1,(r30)
 1055  00001ab4  20220001	addi	r2,r1,#1
 1056  00001ab8  afc20000	sw	(r30),r2
 1057  00001abc  8fc20004	lw	r2,4(r30)
 1058  00001ac0  20430001	addi	r3,r2,#1
 1059  00001ac4  afc30004	sw	4(r30),r3
 1060  00001ac8  80420000	lb	r2,(r2)
 1061  00001acc  a0220000	sb	(r1),r2
 1062  00001ad0  a3c2fff3	sb	-13(r30),r2
 1063  00001ad4          	L17_LF2:
 1064  00001ad4  93c1fff3	lbu	r1,-13(r30)
 1065  00001ad8  64220000	snei	r2,r1,#0
 1066  00001adc  1440000c	bnez	r2,L19_LF2
 1067  00001ae0  54000000	nop; delay slot nop
 1068  00001ae4  0800000c	j	L16_LF2
 1069  00001ae8  54000000	nop; delay slot nop
 1070  00001aec          	L19_LF2:
 1071  00001aec  0bffffa0	j	L15_LF2
 1072  00001af0  54000000	nop; delay slot nop
 1073  00001af4          	L16_LF2:
 1074  00001af4  8fc1fff4	lw	r1,-12(r30)
 1075  00001af8  08000004	j	L14_LF2
 1076  00001afc  54000000	nop; delay slot nop
 1077  00001b00          	L14_LF2:
 1078  00001b00  8fa20000	lw	r2,0(r29)
 1079  00001b04  8fa30004	lw	r3,4(r29)
 1080  00001b08  8fdffff8	lw	r31,-8(r30)
 1081  00001b0c  001ee820	add	r29,r0,r30
 1082  00001b10  8fdefffc	lw	r30,-4(r30)
 1083  00001b14  4be00000	jr	r31
 1084  00001b18  54000000	nop
 1085  00001b1c          	.endproc _dstrncpy
 1086  00001b1c          	.align 2
 1087  00001b1c          	.proc _dstrcat
 1088  00001b1c          	.global _dstrcat
 1089  00001b1c          	_dstrcat:
 1090                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1091  00001b1c  afbefffc	sw	-4(r29),r30; push fp
 1092  00001b20  001df020	add	r30,r0,r29; fp = sp
 1093  00001b24  afbffff8	sw	-8(r29),r31; push ret addr
 1094  00001b28  2fbd0018	subui	r29,r29,#24; alloc local storage
 1095  00001b2c  afa20000	sw	0(r29),r2
 1096  00001b30  8fc10000	lw	r1,(r30)
 1097  00001b34  afc1fff4	sw	-12(r30),r1
 1098  00001b38          	L21_LF2:
 1099  00001b38  8fc10000	lw	r1,(r30)
 1100  00001b3c  90220000	lbu	r2,(r1)
 1101  00001b40  64410000	snei	r1,r2,#0
 1102  00001b44  1420000c	bnez	r1,L23_LF2
 1103  00001b48  54000000	nop; delay slot nop
 1104  00001b4c  0800001c	j	L22_LF2
 1105  00001b50  54000000	nop; delay slot nop
 1106  00001b54          	L23_LF2:
 1107  00001b54  8fc20000	lw	r2,(r30)
 1108  00001b58  20410001	addi	r1,r2,#1
 1109  00001b5c  00011020	add	r2,r0,r1
 1110  00001b60  afc20000	sw	(r30),r2
 1111  00001b64  0bffffd0	j	L21_LF2
 1112  00001b68  54000000	nop; delay slot nop
 1113  00001b6c          	L22_LF2:
 1114  00001b6c  23bdfff8	addi	r29,r29,#-8
 1115  00001b70  001d0820	add	r1,r0,r29
 1116  00001b74  8fc20000	lw	r2,(r30)
 1117  00001b78  ac220000	sw	(r1),r2
 1118  00001b7c  8fc20004	lw	r2,4(r30)
 1119  00001b80  ac220004	sw	4(r1),r2
 1120  00001b84  0ffffe5c	jal	_dstrcpy
 1121  00001b88  54000000	nop; delay slot nop
 1122  00001b8c  23bd0008	addi	r29,r29,#8
 1123  00001b90  8fc1fff4	lw	r1,-12(r30)
 1124  00001b94  08000004	j	L20_LF2
 1125  00001b98  54000000	nop; delay slot nop
 1126  00001b9c          	L20_LF2:
 1127  00001b9c  8fa20000	lw	r2,0(r29)
 1128  00001ba0  8fdffff8	lw	r31,-8(r30)
 1129  00001ba4  001ee820	add	r29,r0,r30
 1130  00001ba8  8fdefffc	lw	r30,-4(r30)
 1131  00001bac  4be00000	jr	r31
 1132  00001bb0  54000000	nop
 1133  00001bb4          	.endproc _dstrcat
 1134  00001bb4          	.align 2
 1135  00001bb4          	.proc _dstrncmp
 1136  00001bb4          	.global _dstrncmp
 1137  00001bb4          	_dstrncmp:
 1138                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1139  00001bb4  afbefffc	sw	-4(r29),r30; push fp
 1140  00001bb8  001df020	add	r30,r0,r29; fp = sp
 1141  00001bbc  afbffff8	sw	-8(r29),r31; push ret addr
 1142  00001bc0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1143  00001bc4  afa20000	sw	0(r29),r2
 1144  00001bc8  afa30004	sw	4(r29),r3
 1145  00001bcc  54000000	nop
 1146  00001bd0  20010000	addi	r1,r0,#0
 1147  00001bd4  afc1fff4	sw	-12(r30),r1
 1148  00001bd8          	L25_LF2:
 1149  00001bd8  8fc1fff4	lw	r1,-12(r30)
 1150  00001bdc  8fc20008	lw	r2,8(r30)
 1151  00001be0  0022082a	slt	r1,r1,r2
 1152  00001be4  1420000c	bnez	r1,L28_LF2
 1153  00001be8  54000000	nop; delay slot nop
 1154  00001bec  08000088	j	L26_LF2
 1155  00001bf0  54000000	nop; delay slot nop
 1156  00001bf4          	L28_LF2:
 1157  00001bf4  8fc10004	lw	r1,4(r30)
 1158  00001bf8  90220000	lbu	r2,(r1)
 1159  00001bfc  64410000	snei	r1,r2,#0
 1160  00001c00  14200018	bnez	r1,L29_LF2
 1161  00001c04  54000000	nop; delay slot nop
 1162  00001c08  20010000	addi	r1,r0,#0
 1163  00001c0c  080000d8	j	L24_LF2
 1164  00001c10  54000000	nop; delay slot nop
 1165  00001c14  08000028	j	L30_LF2
 1166  00001c18  54000000	nop; delay slot nop
 1167  00001c1c          	L29_LF2:
 1168  00001c1c  8fc10000	lw	r1,(r30)
 1169  00001c20  8fc20004	lw	r2,4(r30)
 1170  00001c24  90210000	lbu	r1,(r1)
 1171  00001c28  90420000	lbu	r2,(r2)
 1172  00001c2c  00220829	sne	r1,r1,r2
 1173  00001c30  1020000c	beqz	r1,L30_LF2
 1174  00001c34  54000000	nop; delay slot nop
 1175  00001c38  0800003c	j	L26_LF2
 1176  00001c3c  54000000	nop; delay slot nop
 1177  00001c40          	L31_LF2:
 1178  00001c40          	L30_LF2:
 1179  00001c40  8fc20000	lw	r2,(r30)
 1180  00001c44  20410001	addi	r1,r2,#1
 1181  00001c48  00011020	add	r2,r0,r1
 1182  00001c4c  afc20000	sw	(r30),r2
 1183  00001c50  8fc20004	lw	r2,4(r30)
 1184  00001c54  20410001	addi	r1,r2,#1
 1185  00001c58  00011020	add	r2,r0,r1
 1186  00001c5c  afc20004	sw	4(r30),r2
 1187  00001c60          	L27_LF2:
 1188  00001c60  8fc2fff4	lw	r2,-12(r30)
 1189  00001c64  20410001	addi	r1,r2,#1
 1190  00001c68  00011020	add	r2,r0,r1
 1191  00001c6c  afc2fff4	sw	-12(r30),r2
 1192  00001c70  0bffff64	j	L25_LF2
 1193  00001c74  54000000	nop; delay slot nop
 1194  00001c78          	L26_LF2:
 1195  00001c78  8fc1fff4	lw	r1,-12(r30)
 1196  00001c7c  8fc20008	lw	r2,8(r30)
 1197  00001c80  00220828	seq	r1,r1,r2
 1198  00001c84  10200018	beqz	r1,L32_LF2
 1199  00001c88  54000000	nop; delay slot nop
 1200  00001c8c  20010000	addi	r1,r0,#0
 1201  00001c90  08000054	j	L24_LF2
 1202  00001c94  54000000	nop; delay slot nop
 1203  00001c98  0800004c	j	L33_LF2
 1204  00001c9c  54000000	nop; delay slot nop
 1205  00001ca0          	L32_LF2:
 1206  00001ca0  8fc20000	lw	r2,(r30)
 1207  00001ca4  90410000	lbu	r1,(r2)
 1208  00001ca8  8fc20004	lw	r2,4(r30)
 1209  00001cac  90430000	lbu	r3,(r2)
 1210  00001cb0  00230822	sub	r1,r1,r3
 1211  00001cb4  74220000	sgei	r2,r1,#0
 1212  00001cb8  10400020	beqz	r2,L34_LF2
 1213  00001cbc  54000000	nop; delay slot nop
 1214  00001cc0  8fc10000	lw	r1,(r30)
 1215  00001cc4  8fc20004	lw	r2,4(r30)
 1216  00001cc8  90210000	lbu	r1,(r1)
 1217  00001ccc  90420000	lbu	r2,(r2)
 1218  00001cd0  00220829	sne	r1,r1,r2
 1219  00001cd4  08000008	j	L35_LF2
 1220  00001cd8  54000000	nop; delay slot nop
 1221  00001cdc          	L34_LF2:
 1222  00001cdc  2001ffff	addi	r1,r0,#-1
 1223  00001ce0          	L35_LF2:
 1224  00001ce0  08000004	j	L24_LF2
 1225  00001ce4  54000000	nop; delay slot nop
 1226  00001ce8          	L33_LF2:
 1227  00001ce8          	L24_LF2:
 1228  00001ce8  8fa20000	lw	r2,0(r29)
 1229  00001cec  8fa30004	lw	r3,4(r29)
 1230  00001cf0  8fdffff8	lw	r31,-8(r30)
 1231  00001cf4  001ee820	add	r29,r0,r30
 1232  00001cf8  8fdefffc	lw	r30,-4(r30)
 1233  00001cfc  4be00000	jr	r31
 1234  00001d00  54000000	nop
 1235  00001d04          	.endproc _dstrncmp
 1236  00001d04          	.align 2
 1237  00001d04          	.proc _dstrlen
 1238  00001d04          	.global _dstrlen
 1239  00001d04          	_dstrlen:
 1240                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1241  00001d04  afbefffc	sw	-4(r29),r30; push fp
 1242  00001d08  001df020	add	r30,r0,r29; fp = sp
 1243  00001d0c  afbffff8	sw	-8(r29),r31; push ret addr
 1244  00001d10  2fbd0018	subui	r29,r29,#24; alloc local storage
 1245  00001d14  afa20000	sw	0(r29),r2
 1246  00001d18  20010000	addi	r1,r0,#0
 1247  00001d1c  afc1fff4	sw	-12(r30),r1
 1248  00001d20          	L37_LF2:
 1249  00001d20  8fc10000	lw	r1,(r30)
 1250  00001d24  20220001	addi	r2,r1,#1
 1251  00001d28  afc20000	sw	(r30),r2
 1252  00001d2c  90210000	lbu	r1,(r1)
 1253  00001d30  64220000	snei	r2,r1,#0
 1254  00001d34  1440000c	bnez	r2,L39_LF2
 1255  00001d38  54000000	nop; delay slot nop
 1256  00001d3c  0800001c	j	L38_LF2
 1257  00001d40  54000000	nop; delay slot nop
 1258  00001d44          	L39_LF2:
 1259  00001d44  8fc2fff4	lw	r2,-12(r30)
 1260  00001d48  20410001	addi	r1,r2,#1
 1261  00001d4c  00011020	add	r2,r0,r1
 1262  00001d50  afc2fff4	sw	-12(r30),r2
 1263  00001d54  0bffffc8	j	L37_LF2
 1264  00001d58  54000000	nop; delay slot nop
 1265  00001d5c          	L38_LF2:
 1266  00001d5c  8fc1fff4	lw	r1,-12(r30)
 1267  00001d60  08000004	j	L36_LF2
 1268  00001d64  54000000	nop; delay slot nop
 1269  00001d68          	L36_LF2:
 1270  00001d68  8fa20000	lw	r2,0(r29)
 1271  00001d6c  8fdffff8	lw	r31,-8(r30)
 1272  00001d70  001ee820	add	r29,r0,r30
 1273  00001d74  8fdefffc	lw	r30,-4(r30)
 1274  00001d78  4be00000	jr	r31
 1275  00001d7c  54000000	nop
 1276  00001d80          	.endproc _dstrlen
 1277  00001d80          	.align 2
 1278  00001d80          	.proc _dstrstr
 1279  00001d80          	.global _dstrstr
 1280  00001d80          	_dstrstr:
 1281                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1282  00001d80  afbefffc	sw	-4(r29),r30; push fp
 1283  00001d84  001df020	add	r30,r0,r29; fp = sp
 1284  00001d88  afbffff8	sw	-8(r29),r31; push ret addr
 1285  00001d8c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1286  00001d90  afa20000	sw	0(r29),r2
 1287  00001d94  23bdfff8	addi	r29,r29,#-8
 1288  00001d98  001d0820	add	r1,r0,r29
 1289  00001d9c  8fc20004	lw	r2,4(r30)
 1290  00001da0  ac220000	sw	(r1),r2
 1291  00001da4  0fffff5c	jal	_dstrlen
 1292  00001da8  54000000	nop; delay slot nop
 1293  00001dac  23bd0008	addi	r29,r29,#8
 1294  00001db0  afc1fff4	sw	-12(r30),r1
 1295  00001db4          	L41_LF2:
 1296  00001db4  8fc10000	lw	r1,(r30)
 1297  00001db8  90220000	lbu	r2,(r1)
 1298  00001dbc  64410000	snei	r1,r2,#0
 1299  00001dc0  1420000c	bnez	r1,L43_LF2
 1300  00001dc4  54000000	nop; delay slot nop
 1301  00001dc8  08000060	j	L42_LF2
 1302  00001dcc  54000000	nop; delay slot nop
 1303  00001dd0          	L43_LF2:
 1304  00001dd0  23bdfff0	addi	r29,r29,#-16
 1305  00001dd4  001d0820	add	r1,r0,r29
 1306  00001dd8  8fc20000	lw	r2,(r30)
 1307  00001ddc  ac220000	sw	(r1),r2
 1308  00001de0  8fc20004	lw	r2,4(r30)
 1309  00001de4  ac220004	sw	4(r1),r2
 1310  00001de8  8fc2fff4	lw	r2,-12(r30)
 1311  00001dec  ac220008	sw	8(r1),r2
 1312  00001df0  0ffffdc0	jal	_dstrncmp
 1313  00001df4  54000000	nop; delay slot nop
 1314  00001df8  23bd0010	addi	r29,r29,#16
 1315  00001dfc  64220000	snei	r2,r1,#0
 1316  00001e00  14400010	bnez	r2,L44_LF2
 1317  00001e04  54000000	nop; delay slot nop
 1318  00001e08  8fc10000	lw	r1,(r30)
 1319  00001e0c  08000028	j	L40_LF2
 1320  00001e10  54000000	nop; delay slot nop
 1321  00001e14          	L44_LF2:
 1322  00001e14  8fc20000	lw	r2,(r30)
 1323  00001e18  20410001	addi	r1,r2,#1
 1324  00001e1c  00011020	add	r2,r0,r1
 1325  00001e20  afc20000	sw	(r30),r2
 1326  00001e24  0bffff8c	j	L41_LF2
 1327  00001e28  54000000	nop; delay slot nop
 1328  00001e2c          	L42_LF2:
 1329  00001e2c  20010000	addi	r1,r0,#0
 1330  00001e30  08000004	j	L40_LF2
 1331  00001e34  54000000	nop; delay slot nop
 1332  00001e38          	L40_LF2:
 1333  00001e38  8fa20000	lw	r2,0(r29)
 1334  00001e3c  8fdffff8	lw	r31,-8(r30)
 1335  00001e40  001ee820	add	r29,r0,r30
 1336  00001e44  8fdefffc	lw	r30,-4(r30)
 1337  00001e48  4be00000	jr	r31
 1338  00001e4c  54000000	nop
 1339  00001e50          	.endproc _dstrstr
 1340  00001e50          	.align 2
 1341  00001e50          	.proc _dmindex
 1342  00001e50          	.global _dmindex
 1343  00001e50          	_dmindex:
 1344                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1345  00001e50  afbefffc	sw	-4(r29),r30; push fp
 1346  00001e54  001df020	add	r30,r0,r29; fp = sp
 1347  00001e58  afbffff8	sw	-8(r29),r31; push ret addr
 1348  00001e5c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1349  00001e60  afa20000	sw	0(r29),r2
 1350  00001e64  54000000	nop
 1351  00001e68          	L46_LF2:
 1352  00001e68  8fc10000	lw	r1,(r30)
 1353  00001e6c  90220000	lbu	r2,(r1)
 1354  00001e70  64410000	snei	r1,r2,#0
 1355  00001e74  1420000c	bnez	r1,L48_LF2
 1356  00001e78  54000000	nop; delay slot nop
 1357  00001e7c  08000070	j	L47_LF2
 1358  00001e80  54000000	nop; delay slot nop
 1359  00001e84          	L48_LF2:
 1360  00001e84  8fc10004	lw	r1,4(r30)
 1361  00001e88  afc1fff4	sw	-12(r30),r1
 1362  00001e8c          	L49_LF2:
 1363  00001e8c  8fc1fff4	lw	r1,-12(r30)
 1364  00001e90  90220000	lbu	r2,(r1)
 1365  00001e94  64410000	snei	r1,r2,#0
 1366  00001e98  1420000c	bnez	r1,L52_LF2
 1367  00001e9c  54000000	nop; delay slot nop
 1368  00001ea0  08000044	j	L50_LF2
 1369  00001ea4  54000000	nop; delay slot nop
 1370  00001ea8          	L52_LF2:
 1371  00001ea8  8fc10000	lw	r1,(r30)
 1372  00001eac  8fc2fff4	lw	r2,-12(r30)
 1373  00001eb0  90210000	lbu	r1,(r1)
 1374  00001eb4  90420000	lbu	r2,(r2)
 1375  00001eb8  00220828	seq	r1,r1,r2
 1376  00001ebc  10200010	beqz	r1,L51_LF2
 1377  00001ec0  54000000	nop; delay slot nop
 1378  00001ec4  8fc10000	lw	r1,(r30)
 1379  00001ec8  08000030	j	L45_LF2
 1380  00001ecc  54000000	nop; delay slot nop
 1381  00001ed0          	L53_LF2:
 1382  00001ed0          	L51_LF2:
 1383  00001ed0  8fc2fff4	lw	r2,-12(r30)
 1384  00001ed4  20410001	addi	r1,r2,#1
 1385  00001ed8  00011020	add	r2,r0,r1
 1386  00001edc  afc2fff4	sw	-12(r30),r2
 1387  00001ee0  0bffffa8	j	L49_LF2
 1388  00001ee4  54000000	nop; delay slot nop
 1389  00001ee8          	L50_LF2:
 1390  00001ee8  0bffff7c	j	L46_LF2
 1391  00001eec  54000000	nop; delay slot nop
 1392  00001ef0          	L47_LF2:
 1393  00001ef0  20010000	addi	r1,r0,#0
 1394  00001ef4  08000004	j	L45_LF2
 1395  00001ef8  54000000	nop; delay slot nop
 1396  00001efc          	L45_LF2:
 1397  00001efc  8fa20000	lw	r2,0(r29)
 1398  00001f00  8fdffff8	lw	r31,-8(r30)
 1399  00001f04  001ee820	add	r29,r0,r30
 1400  00001f08  8fdefffc	lw	r30,-4(r30)
 1401  00001f0c  4be00000	jr	r31
 1402  00001f10  54000000	nop
 1403  00001f14          	.endproc _dmindex
 1404  00001f14          	.align 2
 1405  00001f14          	.proc _dindex
 1406  00001f14          	.global _dindex
 1407  00001f14          	_dindex:
 1408                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1409  00001f14  afbefffc	sw	-4(r29),r30; push fp
 1410  00001f18  001df020	add	r30,r0,r29; fp = sp
 1411  00001f1c  afbffff8	sw	-8(r29),r31; push ret addr
 1412  00001f20  2fbd0010	subui	r29,r29,#16; alloc local storage
 1413  00001f24  afa20000	sw	0(r29),r2
 1414  00001f28  54000000	nop
 1415  00001f2c          	L55_LF2:
 1416  00001f2c  8fc10000	lw	r1,(r30)
 1417  00001f30  90220000	lbu	r2,(r1)
 1418  00001f34  64410000	snei	r1,r2,#0
 1419  00001f38  1420000c	bnez	r1,L57_LF2
 1420  00001f3c  54000000	nop; delay slot nop
 1421  00001f40  08000040	j	L56_LF2
 1422  00001f44  54000000	nop; delay slot nop
 1423  00001f48          	L57_LF2:
 1424  00001f48  8fc10000	lw	r1,(r30)
 1425  00001f4c  90220000	lbu	r2,(r1)
 1426  00001f50  8fc10004	lw	r1,4(r30)
 1427  00001f54  00411028	seq	r2,r2,r1
 1428  00001f58  10400010	beqz	r2,L58_LF2
 1429  00001f5c  54000000	nop; delay slot nop
 1430  00001f60  8fc10000	lw	r1,(r30)
 1431  00001f64  08000028	j	L54_LF2
 1432  00001f68  54000000	nop; delay slot nop
 1433  00001f6c          	L58_LF2:
 1434  00001f6c  8fc20000	lw	r2,(r30)
 1435  00001f70  20410001	addi	r1,r2,#1
 1436  00001f74  00011020	add	r2,r0,r1
 1437  00001f78  afc20000	sw	(r30),r2
 1438  00001f7c  0bffffac	j	L55_LF2
 1439  00001f80  54000000	nop; delay slot nop
 1440  00001f84          	L56_LF2:
 1441  00001f84  20010000	addi	r1,r0,#0
 1442  00001f88  08000004	j	L54_LF2
 1443  00001f8c  54000000	nop; delay slot nop
 1444  00001f90          	L54_LF2:
 1445  00001f90  8fa20000	lw	r2,0(r29)
 1446  00001f94  8fdffff8	lw	r31,-8(r30)
 1447  00001f98  001ee820	add	r29,r0,r30
 1448  00001f9c  8fdefffc	lw	r30,-4(r30)
 1449  00001fa0  4be00000	jr	r31
 1450  00001fa4  54000000	nop
 1451  00001fa8          	.endproc _dindex
 1452  00001fa8          	.align 2
 1453  00001fa8          	.proc _ditoa
 1454  00001fa8          	.global _ditoa
 1455  00001fa8          	_ditoa:
 1456                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1457  00001fa8  afbefffc	sw	-4(r29),r30; push fp
 1458  00001fac  001df020	add	r30,r0,r29; fp = sp
 1459  00001fb0  afbffff8	sw	-8(r29),r31; push ret addr
 1460  00001fb4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1461  00001fb8  afa20000	sw	0(r29),r2
 1462  00001fbc  afa30004	sw	4(r29),r3
 1463  00001fc0  8fc10000	lw	r1,(r30)
 1464  00001fc4  68220000	slti	r2,r1,#0
 1465  00001fc8  1040002c	beqz	r2,L60_LF2
 1466  00001fcc  54000000	nop; delay slot nop
 1467  00001fd0  8fc10004	lw	r1,4(r30)
 1468  00001fd4  20220001	addi	r2,r1,#1
 1469  00001fd8  afc20004	sw	4(r30),r2
 1470  00001fdc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1471  00001fe0  a0220000	sb	(r1),r2
 1472  00001fe4  8fc10000	lw	r1,(r30)
 1473  00001fe8  00011022	sub	r2,r0,r1
 1474  00001fec  afc20000	sw	(r30),r2
 1475  00001ff0  08000118	j	L61_LF2
 1476  00001ff4  54000000	nop; delay slot nop
 1477  00001ff8          	L60_LF2:
 1478  00001ff8  8fc10000	lw	r1,(r30)
 1479  00001ffc  64220000	snei	r2,r1,#0
 1480  00002000  14400020	bnez	r2,L62_LF2
 1481  00002004  54000000	nop; delay slot nop
 1482  00002008  8fc10004	lw	r1,4(r30)
 1483  0000200c  20220001	addi	r2,r1,#1
 1484  00002010  afc20004	sw	4(r30),r2
 1485  00002014  20020030	addi	r2,r0,(#0x30)&0xff
 1486  00002018  a0220000	sb	(r1),r2
 1487  0000201c  080000ec	j	L61_LF2
 1488  00002020  54000000	nop; delay slot nop
 1489  00002024          	L62_LF2:
 1490  00002024  20010001	addi	r1,r0,#1
 1491  00002028  afc1fff4	sw	-12(r30),r1
 1492  0000202c          	L64_LF2:
 1493  0000202c  8fc1fff4	lw	r1,-12(r30)
 1494  00002030  8fc20000	lw	r2,(r30)
 1495  00002034  0022082c	sle	r1,r1,r2
 1496  00002038  1420000c	bnez	r1,L66_LF2
 1497  0000203c  54000000	nop; delay slot nop
 1498  00002040  08000024	j	L65_LF2
 1499  00002044  54000000	nop; delay slot nop
 1500  00002048          	L67_LF2:
 1501  00002048          	L66_LF2:
 1502  00002048  8fc1fff4	lw	r1,-12(r30)
 1503  0000204c  00011820	add	r3,r0,r1
 1504  00002050  50620002	slli	r2,r3,#0x2
 1505  00002054  00411020	add	r2,r2,r1
 1506  00002058  50410001	slli	r1,r2,#0x1
 1507  0000205c  afc1fff4	sw	-12(r30),r1
 1508  00002060  0bffffc8	j	L64_LF2
 1509  00002064  54000000	nop; delay slot nop
 1510  00002068          	L65_LF2:
 1511  00002068  54000000	nop
 1512  0000206c          	L68_LF2:
 1513  0000206c  8fc1fff4	lw	r1,-12(r30)
 1514  00002070  2002000a	addi	r2,r0,#10
 1515  00002074  00200035	movi2fp	f0,r1
 1516  00002078  00400835	movi2fp	f1,r2
 1517  0000207c  0401000f	div	f0,f0,f1
 1518  00002080  00000834	movfp2i	r1,f0
 1519  00002084  afc1fff4	sw	-12(r30),r1
 1520  00002088  8fc10004	lw	r1,4(r30)
 1521  0000208c  20220001	addi	r2,r1,#1
 1522  00002090  afc20004	sw	4(r30),r2
 1523  00002094  8fc20000	lw	r2,(r30)
 1524  00002098  8fc3fff4	lw	r3,-12(r30)
 1525  0000209c  00400035	movi2fp	f0,r2
 1526  000020a0  00600835	movi2fp	f1,r3
 1527  000020a4  0401000f	div	f0,f0,f1
 1528  000020a8  00001034	movfp2i	r2,f0
 1529  000020ac  00021820	add	r3,r0,r2
 1530  000020b0  20620030	addi	r2,r3,#48
 1531  000020b4  a0220000	sb	(r1),r2
 1532  000020b8  8fc10000	lw	r1,(r30)
 1533  000020bc  8fc3fff4	lw	r3,-12(r30)
 1534  000020c0  00200035	movi2fp	f0,r1
 1535  000020c4  00600835	movi2fp	f1,r3
 1536  000020c8  0401000f	div	f0,f0,f1
 1537  000020cc  00001034	movfp2i	r2,f0
 1538  000020d0  8fc3fff4	lw	r3,-12(r30)
 1539  000020d4  00400035	movi2fp	f0,r2
 1540  000020d8  00600835	movi2fp	f1,r3
 1541  000020dc  0401000e	mult	f0,f0,f1
 1542  000020e0  00001034	movfp2i	r2,f0
 1543  000020e4  00220822	sub	r1,r1,r2
 1544  000020e8  afc10000	sw	(r30),r1
 1545  000020ec          	L70_LF2:
 1546  000020ec  8fc1fff4	lw	r1,-12(r30)
 1547  000020f0  6c220001	sgti	r2,r1,#1
 1548  000020f4  1440000c	bnez	r2,L71_LF2
 1549  000020f8  54000000	nop; delay slot nop
 1550  000020fc  0800000c	j	L61_LF2
 1551  00002100  54000000	nop; delay slot nop
 1552  00002104          	L71_LF2:
 1553  00002104  0bffff64	j	L68_LF2
 1554  00002108  54000000	nop; delay slot nop
 1555  0000210c          	L69_LF2:
 1556  0000210c          	L63_LF2:
 1557  0000210c          	L61_LF2:
 1558  0000210c  8fc10004	lw	r1,4(r30)
 1559  00002110  20020000	addi	r2,r0,(#0x0)&0xff
 1560  00002114  a0220000	sb	(r1),r2
 1561  00002118          	L59_LF2:
 1562  00002118  8fa20000	lw	r2,0(r29)
 1563  0000211c  8fa30004	lw	r3,4(r29)
 1564  00002120  8fdffff8	lw	r31,-8(r30)
 1565  00002124  001ee820	add	r29,r0,r30
 1566  00002128  8fdefffc	lw	r30,-4(r30)
 1567  0000212c  4be00000	jr	r31
 1568  00002130  54000000	nop
 1569  00002134          	.endproc _ditoa
 1570  00002134          	.align 2
 1571  00002134          	.proc _dstrtol
 1572  00002134          	.global _dstrtol
 1573  00002134          	_dstrtol:
 1574                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1575  00002134  afbefffc	sw	-4(r29),r30; push fp
 1576  00002138  001df020	add	r30,r0,r29; fp = sp
 1577  0000213c  afbffff8	sw	-8(r29),r31; push ret addr
 1578  00002140  2fbd0020	subui	r29,r29,#32; alloc local storage
 1579  00002144  afa20000	sw	0(r29),r2
 1580  00002148  20010000	addi	r1,r0,#0
 1581  0000214c  afc1fff4	sw	-12(r30),r1
 1582  00002150          	L73_LF2:
 1583  00002150  8fc10000	lw	r1,(r30)
 1584  00002154  90220000	lbu	r2,(r1)
 1585  00002158  60410020	seqi	r1,r2,#32
 1586  0000215c  14200034	bnez	r1,L75_LF2
 1587  00002160  54000000	nop; delay slot nop
 1588  00002164  8fc10000	lw	r1,(r30)
 1589  00002168  90220000	lbu	r2,(r1)
 1590  0000216c  60410009	seqi	r1,r2,#9
 1591  00002170  14200020	bnez	r1,L75_LF2
 1592  00002174  54000000	nop; delay slot nop
 1593  00002178  8fc10000	lw	r1,(r30)
 1594  0000217c  90220000	lbu	r2,(r1)
 1595  00002180  6041000a	seqi	r1,r2,#10
 1596  00002184  1420000c	bnez	r1,L75_LF2
 1597  00002188  54000000	nop; delay slot nop
 1598  0000218c  0800001c	j	L74_LF2
 1599  00002190  54000000	nop; delay slot nop
 1600  00002194          	L75_LF2:
 1601  00002194  8fc20000	lw	r2,(r30)
 1602  00002198  20410001	addi	r1,r2,#1
 1603  0000219c  00011020	add	r2,r0,r1
 1604  000021a0  afc20000	sw	(r30),r2
 1605  000021a4  0bffffa8	j	L73_LF2
 1606  000021a8  54000000	nop; delay slot nop
 1607  000021ac          	L74_LF2:
 1608  000021ac  8fc10004	lw	r1,4(r30)
 1609  000021b0  64220000	snei	r2,r1,#0
 1610  000021b4  10400010	beqz	r2,L76_LF2
 1611  000021b8  54000000	nop; delay slot nop
 1612  000021bc  8fc10004	lw	r1,4(r30)
 1613  000021c0  8fc20000	lw	r2,(r30)
 1614  000021c4  ac220000	sw	(r1),r2
 1615  000021c8          	L76_LF2:
 1616  000021c8  8fc10000	lw	r1,(r30)
 1617  000021cc  90220000	lbu	r2,(r1)
 1618  000021d0  64410000	snei	r1,r2,#0
 1619  000021d4  14200010	bnez	r1,L77_LF2
 1620  000021d8  54000000	nop; delay slot nop
 1621  000021dc  8fc1fff4	lw	r1,-12(r30)
 1622  000021e0  08000294	j	L72_LF2
 1623  000021e4  54000000	nop; delay slot nop
 1624  000021e8          	L77_LF2:
 1625  000021e8  8fc10000	lw	r1,(r30)
 1626  000021ec  90220000	lbu	r2,(r1)
 1627  000021f0  6041002d	seqi	r1,r2,#45
 1628  000021f4  10200024	beqz	r1,L78_LF2
 1629  000021f8  54000000	nop; delay slot nop
 1630  000021fc  2001ffff	addi	r1,r0,#-1
 1631  00002200  afc1ffec	sw	-20(r30),r1
 1632  00002204  8fc20000	lw	r2,(r30)
 1633  00002208  20410001	addi	r1,r2,#1
 1634  0000220c  00011020	add	r2,r0,r1
 1635  00002210  afc20000	sw	(r30),r2
 1636  00002214  0800000c	j	L79_LF2
 1637  00002218  54000000	nop; delay slot nop
 1638  0000221c          	L78_LF2:
 1639  0000221c  20010001	addi	r1,r0,#1
 1640  00002220  afc1ffec	sw	-20(r30),r1
 1641  00002224          	L79_LF2:
 1642  00002224  8fc10008	lw	r1,8(r30)
 1643  00002228  64220000	snei	r2,r1,#0
 1644  0000222c  14400090	bnez	r2,L80_LF2
 1645  00002230  54000000	nop; delay slot nop
 1646  00002234  8fc10000	lw	r1,(r30)
 1647  00002238  90220000	lbu	r2,(r1)
 1648  0000223c  60410030	seqi	r1,r2,#48
 1649  00002240  10200074	beqz	r1,L81_LF2
 1650  00002244  54000000	nop; delay slot nop
 1651  00002248  8fc20000	lw	r2,(r30)
 1652  0000224c  20410001	addi	r1,r2,#1
 1653  00002250  00011020	add	r2,r0,r1
 1654  00002254  afc20000	sw	(r30),r2
 1655  00002258  8fc10000	lw	r1,(r30)
 1656  0000225c  90220000	lbu	r2,(r1)
 1657  00002260  60410078	seqi	r1,r2,#120
 1658  00002264  14200020	bnez	r1,L83_LF2
 1659  00002268  54000000	nop; delay slot nop
 1660  0000226c  8fc10000	lw	r1,(r30)
 1661  00002270  90220000	lbu	r2,(r1)
 1662  00002274  60410058	seqi	r1,r2,#88
 1663  00002278  1420000c	bnez	r1,L83_LF2
 1664  0000227c  54000000	nop; delay slot nop
 1665  00002280  08000024	j	L82_LF2
 1666  00002284  54000000	nop; delay slot nop
 1667  00002288          	L83_LF2:
 1668  00002288  20010010	addi	r1,r0,#16
 1669  0000228c  afc10008	sw	8(r30),r1
 1670  00002290  8fc20000	lw	r2,(r30)
 1671  00002294  20410001	addi	r1,r2,#1
 1672  00002298  00011020	add	r2,r0,r1
 1673  0000229c  afc20000	sw	(r30),r2
 1674  000022a0  0800000c	j	L84_LF2
 1675  000022a4  54000000	nop; delay slot nop
 1676  000022a8          	L82_LF2:
 1677  000022a8  20010008	addi	r1,r0,#8
 1678  000022ac  afc10008	sw	8(r30),r1
 1679  000022b0          	L84_LF2:
 1680  000022b0  0800000c	j	L80_LF2
 1681  000022b4  54000000	nop; delay slot nop
 1682  000022b8          	L81_LF2:
 1683  000022b8  2001000a	addi	r1,r0,#10
 1684  000022bc  afc10008	sw	8(r30),r1
 1685  000022c0          	L85_LF2:
 1686  000022c0          	L80_LF2:
 1687  000022c0  8fc10008	lw	r1,8(r30)
 1688  000022c4  70220000	slei	r2,r1,#0
 1689  000022c8  1440001c	bnez	r2,L87_LF2
 1690  000022cc  54000000	nop; delay slot nop
 1691  000022d0  8fc10008	lw	r1,8(r30)
 1692  000022d4  6c220010	sgti	r2,r1,#16
 1693  000022d8  1440000c	bnez	r2,L87_LF2
 1694  000022dc  54000000	nop; delay slot nop
 1695  000022e0  08000010	j	L86_LF2
 1696  000022e4  54000000	nop; delay slot nop
 1697  000022e8          	L87_LF2:
 1698  000022e8  8fc1fff4	lw	r1,-12(r30)
 1699  000022ec  08000188	j	L72_LF2
 1700  000022f0  54000000	nop; delay slot nop
 1701  000022f4          	L86_LF2:
 1702  000022f4  54000000	nop
 1703  000022f8          	L88_LF2:
 1704  000022f8  8fc10000	lw	r1,(r30)
 1705  000022fc  90220000	lbu	r2,(r1)
 1706  00002300  6c41002f	sgtui	r1,r2,#47
 1707  00002304  10200030	beqz	r1,L91_LF2
 1708  00002308  54000000	nop; delay slot nop
 1709  0000230c  8fc10000	lw	r1,(r30)
 1710  00002310  90220000	lbu	r2,(r1)
 1711  00002314  70410039	sleui	r1,r2,#57
 1712  00002318  1020001c	beqz	r1,L91_LF2
 1713  0000231c  54000000	nop; delay slot nop
 1714  00002320  8fc10000	lw	r1,(r30)
 1715  00002324  90220000	lbu	r2,(r1)
 1716  00002328  2041ffd0	addi	r1,r2,#-48
 1717  0000232c  afc1fff0	sw	-16(r30),r1
 1718  00002330  0800008c	j	L92_LF2
 1719  00002334  54000000	nop; delay slot nop
 1720  00002338          	L91_LF2:
 1721  00002338  8fc10000	lw	r1,(r30)
 1722  0000233c  90220000	lbu	r2,(r1)
 1723  00002340  6c410060	sgtui	r1,r2,#96
 1724  00002344  10200030	beqz	r1,L93_LF2
 1725  00002348  54000000	nop; delay slot nop
 1726  0000234c  8fc10000	lw	r1,(r30)
 1727  00002350  90220000	lbu	r2,(r1)
 1728  00002354  7041007a	sleui	r1,r2,#122
 1729  00002358  1020001c	beqz	r1,L93_LF2
 1730  0000235c  54000000	nop; delay slot nop
 1731  00002360  8fc10000	lw	r1,(r30)
 1732  00002364  90220000	lbu	r2,(r1)
 1733  00002368  2041ffa9	addi	r1,r2,#-87
 1734  0000236c  afc1fff0	sw	-16(r30),r1
 1735  00002370  0800004c	j	L92_LF2
 1736  00002374  54000000	nop; delay slot nop
 1737  00002378          	L93_LF2:
 1738  00002378  8fc10000	lw	r1,(r30)
 1739  0000237c  90220000	lbu	r2,(r1)
 1740  00002380  6c410040	sgtui	r1,r2,#64
 1741  00002384  10200030	beqz	r1,L95_LF2
 1742  00002388  54000000	nop; delay slot nop
 1743  0000238c  8fc10000	lw	r1,(r30)
 1744  00002390  90220000	lbu	r2,(r1)
 1745  00002394  7041005a	sleui	r1,r2,#90
 1746  00002398  1020001c	beqz	r1,L95_LF2
 1747  0000239c  54000000	nop; delay slot nop
 1748  000023a0  8fc10000	lw	r1,(r30)
 1749  000023a4  90220000	lbu	r2,(r1)
 1750  000023a8  2041ffc9	addi	r1,r2,#-55
 1751  000023ac  afc1fff0	sw	-16(r30),r1
 1752  000023b0  0800000c	j	L92_LF2
 1753  000023b4  54000000	nop; delay slot nop
 1754  000023b8          	L95_LF2:
 1755  000023b8  200103e8	addi	r1,r0,#1000
 1756  000023bc  afc1fff0	sw	-16(r30),r1
 1757  000023c0          	L96_LF2:
 1758  000023c0          	L94_LF2:
 1759  000023c0          	L92_LF2:
 1760  000023c0  8fc1fff0	lw	r1,-16(r30)
 1761  000023c4  8fc20008	lw	r2,8(r30)
 1762  000023c8  0022082a	slt	r1,r1,r2
 1763  000023cc  10200040	beqz	r1,L90_LF2
 1764  000023d0  54000000	nop; delay slot nop
 1765  000023d4  8fc1fff4	lw	r1,-12(r30)
 1766  000023d8  8fc20008	lw	r2,8(r30)
 1767  000023dc  00200035	movi2fp	f0,r1
 1768  000023e0  00400835	movi2fp	f1,r2
 1769  000023e4  0401000e	mult	f0,f0,f1
 1770  000023e8  00000834	movfp2i	r1,f0
 1771  000023ec  afc1fff4	sw	-12(r30),r1
 1772  000023f0  8fc1fff4	lw	r1,-12(r30)
 1773  000023f4  8fc2fff0	lw	r2,-16(r30)
 1774  000023f8  00220820	add	r1,r1,r2
 1775  000023fc  afc1fff4	sw	-12(r30),r1
 1776  00002400  8fc20000	lw	r2,(r30)
 1777  00002404  20410001	addi	r1,r2,#1
 1778  00002408  00011020	add	r2,r0,r1
 1779  0000240c  afc20000	sw	(r30),r2
 1780  00002410          	L97_LF2:
 1781  00002410          	L90_LF2:
 1782  00002410  8fc1fff0	lw	r1,-16(r30)
 1783  00002414  8fc20008	lw	r2,8(r30)
 1784  00002418  0022082a	slt	r1,r1,r2
 1785  0000241c  1420000c	bnez	r1,L98_LF2
 1786  00002420  54000000	nop; delay slot nop
 1787  00002424  0800000c	j	L89_LF2
 1788  00002428  54000000	nop; delay slot nop
 1789  0000242c          	L98_LF2:
 1790  0000242c  0bfffec8	j	L88_LF2
 1791  00002430  54000000	nop; delay slot nop
 1792  00002434          	L89_LF2:
 1793  00002434  8fc10004	lw	r1,4(r30)
 1794  00002438  64220000	snei	r2,r1,#0
 1795  0000243c  10400010	beqz	r2,L99_LF2
 1796  00002440  54000000	nop; delay slot nop
 1797  00002444  8fc10004	lw	r1,4(r30)
 1798  00002448  8fc20000	lw	r2,(r30)
 1799  0000244c  ac220000	sw	(r1),r2
 1800  00002450          	L99_LF2:
 1801  00002450  8fc1fff4	lw	r1,-12(r30)
 1802  00002454  8fc2ffec	lw	r2,-20(r30)
 1803  00002458  00200035	movi2fp	f0,r1
 1804  0000245c  00400835	movi2fp	f1,r2
 1805  00002460  0401000e	mult	f0,f0,f1
 1806  00002464  00000834	movfp2i	r1,f0
 1807  00002468  afc1fff4	sw	-12(r30),r1
 1808  0000246c  8fc1fff4	lw	r1,-12(r30)
 1809  00002470  08000004	j	L72_LF2
 1810  00002474  54000000	nop; delay slot nop
 1811  00002478          	L72_LF2:
 1812  00002478  8fa20000	lw	r2,0(r29)
 1813  0000247c  8fdffff8	lw	r31,-8(r30)
 1814  00002480  001ee820	add	r29,r0,r30
 1815  00002484  8fdefffc	lw	r30,-4(r30)
 1816  00002488  4be00000	jr	r31
 1817  0000248c  54000000	nop
 1818  00002490          	.endproc _dstrtol
 1819  00002490          	.align 2
 1820  00002490          	.proc _bcopy
 1821  00002490          	.global _bcopy
 1822  00002490          	_bcopy:
 1823                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1824  00002490  afbefffc	sw	-4(r29),r30; push fp
 1825  00002494  001df020	add	r30,r0,r29; fp = sp
 1826  00002498  afbffff8	sw	-8(r29),r31; push ret addr
 1827  0000249c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1828  000024a0  afa20000	sw	0(r29),r2
 1829  000024a4  afa30004	sw	4(r29),r3
 1830  000024a8  54000000	nop
 1831  000024ac          	L101_LF2:
 1832  000024ac  8fc10008	lw	r1,8(r30)
 1833  000024b0  2022ffff	addi	r2,r1,#-1
 1834  000024b4  afc20008	sw	8(r30),r2
 1835  000024b8  6c210000	sgti	r1,r1,#0
 1836  000024bc  1420000c	bnez	r1,L103_LF2
 1837  000024c0  54000000	nop; delay slot nop
 1838  000024c4  0800002c	j	L102_LF2
 1839  000024c8  54000000	nop; delay slot nop
 1840  000024cc          	L103_LF2:
 1841  000024cc  8fc10004	lw	r1,4(r30)
 1842  000024d0  20220001	addi	r2,r1,#1
 1843  000024d4  afc20004	sw	4(r30),r2
 1844  000024d8  8fc20000	lw	r2,(r30)
 1845  000024dc  20430001	addi	r3,r2,#1
 1846  000024e0  afc30000	sw	(r30),r3
 1847  000024e4  80420000	lb	r2,(r2)
 1848  000024e8  a0220000	sb	(r1),r2
 1849  000024ec  0bffffbc	j	L101_LF2
 1850  000024f0  54000000	nop; delay slot nop
 1851  000024f4          	L102_LF2:
 1852  000024f4          	L100_LF2:
 1853  000024f4  8fa20000	lw	r2,0(r29)
 1854  000024f8  8fa30004	lw	r3,4(r29)
 1855  000024fc  8fdffff8	lw	r31,-8(r30)
 1856  00002500  001ee820	add	r29,r0,r30
 1857  00002504  8fdefffc	lw	r30,-4(r30)
 1858  00002508  4be00000	jr	r31
 1859  0000250c  54000000	nop
 1860  00002510          	.endproc _bcopy
 1861  00002510          	.align 2
 1862  00002510          	.proc _bzero
 1863  00002510          	.global _bzero
 1864  00002510          	_bzero:
 1865                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1866  00002510  afbefffc	sw	-4(r29),r30; push fp
 1867  00002514  001df020	add	r30,r0,r29; fp = sp
 1868  00002518  afbffff8	sw	-8(r29),r31; push ret addr
 1869  0000251c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1870  00002520  afa20000	sw	0(r29),r2
 1871  00002524  54000000	nop
 1872  00002528          	L105_LF2:
 1873  00002528  8fc10004	lw	r1,4(r30)
 1874  0000252c  2022ffff	addi	r2,r1,#-1
 1875  00002530  afc20004	sw	4(r30),r2
 1876  00002534  6c210000	sgti	r1,r1,#0
 1877  00002538  1420000c	bnez	r1,L107_LF2
 1878  0000253c  54000000	nop; delay slot nop
 1879  00002540  08000020	j	L106_LF2
 1880  00002544  54000000	nop; delay slot nop
 1881  00002548          	L107_LF2:
 1882  00002548  8fc10000	lw	r1,(r30)
 1883  0000254c  20220001	addi	r2,r1,#1
 1884  00002550  afc20000	sw	(r30),r2
 1885  00002554  20020000	addi	r2,r0,(#0x0)&0xff
 1886  00002558  a0220000	sb	(r1),r2
 1887  0000255c  0bffffc8	j	L105_LF2
 1888  00002560  54000000	nop; delay slot nop
 1889  00002564          	L106_LF2:
 1890  00002564          	L104_LF2:
 1891  00002564  8fa20000	lw	r2,0(r29)
 1892  00002568  8fdffff8	lw	r31,-8(r30)
 1893  0000256c  001ee820	add	r29,r0,r30
 1894  00002570  8fdefffc	lw	r30,-4(r30)
 1895  00002574  4be00000	jr	r31
 1896  00002578  54000000	nop
 1897  0000257c          	.endproc _bzero
 1898  0000257c          	.align 2
 1899  0000257c          	.proc _min
 1900  0000257c          	.global _min
 1901  0000257c          	_min:
 1902                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1903  0000257c  afbefffc	sw	-4(r29),r30; push fp
 1904  00002580  001df020	add	r30,r0,r29; fp = sp
 1905  00002584  afbffff8	sw	-8(r29),r31; push ret addr
 1906  00002588  2fbd0010	subui	r29,r29,#16; alloc local storage
 1907  0000258c  afa20000	sw	0(r29),r2
 1908  00002590  afa30004	sw	4(r29),r3
 1909  00002594  8fc10000	lw	r1,(r30)
 1910  00002598  8fc20004	lw	r2,4(r30)
 1911  0000259c  0022182c	sle	r3,r1,r2
 1912  000025a0  14600008	bnez	r3,L109_LF2
 1913  000025a4  54000000	nop; delay slot nop
 1914  000025a8  8fc10004	lw	r1,4(r30)
 1915  000025ac          	L109_LF2:
 1916  000025ac  08000004	j	L108_LF2
 1917  000025b0  54000000	nop; delay slot nop
 1918  000025b4          	L108_LF2:
 1919  000025b4  8fa20000	lw	r2,0(r29)
 1920  000025b8  8fa30004	lw	r3,4(r29)
 1921  000025bc  8fdffff8	lw	r31,-8(r30)
 1922  000025c0  001ee820	add	r29,r0,r30
 1923  000025c4  8fdefffc	lw	r30,-4(r30)
 1924  000025c8  4be00000	jr	r31
 1925  000025cc  54000000	nop
 1926  000025d0          	.endproc _min
 1927  000025d0          	.align 2
 1928  000025d0          	.proc _max
 1929  000025d0          	.global _max
 1930  000025d0          	_max:
 1931                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1932  000025d0  afbefffc	sw	-4(r29),r30; push fp
 1933  000025d4  001df020	add	r30,r0,r29; fp = sp
 1934  000025d8  afbffff8	sw	-8(r29),r31; push ret addr
 1935  000025dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1936  000025e0  afa20000	sw	0(r29),r2
 1937  000025e4  afa30004	sw	4(r29),r3
 1938  000025e8  8fc10000	lw	r1,(r30)
 1939  000025ec  8fc20004	lw	r2,4(r30)
 1940  000025f0  0022182d	sge	r3,r1,r2
 1941  000025f4  14600008	bnez	r3,L111_LF2
 1942  000025f8  54000000	nop; delay slot nop
 1943  000025fc  8fc10004	lw	r1,4(r30)
 1944  00002600          	L111_LF2:
 1945  00002600  08000004	j	L110_LF2
 1946  00002604  54000000	nop; delay slot nop
 1947  00002608          	L110_LF2:
 1948  00002608  8fa20000	lw	r2,0(r29)
 1949  0000260c  8fa30004	lw	r3,4(r29)
 1950  00002610  8fdffff8	lw	r31,-8(r30)
 1951  00002614  001ee820	add	r29,r0,r30
 1952  00002618  8fdefffc	lw	r30,-4(r30)
 1953  0000261c  4be00000	jr	r31
 1954  00002620  54000000	nop
 1955  00002624          	.endproc _max
 1956                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1957                      ;;;
 1958                      ;;; Most of the traps are called in files from libtraps.
 1961  00002624          	.align 2
 1962  00002624          	.proc _exit
 1963  00002624          	.global _exit
 1964  00002624          	_exit:
 1965  00002624  44000300	trap	#0x300
 1966  00002628  4be00000	jr	r31
 1967  0000262c  54000000	nop
 1968  00002630          	.endproc _exit
 1970                      ; for the benefit of gcc.
 1971  00002630          	.proc ___main
 1972  00002630          	.global ___main
 1973  00002630          	___main:
 1974  00002630  4be00000	jr	r31
 1975  00002634  54000000	nop
 1976  00002638          	.endproc ___main
 1977  00002638          	.text
 1978  00002638          	.global _etext
 1979  00002638          	_etext:
 1980  00002638          	.align 3
 1981  00002638          	.data
 1982  000036f6          	.global _edata
 1983  000036f6          	_edata:
