 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 1178
    4                      ; Text size: 5044
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  41667465	.ascii "After allocating 4KB character buffer, new variable has address : 0x%x"
   82  00003004  7220616c	
   82  00003008  6c6f6361	
   82  0000300c  74696e67	
   82  00003010  20344b42	
   82  00003014  20636861	
   82  00003018  72616374	
   82  0000301c  65722062	
   82  00003020  75666665	
   82  00003024  722c206e	
   82  00003028  65772076	
   82  0000302c  61726961	
   82  00003030  626c6520	
   82  00003034  68617320	
   82  00003038  61646472	
   82  0000303c  65737320	
   82  00003040  3a203078	
   82  00003044  2578    	
   83  00003046  0a00    	.ascii "\n\000"
   84  00003048          	.text
   85  000010d4          	.align 2
   86  000010d4          	.proc _consume_userstack
   87  000010d4          	.global _consume_userstack
   88  000010d4          	_consume_userstack:
   89                      ;  Function 'consume_userstack'; 4104 bytes of locals, 1 regs to save.
   90  000010d4  afbefffc	sw	-4(r29),r30; push fp
   91  000010d8  001df020	add	r30,r0,r29; fp = sp
   92  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   93  000010e0  2fbd1018	subui	r29,r29,#4120; alloc local storage
   94  000010e4  afa20000	sw	0(r29),r2
   95  000010e8  23bdfff8	addi	r29,r29,#-8
   96  000010ec  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
   97  000010f0  24423000	addui	r2,r2,(LC0_LF0)&0xffff
   98  000010f4  afa20000	sw	(r29),r2
   99  000010f8  23c1eff4	addi	r1,r30,#-4108
  100  000010fc  afa10004	sw	4(r29),r1
  101  00001100  0c0003e8	jal	_Printf
  102  00001104  54000000	nop; not filled.
  103  00001108  23bd0008	addi	r29,r29,#8
  104  0000110c  8fa20000	lw	r2,0(r29)
  105  00001110  8fdffff8	lw	r31,-8(r30)
  106  00001114  001ee820	add	r29,r0,r30
  107  00001118  8fdefffc	lw	r30,-4(r30)
  108  0000111c  4be00000	jr	r31
  109  00001120  54000000	nop
  110  00001124          	.endproc _consume_userstack
  111  00001124          	.data
  112  00003048          	.align 2
  113  00003048          	LC1_LF0:
  114  00003048  55736167	.ascii "Usage: %s <number of hello world processes to create>\n\000"
  114  0000304c  653a2025	
  114  00003050  73203c6e	
  114  00003054  756d6265	
  114  00003058  72206f66	
  114  0000305c  2068656c	
  114  00003060  6c6f2077	
  114  00003064  6f726c64	
  114  00003068  2070726f	
  114  0000306c  63657373	
  114  00003070  65732074	
  114  00003074  6f206372	
  114  00003078  65617465	
  114  0000307c  3e0a00  	
  115  0000307f          	.align 2
  116  00003080          	LC2_LF0:
  117  00003080  2d2d2d2d	.ascii "------------------------User Process Execution Menu (Enter choice numb"
  117  00003084  2d2d2d2d	
  117  00003088  2d2d2d2d	
  117  0000308c  2d2d2d2d	
  117  00003090  2d2d2d2d	
  117  00003094  2d2d2d2d	
  117  00003098  55736572	
  117  0000309c  2050726f	
  117  000030a0  63657373	
  117  000030a4  20457865	
  117  000030a8  63757469	
  117  000030ac  6f6e204d	
  117  000030b0  656e7520	
  117  000030b4  28456e74	
  117  000030b8  65722063	
  117  000030bc  686f6963	
  117  000030c0  65206e75	
  117  000030c4  6d62    	
  118  000030c6  6572292d	.ascii "er)--------------------\n\000"
  118  000030ca  2d2d2d2d	
  118  000030ce  2d2d2d2d	
  118  000030d2  2d2d2d2d	
  118  000030d6  2d2d2d2d	
  118  000030da  2d2d2d0a	
  118  000030de  00      	
  119  000030df          	.align 2
  120  000030e0          	LC3_LF0:
  121  000030e0  312e5275	.ascii "1.Run Hello World process\n\000"
  121  000030e4  6e204865	
  121  000030e8  6c6c6f20	
  121  000030ec  576f726c	
  121  000030f0  64207072	
  121  000030f4  6f636573	
  121  000030f8  730a00  	
  122  000030fb          	.align 2
  123  000030fc          	LC4_LF0:
  124  000030fc  322e4163	.ascii "2.Access memory outside allocated process pages\n\000"
  124  00003100  63657373	
  124  00003104  206d656d	
  124  00003108  6f727920	
  124  0000310c  6f757473	
  124  00003110  69646520	
  124  00003114  616c6c6f	
  124  00003118  63617465	
  124  0000311c  64207072	
  124  00003120  6f636573	
  124  00003124  73207061	
  124  00003128  6765730a	
  124  0000312c  00      	
  125  0000312d          	.align 2
  126  00003130          	LC5_LF0:
  127  00003130  332e4361	.ascii "3.Cause user stack to grow more than 1 page\n\000"
  127  00003134  75736520	
  127  00003138  75736572	
  127  0000313c  20737461	
  127  00003140  636b2074	
  127  00003144  6f206772	
  127  00003148  6f77206d	
  127  0000314c  6f726520	
  127  00003150  7468616e	
  127  00003154  20312070	
  127  00003158  6167650a	
  127  0000315c  00      	
  128  0000315d          	.align 2
  129  00003160          	LC6_LF0:
  130  00003160  342e4361	.ascii "4.Call Hello World program 100 in a row\n\000"
  130  00003164  6c6c2048	
  130  00003168  656c6c6f	
  130  0000316c  20576f72	
  130  00003170  6c642070	
  130  00003174  726f6772	
  130  00003178  616d2031	
  130  0000317c  30302069	
  130  00003180  6e206120	
  130  00003184  726f770a	
  130  00003188  00      	
  131  00003189          	.align 2
  132  0000318c          	LC7_LF0:
  133  0000318c  352e5370	.ascii "5.Spwan 330 processes simultaenously to count to a large value\n\000"
  133  00003190  77616e20	
  133  00003194  33333020	
  133  00003198  70726f63	
  133  0000319c  65737365	
  133  000031a0  73207369	
  133  000031a4  6d756c74	
  133  000031a8  61656e6f	
  133  000031ac  75736c79	
  133  000031b0  20746f20	
  133  000031b4  636f756e	
  133  000031b8  7420746f	
  133  000031bc  2061206c	
  133  000031c0  61726765	
  133  000031c4  2076616c	
  133  000031c8  75650a00	
  134  000031cc          	.align 2
  135  000031cc          	LC8_LF0:
  136  000031cc  362e4163	.ascii "6.Access memory beyond the virtual memory address space\n\000"
  136  000031d0  63657373	
  136  000031d4  206d656d	
  136  000031d8  6f727920	
  136  000031dc  6265796f	
  136  000031e0  6e642074	
  136  000031e4  68652076	
  136  000031e8  69727475	
  136  000031ec  616c206d	
  136  000031f0  656d6f72	
  136  000031f4  79206164	
  136  000031f8  64726573	
  136  000031fc  73207370	
  136  00003200  6163650a	
  136  00003204  00      	
  137  00003205          	.align 2
  138  00003208          	LC9_LF0:
  139  00003208  6d616b65	.ascii "makeprocs (%d): Creating %d hello_world processes\n\000"
  139  0000320c  70726f63	
  139  00003210  73202825	
  139  00003214  64293a20	
  139  00003218  43726561	
  139  0000321c  74696e67	
  139  00003220  20256420	
  139  00003224  68656c6c	
  139  00003228  6f5f776f	
  139  0000322c  726c6420	
  139  00003230  70726f63	
  139  00003234  65737365	
  139  00003238  730a00  	
  140  0000323b          	.align 2
  141  0000323c          	LC10_LF0:
  142  0000323c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
  142  00003240  70726f63	
  142  00003244  73202825	
  142  00003248  64293a20	
  142  0000324c  42616420	
  142  00003250  73656d5f	
  142  00003254  63726561	
  142  00003258  74650a00	
  143  0000325c          	.align 2
  144  0000325c          	LC11_LF0:
  145  0000325c  2d2d2d2d	.ascii "-------------------------------Part 1------------------------------\n\000"
  145  00003260  2d2d2d2d	
  145  00003264  2d2d2d2d	
  145  00003268  2d2d2d2d	
  145  0000326c  2d2d2d2d	
  145  00003270  2d2d2d2d	
  145  00003274  2d2d2d2d	
  145  00003278  2d2d2d50	
  145  0000327c  61727420	
  145  00003280  312d2d2d	
  145  00003284  2d2d2d2d	
  145  00003288  2d2d2d2d	
  145  0000328c  2d2d2d2d	
  145  00003290  2d2d2d2d	
  145  00003294  2d2d2d2d	
  145  00003298  2d2d2d2d	
  145  0000329c  2d2d2d0a	
  145  000032a0  00      	
  146  000032a1          	.align 2
  147  000032a4          	LC12_LF0:
  148  000032a4  6d616b65	.ascii "makeprocs (%d): Creating 1 hello world process\n\000"
  148  000032a8  70726f63	
  148  000032ac  73202825	
  148  000032b0  64293a20	
  148  000032b4  43726561	
  148  000032b8  74696e67	
  148  000032bc  20312068	
  148  000032c0  656c6c6f	
  148  000032c4  20776f72	
  148  000032c8  6c642070	
  148  000032cc  726f6365	
  148  000032d0  73730a00	
  149  000032d4          	.align 2
  150  000032d4          	LC13_LF0:
  151  000032d4  68656c6c	.ascii "hello_world.dlx.obj\000"
  151  000032d8  6f5f776f	
  151  000032dc  726c642e	
  151  000032e0  646c782e	
  151  000032e4  6f626a00	
  152  000032e8          	.align 2
  153  000032e8          	LC14_LF0:
  154  000032e8  2d2d2d2d	.ascii "-------------------------------Part 3-------------------------------\n"
  154  000032ec  2d2d2d2d	
  154  000032f0  2d2d2d2d	
  154  000032f4  2d2d2d2d	
  154  000032f8  2d2d2d2d	
  154  000032fc  2d2d2d2d	
  154  00003300  2d2d2d2d	
  154  00003304  2d2d2d50	
  154  00003308  61727420	
  154  0000330c  332d2d2d	
  154  00003310  2d2d2d2d	
  154  00003314  2d2d2d2d	
  154  00003318  2d2d2d2d	
  154  0000331c  2d2d2d2d	
  154  00003320  2d2d2d2d	
  154  00003324  2d2d2d2d	
  154  00003328  2d2d2d2d	
  154  0000332c  0a      	
  155  0000332d  00      	.ascii "\000"
  156  0000332e          	.align 2
  157  00003330          	LC15_LF0:
  158  00003330  2d2d2d2d	.ascii "-----------------------------Part 5----------------------------------\n"
  158  00003334  2d2d2d2d	
  158  00003338  2d2d2d2d	
  158  0000333c  2d2d2d2d	
  158  00003340  2d2d2d2d	
  158  00003344  2d2d2d2d	
  158  00003348  2d2d2d2d	
  158  0000334c  2d506172	
  158  00003350  7420352d	
  158  00003354  2d2d2d2d	
  158  00003358  2d2d2d2d	
  158  0000335c  2d2d2d2d	
  158  00003360  2d2d2d2d	
  158  00003364  2d2d2d2d	
  158  00003368  2d2d2d2d	
  158  0000336c  2d2d2d2d	
  158  00003370  2d2d2d2d	
  158  00003374  2d0a    	
  159  00003376  00      	.ascii "\000"
  160  00003377          	.align 2
  161  00003378          	LC16_LF0:
  162  00003378  6d616b65	.ascii "makeprocs (%d): Creating counting process, spawn_counting #%d\n\000"
  162  0000337c  70726f63	
  162  00003380  73202825	
  162  00003384  64293a20	
  162  00003388  43726561	
  162  0000338c  74696e67	
  162  00003390  20636f75	
  162  00003394  6e74696e	
  162  00003398  67207072	
  162  0000339c  6f636573	
  162  000033a0  732c2073	
  162  000033a4  7061776e	
  162  000033a8  5f636f75	
  162  000033ac  6e74696e	
  162  000033b0  67202325	
  162  000033b4  640a00  	
  163  000033b7          	.align 2
  164  000033b8          	LC17_LF0:
  165  000033b8  73706177	.ascii "spawn_counting.dlx.obj\000"
  165  000033bc  6e5f636f	
  165  000033c0  756e7469	
  165  000033c4  6e672e64	
  165  000033c8  6c782e6f	
  165  000033cc  626a00  	
  166  000033cf          	.align 2
  167  000033d0          	LC18_LF0:
  168  000033d0  42616420	.ascii "Bad semaphore s_procs_completed (%d) in %s\n\000"
  168  000033d4  73656d61	
  168  000033d8  70686f72	
  168  000033dc  6520735f	
  168  000033e0  70726f63	
  168  000033e4  735f636f	
  168  000033e8  6d706c65	
  168  000033ec  74656420	
  168  000033f0  28256429	
  168  000033f4  20696e20	
  168  000033f8  25730a00	
  169  000033fc          	.align 2
  170  000033fc          	LC19_LF0:
  171  000033fc  2d2d2d2d	.ascii "----------------------------------------------------------------------"
  171  00003400  2d2d2d2d	
  171  00003404  2d2d2d2d	
  171  00003408  2d2d2d2d	
  171  0000340c  2d2d2d2d	
  171  00003410  2d2d2d2d	
  171  00003414  2d2d2d2d	
  171  00003418  2d2d2d2d	
  171  0000341c  2d2d2d2d	
  171  00003420  2d2d2d2d	
  171  00003424  2d2d2d2d	
  171  00003428  2d2d2d2d	
  171  0000342c  2d2d2d2d	
  171  00003430  2d2d2d2d	
  171  00003434  2d2d2d2d	
  171  00003438  2d2d2d2d	
  171  0000343c  2d2d2d2d	
  171  00003440  2d2d    	
  172  00003442  2d2d2d2d	.ascii "---------------\n\000"
  172  00003446  2d2d2d2d	
  172  0000344a  2d2d2d2d	
  172  0000344e  2d2d2d0a	
  172  00003452  00      	
  173  00003453          	.align 2
  174  00003454          	LC20_LF0:
  175  00003454  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  175  00003458  70726f63	
  175  0000345c  73202825	
  175  00003460  64293a20	
  175  00003464  416c6c20	
  175  00003468  6f746865	
  175  0000346c  72207072	
  175  00003470  6f636573	
  175  00003474  73657320	
  175  00003478  636f6d70	
  175  0000347c  6c657465	
  175  00003480  642c2065	
  175  00003484  78697469	
  175  00003488  6e67206d	
  175  0000348c  61696e20	
  175  00003490  70726f63	
  175  00003494  6573732e	
  175  00003498  0a      	
  176  00003499  00      	.ascii "\000"
  177  0000349a          	.text
  178  00001124          	.align 2
  179  00001124          	.proc _main
  180  00001124          	.global _main
  181  00001124          	_main:
  182                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  183  00001124  afbefffc	sw	-4(r29),r30; push fp
  184  00001128  001df020	add	r30,r0,r29; fp = sp
  185  0000112c  afbffff8	sw	-8(r29),r31; push ret addr
  186  00001130  2fbd0018	subui	r29,r29,#24; alloc local storage
  187  00001134  8fc20000	lw	r2,(r30)
  188  00001138  8fc50004	lw	r5,4(r30)
  189  0000113c  0c00126c	jal	___main
  190  00001140  54000000	nop; not filled.
  191  00001144  64410002	snei	r1,r2,#2
  192  00001148  10200030	beqz	r1,L16_LF0
  193  0000114c  54000000	nop; not filled.
  194  00001150  23bdfff8	addi	r29,r29,#-8
  195  00001154  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  196  00001158  24c63048	addui	r6,r6,(LC1_LF0)&0xffff
  197  0000115c  afa60000	sw	(r29),r6
  198  00001160  8ca10000	lw	r1,(r5)
  199  00001164  afa10004	sw	4(r29),r1
  200  00001168  0c000380	jal	_Printf
  201  0000116c  54000000	nop; not filled.
  202  00001170  0c000480	jal	_Exit
  203  00001174  54000000	nop; not filled.
  204  00001178  23bd0008	addi	r29,r29,#8
  205  0000117c          	L16_LF0:
  206  0000117c  23bdfff8	addi	r29,r29,#-8
  207  00001180  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  208  00001184  24c63080	addui	r6,r6,(LC2_LF0)&0xffff
  209  00001188  afa60000	sw	(r29),r6
  210  0000118c  0c00035c	jal	_Printf
  211  00001190  54000000	nop; not filled.
  212  00001194  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  213  00001198  24c630e0	addui	r6,r6,(LC3_LF0)&0xffff
  214  0000119c  afa60000	sw	(r29),r6
  215  000011a0  0c000348	jal	_Printf
  216  000011a4  54000000	nop; not filled.
  217  000011a8  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  218  000011ac  24c630fc	addui	r6,r6,(LC4_LF0)&0xffff
  219  000011b0  afa60000	sw	(r29),r6
  220  000011b4  0c000334	jal	_Printf
  221  000011b8  54000000	nop; not filled.
  222  000011bc  3c060000	lhi	r6,((LC5_LF0)>>16)&0xffff
  223  000011c0  24c63130	addui	r6,r6,(LC5_LF0)&0xffff
  224  000011c4  afa60000	sw	(r29),r6
  225  000011c8  0c000320	jal	_Printf
  226  000011cc  54000000	nop; not filled.
  227  000011d0  3c060000	lhi	r6,((LC6_LF0)>>16)&0xffff
  228  000011d4  24c63160	addui	r6,r6,(LC6_LF0)&0xffff
  229  000011d8  afa60000	sw	(r29),r6
  230  000011dc  0c00030c	jal	_Printf
  231  000011e0  54000000	nop; not filled.
  232  000011e4  3c060000	lhi	r6,((LC7_LF0)>>16)&0xffff
  233  000011e8  24c6318c	addui	r6,r6,(LC7_LF0)&0xffff
  234  000011ec  afa60000	sw	(r29),r6
  235  000011f0  0c0002f8	jal	_Printf
  236  000011f4  54000000	nop; not filled.
  237  000011f8  3c060000	lhi	r6,((LC8_LF0)>>16)&0xffff
  238  000011fc  24c631cc	addui	r6,r6,(LC8_LF0)&0xffff
  239  00001200  afa60000	sw	(r29),r6
  240  00001204  0c0002e4	jal	_Printf
  241  00001208  54000000	nop; not filled.
  242  0000120c  23bdfff8	addi	r29,r29,#-8
  243  00001210  8ca60004	lw	r6,4(r5)
  244  00001214  afa60000	sw	(r29),r6
  245  00001218  20060000	addi	r6,r0,#0
  246  0000121c  afa60004	sw	4(r29),r6
  247  00001220  2006000a	addi	r6,r0,#10
  248  00001224  afa60008	sw	8(r29),r6
  249  00001228  0c000c84	jal	_dstrtol
  250  0000122c  54000000	nop; not filled.
  251  00001230  00011020	add	r2,r0,r1
  252  00001234  0c0002c0	jal	_getpid
  253  00001238  54000000	nop; not filled.
  254  0000123c  3c060000	lhi	r6,((LC9_LF0)>>16)&0xffff
  255  00001240  24c63208	addui	r6,r6,(LC9_LF0)&0xffff
  256  00001244  afa60000	sw	(r29),r6
  257  00001248  afa10004	sw	4(r29),r1
  258  0000124c  afa20008	sw	8(r29),r2
  259  00001250  0c000298	jal	_Printf
  260  00001254  54000000	nop; not filled.
  261  00001258  20060000	addi	r6,r0,#0
  262  0000125c  afa60000	sw	(r29),r6
  263  00001260  0c0002c4	jal	_sem_create
  264  00001264  54000000	nop; not filled.
  265  00001268  00011820	add	r3,r0,r1
  266  0000126c  23bd0010	addi	r29,r29,#16
  267  00001270  6061ffff	seqi	r1,r3,#-1
  268  00001274  10200034	beqz	r1,L17_LF0
  269  00001278  54000000	nop; not filled.
  270  0000127c  0c000278	jal	_getpid
  271  00001280  54000000	nop; not filled.
  272  00001284  23bdfff8	addi	r29,r29,#-8
  273  00001288  3c060000	lhi	r6,((LC10_LF0)>>16)&0xffff
  274  0000128c  24c6323c	addui	r6,r6,(LC10_LF0)&0xffff
  275  00001290  afa60000	sw	(r29),r6
  276  00001294  afa10004	sw	4(r29),r1
  277  00001298  0c000250	jal	_Printf
  278  0000129c  54000000	nop; not filled.
  279  000012a0  0c000350	jal	_Exit
  280  000012a4  54000000	nop; not filled.
  281  000012a8  23bd0008	addi	r29,r29,#8
  282  000012ac          	L17_LF0:
  283  000012ac  23bdfff8	addi	r29,r29,#-8
  284  000012b0  afa30000	sw	(r29),r3
  285  000012b4  23c4ffe8	addi	r4,r30,#-24
  286  000012b8  afa40004	sw	4(r29),r4
  287  000012bc  0c000a64	jal	_ditoa
  288  000012c0  54000000	nop; not filled.
  289  000012c4  3c060000	lhi	r6,((LC11_LF0)>>16)&0xffff
  290  000012c8  24c6325c	addui	r6,r6,(LC11_LF0)&0xffff
  291  000012cc  afa60000	sw	(r29),r6
  292  000012d0  0c000218	jal	_Printf
  293  000012d4  54000000	nop; not filled.
  294  000012d8  3c060000	lhi	r6,((LC12_LF0)>>16)&0xffff
  295  000012dc  24c632a4	addui	r6,r6,(LC12_LF0)&0xffff
  296  000012e0  afa60000	sw	(r29),r6
  297  000012e4  0c000204	jal	_Printf
  298  000012e8  54000000	nop; not filled.
  299  000012ec  23bdfff8	addi	r29,r29,#-8
  300  000012f0  3c060000	lhi	r6,((LC13_LF0)>>16)&0xffff
  301  000012f4  24c632d4	addui	r6,r6,(LC13_LF0)&0xffff
  302  000012f8  afa60000	sw	(r29),r6
  303  000012fc  afa40004	sw	4(r29),r4
  304  00001300  20060000	addi	r6,r0,#0
  305  00001304  afa60008	sw	8(r29),r6
  306  00001308  0c0001f8	jal	_process_create
  307  0000130c  54000000	nop; not filled.
  308  00001310  afa30000	sw	(r29),r3
  309  00001314  0c00021c	jal	_sem_wait
  310  00001318  54000000	nop; not filled.
  311  0000131c  3c060000	lhi	r6,((LC14_LF0)>>16)&0xffff
  312  00001320  24c632e8	addui	r6,r6,(LC14_LF0)&0xffff
  313  00001324  afa60000	sw	(r29),r6
  314  00001328  0c0001c0	jal	_Printf
  315  0000132c  54000000	nop; not filled.
  316  00001330  3c060000	lhi	r6,((LC15_LF0)>>16)&0xffff
  317  00001334  24c63330	addui	r6,r6,(LC15_LF0)&0xffff
  318  00001338  afa60000	sw	(r29),r6
  319  0000133c  0c0001ac	jal	_Printf
  320  00001340  54000000	nop; not filled.
  321  00001344  2006ffe3	addi	r6,r0,#-29
  322  00001348  afa60000	sw	(r29),r6
  323  0000134c  0c0001d8	jal	_sem_create
  324  00001350  54000000	nop; not filled.
  325  00001354  00011820	add	r3,r0,r1
  326  00001358  23bd0010	addi	r29,r29,#16
  327  0000135c  6061ffff	seqi	r1,r3,#-1
  328  00001360  10200034	beqz	r1,L18_LF0
  329  00001364  54000000	nop; not filled.
  330  00001368  0c00018c	jal	_getpid
  331  0000136c  54000000	nop; not filled.
  332  00001370  23bdfff8	addi	r29,r29,#-8
  333  00001374  3c060000	lhi	r6,((LC10_LF0)>>16)&0xffff
  334  00001378  24c6323c	addui	r6,r6,(LC10_LF0)&0xffff
  335  0000137c  afa60000	sw	(r29),r6
  336  00001380  afa10004	sw	4(r29),r1
  337  00001384  0c000164	jal	_Printf
  338  00001388  54000000	nop; not filled.
  339  0000138c  0c000264	jal	_Exit
  340  00001390  54000000	nop; not filled.
  341  00001394  23bd0008	addi	r29,r29,#8
  342  00001398          	L18_LF0:
  343  00001398  23bdfff8	addi	r29,r29,#-8
  344  0000139c  afa30000	sw	(r29),r3
  345  000013a0  afa40004	sw	4(r29),r4
  346  000013a4  0c00097c	jal	_ditoa
  347  000013a8  54000000	nop; not filled.
  348  000013ac  20020000	addi	r2,r0,#0
  349  000013b0  23bd0008	addi	r29,r29,#8
  350  000013b4          	L22_LF0:
  351  000013b4  0c000140	jal	_getpid
  352  000013b8  54000000	nop; not filled.
  353  000013bc  23bdfff0	addi	r29,r29,#-16
  354  000013c0  3c060000	lhi	r6,((LC16_LF0)>>16)&0xffff
  355  000013c4  24c63378	addui	r6,r6,(LC16_LF0)&0xffff
  356  000013c8  afa60000	sw	(r29),r6
  357  000013cc  afa10004	sw	4(r29),r1
  358  000013d0  afa20008	sw	8(r29),r2
  359  000013d4  0c000114	jal	_Printf
  360  000013d8  54000000	nop; not filled.
  361  000013dc  3c060000	lhi	r6,((LC17_LF0)>>16)&0xffff
  362  000013e0  24c633b8	addui	r6,r6,(LC17_LF0)&0xffff
  363  000013e4  afa60000	sw	(r29),r6
  364  000013e8  afa40004	sw	4(r29),r4
  365  000013ec  20060000	addi	r6,r0,#0
  366  000013f0  afa60008	sw	8(r29),r6
  367  000013f4  0c00010c	jal	_process_create
  368  000013f8  54000000	nop; not filled.
  369  000013fc  23bd0010	addi	r29,r29,#16
  370  00001400  20420001	addi	r2,r2,#1
  371  00001404  7041001d	slei	r1,r2,#29
  372  00001408  1420ffa8	bnez	r1,L22_LF0
  373  0000140c  54000000	nop; not filled.
  374  00001410  23bdfff8	addi	r29,r29,#-8
  375  00001414  afa30000	sw	(r29),r3
  376  00001418  0c000118	jal	_sem_wait
  377  0000141c  54000000	nop; not filled.
  378  00001420  23bd0008	addi	r29,r29,#8
  379  00001424  64210001	snei	r1,r1,#1
  380  00001428  10200034	beqz	r1,L24_LF0
  381  0000142c  54000000	nop; not filled.
  382  00001430  23bdfff0	addi	r29,r29,#-16
  383  00001434  3c060000	lhi	r6,((LC18_LF0)>>16)&0xffff
  384  00001438  24c633d0	addui	r6,r6,(LC18_LF0)&0xffff
  385  0000143c  afa60000	sw	(r29),r6
  386  00001440  afa30004	sw	4(r29),r3
  387  00001444  8ca50000	lw	r5,(r5)
  388  00001448  afa50008	sw	8(r29),r5
  389  0000144c  0c00009c	jal	_Printf
  390  00001450  54000000	nop; not filled.
  391  00001454  0c00019c	jal	_Exit
  392  00001458  54000000	nop; not filled.
  393  0000145c  23bd0010	addi	r29,r29,#16
  394  00001460          	L24_LF0:
  395  00001460  23bdfff8	addi	r29,r29,#-8
  396  00001464  3c060000	lhi	r6,((LC19_LF0)>>16)&0xffff
  397  00001468  24c633fc	addui	r6,r6,(LC19_LF0)&0xffff
  398  0000146c  afa60000	sw	(r29),r6
  399  00001470  0c000078	jal	_Printf
  400  00001474  54000000	nop; not filled.
  401  00001478  0c00007c	jal	_getpid
  402  0000147c  54000000	nop; not filled.
  403  00001480  3c060000	lhi	r6,((LC20_LF0)>>16)&0xffff
  404  00001484  24c63454	addui	r6,r6,(LC20_LF0)&0xffff
  405  00001488  afa60000	sw	(r29),r6
  406  0000148c  afa10004	sw	4(r29),r1
  407  00001490  0c000058	jal	_Printf
  408  00001494  54000000	nop; not filled.
  409  00001498  23bd0008	addi	r29,r29,#8
  410  0000149c  0c000f00	jal	_exit
  411  000014a0  54000000	nop
  412  000014a4          	.endproc _main
  413                      ;;;
  414                      ;;; Stub functions for DLX traps.
  415                      ;;;
  416                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  417                      ;;;
  418                      ;;; The traps such as Open and Close
  419                      ;;; (note the capital letters) are for use by user programs.  The traps
  420                      ;;; with names such as open and close (lower case) are for use by the OS.
  421                      ;;;
  424  000014a4          	.align 2
  426                      ;;; The following are the traps to be used by user-level programs
  427                      ;;;
  429  000014a4          	.align 2
  430  000014a4          	.proc _Open
  431  000014a4          	.global _Open
  432  000014a4          	_Open:
  433                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  434                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  435                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  436  000014a4  44000213	trap	#0x213
  437  000014a8  4be00000	jr	r31
  438  000014ac  54000000	nop
  439  000014b0          	.endproc _Open
  441  000014b0          	.proc _Close
  442  000014b0          	.global _Close
  443  000014b0          	_Close:
  444  000014b0  44000214	trap	#0x214
  445  000014b4  4be00000	jr	r31
  446  000014b8  54000000	nop
  447  000014bc          	.endproc _Close
  449  000014bc          	.proc _Read
  450  000014bc          	.global _Read
  451  000014bc          	_Read:
  452  000014bc  44000210	trap	#0x210
  453  000014c0  4be00000	jr	r31
  454  000014c4  54000000	nop
  455  000014c8          	.endproc _Read
  457  000014c8          	.proc _Write
  458  000014c8          	.global _Write
  459  000014c8          	_Write:
  460  000014c8  44000211	trap	#0x211
  461  000014cc  4be00000	jr	r31
  462  000014d0  54000000	nop
  463  000014d4          	.endproc _Write
  465  000014d4          	.proc _Lseek
  466  000014d4          	.global _Lseek
  467  000014d4          	_Lseek:
  468  000014d4  44000212	trap	#0x212
  469  000014d8  4be00000	jr	r31
  470  000014dc  54000000	nop
  471  000014e0          	.endproc _Lseek
  473  000014e0          	.proc _Putchar
  474  000014e0          	.global _Putchar
  475  000014e0          	_Putchar:
  476  000014e0  44000280	trap	#0x280
  477  000014e4  4be00000	jr	r31
  478  000014e8  54000000	nop
  479  000014ec          	.endproc _Putchar
  481  000014ec          	.proc _Printf
  482  000014ec          	.global _Printf
  483  000014ec          	_Printf:
  484  000014ec  44000201	trap	#0x201
  485  000014f0  4be00000	jr	r31
  486  000014f4  54000000	nop
  487  000014f8          	.endproc _Printf
  489  000014f8          	.proc _getpid
  490  000014f8          	.global _getpid
  491  000014f8          	_getpid:
  492  000014f8  44000431	trap	#0x431
  493  000014fc  4be00000	jr	r31
  494  00001500  54000000	nop
  495  00001504          	.endproc _getpid
  497  00001504          	.proc _process_create
  498  00001504          	.global _process_create
  499  00001504          	_process_create:
  500  00001504  44000432	trap	#0x432
  501  00001508  4be00000	jr	r31
  502  0000150c  54000000	nop
  503  00001510          	.endproc _process_create
  505  00001510          	.proc _shmget
  506  00001510          	.global _shmget
  507  00001510          	_shmget:
  508  00001510  44000440	trap	#0x440
  509  00001514  4be00000	jr	r31
  510  00001518  54000000	nop
  511  0000151c          	.endproc _shmget
  513  0000151c          	.proc _shmat
  514  0000151c          	.global _shmat
  515  0000151c          	_shmat:
  516  0000151c  44000441	trap	#0x441
  517  00001520  4be00000	jr	r31
  518  00001524  54000000	nop
  519  00001528          	.endproc _shmat
  521  00001528          	.proc _sem_create
  522  00001528          	.global _sem_create
  523  00001528          	_sem_create:
  524  00001528  44000450	trap	#0x450
  525  0000152c  4be00000	jr	r31
  526  00001530  54000000	nop
  527  00001534          	.endproc _sem_create
  529  00001534          	.proc _sem_wait
  530  00001534          	.global _sem_wait
  531  00001534          	_sem_wait:
  532  00001534  44000451	trap	#0x451
  533  00001538  4be00000	jr	r31
  534  0000153c  54000000	nop
  535  00001540          	.endproc _sem_wait
  537  00001540          	.proc _sem_signal
  538  00001540          	.global _sem_signal
  539  00001540          	_sem_signal:
  540  00001540  44000452	trap	#0x452
  541  00001544  4be00000	jr	r31
  542  00001548  54000000	nop
  543  0000154c          	.endproc _sem_signal
  545  0000154c          	.proc _lock_create
  546  0000154c          	.global _lock_create
  547  0000154c          	_lock_create:
  548  0000154c  44000453	trap	#0x453
  549  00001550  4be00000	jr	r31
  550  00001554  54000000	nop
  551  00001558          	.endproc _lock_create
  553  00001558          	.proc _lock_acquire
  554  00001558          	.global _lock_acquire
  555  00001558          	_lock_acquire:
  556  00001558  44000454	trap	#0x454
  557  0000155c  4be00000	jr	r31
  558  00001560  54000000	nop
  559  00001564          	.endproc _lock_acquire
  561  00001564          	.proc _lock_release
  562  00001564          	.global _lock_release
  563  00001564          	_lock_release:
  564  00001564  44000455	trap	#0x455
  565  00001568  4be00000	jr	r31
  566  0000156c  54000000	nop
  567  00001570          	.endproc _lock_release
  569  00001570          	.proc _cond_create
  570  00001570          	.global _cond_create
  571  00001570          	_cond_create:
  572  00001570  44000456	trap	#0x456
  573  00001574  4be00000	jr	r31
  574  00001578  54000000	nop
  575  0000157c          	.endproc _cond_create
  577  0000157c          	.proc _cond_wait
  578  0000157c          	.global _cond_wait
  579  0000157c          	_cond_wait:
  580  0000157c  44000457	trap	#0x457
  581  00001580  4be00000	jr	r31
  582  00001584  54000000	nop
  583  00001588          	.endproc _cond_wait
  585  00001588          	.proc _cond_signal
  586  00001588          	.global _cond_signal
  587  00001588          	_cond_signal:
  588  00001588  44000458	trap	#0x458
  589  0000158c  4be00000	jr	r31
  590  00001590  54000000	nop
  591  00001594          	.endproc _cond_signal
  593  00001594          	.proc _cond_broadcast
  594  00001594          	.global _cond_broadcast
  595  00001594          	_cond_broadcast:
  596  00001594  44000459	trap	#0x459
  597  00001598  4be00000	jr	r31
  598  0000159c  54000000	nop
  599  000015a0          	.endproc _cond_broadcast
  601  000015a0          	.proc _mbox_create
  602  000015a0          	.global _mbox_create
  603  000015a0          	_mbox_create:
  604  000015a0  44000460	trap	#0x460
  605  000015a4  4be00000	jr	r31
  606  000015a8  54000000	nop
  607  000015ac          	.endproc _mbox_create
  609  000015ac          	.proc _mbox_open
  610  000015ac          	.global _mbox_open
  611  000015ac          	_mbox_open:
  612  000015ac  44000461	trap	#0x461
  613  000015b0  4be00000	jr	r31
  614  000015b4  54000000	nop
  615  000015b8          	.endproc _mbox_open
  617  000015b8          	.proc _mbox_close
  618  000015b8          	.global _mbox_close
  619  000015b8          	_mbox_close:
  620  000015b8  44000462	trap	#0x462
  621  000015bc  4be00000	jr	r31
  622  000015c0  54000000	nop
  623  000015c4          	.endproc _mbox_close
  625  000015c4          	.proc _mbox_send
  626  000015c4          	.global _mbox_send
  627  000015c4          	_mbox_send:
  628  000015c4  44000463	trap	#0x463
  629  000015c8  4be00000	jr	r31
  630  000015cc  54000000	nop
  631  000015d0          	.endproc _mbox_send
  633  000015d0          	.proc _mbox_recv
  634  000015d0          	.global _mbox_recv
  635  000015d0          	_mbox_recv:
  636  000015d0  44000464	trap	#0x464
  637  000015d4  4be00000	jr	r31
  638  000015d8  54000000	nop
  639  000015dc          	.endproc _mbox_recv
  641  000015dc          	.proc _sleep
  642  000015dc          	.global _sleep
  643  000015dc          	_sleep:
  644  000015dc  44000465	trap	#0x465
  645  000015e0  4be00000	jr	r31
  646  000015e4  54000000	nop
  647  000015e8          	.endproc _sleep
  649  000015e8          	.proc _yield
  650  000015e8          	.global _yield
  651  000015e8          	_yield:
  652  000015e8  44000466	trap	#0x466
  653  000015ec  4be00000	jr	r31
  654  000015f0  54000000	nop
  655  000015f4          	.endproc _yield
  658  000015f4          	.proc _Exit
  659  000015f4          	.global _Exit
  660  000015f4          	_Exit:
  661  000015f4  44000500	trap	#0x500
  662  000015f8  4be00000	jr	r31
  663  000015fc  54000000	nop
  664  00001600          	.endproc _Exit
  667  00001600          	.proc _malloc
  668  00001600          	.global _malloc
  669  00001600          	_malloc:
  670  00001600  44000467	trap	#0x467
  671  00001604  4be00000	jr	r31
  672  00001608          	.endproc _malloc
  675  00001608          	.proc _mfree
  676  00001608          	.global _mfree
  677  00001608          	_mfree:
  678  00001608  44000468	trap	#0x468
  679  0000160c  4be00000	jr	r31
  680  00001610          	.endproc _mfree
  681                      ; Compiled by GCC
  683  00001610          	.align 2
  684  00001610          	.proc _isspace
  685  00001610          	.global _isspace
  686  00001610          	_isspace:
  687                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  688  00001610  afbefffc	sw	-4(r29),r30; push fp
  689  00001614  001df020	add	r30,r0,r29; fp = sp
  690  00001618  afbffff8	sw	-8(r29),r31; push ret addr
  691  0000161c  2fbd0018	subui	r29,r29,#24; alloc local storage
  692  00001620  afa20000	sw	0(r29),r2
  693  00001624  afa30004	sw	4(r29),r3
  694  00001628  afa40008	sw	8(r29),r4
  695  0000162c  83c20003	lb	r2,3(r30)
  696  00001630  20010000	addi	r1,r0,#0
  697  00001634  304300ff	andi	r3,r2,#0x00ff
  698  00001638  60640020	seqi	r4,r3,#32
  699  0000163c  1480002c	bnez	r4,L3_LF2
  700  00001640  54000000	nop; delay slot nop
  701  00001644  304300ff	andi	r3,r2,#0x00ff
  702  00001648  60640009	seqi	r4,r3,#9
  703  0000164c  1480001c	bnez	r4,L3_LF2
  704  00001650  54000000	nop; delay slot nop
  705  00001654  304300ff	andi	r3,r2,#0x00ff
  706  00001658  6064000a	seqi	r4,r3,#10
  707  0000165c  1480000c	bnez	r4,L3_LF2
  708  00001660  54000000	nop; delay slot nop
  709  00001664  08000008	j	L2_LF2
  710  00001668  54000000	nop; delay slot nop
  711  0000166c          	L3_LF2:
  712  0000166c  20010001	addi	r1,r0,#1
  713  00001670          	L2_LF2:
  714  00001670  08000004	j	L1_LF2
  715  00001674  54000000	nop; delay slot nop
  716  00001678          	L1_LF2:
  717  00001678  8fa20000	lw	r2,0(r29)
  718  0000167c  8fa30004	lw	r3,4(r29)
  719  00001680  8fa40008	lw	r4,8(r29)
  720  00001684  8fdffff8	lw	r31,-8(r30)
  721  00001688  001ee820	add	r29,r0,r30
  722  0000168c  8fdefffc	lw	r30,-4(r30)
  723  00001690  4be00000	jr	r31
  724  00001694  54000000	nop
  725  00001698          	.endproc _isspace
  726  00001698          	.align 2
  727  00001698          	.proc _isxdigit
  728  00001698          	.global _isxdigit
  729  00001698          	_isxdigit:
  730                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  731  00001698  afbefffc	sw	-4(r29),r30; push fp
  732  0000169c  001df020	add	r30,r0,r29; fp = sp
  733  000016a0  afbffff8	sw	-8(r29),r31; push ret addr
  734  000016a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  735  000016a8  afa20000	sw	0(r29),r2
  736  000016ac  afa30004	sw	4(r29),r3
  737  000016b0  afa40008	sw	8(r29),r4
  738  000016b4  83c20003	lb	r2,3(r30)
  739  000016b8  20010000	addi	r1,r0,#0
  740  000016bc  304300ff	andi	r3,r2,#0x00ff
  741  000016c0  6c64002f	sgtui	r4,r3,#47
  742  000016c4  1080001c	beqz	r4,L7_LF2
  743  000016c8  54000000	nop; delay slot nop
  744  000016cc  304300ff	andi	r3,r2,#0x00ff
  745  000016d0  70640039	sleui	r4,r3,#57
  746  000016d4  1480005c	bnez	r4,L6_LF2
  747  000016d8  54000000	nop; delay slot nop
  748  000016dc  08000004	j	L7_LF2
  749  000016e0  54000000	nop; delay slot nop
  750  000016e4          	L7_LF2:
  751  000016e4  304300ff	andi	r3,r2,#0x00ff
  752  000016e8  6c640060	sgtui	r4,r3,#96
  753  000016ec  1080001c	beqz	r4,L8_LF2
  754  000016f0  54000000	nop; delay slot nop
  755  000016f4  304300ff	andi	r3,r2,#0x00ff
  756  000016f8  70640066	sleui	r4,r3,#102
  757  000016fc  14800034	bnez	r4,L6_LF2
  758  00001700  54000000	nop; delay slot nop
  759  00001704  08000004	j	L8_LF2
  760  00001708  54000000	nop; delay slot nop
  761  0000170c          	L8_LF2:
  762  0000170c  304300ff	andi	r3,r2,#0x00ff
  763  00001710  6c640040	sgtui	r4,r3,#64
  764  00001714  10800020	beqz	r4,L5_LF2
  765  00001718  54000000	nop; delay slot nop
  766  0000171c  304300ff	andi	r3,r2,#0x00ff
  767  00001720  70640041	sleui	r4,r3,#65
  768  00001724  1480000c	bnez	r4,L6_LF2
  769  00001728  54000000	nop; delay slot nop
  770  0000172c  08000008	j	L5_LF2
  771  00001730  54000000	nop; delay slot nop
  772  00001734          	L6_LF2:
  773  00001734  20010001	addi	r1,r0,#1
  774  00001738          	L5_LF2:
  775  00001738  08000004	j	L4_LF2
  776  0000173c  54000000	nop; delay slot nop
  777  00001740          	L4_LF2:
  778  00001740  8fa20000	lw	r2,0(r29)
  779  00001744  8fa30004	lw	r3,4(r29)
  780  00001748  8fa40008	lw	r4,8(r29)
  781  0000174c  8fdffff8	lw	r31,-8(r30)
  782  00001750  001ee820	add	r29,r0,r30
  783  00001754  8fdefffc	lw	r30,-4(r30)
  784  00001758  4be00000	jr	r31
  785  0000175c  54000000	nop
  786  00001760          	.endproc _isxdigit
  787  00001760          	.align 2
  788  00001760          	.proc _dstrcpy
  789  00001760          	.global _dstrcpy
  790  00001760          	_dstrcpy:
  791                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  792  00001760  afbefffc	sw	-4(r29),r30; push fp
  793  00001764  001df020	add	r30,r0,r29; fp = sp
  794  00001768  afbffff8	sw	-8(r29),r31; push ret addr
  795  0000176c  2fbd0018	subui	r29,r29,#24; alloc local storage
  796  00001770  afa20000	sw	0(r29),r2
  797  00001774  afa30004	sw	4(r29),r3
  798  00001778  8fc10000	lw	r1,(r30)
  799  0000177c  afc1fff4	sw	-12(r30),r1
  800  00001780          	L10_LF2:
  801  00001780  8fc10000	lw	r1,(r30)
  802  00001784  20220001	addi	r2,r1,#1
  803  00001788  afc20000	sw	(r30),r2
  804  0000178c  8fc20004	lw	r2,4(r30)
  805  00001790  20430001	addi	r3,r2,#1
  806  00001794  afc30004	sw	4(r30),r3
  807  00001798  80420000	lb	r2,(r2)
  808  0000179c  a0220000	sb	(r1),r2
  809  000017a0  a3c2fff3	sb	-13(r30),r2
  810  000017a4          	L12_LF2:
  811  000017a4  93c1fff3	lbu	r1,-13(r30)
  812  000017a8  64220000	snei	r2,r1,#0
  813  000017ac  1440000c	bnez	r2,L13_LF2
  814  000017b0  54000000	nop; delay slot nop
  815  000017b4  0800000c	j	L11_LF2
  816  000017b8  54000000	nop; delay slot nop
  817  000017bc          	L13_LF2:
  818  000017bc  0bffffc0	j	L10_LF2
  819  000017c0  54000000	nop; delay slot nop
  820  000017c4          	L11_LF2:
  821  000017c4  8fc1fff4	lw	r1,-12(r30)
  822  000017c8  08000004	j	L9_LF2
  823  000017cc  54000000	nop; delay slot nop
  824  000017d0          	L9_LF2:
  825  000017d0  8fa20000	lw	r2,0(r29)
  826  000017d4  8fa30004	lw	r3,4(r29)
  827  000017d8  8fdffff8	lw	r31,-8(r30)
  828  000017dc  001ee820	add	r29,r0,r30
  829  000017e0  8fdefffc	lw	r30,-4(r30)
  830  000017e4  4be00000	jr	r31
  831  000017e8  54000000	nop
  832  000017ec          	.endproc _dstrcpy
  833  000017ec          	.align 2
  834  000017ec          	.proc _dstrncpy
  835  000017ec          	.global _dstrncpy
  836  000017ec          	_dstrncpy:
  837                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  838  000017ec  afbefffc	sw	-4(r29),r30; push fp
  839  000017f0  001df020	add	r30,r0,r29; fp = sp
  840  000017f4  afbffff8	sw	-8(r29),r31; push ret addr
  841  000017f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  842  000017fc  afa20000	sw	0(r29),r2
  843  00001800  afa30004	sw	4(r29),r3
  844  00001804  8fc10000	lw	r1,(r30)
  845  00001808  afc1fff4	sw	-12(r30),r1
  846  0000180c          	L15_LF2:
  847  0000180c  8fc10008	lw	r1,8(r30)
  848  00001810  2022ffff	addi	r2,r1,#-1
  849  00001814  afc20008	sw	8(r30),r2
  850  00001818  70210000	slei	r1,r1,#0
  851  0000181c  1020000c	beqz	r1,L18_LF2
  852  00001820  54000000	nop; delay slot nop
  853  00001824  08000048	j	L16_LF2
  854  00001828  54000000	nop; delay slot nop
  855  0000182c          	L18_LF2:
  856  0000182c  8fc10000	lw	r1,(r30)
  857  00001830  20220001	addi	r2,r1,#1
  858  00001834  afc20000	sw	(r30),r2
  859  00001838  8fc20004	lw	r2,4(r30)
  860  0000183c  20430001	addi	r3,r2,#1
  861  00001840  afc30004	sw	4(r30),r3
  862  00001844  80420000	lb	r2,(r2)
  863  00001848  a0220000	sb	(r1),r2
  864  0000184c  a3c2fff3	sb	-13(r30),r2
  865  00001850          	L17_LF2:
  866  00001850  93c1fff3	lbu	r1,-13(r30)
  867  00001854  64220000	snei	r2,r1,#0
  868  00001858  1440000c	bnez	r2,L19_LF2
  869  0000185c  54000000	nop; delay slot nop
  870  00001860  0800000c	j	L16_LF2
  871  00001864  54000000	nop; delay slot nop
  872  00001868          	L19_LF2:
  873  00001868  0bffffa0	j	L15_LF2
  874  0000186c  54000000	nop; delay slot nop
  875  00001870          	L16_LF2:
  876  00001870  8fc1fff4	lw	r1,-12(r30)
  877  00001874  08000004	j	L14_LF2
  878  00001878  54000000	nop; delay slot nop
  879  0000187c          	L14_LF2:
  880  0000187c  8fa20000	lw	r2,0(r29)
  881  00001880  8fa30004	lw	r3,4(r29)
  882  00001884  8fdffff8	lw	r31,-8(r30)
  883  00001888  001ee820	add	r29,r0,r30
  884  0000188c  8fdefffc	lw	r30,-4(r30)
  885  00001890  4be00000	jr	r31
  886  00001894  54000000	nop
  887  00001898          	.endproc _dstrncpy
  888  00001898          	.align 2
  889  00001898          	.proc _dstrcat
  890  00001898          	.global _dstrcat
  891  00001898          	_dstrcat:
  892                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  893  00001898  afbefffc	sw	-4(r29),r30; push fp
  894  0000189c  001df020	add	r30,r0,r29; fp = sp
  895  000018a0  afbffff8	sw	-8(r29),r31; push ret addr
  896  000018a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  897  000018a8  afa20000	sw	0(r29),r2
  898  000018ac  8fc10000	lw	r1,(r30)
  899  000018b0  afc1fff4	sw	-12(r30),r1
  900  000018b4          	L21_LF2:
  901  000018b4  8fc10000	lw	r1,(r30)
  902  000018b8  90220000	lbu	r2,(r1)
  903  000018bc  64410000	snei	r1,r2,#0
  904  000018c0  1420000c	bnez	r1,L23_LF2
  905  000018c4  54000000	nop; delay slot nop
  906  000018c8  0800001c	j	L22_LF2
  907  000018cc  54000000	nop; delay slot nop
  908  000018d0          	L23_LF2:
  909  000018d0  8fc20000	lw	r2,(r30)
  910  000018d4  20410001	addi	r1,r2,#1
  911  000018d8  00011020	add	r2,r0,r1
  912  000018dc  afc20000	sw	(r30),r2
  913  000018e0  0bffffd0	j	L21_LF2
  914  000018e4  54000000	nop; delay slot nop
  915  000018e8          	L22_LF2:
  916  000018e8  23bdfff8	addi	r29,r29,#-8
  917  000018ec  001d0820	add	r1,r0,r29
  918  000018f0  8fc20000	lw	r2,(r30)
  919  000018f4  ac220000	sw	(r1),r2
  920  000018f8  8fc20004	lw	r2,4(r30)
  921  000018fc  ac220004	sw	4(r1),r2
  922  00001900  0ffffe5c	jal	_dstrcpy
  923  00001904  54000000	nop; delay slot nop
  924  00001908  23bd0008	addi	r29,r29,#8
  925  0000190c  8fc1fff4	lw	r1,-12(r30)
  926  00001910  08000004	j	L20_LF2
  927  00001914  54000000	nop; delay slot nop
  928  00001918          	L20_LF2:
  929  00001918  8fa20000	lw	r2,0(r29)
  930  0000191c  8fdffff8	lw	r31,-8(r30)
  931  00001920  001ee820	add	r29,r0,r30
  932  00001924  8fdefffc	lw	r30,-4(r30)
  933  00001928  4be00000	jr	r31
  934  0000192c  54000000	nop
  935  00001930          	.endproc _dstrcat
  936  00001930          	.align 2
  937  00001930          	.proc _dstrncmp
  938  00001930          	.global _dstrncmp
  939  00001930          	_dstrncmp:
  940                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  941  00001930  afbefffc	sw	-4(r29),r30; push fp
  942  00001934  001df020	add	r30,r0,r29; fp = sp
  943  00001938  afbffff8	sw	-8(r29),r31; push ret addr
  944  0000193c  2fbd0018	subui	r29,r29,#24; alloc local storage
  945  00001940  afa20000	sw	0(r29),r2
  946  00001944  afa30004	sw	4(r29),r3
  947  00001948  54000000	nop
  948  0000194c  20010000	addi	r1,r0,#0
  949  00001950  afc1fff4	sw	-12(r30),r1
  950  00001954          	L25_LF2:
  951  00001954  8fc1fff4	lw	r1,-12(r30)
  952  00001958  8fc20008	lw	r2,8(r30)
  953  0000195c  0022082a	slt	r1,r1,r2
  954  00001960  1420000c	bnez	r1,L28_LF2
  955  00001964  54000000	nop; delay slot nop
  956  00001968  08000088	j	L26_LF2
  957  0000196c  54000000	nop; delay slot nop
  958  00001970          	L28_LF2:
  959  00001970  8fc10004	lw	r1,4(r30)
  960  00001974  90220000	lbu	r2,(r1)
  961  00001978  64410000	snei	r1,r2,#0
  962  0000197c  14200018	bnez	r1,L29_LF2
  963  00001980  54000000	nop; delay slot nop
  964  00001984  20010000	addi	r1,r0,#0
  965  00001988  080000d8	j	L24_LF2
  966  0000198c  54000000	nop; delay slot nop
  967  00001990  08000028	j	L30_LF2
  968  00001994  54000000	nop; delay slot nop
  969  00001998          	L29_LF2:
  970  00001998  8fc10000	lw	r1,(r30)
  971  0000199c  8fc20004	lw	r2,4(r30)
  972  000019a0  90210000	lbu	r1,(r1)
  973  000019a4  90420000	lbu	r2,(r2)
  974  000019a8  00220829	sne	r1,r1,r2
  975  000019ac  1020000c	beqz	r1,L30_LF2
  976  000019b0  54000000	nop; delay slot nop
  977  000019b4  0800003c	j	L26_LF2
  978  000019b8  54000000	nop; delay slot nop
  979  000019bc          	L31_LF2:
  980  000019bc          	L30_LF2:
  981  000019bc  8fc20000	lw	r2,(r30)
  982  000019c0  20410001	addi	r1,r2,#1
  983  000019c4  00011020	add	r2,r0,r1
  984  000019c8  afc20000	sw	(r30),r2
  985  000019cc  8fc20004	lw	r2,4(r30)
  986  000019d0  20410001	addi	r1,r2,#1
  987  000019d4  00011020	add	r2,r0,r1
  988  000019d8  afc20004	sw	4(r30),r2
  989  000019dc          	L27_LF2:
  990  000019dc  8fc2fff4	lw	r2,-12(r30)
  991  000019e0  20410001	addi	r1,r2,#1
  992  000019e4  00011020	add	r2,r0,r1
  993  000019e8  afc2fff4	sw	-12(r30),r2
  994  000019ec  0bffff64	j	L25_LF2
  995  000019f0  54000000	nop; delay slot nop
  996  000019f4          	L26_LF2:
  997  000019f4  8fc1fff4	lw	r1,-12(r30)
  998  000019f8  8fc20008	lw	r2,8(r30)
  999  000019fc  00220828	seq	r1,r1,r2
 1000  00001a00  10200018	beqz	r1,L32_LF2
 1001  00001a04  54000000	nop; delay slot nop
 1002  00001a08  20010000	addi	r1,r0,#0
 1003  00001a0c  08000054	j	L24_LF2
 1004  00001a10  54000000	nop; delay slot nop
 1005  00001a14  0800004c	j	L33_LF2
 1006  00001a18  54000000	nop; delay slot nop
 1007  00001a1c          	L32_LF2:
 1008  00001a1c  8fc20000	lw	r2,(r30)
 1009  00001a20  90410000	lbu	r1,(r2)
 1010  00001a24  8fc20004	lw	r2,4(r30)
 1011  00001a28  90430000	lbu	r3,(r2)
 1012  00001a2c  00230822	sub	r1,r1,r3
 1013  00001a30  74220000	sgei	r2,r1,#0
 1014  00001a34  10400020	beqz	r2,L34_LF2
 1015  00001a38  54000000	nop; delay slot nop
 1016  00001a3c  8fc10000	lw	r1,(r30)
 1017  00001a40  8fc20004	lw	r2,4(r30)
 1018  00001a44  90210000	lbu	r1,(r1)
 1019  00001a48  90420000	lbu	r2,(r2)
 1020  00001a4c  00220829	sne	r1,r1,r2
 1021  00001a50  08000008	j	L35_LF2
 1022  00001a54  54000000	nop; delay slot nop
 1023  00001a58          	L34_LF2:
 1024  00001a58  2001ffff	addi	r1,r0,#-1
 1025  00001a5c          	L35_LF2:
 1026  00001a5c  08000004	j	L24_LF2
 1027  00001a60  54000000	nop; delay slot nop
 1028  00001a64          	L33_LF2:
 1029  00001a64          	L24_LF2:
 1030  00001a64  8fa20000	lw	r2,0(r29)
 1031  00001a68  8fa30004	lw	r3,4(r29)
 1032  00001a6c  8fdffff8	lw	r31,-8(r30)
 1033  00001a70  001ee820	add	r29,r0,r30
 1034  00001a74  8fdefffc	lw	r30,-4(r30)
 1035  00001a78  4be00000	jr	r31
 1036  00001a7c  54000000	nop
 1037  00001a80          	.endproc _dstrncmp
 1038  00001a80          	.align 2
 1039  00001a80          	.proc _dstrlen
 1040  00001a80          	.global _dstrlen
 1041  00001a80          	_dstrlen:
 1042                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1043  00001a80  afbefffc	sw	-4(r29),r30; push fp
 1044  00001a84  001df020	add	r30,r0,r29; fp = sp
 1045  00001a88  afbffff8	sw	-8(r29),r31; push ret addr
 1046  00001a8c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1047  00001a90  afa20000	sw	0(r29),r2
 1048  00001a94  20010000	addi	r1,r0,#0
 1049  00001a98  afc1fff4	sw	-12(r30),r1
 1050  00001a9c          	L37_LF2:
 1051  00001a9c  8fc10000	lw	r1,(r30)
 1052  00001aa0  20220001	addi	r2,r1,#1
 1053  00001aa4  afc20000	sw	(r30),r2
 1054  00001aa8  90210000	lbu	r1,(r1)
 1055  00001aac  64220000	snei	r2,r1,#0
 1056  00001ab0  1440000c	bnez	r2,L39_LF2
 1057  00001ab4  54000000	nop; delay slot nop
 1058  00001ab8  0800001c	j	L38_LF2
 1059  00001abc  54000000	nop; delay slot nop
 1060  00001ac0          	L39_LF2:
 1061  00001ac0  8fc2fff4	lw	r2,-12(r30)
 1062  00001ac4  20410001	addi	r1,r2,#1
 1063  00001ac8  00011020	add	r2,r0,r1
 1064  00001acc  afc2fff4	sw	-12(r30),r2
 1065  00001ad0  0bffffc8	j	L37_LF2
 1066  00001ad4  54000000	nop; delay slot nop
 1067  00001ad8          	L38_LF2:
 1068  00001ad8  8fc1fff4	lw	r1,-12(r30)
 1069  00001adc  08000004	j	L36_LF2
 1070  00001ae0  54000000	nop; delay slot nop
 1071  00001ae4          	L36_LF2:
 1072  00001ae4  8fa20000	lw	r2,0(r29)
 1073  00001ae8  8fdffff8	lw	r31,-8(r30)
 1074  00001aec  001ee820	add	r29,r0,r30
 1075  00001af0  8fdefffc	lw	r30,-4(r30)
 1076  00001af4  4be00000	jr	r31
 1077  00001af8  54000000	nop
 1078  00001afc          	.endproc _dstrlen
 1079  00001afc          	.align 2
 1080  00001afc          	.proc _dstrstr
 1081  00001afc          	.global _dstrstr
 1082  00001afc          	_dstrstr:
 1083                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1084  00001afc  afbefffc	sw	-4(r29),r30; push fp
 1085  00001b00  001df020	add	r30,r0,r29; fp = sp
 1086  00001b04  afbffff8	sw	-8(r29),r31; push ret addr
 1087  00001b08  2fbd0018	subui	r29,r29,#24; alloc local storage
 1088  00001b0c  afa20000	sw	0(r29),r2
 1089  00001b10  23bdfff8	addi	r29,r29,#-8
 1090  00001b14  001d0820	add	r1,r0,r29
 1091  00001b18  8fc20004	lw	r2,4(r30)
 1092  00001b1c  ac220000	sw	(r1),r2
 1093  00001b20  0fffff5c	jal	_dstrlen
 1094  00001b24  54000000	nop; delay slot nop
 1095  00001b28  23bd0008	addi	r29,r29,#8
 1096  00001b2c  afc1fff4	sw	-12(r30),r1
 1097  00001b30          	L41_LF2:
 1098  00001b30  8fc10000	lw	r1,(r30)
 1099  00001b34  90220000	lbu	r2,(r1)
 1100  00001b38  64410000	snei	r1,r2,#0
 1101  00001b3c  1420000c	bnez	r1,L43_LF2
 1102  00001b40  54000000	nop; delay slot nop
 1103  00001b44  08000060	j	L42_LF2
 1104  00001b48  54000000	nop; delay slot nop
 1105  00001b4c          	L43_LF2:
 1106  00001b4c  23bdfff0	addi	r29,r29,#-16
 1107  00001b50  001d0820	add	r1,r0,r29
 1108  00001b54  8fc20000	lw	r2,(r30)
 1109  00001b58  ac220000	sw	(r1),r2
 1110  00001b5c  8fc20004	lw	r2,4(r30)
 1111  00001b60  ac220004	sw	4(r1),r2
 1112  00001b64  8fc2fff4	lw	r2,-12(r30)
 1113  00001b68  ac220008	sw	8(r1),r2
 1114  00001b6c  0ffffdc0	jal	_dstrncmp
 1115  00001b70  54000000	nop; delay slot nop
 1116  00001b74  23bd0010	addi	r29,r29,#16
 1117  00001b78  64220000	snei	r2,r1,#0
 1118  00001b7c  14400010	bnez	r2,L44_LF2
 1119  00001b80  54000000	nop; delay slot nop
 1120  00001b84  8fc10000	lw	r1,(r30)
 1121  00001b88  08000028	j	L40_LF2
 1122  00001b8c  54000000	nop; delay slot nop
 1123  00001b90          	L44_LF2:
 1124  00001b90  8fc20000	lw	r2,(r30)
 1125  00001b94  20410001	addi	r1,r2,#1
 1126  00001b98  00011020	add	r2,r0,r1
 1127  00001b9c  afc20000	sw	(r30),r2
 1128  00001ba0  0bffff8c	j	L41_LF2
 1129  00001ba4  54000000	nop; delay slot nop
 1130  00001ba8          	L42_LF2:
 1131  00001ba8  20010000	addi	r1,r0,#0
 1132  00001bac  08000004	j	L40_LF2
 1133  00001bb0  54000000	nop; delay slot nop
 1134  00001bb4          	L40_LF2:
 1135  00001bb4  8fa20000	lw	r2,0(r29)
 1136  00001bb8  8fdffff8	lw	r31,-8(r30)
 1137  00001bbc  001ee820	add	r29,r0,r30
 1138  00001bc0  8fdefffc	lw	r30,-4(r30)
 1139  00001bc4  4be00000	jr	r31
 1140  00001bc8  54000000	nop
 1141  00001bcc          	.endproc _dstrstr
 1142  00001bcc          	.align 2
 1143  00001bcc          	.proc _dmindex
 1144  00001bcc          	.global _dmindex
 1145  00001bcc          	_dmindex:
 1146                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1147  00001bcc  afbefffc	sw	-4(r29),r30; push fp
 1148  00001bd0  001df020	add	r30,r0,r29; fp = sp
 1149  00001bd4  afbffff8	sw	-8(r29),r31; push ret addr
 1150  00001bd8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1151  00001bdc  afa20000	sw	0(r29),r2
 1152  00001be0  54000000	nop
 1153  00001be4          	L46_LF2:
 1154  00001be4  8fc10000	lw	r1,(r30)
 1155  00001be8  90220000	lbu	r2,(r1)
 1156  00001bec  64410000	snei	r1,r2,#0
 1157  00001bf0  1420000c	bnez	r1,L48_LF2
 1158  00001bf4  54000000	nop; delay slot nop
 1159  00001bf8  08000070	j	L47_LF2
 1160  00001bfc  54000000	nop; delay slot nop
 1161  00001c00          	L48_LF2:
 1162  00001c00  8fc10004	lw	r1,4(r30)
 1163  00001c04  afc1fff4	sw	-12(r30),r1
 1164  00001c08          	L49_LF2:
 1165  00001c08  8fc1fff4	lw	r1,-12(r30)
 1166  00001c0c  90220000	lbu	r2,(r1)
 1167  00001c10  64410000	snei	r1,r2,#0
 1168  00001c14  1420000c	bnez	r1,L52_LF2
 1169  00001c18  54000000	nop; delay slot nop
 1170  00001c1c  08000044	j	L50_LF2
 1171  00001c20  54000000	nop; delay slot nop
 1172  00001c24          	L52_LF2:
 1173  00001c24  8fc10000	lw	r1,(r30)
 1174  00001c28  8fc2fff4	lw	r2,-12(r30)
 1175  00001c2c  90210000	lbu	r1,(r1)
 1176  00001c30  90420000	lbu	r2,(r2)
 1177  00001c34  00220828	seq	r1,r1,r2
 1178  00001c38  10200010	beqz	r1,L51_LF2
 1179  00001c3c  54000000	nop; delay slot nop
 1180  00001c40  8fc10000	lw	r1,(r30)
 1181  00001c44  08000030	j	L45_LF2
 1182  00001c48  54000000	nop; delay slot nop
 1183  00001c4c          	L53_LF2:
 1184  00001c4c          	L51_LF2:
 1185  00001c4c  8fc2fff4	lw	r2,-12(r30)
 1186  00001c50  20410001	addi	r1,r2,#1
 1187  00001c54  00011020	add	r2,r0,r1
 1188  00001c58  afc2fff4	sw	-12(r30),r2
 1189  00001c5c  0bffffa8	j	L49_LF2
 1190  00001c60  54000000	nop; delay slot nop
 1191  00001c64          	L50_LF2:
 1192  00001c64  0bffff7c	j	L46_LF2
 1193  00001c68  54000000	nop; delay slot nop
 1194  00001c6c          	L47_LF2:
 1195  00001c6c  20010000	addi	r1,r0,#0
 1196  00001c70  08000004	j	L45_LF2
 1197  00001c74  54000000	nop; delay slot nop
 1198  00001c78          	L45_LF2:
 1199  00001c78  8fa20000	lw	r2,0(r29)
 1200  00001c7c  8fdffff8	lw	r31,-8(r30)
 1201  00001c80  001ee820	add	r29,r0,r30
 1202  00001c84  8fdefffc	lw	r30,-4(r30)
 1203  00001c88  4be00000	jr	r31
 1204  00001c8c  54000000	nop
 1205  00001c90          	.endproc _dmindex
 1206  00001c90          	.align 2
 1207  00001c90          	.proc _dindex
 1208  00001c90          	.global _dindex
 1209  00001c90          	_dindex:
 1210                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1211  00001c90  afbefffc	sw	-4(r29),r30; push fp
 1212  00001c94  001df020	add	r30,r0,r29; fp = sp
 1213  00001c98  afbffff8	sw	-8(r29),r31; push ret addr
 1214  00001c9c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1215  00001ca0  afa20000	sw	0(r29),r2
 1216  00001ca4  54000000	nop
 1217  00001ca8          	L55_LF2:
 1218  00001ca8  8fc10000	lw	r1,(r30)
 1219  00001cac  90220000	lbu	r2,(r1)
 1220  00001cb0  64410000	snei	r1,r2,#0
 1221  00001cb4  1420000c	bnez	r1,L57_LF2
 1222  00001cb8  54000000	nop; delay slot nop
 1223  00001cbc  08000040	j	L56_LF2
 1224  00001cc0  54000000	nop; delay slot nop
 1225  00001cc4          	L57_LF2:
 1226  00001cc4  8fc10000	lw	r1,(r30)
 1227  00001cc8  90220000	lbu	r2,(r1)
 1228  00001ccc  8fc10004	lw	r1,4(r30)
 1229  00001cd0  00411028	seq	r2,r2,r1
 1230  00001cd4  10400010	beqz	r2,L58_LF2
 1231  00001cd8  54000000	nop; delay slot nop
 1232  00001cdc  8fc10000	lw	r1,(r30)
 1233  00001ce0  08000028	j	L54_LF2
 1234  00001ce4  54000000	nop; delay slot nop
 1235  00001ce8          	L58_LF2:
 1236  00001ce8  8fc20000	lw	r2,(r30)
 1237  00001cec  20410001	addi	r1,r2,#1
 1238  00001cf0  00011020	add	r2,r0,r1
 1239  00001cf4  afc20000	sw	(r30),r2
 1240  00001cf8  0bffffac	j	L55_LF2
 1241  00001cfc  54000000	nop; delay slot nop
 1242  00001d00          	L56_LF2:
 1243  00001d00  20010000	addi	r1,r0,#0
 1244  00001d04  08000004	j	L54_LF2
 1245  00001d08  54000000	nop; delay slot nop
 1246  00001d0c          	L54_LF2:
 1247  00001d0c  8fa20000	lw	r2,0(r29)
 1248  00001d10  8fdffff8	lw	r31,-8(r30)
 1249  00001d14  001ee820	add	r29,r0,r30
 1250  00001d18  8fdefffc	lw	r30,-4(r30)
 1251  00001d1c  4be00000	jr	r31
 1252  00001d20  54000000	nop
 1253  00001d24          	.endproc _dindex
 1254  00001d24          	.align 2
 1255  00001d24          	.proc _ditoa
 1256  00001d24          	.global _ditoa
 1257  00001d24          	_ditoa:
 1258                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1259  00001d24  afbefffc	sw	-4(r29),r30; push fp
 1260  00001d28  001df020	add	r30,r0,r29; fp = sp
 1261  00001d2c  afbffff8	sw	-8(r29),r31; push ret addr
 1262  00001d30  2fbd0018	subui	r29,r29,#24; alloc local storage
 1263  00001d34  afa20000	sw	0(r29),r2
 1264  00001d38  afa30004	sw	4(r29),r3
 1265  00001d3c  8fc10000	lw	r1,(r30)
 1266  00001d40  68220000	slti	r2,r1,#0
 1267  00001d44  1040002c	beqz	r2,L60_LF2
 1268  00001d48  54000000	nop; delay slot nop
 1269  00001d4c  8fc10004	lw	r1,4(r30)
 1270  00001d50  20220001	addi	r2,r1,#1
 1271  00001d54  afc20004	sw	4(r30),r2
 1272  00001d58  2002002d	addi	r2,r0,(#0x2d)&0xff
 1273  00001d5c  a0220000	sb	(r1),r2
 1274  00001d60  8fc10000	lw	r1,(r30)
 1275  00001d64  00011022	sub	r2,r0,r1
 1276  00001d68  afc20000	sw	(r30),r2
 1277  00001d6c  08000118	j	L61_LF2
 1278  00001d70  54000000	nop; delay slot nop
 1279  00001d74          	L60_LF2:
 1280  00001d74  8fc10000	lw	r1,(r30)
 1281  00001d78  64220000	snei	r2,r1,#0
 1282  00001d7c  14400020	bnez	r2,L62_LF2
 1283  00001d80  54000000	nop; delay slot nop
 1284  00001d84  8fc10004	lw	r1,4(r30)
 1285  00001d88  20220001	addi	r2,r1,#1
 1286  00001d8c  afc20004	sw	4(r30),r2
 1287  00001d90  20020030	addi	r2,r0,(#0x30)&0xff
 1288  00001d94  a0220000	sb	(r1),r2
 1289  00001d98  080000ec	j	L61_LF2
 1290  00001d9c  54000000	nop; delay slot nop
 1291  00001da0          	L62_LF2:
 1292  00001da0  20010001	addi	r1,r0,#1
 1293  00001da4  afc1fff4	sw	-12(r30),r1
 1294  00001da8          	L64_LF2:
 1295  00001da8  8fc1fff4	lw	r1,-12(r30)
 1296  00001dac  8fc20000	lw	r2,(r30)
 1297  00001db0  0022082c	sle	r1,r1,r2
 1298  00001db4  1420000c	bnez	r1,L66_LF2
 1299  00001db8  54000000	nop; delay slot nop
 1300  00001dbc  08000024	j	L65_LF2
 1301  00001dc0  54000000	nop; delay slot nop
 1302  00001dc4          	L67_LF2:
 1303  00001dc4          	L66_LF2:
 1304  00001dc4  8fc1fff4	lw	r1,-12(r30)
 1305  00001dc8  00011820	add	r3,r0,r1
 1306  00001dcc  50620002	slli	r2,r3,#0x2
 1307  00001dd0  00411020	add	r2,r2,r1
 1308  00001dd4  50410001	slli	r1,r2,#0x1
 1309  00001dd8  afc1fff4	sw	-12(r30),r1
 1310  00001ddc  0bffffc8	j	L64_LF2
 1311  00001de0  54000000	nop; delay slot nop
 1312  00001de4          	L65_LF2:
 1313  00001de4  54000000	nop
 1314  00001de8          	L68_LF2:
 1315  00001de8  8fc1fff4	lw	r1,-12(r30)
 1316  00001dec  2002000a	addi	r2,r0,#10
 1317  00001df0  00200035	movi2fp	f0,r1
 1318  00001df4  00400835	movi2fp	f1,r2
 1319  00001df8  0401000f	div	f0,f0,f1
 1320  00001dfc  00000834	movfp2i	r1,f0
 1321  00001e00  afc1fff4	sw	-12(r30),r1
 1322  00001e04  8fc10004	lw	r1,4(r30)
 1323  00001e08  20220001	addi	r2,r1,#1
 1324  00001e0c  afc20004	sw	4(r30),r2
 1325  00001e10  8fc20000	lw	r2,(r30)
 1326  00001e14  8fc3fff4	lw	r3,-12(r30)
 1327  00001e18  00400035	movi2fp	f0,r2
 1328  00001e1c  00600835	movi2fp	f1,r3
 1329  00001e20  0401000f	div	f0,f0,f1
 1330  00001e24  00001034	movfp2i	r2,f0
 1331  00001e28  00021820	add	r3,r0,r2
 1332  00001e2c  20620030	addi	r2,r3,#48
 1333  00001e30  a0220000	sb	(r1),r2
 1334  00001e34  8fc10000	lw	r1,(r30)
 1335  00001e38  8fc3fff4	lw	r3,-12(r30)
 1336  00001e3c  00200035	movi2fp	f0,r1
 1337  00001e40  00600835	movi2fp	f1,r3
 1338  00001e44  0401000f	div	f0,f0,f1
 1339  00001e48  00001034	movfp2i	r2,f0
 1340  00001e4c  8fc3fff4	lw	r3,-12(r30)
 1341  00001e50  00400035	movi2fp	f0,r2
 1342  00001e54  00600835	movi2fp	f1,r3
 1343  00001e58  0401000e	mult	f0,f0,f1
 1344  00001e5c  00001034	movfp2i	r2,f0
 1345  00001e60  00220822	sub	r1,r1,r2
 1346  00001e64  afc10000	sw	(r30),r1
 1347  00001e68          	L70_LF2:
 1348  00001e68  8fc1fff4	lw	r1,-12(r30)
 1349  00001e6c  6c220001	sgti	r2,r1,#1
 1350  00001e70  1440000c	bnez	r2,L71_LF2
 1351  00001e74  54000000	nop; delay slot nop
 1352  00001e78  0800000c	j	L61_LF2
 1353  00001e7c  54000000	nop; delay slot nop
 1354  00001e80          	L71_LF2:
 1355  00001e80  0bffff64	j	L68_LF2
 1356  00001e84  54000000	nop; delay slot nop
 1357  00001e88          	L69_LF2:
 1358  00001e88          	L63_LF2:
 1359  00001e88          	L61_LF2:
 1360  00001e88  8fc10004	lw	r1,4(r30)
 1361  00001e8c  20020000	addi	r2,r0,(#0x0)&0xff
 1362  00001e90  a0220000	sb	(r1),r2
 1363  00001e94          	L59_LF2:
 1364  00001e94  8fa20000	lw	r2,0(r29)
 1365  00001e98  8fa30004	lw	r3,4(r29)
 1366  00001e9c  8fdffff8	lw	r31,-8(r30)
 1367  00001ea0  001ee820	add	r29,r0,r30
 1368  00001ea4  8fdefffc	lw	r30,-4(r30)
 1369  00001ea8  4be00000	jr	r31
 1370  00001eac  54000000	nop
 1371  00001eb0          	.endproc _ditoa
 1372  00001eb0          	.align 2
 1373  00001eb0          	.proc _dstrtol
 1374  00001eb0          	.global _dstrtol
 1375  00001eb0          	_dstrtol:
 1376                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1377  00001eb0  afbefffc	sw	-4(r29),r30; push fp
 1378  00001eb4  001df020	add	r30,r0,r29; fp = sp
 1379  00001eb8  afbffff8	sw	-8(r29),r31; push ret addr
 1380  00001ebc  2fbd0020	subui	r29,r29,#32; alloc local storage
 1381  00001ec0  afa20000	sw	0(r29),r2
 1382  00001ec4  20010000	addi	r1,r0,#0
 1383  00001ec8  afc1fff4	sw	-12(r30),r1
 1384  00001ecc          	L73_LF2:
 1385  00001ecc  8fc10000	lw	r1,(r30)
 1386  00001ed0  90220000	lbu	r2,(r1)
 1387  00001ed4  60410020	seqi	r1,r2,#32
 1388  00001ed8  14200034	bnez	r1,L75_LF2
 1389  00001edc  54000000	nop; delay slot nop
 1390  00001ee0  8fc10000	lw	r1,(r30)
 1391  00001ee4  90220000	lbu	r2,(r1)
 1392  00001ee8  60410009	seqi	r1,r2,#9
 1393  00001eec  14200020	bnez	r1,L75_LF2
 1394  00001ef0  54000000	nop; delay slot nop
 1395  00001ef4  8fc10000	lw	r1,(r30)
 1396  00001ef8  90220000	lbu	r2,(r1)
 1397  00001efc  6041000a	seqi	r1,r2,#10
 1398  00001f00  1420000c	bnez	r1,L75_LF2
 1399  00001f04  54000000	nop; delay slot nop
 1400  00001f08  0800001c	j	L74_LF2
 1401  00001f0c  54000000	nop; delay slot nop
 1402  00001f10          	L75_LF2:
 1403  00001f10  8fc20000	lw	r2,(r30)
 1404  00001f14  20410001	addi	r1,r2,#1
 1405  00001f18  00011020	add	r2,r0,r1
 1406  00001f1c  afc20000	sw	(r30),r2
 1407  00001f20  0bffffa8	j	L73_LF2
 1408  00001f24  54000000	nop; delay slot nop
 1409  00001f28          	L74_LF2:
 1410  00001f28  8fc10004	lw	r1,4(r30)
 1411  00001f2c  64220000	snei	r2,r1,#0
 1412  00001f30  10400010	beqz	r2,L76_LF2
 1413  00001f34  54000000	nop; delay slot nop
 1414  00001f38  8fc10004	lw	r1,4(r30)
 1415  00001f3c  8fc20000	lw	r2,(r30)
 1416  00001f40  ac220000	sw	(r1),r2
 1417  00001f44          	L76_LF2:
 1418  00001f44  8fc10000	lw	r1,(r30)
 1419  00001f48  90220000	lbu	r2,(r1)
 1420  00001f4c  64410000	snei	r1,r2,#0
 1421  00001f50  14200010	bnez	r1,L77_LF2
 1422  00001f54  54000000	nop; delay slot nop
 1423  00001f58  8fc1fff4	lw	r1,-12(r30)
 1424  00001f5c  08000294	j	L72_LF2
 1425  00001f60  54000000	nop; delay slot nop
 1426  00001f64          	L77_LF2:
 1427  00001f64  8fc10000	lw	r1,(r30)
 1428  00001f68  90220000	lbu	r2,(r1)
 1429  00001f6c  6041002d	seqi	r1,r2,#45
 1430  00001f70  10200024	beqz	r1,L78_LF2
 1431  00001f74  54000000	nop; delay slot nop
 1432  00001f78  2001ffff	addi	r1,r0,#-1
 1433  00001f7c  afc1ffec	sw	-20(r30),r1
 1434  00001f80  8fc20000	lw	r2,(r30)
 1435  00001f84  20410001	addi	r1,r2,#1
 1436  00001f88  00011020	add	r2,r0,r1
 1437  00001f8c  afc20000	sw	(r30),r2
 1438  00001f90  0800000c	j	L79_LF2
 1439  00001f94  54000000	nop; delay slot nop
 1440  00001f98          	L78_LF2:
 1441  00001f98  20010001	addi	r1,r0,#1
 1442  00001f9c  afc1ffec	sw	-20(r30),r1
 1443  00001fa0          	L79_LF2:
 1444  00001fa0  8fc10008	lw	r1,8(r30)
 1445  00001fa4  64220000	snei	r2,r1,#0
 1446  00001fa8  14400090	bnez	r2,L80_LF2
 1447  00001fac  54000000	nop; delay slot nop
 1448  00001fb0  8fc10000	lw	r1,(r30)
 1449  00001fb4  90220000	lbu	r2,(r1)
 1450  00001fb8  60410030	seqi	r1,r2,#48
 1451  00001fbc  10200074	beqz	r1,L81_LF2
 1452  00001fc0  54000000	nop; delay slot nop
 1453  00001fc4  8fc20000	lw	r2,(r30)
 1454  00001fc8  20410001	addi	r1,r2,#1
 1455  00001fcc  00011020	add	r2,r0,r1
 1456  00001fd0  afc20000	sw	(r30),r2
 1457  00001fd4  8fc10000	lw	r1,(r30)
 1458  00001fd8  90220000	lbu	r2,(r1)
 1459  00001fdc  60410078	seqi	r1,r2,#120
 1460  00001fe0  14200020	bnez	r1,L83_LF2
 1461  00001fe4  54000000	nop; delay slot nop
 1462  00001fe8  8fc10000	lw	r1,(r30)
 1463  00001fec  90220000	lbu	r2,(r1)
 1464  00001ff0  60410058	seqi	r1,r2,#88
 1465  00001ff4  1420000c	bnez	r1,L83_LF2
 1466  00001ff8  54000000	nop; delay slot nop
 1467  00001ffc  08000024	j	L82_LF2
 1468  00002000  54000000	nop; delay slot nop
 1469  00002004          	L83_LF2:
 1470  00002004  20010010	addi	r1,r0,#16
 1471  00002008  afc10008	sw	8(r30),r1
 1472  0000200c  8fc20000	lw	r2,(r30)
 1473  00002010  20410001	addi	r1,r2,#1
 1474  00002014  00011020	add	r2,r0,r1
 1475  00002018  afc20000	sw	(r30),r2
 1476  0000201c  0800000c	j	L84_LF2
 1477  00002020  54000000	nop; delay slot nop
 1478  00002024          	L82_LF2:
 1479  00002024  20010008	addi	r1,r0,#8
 1480  00002028  afc10008	sw	8(r30),r1
 1481  0000202c          	L84_LF2:
 1482  0000202c  0800000c	j	L80_LF2
 1483  00002030  54000000	nop; delay slot nop
 1484  00002034          	L81_LF2:
 1485  00002034  2001000a	addi	r1,r0,#10
 1486  00002038  afc10008	sw	8(r30),r1
 1487  0000203c          	L85_LF2:
 1488  0000203c          	L80_LF2:
 1489  0000203c  8fc10008	lw	r1,8(r30)
 1490  00002040  70220000	slei	r2,r1,#0
 1491  00002044  1440001c	bnez	r2,L87_LF2
 1492  00002048  54000000	nop; delay slot nop
 1493  0000204c  8fc10008	lw	r1,8(r30)
 1494  00002050  6c220010	sgti	r2,r1,#16
 1495  00002054  1440000c	bnez	r2,L87_LF2
 1496  00002058  54000000	nop; delay slot nop
 1497  0000205c  08000010	j	L86_LF2
 1498  00002060  54000000	nop; delay slot nop
 1499  00002064          	L87_LF2:
 1500  00002064  8fc1fff4	lw	r1,-12(r30)
 1501  00002068  08000188	j	L72_LF2
 1502  0000206c  54000000	nop; delay slot nop
 1503  00002070          	L86_LF2:
 1504  00002070  54000000	nop
 1505  00002074          	L88_LF2:
 1506  00002074  8fc10000	lw	r1,(r30)
 1507  00002078  90220000	lbu	r2,(r1)
 1508  0000207c  6c41002f	sgtui	r1,r2,#47
 1509  00002080  10200030	beqz	r1,L91_LF2
 1510  00002084  54000000	nop; delay slot nop
 1511  00002088  8fc10000	lw	r1,(r30)
 1512  0000208c  90220000	lbu	r2,(r1)
 1513  00002090  70410039	sleui	r1,r2,#57
 1514  00002094  1020001c	beqz	r1,L91_LF2
 1515  00002098  54000000	nop; delay slot nop
 1516  0000209c  8fc10000	lw	r1,(r30)
 1517  000020a0  90220000	lbu	r2,(r1)
 1518  000020a4  2041ffd0	addi	r1,r2,#-48
 1519  000020a8  afc1fff0	sw	-16(r30),r1
 1520  000020ac  0800008c	j	L92_LF2
 1521  000020b0  54000000	nop; delay slot nop
 1522  000020b4          	L91_LF2:
 1523  000020b4  8fc10000	lw	r1,(r30)
 1524  000020b8  90220000	lbu	r2,(r1)
 1525  000020bc  6c410060	sgtui	r1,r2,#96
 1526  000020c0  10200030	beqz	r1,L93_LF2
 1527  000020c4  54000000	nop; delay slot nop
 1528  000020c8  8fc10000	lw	r1,(r30)
 1529  000020cc  90220000	lbu	r2,(r1)
 1530  000020d0  7041007a	sleui	r1,r2,#122
 1531  000020d4  1020001c	beqz	r1,L93_LF2
 1532  000020d8  54000000	nop; delay slot nop
 1533  000020dc  8fc10000	lw	r1,(r30)
 1534  000020e0  90220000	lbu	r2,(r1)
 1535  000020e4  2041ffa9	addi	r1,r2,#-87
 1536  000020e8  afc1fff0	sw	-16(r30),r1
 1537  000020ec  0800004c	j	L92_LF2
 1538  000020f0  54000000	nop; delay slot nop
 1539  000020f4          	L93_LF2:
 1540  000020f4  8fc10000	lw	r1,(r30)
 1541  000020f8  90220000	lbu	r2,(r1)
 1542  000020fc  6c410040	sgtui	r1,r2,#64
 1543  00002100  10200030	beqz	r1,L95_LF2
 1544  00002104  54000000	nop; delay slot nop
 1545  00002108  8fc10000	lw	r1,(r30)
 1546  0000210c  90220000	lbu	r2,(r1)
 1547  00002110  7041005a	sleui	r1,r2,#90
 1548  00002114  1020001c	beqz	r1,L95_LF2
 1549  00002118  54000000	nop; delay slot nop
 1550  0000211c  8fc10000	lw	r1,(r30)
 1551  00002120  90220000	lbu	r2,(r1)
 1552  00002124  2041ffc9	addi	r1,r2,#-55
 1553  00002128  afc1fff0	sw	-16(r30),r1
 1554  0000212c  0800000c	j	L92_LF2
 1555  00002130  54000000	nop; delay slot nop
 1556  00002134          	L95_LF2:
 1557  00002134  200103e8	addi	r1,r0,#1000
 1558  00002138  afc1fff0	sw	-16(r30),r1
 1559  0000213c          	L96_LF2:
 1560  0000213c          	L94_LF2:
 1561  0000213c          	L92_LF2:
 1562  0000213c  8fc1fff0	lw	r1,-16(r30)
 1563  00002140  8fc20008	lw	r2,8(r30)
 1564  00002144  0022082a	slt	r1,r1,r2
 1565  00002148  10200040	beqz	r1,L90_LF2
 1566  0000214c  54000000	nop; delay slot nop
 1567  00002150  8fc1fff4	lw	r1,-12(r30)
 1568  00002154  8fc20008	lw	r2,8(r30)
 1569  00002158  00200035	movi2fp	f0,r1
 1570  0000215c  00400835	movi2fp	f1,r2
 1571  00002160  0401000e	mult	f0,f0,f1
 1572  00002164  00000834	movfp2i	r1,f0
 1573  00002168  afc1fff4	sw	-12(r30),r1
 1574  0000216c  8fc1fff4	lw	r1,-12(r30)
 1575  00002170  8fc2fff0	lw	r2,-16(r30)
 1576  00002174  00220820	add	r1,r1,r2
 1577  00002178  afc1fff4	sw	-12(r30),r1
 1578  0000217c  8fc20000	lw	r2,(r30)
 1579  00002180  20410001	addi	r1,r2,#1
 1580  00002184  00011020	add	r2,r0,r1
 1581  00002188  afc20000	sw	(r30),r2
 1582  0000218c          	L97_LF2:
 1583  0000218c          	L90_LF2:
 1584  0000218c  8fc1fff0	lw	r1,-16(r30)
 1585  00002190  8fc20008	lw	r2,8(r30)
 1586  00002194  0022082a	slt	r1,r1,r2
 1587  00002198  1420000c	bnez	r1,L98_LF2
 1588  0000219c  54000000	nop; delay slot nop
 1589  000021a0  0800000c	j	L89_LF2
 1590  000021a4  54000000	nop; delay slot nop
 1591  000021a8          	L98_LF2:
 1592  000021a8  0bfffec8	j	L88_LF2
 1593  000021ac  54000000	nop; delay slot nop
 1594  000021b0          	L89_LF2:
 1595  000021b0  8fc10004	lw	r1,4(r30)
 1596  000021b4  64220000	snei	r2,r1,#0
 1597  000021b8  10400010	beqz	r2,L99_LF2
 1598  000021bc  54000000	nop; delay slot nop
 1599  000021c0  8fc10004	lw	r1,4(r30)
 1600  000021c4  8fc20000	lw	r2,(r30)
 1601  000021c8  ac220000	sw	(r1),r2
 1602  000021cc          	L99_LF2:
 1603  000021cc  8fc1fff4	lw	r1,-12(r30)
 1604  000021d0  8fc2ffec	lw	r2,-20(r30)
 1605  000021d4  00200035	movi2fp	f0,r1
 1606  000021d8  00400835	movi2fp	f1,r2
 1607  000021dc  0401000e	mult	f0,f0,f1
 1608  000021e0  00000834	movfp2i	r1,f0
 1609  000021e4  afc1fff4	sw	-12(r30),r1
 1610  000021e8  8fc1fff4	lw	r1,-12(r30)
 1611  000021ec  08000004	j	L72_LF2
 1612  000021f0  54000000	nop; delay slot nop
 1613  000021f4          	L72_LF2:
 1614  000021f4  8fa20000	lw	r2,0(r29)
 1615  000021f8  8fdffff8	lw	r31,-8(r30)
 1616  000021fc  001ee820	add	r29,r0,r30
 1617  00002200  8fdefffc	lw	r30,-4(r30)
 1618  00002204  4be00000	jr	r31
 1619  00002208  54000000	nop
 1620  0000220c          	.endproc _dstrtol
 1621  0000220c          	.align 2
 1622  0000220c          	.proc _bcopy
 1623  0000220c          	.global _bcopy
 1624  0000220c          	_bcopy:
 1625                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1626  0000220c  afbefffc	sw	-4(r29),r30; push fp
 1627  00002210  001df020	add	r30,r0,r29; fp = sp
 1628  00002214  afbffff8	sw	-8(r29),r31; push ret addr
 1629  00002218  2fbd0010	subui	r29,r29,#16; alloc local storage
 1630  0000221c  afa20000	sw	0(r29),r2
 1631  00002220  afa30004	sw	4(r29),r3
 1632  00002224  54000000	nop
 1633  00002228          	L101_LF2:
 1634  00002228  8fc10008	lw	r1,8(r30)
 1635  0000222c  2022ffff	addi	r2,r1,#-1
 1636  00002230  afc20008	sw	8(r30),r2
 1637  00002234  6c210000	sgti	r1,r1,#0
 1638  00002238  1420000c	bnez	r1,L103_LF2
 1639  0000223c  54000000	nop; delay slot nop
 1640  00002240  0800002c	j	L102_LF2
 1641  00002244  54000000	nop; delay slot nop
 1642  00002248          	L103_LF2:
 1643  00002248  8fc10004	lw	r1,4(r30)
 1644  0000224c  20220001	addi	r2,r1,#1
 1645  00002250  afc20004	sw	4(r30),r2
 1646  00002254  8fc20000	lw	r2,(r30)
 1647  00002258  20430001	addi	r3,r2,#1
 1648  0000225c  afc30000	sw	(r30),r3
 1649  00002260  80420000	lb	r2,(r2)
 1650  00002264  a0220000	sb	(r1),r2
 1651  00002268  0bffffbc	j	L101_LF2
 1652  0000226c  54000000	nop; delay slot nop
 1653  00002270          	L102_LF2:
 1654  00002270          	L100_LF2:
 1655  00002270  8fa20000	lw	r2,0(r29)
 1656  00002274  8fa30004	lw	r3,4(r29)
 1657  00002278  8fdffff8	lw	r31,-8(r30)
 1658  0000227c  001ee820	add	r29,r0,r30
 1659  00002280  8fdefffc	lw	r30,-4(r30)
 1660  00002284  4be00000	jr	r31
 1661  00002288  54000000	nop
 1662  0000228c          	.endproc _bcopy
 1663  0000228c          	.align 2
 1664  0000228c          	.proc _bzero
 1665  0000228c          	.global _bzero
 1666  0000228c          	_bzero:
 1667                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1668  0000228c  afbefffc	sw	-4(r29),r30; push fp
 1669  00002290  001df020	add	r30,r0,r29; fp = sp
 1670  00002294  afbffff8	sw	-8(r29),r31; push ret addr
 1671  00002298  2fbd0010	subui	r29,r29,#16; alloc local storage
 1672  0000229c  afa20000	sw	0(r29),r2
 1673  000022a0  54000000	nop
 1674  000022a4          	L105_LF2:
 1675  000022a4  8fc10004	lw	r1,4(r30)
 1676  000022a8  2022ffff	addi	r2,r1,#-1
 1677  000022ac  afc20004	sw	4(r30),r2
 1678  000022b0  6c210000	sgti	r1,r1,#0
 1679  000022b4  1420000c	bnez	r1,L107_LF2
 1680  000022b8  54000000	nop; delay slot nop
 1681  000022bc  08000020	j	L106_LF2
 1682  000022c0  54000000	nop; delay slot nop
 1683  000022c4          	L107_LF2:
 1684  000022c4  8fc10000	lw	r1,(r30)
 1685  000022c8  20220001	addi	r2,r1,#1
 1686  000022cc  afc20000	sw	(r30),r2
 1687  000022d0  20020000	addi	r2,r0,(#0x0)&0xff
 1688  000022d4  a0220000	sb	(r1),r2
 1689  000022d8  0bffffc8	j	L105_LF2
 1690  000022dc  54000000	nop; delay slot nop
 1691  000022e0          	L106_LF2:
 1692  000022e0          	L104_LF2:
 1693  000022e0  8fa20000	lw	r2,0(r29)
 1694  000022e4  8fdffff8	lw	r31,-8(r30)
 1695  000022e8  001ee820	add	r29,r0,r30
 1696  000022ec  8fdefffc	lw	r30,-4(r30)
 1697  000022f0  4be00000	jr	r31
 1698  000022f4  54000000	nop
 1699  000022f8          	.endproc _bzero
 1700  000022f8          	.align 2
 1701  000022f8          	.proc _min
 1702  000022f8          	.global _min
 1703  000022f8          	_min:
 1704                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1705  000022f8  afbefffc	sw	-4(r29),r30; push fp
 1706  000022fc  001df020	add	r30,r0,r29; fp = sp
 1707  00002300  afbffff8	sw	-8(r29),r31; push ret addr
 1708  00002304  2fbd0010	subui	r29,r29,#16; alloc local storage
 1709  00002308  afa20000	sw	0(r29),r2
 1710  0000230c  afa30004	sw	4(r29),r3
 1711  00002310  8fc10000	lw	r1,(r30)
 1712  00002314  8fc20004	lw	r2,4(r30)
 1713  00002318  0022182c	sle	r3,r1,r2
 1714  0000231c  14600008	bnez	r3,L109_LF2
 1715  00002320  54000000	nop; delay slot nop
 1716  00002324  8fc10004	lw	r1,4(r30)
 1717  00002328          	L109_LF2:
 1718  00002328  08000004	j	L108_LF2
 1719  0000232c  54000000	nop; delay slot nop
 1720  00002330          	L108_LF2:
 1721  00002330  8fa20000	lw	r2,0(r29)
 1722  00002334  8fa30004	lw	r3,4(r29)
 1723  00002338  8fdffff8	lw	r31,-8(r30)
 1724  0000233c  001ee820	add	r29,r0,r30
 1725  00002340  8fdefffc	lw	r30,-4(r30)
 1726  00002344  4be00000	jr	r31
 1727  00002348  54000000	nop
 1728  0000234c          	.endproc _min
 1729  0000234c          	.align 2
 1730  0000234c          	.proc _max
 1731  0000234c          	.global _max
 1732  0000234c          	_max:
 1733                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1734  0000234c  afbefffc	sw	-4(r29),r30; push fp
 1735  00002350  001df020	add	r30,r0,r29; fp = sp
 1736  00002354  afbffff8	sw	-8(r29),r31; push ret addr
 1737  00002358  2fbd0010	subui	r29,r29,#16; alloc local storage
 1738  0000235c  afa20000	sw	0(r29),r2
 1739  00002360  afa30004	sw	4(r29),r3
 1740  00002364  8fc10000	lw	r1,(r30)
 1741  00002368  8fc20004	lw	r2,4(r30)
 1742  0000236c  0022182d	sge	r3,r1,r2
 1743  00002370  14600008	bnez	r3,L111_LF2
 1744  00002374  54000000	nop; delay slot nop
 1745  00002378  8fc10004	lw	r1,4(r30)
 1746  0000237c          	L111_LF2:
 1747  0000237c  08000004	j	L110_LF2
 1748  00002380  54000000	nop; delay slot nop
 1749  00002384          	L110_LF2:
 1750  00002384  8fa20000	lw	r2,0(r29)
 1751  00002388  8fa30004	lw	r3,4(r29)
 1752  0000238c  8fdffff8	lw	r31,-8(r30)
 1753  00002390  001ee820	add	r29,r0,r30
 1754  00002394  8fdefffc	lw	r30,-4(r30)
 1755  00002398  4be00000	jr	r31
 1756  0000239c  54000000	nop
 1757  000023a0          	.endproc _max
 1758                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1759                      ;;;
 1760                      ;;; Most of the traps are called in files from libtraps.
 1763  000023a0          	.align 2
 1764  000023a0          	.proc _exit
 1765  000023a0          	.global _exit
 1766  000023a0          	_exit:
 1767  000023a0  44000300	trap	#0x300
 1768  000023a4  4be00000	jr	r31
 1769  000023a8  54000000	nop
 1770  000023ac          	.endproc _exit
 1772                      ; for the benefit of gcc.
 1773  000023ac          	.proc ___main
 1774  000023ac          	.global ___main
 1775  000023ac          	___main:
 1776  000023ac  4be00000	jr	r31
 1777  000023b0  54000000	nop
 1778  000023b4          	.endproc ___main
 1779  000023b4          	.text
 1780  000023b4          	.global _etext
 1781  000023b4          	_etext:
 1782  000023b4          	.align 3
 1783  000023b8          	.data
 1784  0000349a          	.global _edata
 1785  0000349a          	_edata:
