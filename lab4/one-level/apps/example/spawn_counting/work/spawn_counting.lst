 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 236
    4                      ; Text size: 4240
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
   10  00003000          	.align 2
   11  00003000          	LC0_LF0:
   12  00003000  55736167	.ascii "Usage: %s <semaphore handle>\n\000"
   12  00003004  653a2025	
   12  00003008  73203c73	
   12  0000300c  656d6170	
   12  00003010  686f7265	
   12  00003014  2068616e	
   12  00003018  646c653e	
   12  0000301c  0a00    	
   13  0000301e          	.align 2
   14  00003020          	LC1_LF0:
   15  00003020  4368696c	.ascii "Child Process : %d is beginning to count\n\000"
   15  00003024  64205072	
   15  00003028  6f636573	
   15  0000302c  73203a20	
   15  00003030  25642069	
   15  00003034  73206265	
   15  00003038  67696e6e	
   15  0000303c  696e6720	
   15  00003040  746f2063	
   15  00003044  6f756e74	
   15  00003048  0a00    	
   16  0000304a          	.align 2
   17  0000304c          	LC2_LF0:
   18  0000304c  4368696c	.ascii "Child Process : %d has completed half of the counting sequence\n\000"
   18  00003050  64205072	
   18  00003054  6f636573	
   18  00003058  73203a20	
   18  0000305c  25642068	
   18  00003060  61732063	
   18  00003064  6f6d706c	
   18  00003068  65746564	
   18  0000306c  2068616c	
   18  00003070  66206f66	
   18  00003074  20746865	
   18  00003078  20636f75	
   18  0000307c  6e74696e	
   18  00003080  67207365	
   18  00003084  7175656e	
   18  00003088  63650a00	
   19  0000308c          	.align 2
   20  0000308c          	LC3_LF0:
   21  0000308c  73706177	.ascii "spawn_counting (%d): Bad semaphore proc_sem (%d)!\n\000"
   21  00003090  6e5f636f	
   21  00003094  756e7469	
   21  00003098  6e672028	
   21  0000309c  2564293a	
   21  000030a0  20426164	
   21  000030a4  2073656d	
   21  000030a8  6170686f	
   21  000030ac  72652070	
   21  000030b0  726f635f	
   21  000030b4  73656d20	
   21  000030b8  28256429	
   21  000030bc  210a00  	
   22  000030bf          	.align 2
   23  000030c0          	LC4_LF0:
   24  000030c0  53706177	.ascii "Spawn Counting :%d has completed counting!\n\000"
   24  000030c4  6e20436f	
   24  000030c8  756e7469	
   24  000030cc  6e67203a	
   24  000030d0  25642068	
   24  000030d4  61732063	
   24  000030d8  6f6d706c	
   24  000030dc  65746564	
   24  000030e0  20636f75	
   24  000030e4  6e74696e	
   24  000030e8  67210a00	
   25  000030ec          	.text
   26  00001000          	.align 2
   27  00001000          	.proc _main
   28  00001000          	.global _main
   29  00001000          	_main:
   30                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   31  00001000  afbefffc	sw	-4(r29),r30; push fp
   32  00001004  001df020	add	r30,r0,r29; fp = sp
   33  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   34  0000100c  2fbd0008	subui	r29,r29,#8; alloc local storage
   35  00001010  8fc20000	lw	r2,(r30)
   36  00001014  8fc30004	lw	r3,4(r30)
   37  00001018  0c00106c	jal	___main
   38  0000101c  54000000	nop; not filled.
   39  00001020  64410002	snei	r1,r2,#2
   40  00001024  10200030	beqz	r1,L2_LF0
   41  00001028  54000000	nop; not filled.
   42  0000102c  23bdfff8	addi	r29,r29,#-8
   43  00001030  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
   44  00001034  24843000	addui	r4,r4,(LC0_LF0)&0xffff
   45  00001038  afa40000	sw	(r29),r4
   46  0000103c  8c610000	lw	r1,(r3)
   47  00001040  afa10004	sw	4(r29),r1
   48  00001044  0c000180	jal	_Printf
   49  00001048  54000000	nop; not filled.
   50  0000104c  0c000280	jal	_Exit
   51  00001050  54000000	nop; not filled.
   52  00001054  23bd0008	addi	r29,r29,#8
   53  00001058          	L2_LF0:
   54  00001058  23bdfff0	addi	r29,r29,#-16
   55  0000105c  8c630004	lw	r3,4(r3)
   56  00001060  afa30000	sw	(r29),r3
   57  00001064  20040000	addi	r4,r0,#0
   58  00001068  afa40004	sw	4(r29),r4
   59  0000106c  2004000a	addi	r4,r0,#10
   60  00001070  afa40008	sw	8(r29),r4
   61  00001074  0c000b14	jal	_dstrtol
   62  00001078  54000000	nop; not filled.
   63  0000107c  00011820	add	r3,r0,r1
   64  00001080  0c000150	jal	_getpid
   65  00001084  54000000	nop; not filled.
   66  00001088  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
   67  0000108c  24843020	addui	r4,r4,(LC1_LF0)&0xffff
   68  00001090  afa40000	sw	(r29),r4
   69  00001094  afa10004	sw	4(r29),r1
   70  00001098  0c00012c	jal	_Printf
   71  0000109c  54000000	nop; not filled.
   72  000010a0  20020000	addi	r2,r0,#0
   73  000010a4  23bd0010	addi	r29,r29,#16
   74  000010a8          	L6_LF0:
   75  000010a8  3c040001	lhi	r4,#1
   76  000010ac  2484ffff	addui	r4,r4,#65535
   77  000010b0  00440828	seq	r1,r2,r4
   78  000010b4  1020002c	beqz	r1,L5_LF0
   79  000010b8  54000000	nop; not filled.
   80  000010bc  0c000114	jal	_getpid
   81  000010c0  54000000	nop; not filled.
   82  000010c4  23bdfff8	addi	r29,r29,#-8
   83  000010c8  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
   84  000010cc  2484304c	addui	r4,r4,(LC2_LF0)&0xffff
   85  000010d0  afa40000	sw	(r29),r4
   86  000010d4  afa10004	sw	4(r29),r1
   87  000010d8  0c0000ec	jal	_Printf
   88  000010dc  54000000	nop; not filled.
   89  000010e0  23bd0008	addi	r29,r29,#8
   90  000010e4          	L5_LF0:
   91  000010e4  20420001	addi	r2,r2,#1
   92  000010e8  3c040003	lhi	r4,#3
   93  000010ec  2484fffe	addui	r4,r4,#65534
   94  000010f0  0044082c	sle	r1,r2,r4
   95  000010f4  1420ffb0	bnez	r1,L6_LF0
   96  000010f8  54000000	nop; not filled.
   97  000010fc  23bdfff8	addi	r29,r29,#-8
   98  00001100  afa30000	sw	(r29),r3
   99  00001104  0c000114	jal	_sem_signal
  100  00001108  54000000	nop; not filled.
  101  0000110c  23bd0008	addi	r29,r29,#8
  102  00001110  64210001	snei	r1,r1,#1
  103  00001114  10200038	beqz	r1,L9_LF0
  104  00001118  54000000	nop; not filled.
  105  0000111c  0c0000b4	jal	_getpid
  106  00001120  54000000	nop; not filled.
  107  00001124  23bdfff0	addi	r29,r29,#-16
  108  00001128  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  109  0000112c  2484308c	addui	r4,r4,(LC3_LF0)&0xffff
  110  00001130  afa40000	sw	(r29),r4
  111  00001134  afa10004	sw	4(r29),r1
  112  00001138  afa30008	sw	8(r29),r3
  113  0000113c  0c000088	jal	_Printf
  114  00001140  54000000	nop; not filled.
  115  00001144  0c000188	jal	_Exit
  116  00001148  54000000	nop; not filled.
  117  0000114c  23bd0010	addi	r29,r29,#16
  118  00001150          	L9_LF0:
  119  00001150  0c000080	jal	_getpid
  120  00001154  54000000	nop; not filled.
  121  00001158  23bdfff8	addi	r29,r29,#-8
  122  0000115c  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  123  00001160  248430c0	addui	r4,r4,(LC4_LF0)&0xffff
  124  00001164  afa40000	sw	(r29),r4
  125  00001168  afa10004	sw	4(r29),r1
  126  0000116c  0c000058	jal	_Printf
  127  00001170  54000000	nop; not filled.
  128  00001174  23bd0008	addi	r29,r29,#8
  129  00001178  0c000f00	jal	_exit
  130  0000117c  54000000	nop
  131  00001180          	.endproc _main
  132                      ;;;
  133                      ;;; Stub functions for DLX traps.
  134                      ;;;
  135                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  136                      ;;;
  137                      ;;; The traps such as Open and Close
  138                      ;;; (note the capital letters) are for use by user programs.  The traps
  139                      ;;; with names such as open and close (lower case) are for use by the OS.
  140                      ;;;
  143  00001180          	.align 2
  145                      ;;; The following are the traps to be used by user-level programs
  146                      ;;;
  148  00001180          	.align 2
  149  00001180          	.proc _Open
  150  00001180          	.global _Open
  151  00001180          	_Open:
  152                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  153                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  154                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  155  00001180  44000213	trap	#0x213
  156  00001184  4be00000	jr	r31
  157  00001188  54000000	nop
  158  0000118c          	.endproc _Open
  160  0000118c          	.proc _Close
  161  0000118c          	.global _Close
  162  0000118c          	_Close:
  163  0000118c  44000214	trap	#0x214
  164  00001190  4be00000	jr	r31
  165  00001194  54000000	nop
  166  00001198          	.endproc _Close
  168  00001198          	.proc _Read
  169  00001198          	.global _Read
  170  00001198          	_Read:
  171  00001198  44000210	trap	#0x210
  172  0000119c  4be00000	jr	r31
  173  000011a0  54000000	nop
  174  000011a4          	.endproc _Read
  176  000011a4          	.proc _Write
  177  000011a4          	.global _Write
  178  000011a4          	_Write:
  179  000011a4  44000211	trap	#0x211
  180  000011a8  4be00000	jr	r31
  181  000011ac  54000000	nop
  182  000011b0          	.endproc _Write
  184  000011b0          	.proc _Lseek
  185  000011b0          	.global _Lseek
  186  000011b0          	_Lseek:
  187  000011b0  44000212	trap	#0x212
  188  000011b4  4be00000	jr	r31
  189  000011b8  54000000	nop
  190  000011bc          	.endproc _Lseek
  192  000011bc          	.proc _Putchar
  193  000011bc          	.global _Putchar
  194  000011bc          	_Putchar:
  195  000011bc  44000280	trap	#0x280
  196  000011c0  4be00000	jr	r31
  197  000011c4  54000000	nop
  198  000011c8          	.endproc _Putchar
  200  000011c8          	.proc _Printf
  201  000011c8          	.global _Printf
  202  000011c8          	_Printf:
  203  000011c8  44000201	trap	#0x201
  204  000011cc  4be00000	jr	r31
  205  000011d0  54000000	nop
  206  000011d4          	.endproc _Printf
  208  000011d4          	.proc _getpid
  209  000011d4          	.global _getpid
  210  000011d4          	_getpid:
  211  000011d4  44000431	trap	#0x431
  212  000011d8  4be00000	jr	r31
  213  000011dc  54000000	nop
  214  000011e0          	.endproc _getpid
  216  000011e0          	.proc _process_create
  217  000011e0          	.global _process_create
  218  000011e0          	_process_create:
  219  000011e0  44000432	trap	#0x432
  220  000011e4  4be00000	jr	r31
  221  000011e8  54000000	nop
  222  000011ec          	.endproc _process_create
  224  000011ec          	.proc _shmget
  225  000011ec          	.global _shmget
  226  000011ec          	_shmget:
  227  000011ec  44000440	trap	#0x440
  228  000011f0  4be00000	jr	r31
  229  000011f4  54000000	nop
  230  000011f8          	.endproc _shmget
  232  000011f8          	.proc _shmat
  233  000011f8          	.global _shmat
  234  000011f8          	_shmat:
  235  000011f8  44000441	trap	#0x441
  236  000011fc  4be00000	jr	r31
  237  00001200  54000000	nop
  238  00001204          	.endproc _shmat
  240  00001204          	.proc _sem_create
  241  00001204          	.global _sem_create
  242  00001204          	_sem_create:
  243  00001204  44000450	trap	#0x450
  244  00001208  4be00000	jr	r31
  245  0000120c  54000000	nop
  246  00001210          	.endproc _sem_create
  248  00001210          	.proc _sem_wait
  249  00001210          	.global _sem_wait
  250  00001210          	_sem_wait:
  251  00001210  44000451	trap	#0x451
  252  00001214  4be00000	jr	r31
  253  00001218  54000000	nop
  254  0000121c          	.endproc _sem_wait
  256  0000121c          	.proc _sem_signal
  257  0000121c          	.global _sem_signal
  258  0000121c          	_sem_signal:
  259  0000121c  44000452	trap	#0x452
  260  00001220  4be00000	jr	r31
  261  00001224  54000000	nop
  262  00001228          	.endproc _sem_signal
  264  00001228          	.proc _lock_create
  265  00001228          	.global _lock_create
  266  00001228          	_lock_create:
  267  00001228  44000453	trap	#0x453
  268  0000122c  4be00000	jr	r31
  269  00001230  54000000	nop
  270  00001234          	.endproc _lock_create
  272  00001234          	.proc _lock_acquire
  273  00001234          	.global _lock_acquire
  274  00001234          	_lock_acquire:
  275  00001234  44000454	trap	#0x454
  276  00001238  4be00000	jr	r31
  277  0000123c  54000000	nop
  278  00001240          	.endproc _lock_acquire
  280  00001240          	.proc _lock_release
  281  00001240          	.global _lock_release
  282  00001240          	_lock_release:
  283  00001240  44000455	trap	#0x455
  284  00001244  4be00000	jr	r31
  285  00001248  54000000	nop
  286  0000124c          	.endproc _lock_release
  288  0000124c          	.proc _cond_create
  289  0000124c          	.global _cond_create
  290  0000124c          	_cond_create:
  291  0000124c  44000456	trap	#0x456
  292  00001250  4be00000	jr	r31
  293  00001254  54000000	nop
  294  00001258          	.endproc _cond_create
  296  00001258          	.proc _cond_wait
  297  00001258          	.global _cond_wait
  298  00001258          	_cond_wait:
  299  00001258  44000457	trap	#0x457
  300  0000125c  4be00000	jr	r31
  301  00001260  54000000	nop
  302  00001264          	.endproc _cond_wait
  304  00001264          	.proc _cond_signal
  305  00001264          	.global _cond_signal
  306  00001264          	_cond_signal:
  307  00001264  44000458	trap	#0x458
  308  00001268  4be00000	jr	r31
  309  0000126c  54000000	nop
  310  00001270          	.endproc _cond_signal
  312  00001270          	.proc _cond_broadcast
  313  00001270          	.global _cond_broadcast
  314  00001270          	_cond_broadcast:
  315  00001270  44000459	trap	#0x459
  316  00001274  4be00000	jr	r31
  317  00001278  54000000	nop
  318  0000127c          	.endproc _cond_broadcast
  320  0000127c          	.proc _mbox_create
  321  0000127c          	.global _mbox_create
  322  0000127c          	_mbox_create:
  323  0000127c  44000460	trap	#0x460
  324  00001280  4be00000	jr	r31
  325  00001284  54000000	nop
  326  00001288          	.endproc _mbox_create
  328  00001288          	.proc _mbox_open
  329  00001288          	.global _mbox_open
  330  00001288          	_mbox_open:
  331  00001288  44000461	trap	#0x461
  332  0000128c  4be00000	jr	r31
  333  00001290  54000000	nop
  334  00001294          	.endproc _mbox_open
  336  00001294          	.proc _mbox_close
  337  00001294          	.global _mbox_close
  338  00001294          	_mbox_close:
  339  00001294  44000462	trap	#0x462
  340  00001298  4be00000	jr	r31
  341  0000129c  54000000	nop
  342  000012a0          	.endproc _mbox_close
  344  000012a0          	.proc _mbox_send
  345  000012a0          	.global _mbox_send
  346  000012a0          	_mbox_send:
  347  000012a0  44000463	trap	#0x463
  348  000012a4  4be00000	jr	r31
  349  000012a8  54000000	nop
  350  000012ac          	.endproc _mbox_send
  352  000012ac          	.proc _mbox_recv
  353  000012ac          	.global _mbox_recv
  354  000012ac          	_mbox_recv:
  355  000012ac  44000464	trap	#0x464
  356  000012b0  4be00000	jr	r31
  357  000012b4  54000000	nop
  358  000012b8          	.endproc _mbox_recv
  360  000012b8          	.proc _sleep
  361  000012b8          	.global _sleep
  362  000012b8          	_sleep:
  363  000012b8  44000465	trap	#0x465
  364  000012bc  4be00000	jr	r31
  365  000012c0  54000000	nop
  366  000012c4          	.endproc _sleep
  368  000012c4          	.proc _yield
  369  000012c4          	.global _yield
  370  000012c4          	_yield:
  371  000012c4  44000466	trap	#0x466
  372  000012c8  4be00000	jr	r31
  373  000012cc  54000000	nop
  374  000012d0          	.endproc _yield
  377  000012d0          	.proc _Exit
  378  000012d0          	.global _Exit
  379  000012d0          	_Exit:
  380  000012d0  44000500	trap	#0x500
  381  000012d4  4be00000	jr	r31
  382  000012d8  54000000	nop
  383  000012dc          	.endproc _Exit
  386  000012dc          	.proc _malloc
  387  000012dc          	.global _malloc
  388  000012dc          	_malloc:
  389  000012dc  44000467	trap	#0x467
  390  000012e0  4be00000	jr	r31
  391  000012e4          	.endproc _malloc
  394  000012e4          	.proc _mfree
  395  000012e4          	.global _mfree
  396  000012e4          	_mfree:
  397  000012e4  44000468	trap	#0x468
  398  000012e8  4be00000	jr	r31
  399  000012ec          	.endproc _mfree
  400                      ; Compiled by GCC
  402  000012ec          	.align 2
  403  000012ec          	.proc _isspace
  404  000012ec          	.global _isspace
  405  000012ec          	_isspace:
  406                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  407  000012ec  afbefffc	sw	-4(r29),r30; push fp
  408  000012f0  001df020	add	r30,r0,r29; fp = sp
  409  000012f4  afbffff8	sw	-8(r29),r31; push ret addr
  410  000012f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  411  000012fc  afa20000	sw	0(r29),r2
  412  00001300  afa30004	sw	4(r29),r3
  413  00001304  afa40008	sw	8(r29),r4
  414  00001308  83c20003	lb	r2,3(r30)
  415  0000130c  20010000	addi	r1,r0,#0
  416  00001310  304300ff	andi	r3,r2,#0x00ff
  417  00001314  60640020	seqi	r4,r3,#32
  418  00001318  1480002c	bnez	r4,L3_LF2
  419  0000131c  54000000	nop; delay slot nop
  420  00001320  304300ff	andi	r3,r2,#0x00ff
  421  00001324  60640009	seqi	r4,r3,#9
  422  00001328  1480001c	bnez	r4,L3_LF2
  423  0000132c  54000000	nop; delay slot nop
  424  00001330  304300ff	andi	r3,r2,#0x00ff
  425  00001334  6064000a	seqi	r4,r3,#10
  426  00001338  1480000c	bnez	r4,L3_LF2
  427  0000133c  54000000	nop; delay slot nop
  428  00001340  08000008	j	L2_LF2
  429  00001344  54000000	nop; delay slot nop
  430  00001348          	L3_LF2:
  431  00001348  20010001	addi	r1,r0,#1
  432  0000134c          	L2_LF2:
  433  0000134c  08000004	j	L1_LF2
  434  00001350  54000000	nop; delay slot nop
  435  00001354          	L1_LF2:
  436  00001354  8fa20000	lw	r2,0(r29)
  437  00001358  8fa30004	lw	r3,4(r29)
  438  0000135c  8fa40008	lw	r4,8(r29)
  439  00001360  8fdffff8	lw	r31,-8(r30)
  440  00001364  001ee820	add	r29,r0,r30
  441  00001368  8fdefffc	lw	r30,-4(r30)
  442  0000136c  4be00000	jr	r31
  443  00001370  54000000	nop
  444  00001374          	.endproc _isspace
  445  00001374          	.align 2
  446  00001374          	.proc _isxdigit
  447  00001374          	.global _isxdigit
  448  00001374          	_isxdigit:
  449                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  450  00001374  afbefffc	sw	-4(r29),r30; push fp
  451  00001378  001df020	add	r30,r0,r29; fp = sp
  452  0000137c  afbffff8	sw	-8(r29),r31; push ret addr
  453  00001380  2fbd0018	subui	r29,r29,#24; alloc local storage
  454  00001384  afa20000	sw	0(r29),r2
  455  00001388  afa30004	sw	4(r29),r3
  456  0000138c  afa40008	sw	8(r29),r4
  457  00001390  83c20003	lb	r2,3(r30)
  458  00001394  20010000	addi	r1,r0,#0
  459  00001398  304300ff	andi	r3,r2,#0x00ff
  460  0000139c  6c64002f	sgtui	r4,r3,#47
  461  000013a0  1080001c	beqz	r4,L7_LF2
  462  000013a4  54000000	nop; delay slot nop
  463  000013a8  304300ff	andi	r3,r2,#0x00ff
  464  000013ac  70640039	sleui	r4,r3,#57
  465  000013b0  1480005c	bnez	r4,L6_LF2
  466  000013b4  54000000	nop; delay slot nop
  467  000013b8  08000004	j	L7_LF2
  468  000013bc  54000000	nop; delay slot nop
  469  000013c0          	L7_LF2:
  470  000013c0  304300ff	andi	r3,r2,#0x00ff
  471  000013c4  6c640060	sgtui	r4,r3,#96
  472  000013c8  1080001c	beqz	r4,L8_LF2
  473  000013cc  54000000	nop; delay slot nop
  474  000013d0  304300ff	andi	r3,r2,#0x00ff
  475  000013d4  70640066	sleui	r4,r3,#102
  476  000013d8  14800034	bnez	r4,L6_LF2
  477  000013dc  54000000	nop; delay slot nop
  478  000013e0  08000004	j	L8_LF2
  479  000013e4  54000000	nop; delay slot nop
  480  000013e8          	L8_LF2:
  481  000013e8  304300ff	andi	r3,r2,#0x00ff
  482  000013ec  6c640040	sgtui	r4,r3,#64
  483  000013f0  10800020	beqz	r4,L5_LF2
  484  000013f4  54000000	nop; delay slot nop
  485  000013f8  304300ff	andi	r3,r2,#0x00ff
  486  000013fc  70640041	sleui	r4,r3,#65
  487  00001400  1480000c	bnez	r4,L6_LF2
  488  00001404  54000000	nop; delay slot nop
  489  00001408  08000008	j	L5_LF2
  490  0000140c  54000000	nop; delay slot nop
  491  00001410          	L6_LF2:
  492  00001410  20010001	addi	r1,r0,#1
  493  00001414          	L5_LF2:
  494  00001414  08000004	j	L4_LF2
  495  00001418  54000000	nop; delay slot nop
  496  0000141c          	L4_LF2:
  497  0000141c  8fa20000	lw	r2,0(r29)
  498  00001420  8fa30004	lw	r3,4(r29)
  499  00001424  8fa40008	lw	r4,8(r29)
  500  00001428  8fdffff8	lw	r31,-8(r30)
  501  0000142c  001ee820	add	r29,r0,r30
  502  00001430  8fdefffc	lw	r30,-4(r30)
  503  00001434  4be00000	jr	r31
  504  00001438  54000000	nop
  505  0000143c          	.endproc _isxdigit
  506  0000143c          	.align 2
  507  0000143c          	.proc _dstrcpy
  508  0000143c          	.global _dstrcpy
  509  0000143c          	_dstrcpy:
  510                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  511  0000143c  afbefffc	sw	-4(r29),r30; push fp
  512  00001440  001df020	add	r30,r0,r29; fp = sp
  513  00001444  afbffff8	sw	-8(r29),r31; push ret addr
  514  00001448  2fbd0018	subui	r29,r29,#24; alloc local storage
  515  0000144c  afa20000	sw	0(r29),r2
  516  00001450  afa30004	sw	4(r29),r3
  517  00001454  8fc10000	lw	r1,(r30)
  518  00001458  afc1fff4	sw	-12(r30),r1
  519  0000145c          	L10_LF2:
  520  0000145c  8fc10000	lw	r1,(r30)
  521  00001460  20220001	addi	r2,r1,#1
  522  00001464  afc20000	sw	(r30),r2
  523  00001468  8fc20004	lw	r2,4(r30)
  524  0000146c  20430001	addi	r3,r2,#1
  525  00001470  afc30004	sw	4(r30),r3
  526  00001474  80420000	lb	r2,(r2)
  527  00001478  a0220000	sb	(r1),r2
  528  0000147c  a3c2fff3	sb	-13(r30),r2
  529  00001480          	L12_LF2:
  530  00001480  93c1fff3	lbu	r1,-13(r30)
  531  00001484  64220000	snei	r2,r1,#0
  532  00001488  1440000c	bnez	r2,L13_LF2
  533  0000148c  54000000	nop; delay slot nop
  534  00001490  0800000c	j	L11_LF2
  535  00001494  54000000	nop; delay slot nop
  536  00001498          	L13_LF2:
  537  00001498  0bffffc0	j	L10_LF2
  538  0000149c  54000000	nop; delay slot nop
  539  000014a0          	L11_LF2:
  540  000014a0  8fc1fff4	lw	r1,-12(r30)
  541  000014a4  08000004	j	L9_LF2
  542  000014a8  54000000	nop; delay slot nop
  543  000014ac          	L9_LF2:
  544  000014ac  8fa20000	lw	r2,0(r29)
  545  000014b0  8fa30004	lw	r3,4(r29)
  546  000014b4  8fdffff8	lw	r31,-8(r30)
  547  000014b8  001ee820	add	r29,r0,r30
  548  000014bc  8fdefffc	lw	r30,-4(r30)
  549  000014c0  4be00000	jr	r31
  550  000014c4  54000000	nop
  551  000014c8          	.endproc _dstrcpy
  552  000014c8          	.align 2
  553  000014c8          	.proc _dstrncpy
  554  000014c8          	.global _dstrncpy
  555  000014c8          	_dstrncpy:
  556                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  557  000014c8  afbefffc	sw	-4(r29),r30; push fp
  558  000014cc  001df020	add	r30,r0,r29; fp = sp
  559  000014d0  afbffff8	sw	-8(r29),r31; push ret addr
  560  000014d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  561  000014d8  afa20000	sw	0(r29),r2
  562  000014dc  afa30004	sw	4(r29),r3
  563  000014e0  8fc10000	lw	r1,(r30)
  564  000014e4  afc1fff4	sw	-12(r30),r1
  565  000014e8          	L15_LF2:
  566  000014e8  8fc10008	lw	r1,8(r30)
  567  000014ec  2022ffff	addi	r2,r1,#-1
  568  000014f0  afc20008	sw	8(r30),r2
  569  000014f4  70210000	slei	r1,r1,#0
  570  000014f8  1020000c	beqz	r1,L18_LF2
  571  000014fc  54000000	nop; delay slot nop
  572  00001500  08000048	j	L16_LF2
  573  00001504  54000000	nop; delay slot nop
  574  00001508          	L18_LF2:
  575  00001508  8fc10000	lw	r1,(r30)
  576  0000150c  20220001	addi	r2,r1,#1
  577  00001510  afc20000	sw	(r30),r2
  578  00001514  8fc20004	lw	r2,4(r30)
  579  00001518  20430001	addi	r3,r2,#1
  580  0000151c  afc30004	sw	4(r30),r3
  581  00001520  80420000	lb	r2,(r2)
  582  00001524  a0220000	sb	(r1),r2
  583  00001528  a3c2fff3	sb	-13(r30),r2
  584  0000152c          	L17_LF2:
  585  0000152c  93c1fff3	lbu	r1,-13(r30)
  586  00001530  64220000	snei	r2,r1,#0
  587  00001534  1440000c	bnez	r2,L19_LF2
  588  00001538  54000000	nop; delay slot nop
  589  0000153c  0800000c	j	L16_LF2
  590  00001540  54000000	nop; delay slot nop
  591  00001544          	L19_LF2:
  592  00001544  0bffffa0	j	L15_LF2
  593  00001548  54000000	nop; delay slot nop
  594  0000154c          	L16_LF2:
  595  0000154c  8fc1fff4	lw	r1,-12(r30)
  596  00001550  08000004	j	L14_LF2
  597  00001554  54000000	nop; delay slot nop
  598  00001558          	L14_LF2:
  599  00001558  8fa20000	lw	r2,0(r29)
  600  0000155c  8fa30004	lw	r3,4(r29)
  601  00001560  8fdffff8	lw	r31,-8(r30)
  602  00001564  001ee820	add	r29,r0,r30
  603  00001568  8fdefffc	lw	r30,-4(r30)
  604  0000156c  4be00000	jr	r31
  605  00001570  54000000	nop
  606  00001574          	.endproc _dstrncpy
  607  00001574          	.align 2
  608  00001574          	.proc _dstrcat
  609  00001574          	.global _dstrcat
  610  00001574          	_dstrcat:
  611                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  612  00001574  afbefffc	sw	-4(r29),r30; push fp
  613  00001578  001df020	add	r30,r0,r29; fp = sp
  614  0000157c  afbffff8	sw	-8(r29),r31; push ret addr
  615  00001580  2fbd0018	subui	r29,r29,#24; alloc local storage
  616  00001584  afa20000	sw	0(r29),r2
  617  00001588  8fc10000	lw	r1,(r30)
  618  0000158c  afc1fff4	sw	-12(r30),r1
  619  00001590          	L21_LF2:
  620  00001590  8fc10000	lw	r1,(r30)
  621  00001594  90220000	lbu	r2,(r1)
  622  00001598  64410000	snei	r1,r2,#0
  623  0000159c  1420000c	bnez	r1,L23_LF2
  624  000015a0  54000000	nop; delay slot nop
  625  000015a4  0800001c	j	L22_LF2
  626  000015a8  54000000	nop; delay slot nop
  627  000015ac          	L23_LF2:
  628  000015ac  8fc20000	lw	r2,(r30)
  629  000015b0  20410001	addi	r1,r2,#1
  630  000015b4  00011020	add	r2,r0,r1
  631  000015b8  afc20000	sw	(r30),r2
  632  000015bc  0bffffd0	j	L21_LF2
  633  000015c0  54000000	nop; delay slot nop
  634  000015c4          	L22_LF2:
  635  000015c4  23bdfff8	addi	r29,r29,#-8
  636  000015c8  001d0820	add	r1,r0,r29
  637  000015cc  8fc20000	lw	r2,(r30)
  638  000015d0  ac220000	sw	(r1),r2
  639  000015d4  8fc20004	lw	r2,4(r30)
  640  000015d8  ac220004	sw	4(r1),r2
  641  000015dc  0ffffe5c	jal	_dstrcpy
  642  000015e0  54000000	nop; delay slot nop
  643  000015e4  23bd0008	addi	r29,r29,#8
  644  000015e8  8fc1fff4	lw	r1,-12(r30)
  645  000015ec  08000004	j	L20_LF2
  646  000015f0  54000000	nop; delay slot nop
  647  000015f4          	L20_LF2:
  648  000015f4  8fa20000	lw	r2,0(r29)
  649  000015f8  8fdffff8	lw	r31,-8(r30)
  650  000015fc  001ee820	add	r29,r0,r30
  651  00001600  8fdefffc	lw	r30,-4(r30)
  652  00001604  4be00000	jr	r31
  653  00001608  54000000	nop
  654  0000160c          	.endproc _dstrcat
  655  0000160c          	.align 2
  656  0000160c          	.proc _dstrncmp
  657  0000160c          	.global _dstrncmp
  658  0000160c          	_dstrncmp:
  659                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  660  0000160c  afbefffc	sw	-4(r29),r30; push fp
  661  00001610  001df020	add	r30,r0,r29; fp = sp
  662  00001614  afbffff8	sw	-8(r29),r31; push ret addr
  663  00001618  2fbd0018	subui	r29,r29,#24; alloc local storage
  664  0000161c  afa20000	sw	0(r29),r2
  665  00001620  afa30004	sw	4(r29),r3
  666  00001624  54000000	nop
  667  00001628  20010000	addi	r1,r0,#0
  668  0000162c  afc1fff4	sw	-12(r30),r1
  669  00001630          	L25_LF2:
  670  00001630  8fc1fff4	lw	r1,-12(r30)
  671  00001634  8fc20008	lw	r2,8(r30)
  672  00001638  0022082a	slt	r1,r1,r2
  673  0000163c  1420000c	bnez	r1,L28_LF2
  674  00001640  54000000	nop; delay slot nop
  675  00001644  08000088	j	L26_LF2
  676  00001648  54000000	nop; delay slot nop
  677  0000164c          	L28_LF2:
  678  0000164c  8fc10004	lw	r1,4(r30)
  679  00001650  90220000	lbu	r2,(r1)
  680  00001654  64410000	snei	r1,r2,#0
  681  00001658  14200018	bnez	r1,L29_LF2
  682  0000165c  54000000	nop; delay slot nop
  683  00001660  20010000	addi	r1,r0,#0
  684  00001664  080000d8	j	L24_LF2
  685  00001668  54000000	nop; delay slot nop
  686  0000166c  08000028	j	L30_LF2
  687  00001670  54000000	nop; delay slot nop
  688  00001674          	L29_LF2:
  689  00001674  8fc10000	lw	r1,(r30)
  690  00001678  8fc20004	lw	r2,4(r30)
  691  0000167c  90210000	lbu	r1,(r1)
  692  00001680  90420000	lbu	r2,(r2)
  693  00001684  00220829	sne	r1,r1,r2
  694  00001688  1020000c	beqz	r1,L30_LF2
  695  0000168c  54000000	nop; delay slot nop
  696  00001690  0800003c	j	L26_LF2
  697  00001694  54000000	nop; delay slot nop
  698  00001698          	L31_LF2:
  699  00001698          	L30_LF2:
  700  00001698  8fc20000	lw	r2,(r30)
  701  0000169c  20410001	addi	r1,r2,#1
  702  000016a0  00011020	add	r2,r0,r1
  703  000016a4  afc20000	sw	(r30),r2
  704  000016a8  8fc20004	lw	r2,4(r30)
  705  000016ac  20410001	addi	r1,r2,#1
  706  000016b0  00011020	add	r2,r0,r1
  707  000016b4  afc20004	sw	4(r30),r2
  708  000016b8          	L27_LF2:
  709  000016b8  8fc2fff4	lw	r2,-12(r30)
  710  000016bc  20410001	addi	r1,r2,#1
  711  000016c0  00011020	add	r2,r0,r1
  712  000016c4  afc2fff4	sw	-12(r30),r2
  713  000016c8  0bffff64	j	L25_LF2
  714  000016cc  54000000	nop; delay slot nop
  715  000016d0          	L26_LF2:
  716  000016d0  8fc1fff4	lw	r1,-12(r30)
  717  000016d4  8fc20008	lw	r2,8(r30)
  718  000016d8  00220828	seq	r1,r1,r2
  719  000016dc  10200018	beqz	r1,L32_LF2
  720  000016e0  54000000	nop; delay slot nop
  721  000016e4  20010000	addi	r1,r0,#0
  722  000016e8  08000054	j	L24_LF2
  723  000016ec  54000000	nop; delay slot nop
  724  000016f0  0800004c	j	L33_LF2
  725  000016f4  54000000	nop; delay slot nop
  726  000016f8          	L32_LF2:
  727  000016f8  8fc20000	lw	r2,(r30)
  728  000016fc  90410000	lbu	r1,(r2)
  729  00001700  8fc20004	lw	r2,4(r30)
  730  00001704  90430000	lbu	r3,(r2)
  731  00001708  00230822	sub	r1,r1,r3
  732  0000170c  74220000	sgei	r2,r1,#0
  733  00001710  10400020	beqz	r2,L34_LF2
  734  00001714  54000000	nop; delay slot nop
  735  00001718  8fc10000	lw	r1,(r30)
  736  0000171c  8fc20004	lw	r2,4(r30)
  737  00001720  90210000	lbu	r1,(r1)
  738  00001724  90420000	lbu	r2,(r2)
  739  00001728  00220829	sne	r1,r1,r2
  740  0000172c  08000008	j	L35_LF2
  741  00001730  54000000	nop; delay slot nop
  742  00001734          	L34_LF2:
  743  00001734  2001ffff	addi	r1,r0,#-1
  744  00001738          	L35_LF2:
  745  00001738  08000004	j	L24_LF2
  746  0000173c  54000000	nop; delay slot nop
  747  00001740          	L33_LF2:
  748  00001740          	L24_LF2:
  749  00001740  8fa20000	lw	r2,0(r29)
  750  00001744  8fa30004	lw	r3,4(r29)
  751  00001748  8fdffff8	lw	r31,-8(r30)
  752  0000174c  001ee820	add	r29,r0,r30
  753  00001750  8fdefffc	lw	r30,-4(r30)
  754  00001754  4be00000	jr	r31
  755  00001758  54000000	nop
  756  0000175c          	.endproc _dstrncmp
  757  0000175c          	.align 2
  758  0000175c          	.proc _dstrlen
  759  0000175c          	.global _dstrlen
  760  0000175c          	_dstrlen:
  761                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  762  0000175c  afbefffc	sw	-4(r29),r30; push fp
  763  00001760  001df020	add	r30,r0,r29; fp = sp
  764  00001764  afbffff8	sw	-8(r29),r31; push ret addr
  765  00001768  2fbd0018	subui	r29,r29,#24; alloc local storage
  766  0000176c  afa20000	sw	0(r29),r2
  767  00001770  20010000	addi	r1,r0,#0
  768  00001774  afc1fff4	sw	-12(r30),r1
  769  00001778          	L37_LF2:
  770  00001778  8fc10000	lw	r1,(r30)
  771  0000177c  20220001	addi	r2,r1,#1
  772  00001780  afc20000	sw	(r30),r2
  773  00001784  90210000	lbu	r1,(r1)
  774  00001788  64220000	snei	r2,r1,#0
  775  0000178c  1440000c	bnez	r2,L39_LF2
  776  00001790  54000000	nop; delay slot nop
  777  00001794  0800001c	j	L38_LF2
  778  00001798  54000000	nop; delay slot nop
  779  0000179c          	L39_LF2:
  780  0000179c  8fc2fff4	lw	r2,-12(r30)
  781  000017a0  20410001	addi	r1,r2,#1
  782  000017a4  00011020	add	r2,r0,r1
  783  000017a8  afc2fff4	sw	-12(r30),r2
  784  000017ac  0bffffc8	j	L37_LF2
  785  000017b0  54000000	nop; delay slot nop
  786  000017b4          	L38_LF2:
  787  000017b4  8fc1fff4	lw	r1,-12(r30)
  788  000017b8  08000004	j	L36_LF2
  789  000017bc  54000000	nop; delay slot nop
  790  000017c0          	L36_LF2:
  791  000017c0  8fa20000	lw	r2,0(r29)
  792  000017c4  8fdffff8	lw	r31,-8(r30)
  793  000017c8  001ee820	add	r29,r0,r30
  794  000017cc  8fdefffc	lw	r30,-4(r30)
  795  000017d0  4be00000	jr	r31
  796  000017d4  54000000	nop
  797  000017d8          	.endproc _dstrlen
  798  000017d8          	.align 2
  799  000017d8          	.proc _dstrstr
  800  000017d8          	.global _dstrstr
  801  000017d8          	_dstrstr:
  802                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  803  000017d8  afbefffc	sw	-4(r29),r30; push fp
  804  000017dc  001df020	add	r30,r0,r29; fp = sp
  805  000017e0  afbffff8	sw	-8(r29),r31; push ret addr
  806  000017e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  807  000017e8  afa20000	sw	0(r29),r2
  808  000017ec  23bdfff8	addi	r29,r29,#-8
  809  000017f0  001d0820	add	r1,r0,r29
  810  000017f4  8fc20004	lw	r2,4(r30)
  811  000017f8  ac220000	sw	(r1),r2
  812  000017fc  0fffff5c	jal	_dstrlen
  813  00001800  54000000	nop; delay slot nop
  814  00001804  23bd0008	addi	r29,r29,#8
  815  00001808  afc1fff4	sw	-12(r30),r1
  816  0000180c          	L41_LF2:
  817  0000180c  8fc10000	lw	r1,(r30)
  818  00001810  90220000	lbu	r2,(r1)
  819  00001814  64410000	snei	r1,r2,#0
  820  00001818  1420000c	bnez	r1,L43_LF2
  821  0000181c  54000000	nop; delay slot nop
  822  00001820  08000060	j	L42_LF2
  823  00001824  54000000	nop; delay slot nop
  824  00001828          	L43_LF2:
  825  00001828  23bdfff0	addi	r29,r29,#-16
  826  0000182c  001d0820	add	r1,r0,r29
  827  00001830  8fc20000	lw	r2,(r30)
  828  00001834  ac220000	sw	(r1),r2
  829  00001838  8fc20004	lw	r2,4(r30)
  830  0000183c  ac220004	sw	4(r1),r2
  831  00001840  8fc2fff4	lw	r2,-12(r30)
  832  00001844  ac220008	sw	8(r1),r2
  833  00001848  0ffffdc0	jal	_dstrncmp
  834  0000184c  54000000	nop; delay slot nop
  835  00001850  23bd0010	addi	r29,r29,#16
  836  00001854  64220000	snei	r2,r1,#0
  837  00001858  14400010	bnez	r2,L44_LF2
  838  0000185c  54000000	nop; delay slot nop
  839  00001860  8fc10000	lw	r1,(r30)
  840  00001864  08000028	j	L40_LF2
  841  00001868  54000000	nop; delay slot nop
  842  0000186c          	L44_LF2:
  843  0000186c  8fc20000	lw	r2,(r30)
  844  00001870  20410001	addi	r1,r2,#1
  845  00001874  00011020	add	r2,r0,r1
  846  00001878  afc20000	sw	(r30),r2
  847  0000187c  0bffff8c	j	L41_LF2
  848  00001880  54000000	nop; delay slot nop
  849  00001884          	L42_LF2:
  850  00001884  20010000	addi	r1,r0,#0
  851  00001888  08000004	j	L40_LF2
  852  0000188c  54000000	nop; delay slot nop
  853  00001890          	L40_LF2:
  854  00001890  8fa20000	lw	r2,0(r29)
  855  00001894  8fdffff8	lw	r31,-8(r30)
  856  00001898  001ee820	add	r29,r0,r30
  857  0000189c  8fdefffc	lw	r30,-4(r30)
  858  000018a0  4be00000	jr	r31
  859  000018a4  54000000	nop
  860  000018a8          	.endproc _dstrstr
  861  000018a8          	.align 2
  862  000018a8          	.proc _dmindex
  863  000018a8          	.global _dmindex
  864  000018a8          	_dmindex:
  865                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  866  000018a8  afbefffc	sw	-4(r29),r30; push fp
  867  000018ac  001df020	add	r30,r0,r29; fp = sp
  868  000018b0  afbffff8	sw	-8(r29),r31; push ret addr
  869  000018b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  870  000018b8  afa20000	sw	0(r29),r2
  871  000018bc  54000000	nop
  872  000018c0          	L46_LF2:
  873  000018c0  8fc10000	lw	r1,(r30)
  874  000018c4  90220000	lbu	r2,(r1)
  875  000018c8  64410000	snei	r1,r2,#0
  876  000018cc  1420000c	bnez	r1,L48_LF2
  877  000018d0  54000000	nop; delay slot nop
  878  000018d4  08000070	j	L47_LF2
  879  000018d8  54000000	nop; delay slot nop
  880  000018dc          	L48_LF2:
  881  000018dc  8fc10004	lw	r1,4(r30)
  882  000018e0  afc1fff4	sw	-12(r30),r1
  883  000018e4          	L49_LF2:
  884  000018e4  8fc1fff4	lw	r1,-12(r30)
  885  000018e8  90220000	lbu	r2,(r1)
  886  000018ec  64410000	snei	r1,r2,#0
  887  000018f0  1420000c	bnez	r1,L52_LF2
  888  000018f4  54000000	nop; delay slot nop
  889  000018f8  08000044	j	L50_LF2
  890  000018fc  54000000	nop; delay slot nop
  891  00001900          	L52_LF2:
  892  00001900  8fc10000	lw	r1,(r30)
  893  00001904  8fc2fff4	lw	r2,-12(r30)
  894  00001908  90210000	lbu	r1,(r1)
  895  0000190c  90420000	lbu	r2,(r2)
  896  00001910  00220828	seq	r1,r1,r2
  897  00001914  10200010	beqz	r1,L51_LF2
  898  00001918  54000000	nop; delay slot nop
  899  0000191c  8fc10000	lw	r1,(r30)
  900  00001920  08000030	j	L45_LF2
  901  00001924  54000000	nop; delay slot nop
  902  00001928          	L53_LF2:
  903  00001928          	L51_LF2:
  904  00001928  8fc2fff4	lw	r2,-12(r30)
  905  0000192c  20410001	addi	r1,r2,#1
  906  00001930  00011020	add	r2,r0,r1
  907  00001934  afc2fff4	sw	-12(r30),r2
  908  00001938  0bffffa8	j	L49_LF2
  909  0000193c  54000000	nop; delay slot nop
  910  00001940          	L50_LF2:
  911  00001940  0bffff7c	j	L46_LF2
  912  00001944  54000000	nop; delay slot nop
  913  00001948          	L47_LF2:
  914  00001948  20010000	addi	r1,r0,#0
  915  0000194c  08000004	j	L45_LF2
  916  00001950  54000000	nop; delay slot nop
  917  00001954          	L45_LF2:
  918  00001954  8fa20000	lw	r2,0(r29)
  919  00001958  8fdffff8	lw	r31,-8(r30)
  920  0000195c  001ee820	add	r29,r0,r30
  921  00001960  8fdefffc	lw	r30,-4(r30)
  922  00001964  4be00000	jr	r31
  923  00001968  54000000	nop
  924  0000196c          	.endproc _dmindex
  925  0000196c          	.align 2
  926  0000196c          	.proc _dindex
  927  0000196c          	.global _dindex
  928  0000196c          	_dindex:
  929                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  930  0000196c  afbefffc	sw	-4(r29),r30; push fp
  931  00001970  001df020	add	r30,r0,r29; fp = sp
  932  00001974  afbffff8	sw	-8(r29),r31; push ret addr
  933  00001978  2fbd0010	subui	r29,r29,#16; alloc local storage
  934  0000197c  afa20000	sw	0(r29),r2
  935  00001980  54000000	nop
  936  00001984          	L55_LF2:
  937  00001984  8fc10000	lw	r1,(r30)
  938  00001988  90220000	lbu	r2,(r1)
  939  0000198c  64410000	snei	r1,r2,#0
  940  00001990  1420000c	bnez	r1,L57_LF2
  941  00001994  54000000	nop; delay slot nop
  942  00001998  08000040	j	L56_LF2
  943  0000199c  54000000	nop; delay slot nop
  944  000019a0          	L57_LF2:
  945  000019a0  8fc10000	lw	r1,(r30)
  946  000019a4  90220000	lbu	r2,(r1)
  947  000019a8  8fc10004	lw	r1,4(r30)
  948  000019ac  00411028	seq	r2,r2,r1
  949  000019b0  10400010	beqz	r2,L58_LF2
  950  000019b4  54000000	nop; delay slot nop
  951  000019b8  8fc10000	lw	r1,(r30)
  952  000019bc  08000028	j	L54_LF2
  953  000019c0  54000000	nop; delay slot nop
  954  000019c4          	L58_LF2:
  955  000019c4  8fc20000	lw	r2,(r30)
  956  000019c8  20410001	addi	r1,r2,#1
  957  000019cc  00011020	add	r2,r0,r1
  958  000019d0  afc20000	sw	(r30),r2
  959  000019d4  0bffffac	j	L55_LF2
  960  000019d8  54000000	nop; delay slot nop
  961  000019dc          	L56_LF2:
  962  000019dc  20010000	addi	r1,r0,#0
  963  000019e0  08000004	j	L54_LF2
  964  000019e4  54000000	nop; delay slot nop
  965  000019e8          	L54_LF2:
  966  000019e8  8fa20000	lw	r2,0(r29)
  967  000019ec  8fdffff8	lw	r31,-8(r30)
  968  000019f0  001ee820	add	r29,r0,r30
  969  000019f4  8fdefffc	lw	r30,-4(r30)
  970  000019f8  4be00000	jr	r31
  971  000019fc  54000000	nop
  972  00001a00          	.endproc _dindex
  973  00001a00          	.align 2
  974  00001a00          	.proc _ditoa
  975  00001a00          	.global _ditoa
  976  00001a00          	_ditoa:
  977                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  978  00001a00  afbefffc	sw	-4(r29),r30; push fp
  979  00001a04  001df020	add	r30,r0,r29; fp = sp
  980  00001a08  afbffff8	sw	-8(r29),r31; push ret addr
  981  00001a0c  2fbd0018	subui	r29,r29,#24; alloc local storage
  982  00001a10  afa20000	sw	0(r29),r2
  983  00001a14  afa30004	sw	4(r29),r3
  984  00001a18  8fc10000	lw	r1,(r30)
  985  00001a1c  68220000	slti	r2,r1,#0
  986  00001a20  1040002c	beqz	r2,L60_LF2
  987  00001a24  54000000	nop; delay slot nop
  988  00001a28  8fc10004	lw	r1,4(r30)
  989  00001a2c  20220001	addi	r2,r1,#1
  990  00001a30  afc20004	sw	4(r30),r2
  991  00001a34  2002002d	addi	r2,r0,(#0x2d)&0xff
  992  00001a38  a0220000	sb	(r1),r2
  993  00001a3c  8fc10000	lw	r1,(r30)
  994  00001a40  00011022	sub	r2,r0,r1
  995  00001a44  afc20000	sw	(r30),r2
  996  00001a48  08000118	j	L61_LF2
  997  00001a4c  54000000	nop; delay slot nop
  998  00001a50          	L60_LF2:
  999  00001a50  8fc10000	lw	r1,(r30)
 1000  00001a54  64220000	snei	r2,r1,#0
 1001  00001a58  14400020	bnez	r2,L62_LF2
 1002  00001a5c  54000000	nop; delay slot nop
 1003  00001a60  8fc10004	lw	r1,4(r30)
 1004  00001a64  20220001	addi	r2,r1,#1
 1005  00001a68  afc20004	sw	4(r30),r2
 1006  00001a6c  20020030	addi	r2,r0,(#0x30)&0xff
 1007  00001a70  a0220000	sb	(r1),r2
 1008  00001a74  080000ec	j	L61_LF2
 1009  00001a78  54000000	nop; delay slot nop
 1010  00001a7c          	L62_LF2:
 1011  00001a7c  20010001	addi	r1,r0,#1
 1012  00001a80  afc1fff4	sw	-12(r30),r1
 1013  00001a84          	L64_LF2:
 1014  00001a84  8fc1fff4	lw	r1,-12(r30)
 1015  00001a88  8fc20000	lw	r2,(r30)
 1016  00001a8c  0022082c	sle	r1,r1,r2
 1017  00001a90  1420000c	bnez	r1,L66_LF2
 1018  00001a94  54000000	nop; delay slot nop
 1019  00001a98  08000024	j	L65_LF2
 1020  00001a9c  54000000	nop; delay slot nop
 1021  00001aa0          	L67_LF2:
 1022  00001aa0          	L66_LF2:
 1023  00001aa0  8fc1fff4	lw	r1,-12(r30)
 1024  00001aa4  00011820	add	r3,r0,r1
 1025  00001aa8  50620002	slli	r2,r3,#0x2
 1026  00001aac  00411020	add	r2,r2,r1
 1027  00001ab0  50410001	slli	r1,r2,#0x1
 1028  00001ab4  afc1fff4	sw	-12(r30),r1
 1029  00001ab8  0bffffc8	j	L64_LF2
 1030  00001abc  54000000	nop; delay slot nop
 1031  00001ac0          	L65_LF2:
 1032  00001ac0  54000000	nop
 1033  00001ac4          	L68_LF2:
 1034  00001ac4  8fc1fff4	lw	r1,-12(r30)
 1035  00001ac8  2002000a	addi	r2,r0,#10
 1036  00001acc  00200035	movi2fp	f0,r1
 1037  00001ad0  00400835	movi2fp	f1,r2
 1038  00001ad4  0401000f	div	f0,f0,f1
 1039  00001ad8  00000834	movfp2i	r1,f0
 1040  00001adc  afc1fff4	sw	-12(r30),r1
 1041  00001ae0  8fc10004	lw	r1,4(r30)
 1042  00001ae4  20220001	addi	r2,r1,#1
 1043  00001ae8  afc20004	sw	4(r30),r2
 1044  00001aec  8fc20000	lw	r2,(r30)
 1045  00001af0  8fc3fff4	lw	r3,-12(r30)
 1046  00001af4  00400035	movi2fp	f0,r2
 1047  00001af8  00600835	movi2fp	f1,r3
 1048  00001afc  0401000f	div	f0,f0,f1
 1049  00001b00  00001034	movfp2i	r2,f0
 1050  00001b04  00021820	add	r3,r0,r2
 1051  00001b08  20620030	addi	r2,r3,#48
 1052  00001b0c  a0220000	sb	(r1),r2
 1053  00001b10  8fc10000	lw	r1,(r30)
 1054  00001b14  8fc3fff4	lw	r3,-12(r30)
 1055  00001b18  00200035	movi2fp	f0,r1
 1056  00001b1c  00600835	movi2fp	f1,r3
 1057  00001b20  0401000f	div	f0,f0,f1
 1058  00001b24  00001034	movfp2i	r2,f0
 1059  00001b28  8fc3fff4	lw	r3,-12(r30)
 1060  00001b2c  00400035	movi2fp	f0,r2
 1061  00001b30  00600835	movi2fp	f1,r3
 1062  00001b34  0401000e	mult	f0,f0,f1
 1063  00001b38  00001034	movfp2i	r2,f0
 1064  00001b3c  00220822	sub	r1,r1,r2
 1065  00001b40  afc10000	sw	(r30),r1
 1066  00001b44          	L70_LF2:
 1067  00001b44  8fc1fff4	lw	r1,-12(r30)
 1068  00001b48  6c220001	sgti	r2,r1,#1
 1069  00001b4c  1440000c	bnez	r2,L71_LF2
 1070  00001b50  54000000	nop; delay slot nop
 1071  00001b54  0800000c	j	L61_LF2
 1072  00001b58  54000000	nop; delay slot nop
 1073  00001b5c          	L71_LF2:
 1074  00001b5c  0bffff64	j	L68_LF2
 1075  00001b60  54000000	nop; delay slot nop
 1076  00001b64          	L69_LF2:
 1077  00001b64          	L63_LF2:
 1078  00001b64          	L61_LF2:
 1079  00001b64  8fc10004	lw	r1,4(r30)
 1080  00001b68  20020000	addi	r2,r0,(#0x0)&0xff
 1081  00001b6c  a0220000	sb	(r1),r2
 1082  00001b70          	L59_LF2:
 1083  00001b70  8fa20000	lw	r2,0(r29)
 1084  00001b74  8fa30004	lw	r3,4(r29)
 1085  00001b78  8fdffff8	lw	r31,-8(r30)
 1086  00001b7c  001ee820	add	r29,r0,r30
 1087  00001b80  8fdefffc	lw	r30,-4(r30)
 1088  00001b84  4be00000	jr	r31
 1089  00001b88  54000000	nop
 1090  00001b8c          	.endproc _ditoa
 1091  00001b8c          	.align 2
 1092  00001b8c          	.proc _dstrtol
 1093  00001b8c          	.global _dstrtol
 1094  00001b8c          	_dstrtol:
 1095                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1096  00001b8c  afbefffc	sw	-4(r29),r30; push fp
 1097  00001b90  001df020	add	r30,r0,r29; fp = sp
 1098  00001b94  afbffff8	sw	-8(r29),r31; push ret addr
 1099  00001b98  2fbd0020	subui	r29,r29,#32; alloc local storage
 1100  00001b9c  afa20000	sw	0(r29),r2
 1101  00001ba0  20010000	addi	r1,r0,#0
 1102  00001ba4  afc1fff4	sw	-12(r30),r1
 1103  00001ba8          	L73_LF2:
 1104  00001ba8  8fc10000	lw	r1,(r30)
 1105  00001bac  90220000	lbu	r2,(r1)
 1106  00001bb0  60410020	seqi	r1,r2,#32
 1107  00001bb4  14200034	bnez	r1,L75_LF2
 1108  00001bb8  54000000	nop; delay slot nop
 1109  00001bbc  8fc10000	lw	r1,(r30)
 1110  00001bc0  90220000	lbu	r2,(r1)
 1111  00001bc4  60410009	seqi	r1,r2,#9
 1112  00001bc8  14200020	bnez	r1,L75_LF2
 1113  00001bcc  54000000	nop; delay slot nop
 1114  00001bd0  8fc10000	lw	r1,(r30)
 1115  00001bd4  90220000	lbu	r2,(r1)
 1116  00001bd8  6041000a	seqi	r1,r2,#10
 1117  00001bdc  1420000c	bnez	r1,L75_LF2
 1118  00001be0  54000000	nop; delay slot nop
 1119  00001be4  0800001c	j	L74_LF2
 1120  00001be8  54000000	nop; delay slot nop
 1121  00001bec          	L75_LF2:
 1122  00001bec  8fc20000	lw	r2,(r30)
 1123  00001bf0  20410001	addi	r1,r2,#1
 1124  00001bf4  00011020	add	r2,r0,r1
 1125  00001bf8  afc20000	sw	(r30),r2
 1126  00001bfc  0bffffa8	j	L73_LF2
 1127  00001c00  54000000	nop; delay slot nop
 1128  00001c04          	L74_LF2:
 1129  00001c04  8fc10004	lw	r1,4(r30)
 1130  00001c08  64220000	snei	r2,r1,#0
 1131  00001c0c  10400010	beqz	r2,L76_LF2
 1132  00001c10  54000000	nop; delay slot nop
 1133  00001c14  8fc10004	lw	r1,4(r30)
 1134  00001c18  8fc20000	lw	r2,(r30)
 1135  00001c1c  ac220000	sw	(r1),r2
 1136  00001c20          	L76_LF2:
 1137  00001c20  8fc10000	lw	r1,(r30)
 1138  00001c24  90220000	lbu	r2,(r1)
 1139  00001c28  64410000	snei	r1,r2,#0
 1140  00001c2c  14200010	bnez	r1,L77_LF2
 1141  00001c30  54000000	nop; delay slot nop
 1142  00001c34  8fc1fff4	lw	r1,-12(r30)
 1143  00001c38  08000294	j	L72_LF2
 1144  00001c3c  54000000	nop; delay slot nop
 1145  00001c40          	L77_LF2:
 1146  00001c40  8fc10000	lw	r1,(r30)
 1147  00001c44  90220000	lbu	r2,(r1)
 1148  00001c48  6041002d	seqi	r1,r2,#45
 1149  00001c4c  10200024	beqz	r1,L78_LF2
 1150  00001c50  54000000	nop; delay slot nop
 1151  00001c54  2001ffff	addi	r1,r0,#-1
 1152  00001c58  afc1ffec	sw	-20(r30),r1
 1153  00001c5c  8fc20000	lw	r2,(r30)
 1154  00001c60  20410001	addi	r1,r2,#1
 1155  00001c64  00011020	add	r2,r0,r1
 1156  00001c68  afc20000	sw	(r30),r2
 1157  00001c6c  0800000c	j	L79_LF2
 1158  00001c70  54000000	nop; delay slot nop
 1159  00001c74          	L78_LF2:
 1160  00001c74  20010001	addi	r1,r0,#1
 1161  00001c78  afc1ffec	sw	-20(r30),r1
 1162  00001c7c          	L79_LF2:
 1163  00001c7c  8fc10008	lw	r1,8(r30)
 1164  00001c80  64220000	snei	r2,r1,#0
 1165  00001c84  14400090	bnez	r2,L80_LF2
 1166  00001c88  54000000	nop; delay slot nop
 1167  00001c8c  8fc10000	lw	r1,(r30)
 1168  00001c90  90220000	lbu	r2,(r1)
 1169  00001c94  60410030	seqi	r1,r2,#48
 1170  00001c98  10200074	beqz	r1,L81_LF2
 1171  00001c9c  54000000	nop; delay slot nop
 1172  00001ca0  8fc20000	lw	r2,(r30)
 1173  00001ca4  20410001	addi	r1,r2,#1
 1174  00001ca8  00011020	add	r2,r0,r1
 1175  00001cac  afc20000	sw	(r30),r2
 1176  00001cb0  8fc10000	lw	r1,(r30)
 1177  00001cb4  90220000	lbu	r2,(r1)
 1178  00001cb8  60410078	seqi	r1,r2,#120
 1179  00001cbc  14200020	bnez	r1,L83_LF2
 1180  00001cc0  54000000	nop; delay slot nop
 1181  00001cc4  8fc10000	lw	r1,(r30)
 1182  00001cc8  90220000	lbu	r2,(r1)
 1183  00001ccc  60410058	seqi	r1,r2,#88
 1184  00001cd0  1420000c	bnez	r1,L83_LF2
 1185  00001cd4  54000000	nop; delay slot nop
 1186  00001cd8  08000024	j	L82_LF2
 1187  00001cdc  54000000	nop; delay slot nop
 1188  00001ce0          	L83_LF2:
 1189  00001ce0  20010010	addi	r1,r0,#16
 1190  00001ce4  afc10008	sw	8(r30),r1
 1191  00001ce8  8fc20000	lw	r2,(r30)
 1192  00001cec  20410001	addi	r1,r2,#1
 1193  00001cf0  00011020	add	r2,r0,r1
 1194  00001cf4  afc20000	sw	(r30),r2
 1195  00001cf8  0800000c	j	L84_LF2
 1196  00001cfc  54000000	nop; delay slot nop
 1197  00001d00          	L82_LF2:
 1198  00001d00  20010008	addi	r1,r0,#8
 1199  00001d04  afc10008	sw	8(r30),r1
 1200  00001d08          	L84_LF2:
 1201  00001d08  0800000c	j	L80_LF2
 1202  00001d0c  54000000	nop; delay slot nop
 1203  00001d10          	L81_LF2:
 1204  00001d10  2001000a	addi	r1,r0,#10
 1205  00001d14  afc10008	sw	8(r30),r1
 1206  00001d18          	L85_LF2:
 1207  00001d18          	L80_LF2:
 1208  00001d18  8fc10008	lw	r1,8(r30)
 1209  00001d1c  70220000	slei	r2,r1,#0
 1210  00001d20  1440001c	bnez	r2,L87_LF2
 1211  00001d24  54000000	nop; delay slot nop
 1212  00001d28  8fc10008	lw	r1,8(r30)
 1213  00001d2c  6c220010	sgti	r2,r1,#16
 1214  00001d30  1440000c	bnez	r2,L87_LF2
 1215  00001d34  54000000	nop; delay slot nop
 1216  00001d38  08000010	j	L86_LF2
 1217  00001d3c  54000000	nop; delay slot nop
 1218  00001d40          	L87_LF2:
 1219  00001d40  8fc1fff4	lw	r1,-12(r30)
 1220  00001d44  08000188	j	L72_LF2
 1221  00001d48  54000000	nop; delay slot nop
 1222  00001d4c          	L86_LF2:
 1223  00001d4c  54000000	nop
 1224  00001d50          	L88_LF2:
 1225  00001d50  8fc10000	lw	r1,(r30)
 1226  00001d54  90220000	lbu	r2,(r1)
 1227  00001d58  6c41002f	sgtui	r1,r2,#47
 1228  00001d5c  10200030	beqz	r1,L91_LF2
 1229  00001d60  54000000	nop; delay slot nop
 1230  00001d64  8fc10000	lw	r1,(r30)
 1231  00001d68  90220000	lbu	r2,(r1)
 1232  00001d6c  70410039	sleui	r1,r2,#57
 1233  00001d70  1020001c	beqz	r1,L91_LF2
 1234  00001d74  54000000	nop; delay slot nop
 1235  00001d78  8fc10000	lw	r1,(r30)
 1236  00001d7c  90220000	lbu	r2,(r1)
 1237  00001d80  2041ffd0	addi	r1,r2,#-48
 1238  00001d84  afc1fff0	sw	-16(r30),r1
 1239  00001d88  0800008c	j	L92_LF2
 1240  00001d8c  54000000	nop; delay slot nop
 1241  00001d90          	L91_LF2:
 1242  00001d90  8fc10000	lw	r1,(r30)
 1243  00001d94  90220000	lbu	r2,(r1)
 1244  00001d98  6c410060	sgtui	r1,r2,#96
 1245  00001d9c  10200030	beqz	r1,L93_LF2
 1246  00001da0  54000000	nop; delay slot nop
 1247  00001da4  8fc10000	lw	r1,(r30)
 1248  00001da8  90220000	lbu	r2,(r1)
 1249  00001dac  7041007a	sleui	r1,r2,#122
 1250  00001db0  1020001c	beqz	r1,L93_LF2
 1251  00001db4  54000000	nop; delay slot nop
 1252  00001db8  8fc10000	lw	r1,(r30)
 1253  00001dbc  90220000	lbu	r2,(r1)
 1254  00001dc0  2041ffa9	addi	r1,r2,#-87
 1255  00001dc4  afc1fff0	sw	-16(r30),r1
 1256  00001dc8  0800004c	j	L92_LF2
 1257  00001dcc  54000000	nop; delay slot nop
 1258  00001dd0          	L93_LF2:
 1259  00001dd0  8fc10000	lw	r1,(r30)
 1260  00001dd4  90220000	lbu	r2,(r1)
 1261  00001dd8  6c410040	sgtui	r1,r2,#64
 1262  00001ddc  10200030	beqz	r1,L95_LF2
 1263  00001de0  54000000	nop; delay slot nop
 1264  00001de4  8fc10000	lw	r1,(r30)
 1265  00001de8  90220000	lbu	r2,(r1)
 1266  00001dec  7041005a	sleui	r1,r2,#90
 1267  00001df0  1020001c	beqz	r1,L95_LF2
 1268  00001df4  54000000	nop; delay slot nop
 1269  00001df8  8fc10000	lw	r1,(r30)
 1270  00001dfc  90220000	lbu	r2,(r1)
 1271  00001e00  2041ffc9	addi	r1,r2,#-55
 1272  00001e04  afc1fff0	sw	-16(r30),r1
 1273  00001e08  0800000c	j	L92_LF2
 1274  00001e0c  54000000	nop; delay slot nop
 1275  00001e10          	L95_LF2:
 1276  00001e10  200103e8	addi	r1,r0,#1000
 1277  00001e14  afc1fff0	sw	-16(r30),r1
 1278  00001e18          	L96_LF2:
 1279  00001e18          	L94_LF2:
 1280  00001e18          	L92_LF2:
 1281  00001e18  8fc1fff0	lw	r1,-16(r30)
 1282  00001e1c  8fc20008	lw	r2,8(r30)
 1283  00001e20  0022082a	slt	r1,r1,r2
 1284  00001e24  10200040	beqz	r1,L90_LF2
 1285  00001e28  54000000	nop; delay slot nop
 1286  00001e2c  8fc1fff4	lw	r1,-12(r30)
 1287  00001e30  8fc20008	lw	r2,8(r30)
 1288  00001e34  00200035	movi2fp	f0,r1
 1289  00001e38  00400835	movi2fp	f1,r2
 1290  00001e3c  0401000e	mult	f0,f0,f1
 1291  00001e40  00000834	movfp2i	r1,f0
 1292  00001e44  afc1fff4	sw	-12(r30),r1
 1293  00001e48  8fc1fff4	lw	r1,-12(r30)
 1294  00001e4c  8fc2fff0	lw	r2,-16(r30)
 1295  00001e50  00220820	add	r1,r1,r2
 1296  00001e54  afc1fff4	sw	-12(r30),r1
 1297  00001e58  8fc20000	lw	r2,(r30)
 1298  00001e5c  20410001	addi	r1,r2,#1
 1299  00001e60  00011020	add	r2,r0,r1
 1300  00001e64  afc20000	sw	(r30),r2
 1301  00001e68          	L97_LF2:
 1302  00001e68          	L90_LF2:
 1303  00001e68  8fc1fff0	lw	r1,-16(r30)
 1304  00001e6c  8fc20008	lw	r2,8(r30)
 1305  00001e70  0022082a	slt	r1,r1,r2
 1306  00001e74  1420000c	bnez	r1,L98_LF2
 1307  00001e78  54000000	nop; delay slot nop
 1308  00001e7c  0800000c	j	L89_LF2
 1309  00001e80  54000000	nop; delay slot nop
 1310  00001e84          	L98_LF2:
 1311  00001e84  0bfffec8	j	L88_LF2
 1312  00001e88  54000000	nop; delay slot nop
 1313  00001e8c          	L89_LF2:
 1314  00001e8c  8fc10004	lw	r1,4(r30)
 1315  00001e90  64220000	snei	r2,r1,#0
 1316  00001e94  10400010	beqz	r2,L99_LF2
 1317  00001e98  54000000	nop; delay slot nop
 1318  00001e9c  8fc10004	lw	r1,4(r30)
 1319  00001ea0  8fc20000	lw	r2,(r30)
 1320  00001ea4  ac220000	sw	(r1),r2
 1321  00001ea8          	L99_LF2:
 1322  00001ea8  8fc1fff4	lw	r1,-12(r30)
 1323  00001eac  8fc2ffec	lw	r2,-20(r30)
 1324  00001eb0  00200035	movi2fp	f0,r1
 1325  00001eb4  00400835	movi2fp	f1,r2
 1326  00001eb8  0401000e	mult	f0,f0,f1
 1327  00001ebc  00000834	movfp2i	r1,f0
 1328  00001ec0  afc1fff4	sw	-12(r30),r1
 1329  00001ec4  8fc1fff4	lw	r1,-12(r30)
 1330  00001ec8  08000004	j	L72_LF2
 1331  00001ecc  54000000	nop; delay slot nop
 1332  00001ed0          	L72_LF2:
 1333  00001ed0  8fa20000	lw	r2,0(r29)
 1334  00001ed4  8fdffff8	lw	r31,-8(r30)
 1335  00001ed8  001ee820	add	r29,r0,r30
 1336  00001edc  8fdefffc	lw	r30,-4(r30)
 1337  00001ee0  4be00000	jr	r31
 1338  00001ee4  54000000	nop
 1339  00001ee8          	.endproc _dstrtol
 1340  00001ee8          	.align 2
 1341  00001ee8          	.proc _bcopy
 1342  00001ee8          	.global _bcopy
 1343  00001ee8          	_bcopy:
 1344                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1345  00001ee8  afbefffc	sw	-4(r29),r30; push fp
 1346  00001eec  001df020	add	r30,r0,r29; fp = sp
 1347  00001ef0  afbffff8	sw	-8(r29),r31; push ret addr
 1348  00001ef4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1349  00001ef8  afa20000	sw	0(r29),r2
 1350  00001efc  afa30004	sw	4(r29),r3
 1351  00001f00  54000000	nop
 1352  00001f04          	L101_LF2:
 1353  00001f04  8fc10008	lw	r1,8(r30)
 1354  00001f08  2022ffff	addi	r2,r1,#-1
 1355  00001f0c  afc20008	sw	8(r30),r2
 1356  00001f10  6c210000	sgti	r1,r1,#0
 1357  00001f14  1420000c	bnez	r1,L103_LF2
 1358  00001f18  54000000	nop; delay slot nop
 1359  00001f1c  0800002c	j	L102_LF2
 1360  00001f20  54000000	nop; delay slot nop
 1361  00001f24          	L103_LF2:
 1362  00001f24  8fc10004	lw	r1,4(r30)
 1363  00001f28  20220001	addi	r2,r1,#1
 1364  00001f2c  afc20004	sw	4(r30),r2
 1365  00001f30  8fc20000	lw	r2,(r30)
 1366  00001f34  20430001	addi	r3,r2,#1
 1367  00001f38  afc30000	sw	(r30),r3
 1368  00001f3c  80420000	lb	r2,(r2)
 1369  00001f40  a0220000	sb	(r1),r2
 1370  00001f44  0bffffbc	j	L101_LF2
 1371  00001f48  54000000	nop; delay slot nop
 1372  00001f4c          	L102_LF2:
 1373  00001f4c          	L100_LF2:
 1374  00001f4c  8fa20000	lw	r2,0(r29)
 1375  00001f50  8fa30004	lw	r3,4(r29)
 1376  00001f54  8fdffff8	lw	r31,-8(r30)
 1377  00001f58  001ee820	add	r29,r0,r30
 1378  00001f5c  8fdefffc	lw	r30,-4(r30)
 1379  00001f60  4be00000	jr	r31
 1380  00001f64  54000000	nop
 1381  00001f68          	.endproc _bcopy
 1382  00001f68          	.align 2
 1383  00001f68          	.proc _bzero
 1384  00001f68          	.global _bzero
 1385  00001f68          	_bzero:
 1386                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1387  00001f68  afbefffc	sw	-4(r29),r30; push fp
 1388  00001f6c  001df020	add	r30,r0,r29; fp = sp
 1389  00001f70  afbffff8	sw	-8(r29),r31; push ret addr
 1390  00001f74  2fbd0010	subui	r29,r29,#16; alloc local storage
 1391  00001f78  afa20000	sw	0(r29),r2
 1392  00001f7c  54000000	nop
 1393  00001f80          	L105_LF2:
 1394  00001f80  8fc10004	lw	r1,4(r30)
 1395  00001f84  2022ffff	addi	r2,r1,#-1
 1396  00001f88  afc20004	sw	4(r30),r2
 1397  00001f8c  6c210000	sgti	r1,r1,#0
 1398  00001f90  1420000c	bnez	r1,L107_LF2
 1399  00001f94  54000000	nop; delay slot nop
 1400  00001f98  08000020	j	L106_LF2
 1401  00001f9c  54000000	nop; delay slot nop
 1402  00001fa0          	L107_LF2:
 1403  00001fa0  8fc10000	lw	r1,(r30)
 1404  00001fa4  20220001	addi	r2,r1,#1
 1405  00001fa8  afc20000	sw	(r30),r2
 1406  00001fac  20020000	addi	r2,r0,(#0x0)&0xff
 1407  00001fb0  a0220000	sb	(r1),r2
 1408  00001fb4  0bffffc8	j	L105_LF2
 1409  00001fb8  54000000	nop; delay slot nop
 1410  00001fbc          	L106_LF2:
 1411  00001fbc          	L104_LF2:
 1412  00001fbc  8fa20000	lw	r2,0(r29)
 1413  00001fc0  8fdffff8	lw	r31,-8(r30)
 1414  00001fc4  001ee820	add	r29,r0,r30
 1415  00001fc8  8fdefffc	lw	r30,-4(r30)
 1416  00001fcc  4be00000	jr	r31
 1417  00001fd0  54000000	nop
 1418  00001fd4          	.endproc _bzero
 1419  00001fd4          	.align 2
 1420  00001fd4          	.proc _min
 1421  00001fd4          	.global _min
 1422  00001fd4          	_min:
 1423                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1424  00001fd4  afbefffc	sw	-4(r29),r30; push fp
 1425  00001fd8  001df020	add	r30,r0,r29; fp = sp
 1426  00001fdc  afbffff8	sw	-8(r29),r31; push ret addr
 1427  00001fe0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1428  00001fe4  afa20000	sw	0(r29),r2
 1429  00001fe8  afa30004	sw	4(r29),r3
 1430  00001fec  8fc10000	lw	r1,(r30)
 1431  00001ff0  8fc20004	lw	r2,4(r30)
 1432  00001ff4  0022182c	sle	r3,r1,r2
 1433  00001ff8  14600008	bnez	r3,L109_LF2
 1434  00001ffc  54000000	nop; delay slot nop
 1435  00002000  8fc10004	lw	r1,4(r30)
 1436  00002004          	L109_LF2:
 1437  00002004  08000004	j	L108_LF2
 1438  00002008  54000000	nop; delay slot nop
 1439  0000200c          	L108_LF2:
 1440  0000200c  8fa20000	lw	r2,0(r29)
 1441  00002010  8fa30004	lw	r3,4(r29)
 1442  00002014  8fdffff8	lw	r31,-8(r30)
 1443  00002018  001ee820	add	r29,r0,r30
 1444  0000201c  8fdefffc	lw	r30,-4(r30)
 1445  00002020  4be00000	jr	r31
 1446  00002024  54000000	nop
 1447  00002028          	.endproc _min
 1448  00002028          	.align 2
 1449  00002028          	.proc _max
 1450  00002028          	.global _max
 1451  00002028          	_max:
 1452                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1453  00002028  afbefffc	sw	-4(r29),r30; push fp
 1454  0000202c  001df020	add	r30,r0,r29; fp = sp
 1455  00002030  afbffff8	sw	-8(r29),r31; push ret addr
 1456  00002034  2fbd0010	subui	r29,r29,#16; alloc local storage
 1457  00002038  afa20000	sw	0(r29),r2
 1458  0000203c  afa30004	sw	4(r29),r3
 1459  00002040  8fc10000	lw	r1,(r30)
 1460  00002044  8fc20004	lw	r2,4(r30)
 1461  00002048  0022182d	sge	r3,r1,r2
 1462  0000204c  14600008	bnez	r3,L111_LF2
 1463  00002050  54000000	nop; delay slot nop
 1464  00002054  8fc10004	lw	r1,4(r30)
 1465  00002058          	L111_LF2:
 1466  00002058  08000004	j	L110_LF2
 1467  0000205c  54000000	nop; delay slot nop
 1468  00002060          	L110_LF2:
 1469  00002060  8fa20000	lw	r2,0(r29)
 1470  00002064  8fa30004	lw	r3,4(r29)
 1471  00002068  8fdffff8	lw	r31,-8(r30)
 1472  0000206c  001ee820	add	r29,r0,r30
 1473  00002070  8fdefffc	lw	r30,-4(r30)
 1474  00002074  4be00000	jr	r31
 1475  00002078  54000000	nop
 1476  0000207c          	.endproc _max
 1477                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1478                      ;;;
 1479                      ;;; Most of the traps are called in files from libtraps.
 1482  0000207c          	.align 2
 1483  0000207c          	.proc _exit
 1484  0000207c          	.global _exit
 1485  0000207c          	_exit:
 1486  0000207c  44000300	trap	#0x300
 1487  00002080  4be00000	jr	r31
 1488  00002084  54000000	nop
 1489  00002088          	.endproc _exit
 1491                      ; for the benefit of gcc.
 1492  00002088          	.proc ___main
 1493  00002088          	.global ___main
 1494  00002088          	___main:
 1495  00002088  4be00000	jr	r31
 1496  0000208c  54000000	nop
 1497  00002090          	.endproc ___main
 1498  00002090          	.text
 1499  00002090          	.global _etext
 1500  00002090          	_etext:
 1501  00002090          	.align 3
 1502  00002090          	.data
 1503  000030ec          	.global _edata
 1504  000030ec          	_edata:
