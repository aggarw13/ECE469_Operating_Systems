 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 241
    4                      ; Text size: 4616
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  534f3400	.ascii "SO4\000"
   83  00003004          	.align 2
   84  00003004          	LC1_LF0:
   85  00003004  55736167	.ascii "Usage: \000"
   85  00003008  653a2000	
   86  0000300c          	.align 2
   87  0000300c          	LC2_LF0:
   88  0000300c  696e6a65	.ascii "injection_sulphate (%d): Could not open the mailbox!\n\000"
   88  00003010  6374696f	
   88  00003014  6e5f7375	
   88  00003018  6c706861	
   88  0000301c  74652028	
   88  00003020  2564293a	
   88  00003024  20436f75	
   88  00003028  6c64206e	
   88  0000302c  6f74206f	
   88  00003030  70656e20	
   88  00003034  74686520	
   88  00003038  6d61696c	
   88  0000303c  626f7821	
   88  00003040  0a00    	
   89  00003042          	.align 2
   90  00003044          	LC3_LF0:
   91  00003044  42616420	.ascii "Bad mailbox message send in sulphate injection : (%d) \000"
   91  00003048  6d61696c	
   91  0000304c  626f7820	
   91  00003050  6d657373	
   91  00003054  61676520	
   91  00003058  73656e64	
   91  0000305c  20696e20	
   91  00003060  73756c70	
   91  00003064  68617465	
   91  00003068  20696e6a	
   91  0000306c  65637469	
   91  00003070  6f6e203a	
   91  00003074  20282564	
   91  00003078  292000  	
   92  0000307b          	.align 2
   93  0000307c          	LC4_LF0:
   94  0000307c  2c206578	.ascii ", exiting...\n\000"
   94  00003080  6974696e	
   94  00003084  672e2e2e	
   94  00003088  0a00    	
   95  0000308a          	.align 2
   96  0000308c          	LC5_LF0:
   97  0000308c  43726561	.ascii "Created a new sulphate molecule\n\000"
   97  00003090  74656420	
   97  00003094  61206e65	
   97  00003098  77207375	
   97  0000309c  6c706861	
   97  000030a0  7465206d	
   97  000030a4  6f6c6563	
   97  000030a8  756c650a	
   97  000030ac  00      	
   98  000030ad          	.align 2
   99  000030b0          	LC6_LF0:
  100  000030b0  42616420	.ascii "Bad semaphore for proc sem increment in sulphate injection : %d \000"
  100  000030b4  73656d61	
  100  000030b8  70686f72	
  100  000030bc  6520666f	
  100  000030c0  72207072	
  100  000030c4  6f632073	
  100  000030c8  656d2069	
  100  000030cc  6e637265	
  100  000030d0  6d656e74	
  100  000030d4  20696e20	
  100  000030d8  73756c70	
  100  000030dc  68617465	
  100  000030e0  20696e6a	
  100  000030e4  65637469	
  100  000030e8  6f6e203a	
  100  000030ec  20256420	
  100  000030f0  00      	
  101  000030f1          	.text
  102  000010d4          	.align 2
  103  000010d4          	.proc _main
  104  000010d4          	.global _main
  105  000010d4          	_main:
  106                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  107  000010d4  afbefffc	sw	-4(r29),r30; push fp
  108  000010d8  001df020	add	r30,r0,r29; fp = sp
  109  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  110  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  111  000010e4  8fc20000	lw	r2,(r30)
  112  000010e8  8fc30004	lw	r3,4(r30)
  113  000010ec  0c001110	jal	___main
  114  000010f0  54000000	nop; not filled.
  115  000010f4  3c010000	lhi	r1,((LC0_LF0)>>16)&0xffff
  116  000010f8  24213000	addui	r1,r1,(LC0_LF0)&0xffff
  117  000010fc  80250000	lb	r5,(r1)
  118  00001100  a3c5fff0	sb	-16(r30),r5
  119  00001104  80250001	lb	r5,1(r1)
  120  00001108  a3c5fff1	sb	-15(r30),r5
  121  0000110c  80250002	lb	r5,2(r1)
  122  00001110  a3c5fff2	sb	-14(r30),r5
  123  00001114  80210003	lb	r1,3(r1)
  124  00001118  a3c1fff3	sb	-13(r30),r1
  125  0000111c  64410005	snei	r1,r2,#5
  126  00001120  10200038	beqz	r1,L14_LF0
  127  00001124  54000000	nop; not filled.
  128  00001128  23bdfff8	addi	r29,r29,#-8
  129  0000112c  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  130  00001130  24a53004	addui	r5,r5,(LC1_LF0)&0xffff
  131  00001134  afa50000	sw	(r29),r5
  132  00001138  0c000214	jal	_Printf
  133  0000113c  54000000	nop; not filled.
  134  00001140  8c650000	lw	r5,(r3)
  135  00001144  afa50000	sw	(r29),r5
  136  00001148  0c000204	jal	_Printf
  137  0000114c  54000000	nop; not filled.
  138  00001150  0c000304	jal	_Exit
  139  00001154  54000000	nop; not filled.
  140  00001158  23bd0008	addi	r29,r29,#8
  141  0000115c          	L14_LF0:
  142  0000115c  23bdfff0	addi	r29,r29,#-16
  143  00001160  8c65000c	lw	r5,12(r3)
  144  00001164  afa50000	sw	(r29),r5
  145  00001168  20050000	addi	r5,r0,#0
  146  0000116c  afa50004	sw	4(r29),r5
  147  00001170  2005000a	addi	r5,r0,#10
  148  00001174  afa50008	sw	8(r29),r5
  149  00001178  0c000b88	jal	_dstrtol
  150  0000117c  54000000	nop; not filled.
  151  00001180  00011020	add	r2,r0,r1
  152  00001184  8c650010	lw	r5,16(r3)
  153  00001188  afa50000	sw	(r29),r5
  154  0000118c  20050000	addi	r5,r0,#0
  155  00001190  afa50004	sw	4(r29),r5
  156  00001194  2005000a	addi	r5,r0,#10
  157  00001198  afa50008	sw	8(r29),r5
  158  0000119c  0c000b64	jal	_dstrtol
  159  000011a0  54000000	nop; not filled.
  160  000011a4  00012020	add	r4,r0,r1
  161  000011a8  afa20000	sw	(r29),r2
  162  000011ac  0c000260	jal	_mbox_open
  163  000011b0  54000000	nop; not filled.
  164  000011b4  23bd0010	addi	r29,r29,#16
  165  000011b8  6021ffff	seqi	r1,r1,#-1
  166  000011bc  10200034	beqz	r1,L15_LF0
  167  000011c0  54000000	nop; not filled.
  168  000011c4  0c000194	jal	_getpid
  169  000011c8  54000000	nop; not filled.
  170  000011cc  23bdfff8	addi	r29,r29,#-8
  171  000011d0  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  172  000011d4  24a5300c	addui	r5,r5,(LC2_LF0)&0xffff
  173  000011d8  afa50000	sw	(r29),r5
  174  000011dc  afa10004	sw	4(r29),r1
  175  000011e0  0c00016c	jal	_Printf
  176  000011e4  54000000	nop; not filled.
  177  000011e8  0c00026c	jal	_Exit
  178  000011ec  54000000	nop; not filled.
  179  000011f0  23bd0008	addi	r29,r29,#8
  180  000011f4          	L15_LF0:
  181  000011f4  23bdfff0	addi	r29,r29,#-16
  182  000011f8  afa20000	sw	(r29),r2
  183  000011fc  20050004	addi	r5,r0,#4
  184  00001200  afa50004	sw	4(r29),r5
  185  00001204  23c1fff0	addi	r1,r30,#-16
  186  00001208  afa10008	sw	8(r29),r1
  187  0000120c  0c000218	jal	_mbox_send
  188  00001210  54000000	nop; not filled.
  189  00001214  23bd0010	addi	r29,r29,#16
  190  00001218  64210001	snei	r1,r1,#1
  191  0000121c  10200058	beqz	r1,L16_LF0
  192  00001220  54000000	nop; not filled.
  193  00001224  0c000134	jal	_getpid
  194  00001228  54000000	nop; not filled.
  195  0000122c  23bdfff8	addi	r29,r29,#-8
  196  00001230  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  197  00001234  24a53044	addui	r5,r5,(LC3_LF0)&0xffff
  198  00001238  afa50000	sw	(r29),r5
  199  0000123c  afa10004	sw	4(r29),r1
  200  00001240  0c00010c	jal	_Printf
  201  00001244  54000000	nop; not filled.
  202  00001248  8c650000	lw	r5,(r3)
  203  0000124c  afa50000	sw	(r29),r5
  204  00001250  0c0000fc	jal	_Printf
  205  00001254  54000000	nop; not filled.
  206  00001258  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  207  0000125c  24a5307c	addui	r5,r5,(LC4_LF0)&0xffff
  208  00001260  afa50000	sw	(r29),r5
  209  00001264  0c0000e8	jal	_Printf
  210  00001268  54000000	nop; not filled.
  211  0000126c  0c0001e8	jal	_Exit
  212  00001270  54000000	nop; not filled.
  213  00001274  23bd0008	addi	r29,r29,#8
  214  00001278          	L16_LF0:
  215  00001278  23bdfff8	addi	r29,r29,#-8
  216  0000127c  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  217  00001280  24a5308c	addui	r5,r5,(LC5_LF0)&0xffff
  218  00001284  afa50000	sw	(r29),r5
  219  00001288  0c0000c4	jal	_Printf
  220  0000128c  54000000	nop; not filled.
  221  00001290  afa40000	sw	(r29),r4
  222  00001294  0c00010c	jal	_sem_signal
  223  00001298  54000000	nop; not filled.
  224  0000129c  23bd0008	addi	r29,r29,#8
  225  000012a0  64210001	snei	r1,r1,#1
  226  000012a4  10200058	beqz	r1,L17_LF0
  227  000012a8  54000000	nop; not filled.
  228  000012ac  0c0000ac	jal	_getpid
  229  000012b0  54000000	nop; not filled.
  230  000012b4  23bdfff8	addi	r29,r29,#-8
  231  000012b8  3c050000	lhi	r5,((LC6_LF0)>>16)&0xffff
  232  000012bc  24a530b0	addui	r5,r5,(LC6_LF0)&0xffff
  233  000012c0  afa50000	sw	(r29),r5
  234  000012c4  afa10004	sw	4(r29),r1
  235  000012c8  0c000084	jal	_Printf
  236  000012cc  54000000	nop; not filled.
  237  000012d0  8c630000	lw	r3,(r3)
  238  000012d4  afa30000	sw	(r29),r3
  239  000012d8  0c000074	jal	_Printf
  240  000012dc  54000000	nop; not filled.
  241  000012e0  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  242  000012e4  24a5307c	addui	r5,r5,(LC4_LF0)&0xffff
  243  000012e8  afa50000	sw	(r29),r5
  244  000012ec  0c000060	jal	_Printf
  245  000012f0  54000000	nop; not filled.
  246  000012f4  0c000160	jal	_Exit
  247  000012f8  54000000	nop; not filled.
  248  000012fc  23bd0008	addi	r29,r29,#8
  249  00001300          	L17_LF0:
  250  00001300  0c000ef0	jal	_exit
  251  00001304  54000000	nop
  252  00001308          	.endproc _main
  253                      ;;;
  254                      ;;; Stub functions for DLX traps.
  255                      ;;;
  256                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  257                      ;;;
  258                      ;;; The traps such as Open and Close
  259                      ;;; (note the capital letters) are for use by user programs.  The traps
  260                      ;;; with names such as open and close (lower case) are for use by the OS.
  261                      ;;;
  264  00001308          	.align 2
  266                      ;;; The following are the traps to be used by user-level programs
  267                      ;;;
  269  00001308          	.align 2
  270  00001308          	.proc _Open
  271  00001308          	.global _Open
  272  00001308          	_Open:
  273                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  274                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  275                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  276  00001308  44000213	trap	#0x213
  277  0000130c  4be00000	jr	r31
  278  00001310  54000000	nop
  279  00001314          	.endproc _Open
  281  00001314          	.proc _Close
  282  00001314          	.global _Close
  283  00001314          	_Close:
  284  00001314  44000214	trap	#0x214
  285  00001318  4be00000	jr	r31
  286  0000131c  54000000	nop
  287  00001320          	.endproc _Close
  289  00001320          	.proc _Read
  290  00001320          	.global _Read
  291  00001320          	_Read:
  292  00001320  44000210	trap	#0x210
  293  00001324  4be00000	jr	r31
  294  00001328  54000000	nop
  295  0000132c          	.endproc _Read
  297  0000132c          	.proc _Write
  298  0000132c          	.global _Write
  299  0000132c          	_Write:
  300  0000132c  44000211	trap	#0x211
  301  00001330  4be00000	jr	r31
  302  00001334  54000000	nop
  303  00001338          	.endproc _Write
  305  00001338          	.proc _Lseek
  306  00001338          	.global _Lseek
  307  00001338          	_Lseek:
  308  00001338  44000212	trap	#0x212
  309  0000133c  4be00000	jr	r31
  310  00001340  54000000	nop
  311  00001344          	.endproc _Lseek
  313  00001344          	.proc _Putchar
  314  00001344          	.global _Putchar
  315  00001344          	_Putchar:
  316  00001344  44000280	trap	#0x280
  317  00001348  4be00000	jr	r31
  318  0000134c  54000000	nop
  319  00001350          	.endproc _Putchar
  321  00001350          	.proc _Printf
  322  00001350          	.global _Printf
  323  00001350          	_Printf:
  324  00001350  44000201	trap	#0x201
  325  00001354  4be00000	jr	r31
  326  00001358  54000000	nop
  327  0000135c          	.endproc _Printf
  329  0000135c          	.proc _getpid
  330  0000135c          	.global _getpid
  331  0000135c          	_getpid:
  332  0000135c  44000431	trap	#0x431
  333  00001360  4be00000	jr	r31
  334  00001364  54000000	nop
  335  00001368          	.endproc _getpid
  337  00001368          	.proc _process_create
  338  00001368          	.global _process_create
  339  00001368          	_process_create:
  340  00001368  44000432	trap	#0x432
  341  0000136c  4be00000	jr	r31
  342  00001370  54000000	nop
  343  00001374          	.endproc _process_create
  345  00001374          	.proc _shmget
  346  00001374          	.global _shmget
  347  00001374          	_shmget:
  348  00001374  44000440	trap	#0x440
  349  00001378  4be00000	jr	r31
  350  0000137c  54000000	nop
  351  00001380          	.endproc _shmget
  353  00001380          	.proc _shmat
  354  00001380          	.global _shmat
  355  00001380          	_shmat:
  356  00001380  44000441	trap	#0x441
  357  00001384  4be00000	jr	r31
  358  00001388  54000000	nop
  359  0000138c          	.endproc _shmat
  361  0000138c          	.proc _sem_create
  362  0000138c          	.global _sem_create
  363  0000138c          	_sem_create:
  364  0000138c  44000450	trap	#0x450
  365  00001390  4be00000	jr	r31
  366  00001394  54000000	nop
  367  00001398          	.endproc _sem_create
  369  00001398          	.proc _sem_wait
  370  00001398          	.global _sem_wait
  371  00001398          	_sem_wait:
  372  00001398  44000451	trap	#0x451
  373  0000139c  4be00000	jr	r31
  374  000013a0  54000000	nop
  375  000013a4          	.endproc _sem_wait
  377  000013a4          	.proc _sem_signal
  378  000013a4          	.global _sem_signal
  379  000013a4          	_sem_signal:
  380  000013a4  44000452	trap	#0x452
  381  000013a8  4be00000	jr	r31
  382  000013ac  54000000	nop
  383  000013b0          	.endproc _sem_signal
  385  000013b0          	.proc _lock_create
  386  000013b0          	.global _lock_create
  387  000013b0          	_lock_create:
  388  000013b0  44000453	trap	#0x453
  389  000013b4  4be00000	jr	r31
  390  000013b8  54000000	nop
  391  000013bc          	.endproc _lock_create
  393  000013bc          	.proc _lock_acquire
  394  000013bc          	.global _lock_acquire
  395  000013bc          	_lock_acquire:
  396  000013bc  44000454	trap	#0x454
  397  000013c0  4be00000	jr	r31
  398  000013c4  54000000	nop
  399  000013c8          	.endproc _lock_acquire
  401  000013c8          	.proc _lock_release
  402  000013c8          	.global _lock_release
  403  000013c8          	_lock_release:
  404  000013c8  44000455	trap	#0x455
  405  000013cc  4be00000	jr	r31
  406  000013d0  54000000	nop
  407  000013d4          	.endproc _lock_release
  409  000013d4          	.proc _cond_create
  410  000013d4          	.global _cond_create
  411  000013d4          	_cond_create:
  412  000013d4  44000456	trap	#0x456
  413  000013d8  4be00000	jr	r31
  414  000013dc  54000000	nop
  415  000013e0          	.endproc _cond_create
  417  000013e0          	.proc _cond_wait
  418  000013e0          	.global _cond_wait
  419  000013e0          	_cond_wait:
  420  000013e0  44000457	trap	#0x457
  421  000013e4  4be00000	jr	r31
  422  000013e8  54000000	nop
  423  000013ec          	.endproc _cond_wait
  425  000013ec          	.proc _cond_signal
  426  000013ec          	.global _cond_signal
  427  000013ec          	_cond_signal:
  428  000013ec  44000458	trap	#0x458
  429  000013f0  4be00000	jr	r31
  430  000013f4  54000000	nop
  431  000013f8          	.endproc _cond_signal
  433  000013f8          	.proc _cond_broadcast
  434  000013f8          	.global _cond_broadcast
  435  000013f8          	_cond_broadcast:
  436  000013f8  44000459	trap	#0x459
  437  000013fc  4be00000	jr	r31
  438  00001400  54000000	nop
  439  00001404          	.endproc _cond_broadcast
  441  00001404          	.proc _mbox_create
  442  00001404          	.global _mbox_create
  443  00001404          	_mbox_create:
  444  00001404  44000460	trap	#0x460
  445  00001408  4be00000	jr	r31
  446  0000140c  54000000	nop
  447  00001410          	.endproc _mbox_create
  449  00001410          	.proc _mbox_open
  450  00001410          	.global _mbox_open
  451  00001410          	_mbox_open:
  452  00001410  44000461	trap	#0x461
  453  00001414  4be00000	jr	r31
  454  00001418  54000000	nop
  455  0000141c          	.endproc _mbox_open
  457  0000141c          	.proc _mbox_close
  458  0000141c          	.global _mbox_close
  459  0000141c          	_mbox_close:
  460  0000141c  44000462	trap	#0x462
  461  00001420  4be00000	jr	r31
  462  00001424  54000000	nop
  463  00001428          	.endproc _mbox_close
  465  00001428          	.proc _mbox_send
  466  00001428          	.global _mbox_send
  467  00001428          	_mbox_send:
  468  00001428  44000463	trap	#0x463
  469  0000142c  4be00000	jr	r31
  470  00001430  54000000	nop
  471  00001434          	.endproc _mbox_send
  473  00001434          	.proc _mbox_recv
  474  00001434          	.global _mbox_recv
  475  00001434          	_mbox_recv:
  476  00001434  44000464	trap	#0x464
  477  00001438  4be00000	jr	r31
  478  0000143c  54000000	nop
  479  00001440          	.endproc _mbox_recv
  481  00001440          	.proc _sleep
  482  00001440          	.global _sleep
  483  00001440          	_sleep:
  484  00001440  44000465	trap	#0x465
  485  00001444  4be00000	jr	r31
  486  00001448  54000000	nop
  487  0000144c          	.endproc _sleep
  489  0000144c          	.proc _yield
  490  0000144c          	.global _yield
  491  0000144c          	_yield:
  492  0000144c  44000466	trap	#0x466
  493  00001450  4be00000	jr	r31
  494  00001454  54000000	nop
  495  00001458          	.endproc _yield
  498  00001458          	.proc _Exit
  499  00001458          	.global _Exit
  500  00001458          	_Exit:
  501  00001458  44000500	trap	#0x500
  502  0000145c  4be00000	jr	r31
  503  00001460  54000000	nop
  504  00001464          	.endproc _Exit
  505                      ; Compiled by GCC
  507  00001464          	.align 2
  508  00001464          	.proc _isspace
  509  00001464          	.global _isspace
  510  00001464          	_isspace:
  511                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  512  00001464  afbefffc	sw	-4(r29),r30; push fp
  513  00001468  001df020	add	r30,r0,r29; fp = sp
  514  0000146c  afbffff8	sw	-8(r29),r31; push ret addr
  515  00001470  2fbd0018	subui	r29,r29,#24; alloc local storage
  516  00001474  afa20000	sw	0(r29),r2
  517  00001478  afa30004	sw	4(r29),r3
  518  0000147c  afa40008	sw	8(r29),r4
  519  00001480  83c20003	lb	r2,3(r30)
  520  00001484  20010000	addi	r1,r0,#0
  521  00001488  304300ff	andi	r3,r2,#0x00ff
  522  0000148c  60640020	seqi	r4,r3,#32
  523  00001490  1480002c	bnez	r4,L3_LF2
  524  00001494  54000000	nop; delay slot nop
  525  00001498  304300ff	andi	r3,r2,#0x00ff
  526  0000149c  60640009	seqi	r4,r3,#9
  527  000014a0  1480001c	bnez	r4,L3_LF2
  528  000014a4  54000000	nop; delay slot nop
  529  000014a8  304300ff	andi	r3,r2,#0x00ff
  530  000014ac  6064000a	seqi	r4,r3,#10
  531  000014b0  1480000c	bnez	r4,L3_LF2
  532  000014b4  54000000	nop; delay slot nop
  533  000014b8  08000008	j	L2_LF2
  534  000014bc  54000000	nop; delay slot nop
  535  000014c0          	L3_LF2:
  536  000014c0  20010001	addi	r1,r0,#1
  537  000014c4          	L2_LF2:
  538  000014c4  08000004	j	L1_LF2
  539  000014c8  54000000	nop; delay slot nop
  540  000014cc          	L1_LF2:
  541  000014cc  8fa20000	lw	r2,0(r29)
  542  000014d0  8fa30004	lw	r3,4(r29)
  543  000014d4  8fa40008	lw	r4,8(r29)
  544  000014d8  8fdffff8	lw	r31,-8(r30)
  545  000014dc  001ee820	add	r29,r0,r30
  546  000014e0  8fdefffc	lw	r30,-4(r30)
  547  000014e4  4be00000	jr	r31
  548  000014e8  54000000	nop
  549  000014ec          	.endproc _isspace
  550  000014ec          	.align 2
  551  000014ec          	.proc _isxdigit
  552  000014ec          	.global _isxdigit
  553  000014ec          	_isxdigit:
  554                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  555  000014ec  afbefffc	sw	-4(r29),r30; push fp
  556  000014f0  001df020	add	r30,r0,r29; fp = sp
  557  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  558  000014f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  559  000014fc  afa20000	sw	0(r29),r2
  560  00001500  afa30004	sw	4(r29),r3
  561  00001504  afa40008	sw	8(r29),r4
  562  00001508  83c20003	lb	r2,3(r30)
  563  0000150c  20010000	addi	r1,r0,#0
  564  00001510  304300ff	andi	r3,r2,#0x00ff
  565  00001514  6c64002f	sgtui	r4,r3,#47
  566  00001518  1080001c	beqz	r4,L7_LF2
  567  0000151c  54000000	nop; delay slot nop
  568  00001520  304300ff	andi	r3,r2,#0x00ff
  569  00001524  70640039	sleui	r4,r3,#57
  570  00001528  1480005c	bnez	r4,L6_LF2
  571  0000152c  54000000	nop; delay slot nop
  572  00001530  08000004	j	L7_LF2
  573  00001534  54000000	nop; delay slot nop
  574  00001538          	L7_LF2:
  575  00001538  304300ff	andi	r3,r2,#0x00ff
  576  0000153c  6c640060	sgtui	r4,r3,#96
  577  00001540  1080001c	beqz	r4,L8_LF2
  578  00001544  54000000	nop; delay slot nop
  579  00001548  304300ff	andi	r3,r2,#0x00ff
  580  0000154c  70640066	sleui	r4,r3,#102
  581  00001550  14800034	bnez	r4,L6_LF2
  582  00001554  54000000	nop; delay slot nop
  583  00001558  08000004	j	L8_LF2
  584  0000155c  54000000	nop; delay slot nop
  585  00001560          	L8_LF2:
  586  00001560  304300ff	andi	r3,r2,#0x00ff
  587  00001564  6c640040	sgtui	r4,r3,#64
  588  00001568  10800020	beqz	r4,L5_LF2
  589  0000156c  54000000	nop; delay slot nop
  590  00001570  304300ff	andi	r3,r2,#0x00ff
  591  00001574  70640041	sleui	r4,r3,#65
  592  00001578  1480000c	bnez	r4,L6_LF2
  593  0000157c  54000000	nop; delay slot nop
  594  00001580  08000008	j	L5_LF2
  595  00001584  54000000	nop; delay slot nop
  596  00001588          	L6_LF2:
  597  00001588  20010001	addi	r1,r0,#1
  598  0000158c          	L5_LF2:
  599  0000158c  08000004	j	L4_LF2
  600  00001590  54000000	nop; delay slot nop
  601  00001594          	L4_LF2:
  602  00001594  8fa20000	lw	r2,0(r29)
  603  00001598  8fa30004	lw	r3,4(r29)
  604  0000159c  8fa40008	lw	r4,8(r29)
  605  000015a0  8fdffff8	lw	r31,-8(r30)
  606  000015a4  001ee820	add	r29,r0,r30
  607  000015a8  8fdefffc	lw	r30,-4(r30)
  608  000015ac  4be00000	jr	r31
  609  000015b0  54000000	nop
  610  000015b4          	.endproc _isxdigit
  611  000015b4          	.align 2
  612  000015b4          	.proc _dstrcpy
  613  000015b4          	.global _dstrcpy
  614  000015b4          	_dstrcpy:
  615                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  616  000015b4  afbefffc	sw	-4(r29),r30; push fp
  617  000015b8  001df020	add	r30,r0,r29; fp = sp
  618  000015bc  afbffff8	sw	-8(r29),r31; push ret addr
  619  000015c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  620  000015c4  afa20000	sw	0(r29),r2
  621  000015c8  afa30004	sw	4(r29),r3
  622  000015cc  8fc10000	lw	r1,(r30)
  623  000015d0  afc1fff4	sw	-12(r30),r1
  624  000015d4          	L10_LF2:
  625  000015d4  8fc10000	lw	r1,(r30)
  626  000015d8  20220001	addi	r2,r1,#1
  627  000015dc  afc20000	sw	(r30),r2
  628  000015e0  8fc20004	lw	r2,4(r30)
  629  000015e4  20430001	addi	r3,r2,#1
  630  000015e8  afc30004	sw	4(r30),r3
  631  000015ec  80420000	lb	r2,(r2)
  632  000015f0  a0220000	sb	(r1),r2
  633  000015f4  a3c2fff3	sb	-13(r30),r2
  634  000015f8          	L12_LF2:
  635  000015f8  93c1fff3	lbu	r1,-13(r30)
  636  000015fc  64220000	snei	r2,r1,#0
  637  00001600  1440000c	bnez	r2,L13_LF2
  638  00001604  54000000	nop; delay slot nop
  639  00001608  0800000c	j	L11_LF2
  640  0000160c  54000000	nop; delay slot nop
  641  00001610          	L13_LF2:
  642  00001610  0bffffc0	j	L10_LF2
  643  00001614  54000000	nop; delay slot nop
  644  00001618          	L11_LF2:
  645  00001618  8fc1fff4	lw	r1,-12(r30)
  646  0000161c  08000004	j	L9_LF2
  647  00001620  54000000	nop; delay slot nop
  648  00001624          	L9_LF2:
  649  00001624  8fa20000	lw	r2,0(r29)
  650  00001628  8fa30004	lw	r3,4(r29)
  651  0000162c  8fdffff8	lw	r31,-8(r30)
  652  00001630  001ee820	add	r29,r0,r30
  653  00001634  8fdefffc	lw	r30,-4(r30)
  654  00001638  4be00000	jr	r31
  655  0000163c  54000000	nop
  656  00001640          	.endproc _dstrcpy
  657  00001640          	.align 2
  658  00001640          	.proc _dstrncpy
  659  00001640          	.global _dstrncpy
  660  00001640          	_dstrncpy:
  661                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  662  00001640  afbefffc	sw	-4(r29),r30; push fp
  663  00001644  001df020	add	r30,r0,r29; fp = sp
  664  00001648  afbffff8	sw	-8(r29),r31; push ret addr
  665  0000164c  2fbd0018	subui	r29,r29,#24; alloc local storage
  666  00001650  afa20000	sw	0(r29),r2
  667  00001654  afa30004	sw	4(r29),r3
  668  00001658  8fc10000	lw	r1,(r30)
  669  0000165c  afc1fff4	sw	-12(r30),r1
  670  00001660          	L15_LF2:
  671  00001660  8fc10008	lw	r1,8(r30)
  672  00001664  2022ffff	addi	r2,r1,#-1
  673  00001668  afc20008	sw	8(r30),r2
  674  0000166c  70210000	slei	r1,r1,#0
  675  00001670  1020000c	beqz	r1,L18_LF2
  676  00001674  54000000	nop; delay slot nop
  677  00001678  08000048	j	L16_LF2
  678  0000167c  54000000	nop; delay slot nop
  679  00001680          	L18_LF2:
  680  00001680  8fc10000	lw	r1,(r30)
  681  00001684  20220001	addi	r2,r1,#1
  682  00001688  afc20000	sw	(r30),r2
  683  0000168c  8fc20004	lw	r2,4(r30)
  684  00001690  20430001	addi	r3,r2,#1
  685  00001694  afc30004	sw	4(r30),r3
  686  00001698  80420000	lb	r2,(r2)
  687  0000169c  a0220000	sb	(r1),r2
  688  000016a0  a3c2fff3	sb	-13(r30),r2
  689  000016a4          	L17_LF2:
  690  000016a4  93c1fff3	lbu	r1,-13(r30)
  691  000016a8  64220000	snei	r2,r1,#0
  692  000016ac  1440000c	bnez	r2,L19_LF2
  693  000016b0  54000000	nop; delay slot nop
  694  000016b4  0800000c	j	L16_LF2
  695  000016b8  54000000	nop; delay slot nop
  696  000016bc          	L19_LF2:
  697  000016bc  0bffffa0	j	L15_LF2
  698  000016c0  54000000	nop; delay slot nop
  699  000016c4          	L16_LF2:
  700  000016c4  8fc1fff4	lw	r1,-12(r30)
  701  000016c8  08000004	j	L14_LF2
  702  000016cc  54000000	nop; delay slot nop
  703  000016d0          	L14_LF2:
  704  000016d0  8fa20000	lw	r2,0(r29)
  705  000016d4  8fa30004	lw	r3,4(r29)
  706  000016d8  8fdffff8	lw	r31,-8(r30)
  707  000016dc  001ee820	add	r29,r0,r30
  708  000016e0  8fdefffc	lw	r30,-4(r30)
  709  000016e4  4be00000	jr	r31
  710  000016e8  54000000	nop
  711  000016ec          	.endproc _dstrncpy
  712  000016ec          	.align 2
  713  000016ec          	.proc _dstrcat
  714  000016ec          	.global _dstrcat
  715  000016ec          	_dstrcat:
  716                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  717  000016ec  afbefffc	sw	-4(r29),r30; push fp
  718  000016f0  001df020	add	r30,r0,r29; fp = sp
  719  000016f4  afbffff8	sw	-8(r29),r31; push ret addr
  720  000016f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  721  000016fc  afa20000	sw	0(r29),r2
  722  00001700  8fc10000	lw	r1,(r30)
  723  00001704  afc1fff4	sw	-12(r30),r1
  724  00001708          	L21_LF2:
  725  00001708  8fc10000	lw	r1,(r30)
  726  0000170c  90220000	lbu	r2,(r1)
  727  00001710  64410000	snei	r1,r2,#0
  728  00001714  1420000c	bnez	r1,L23_LF2
  729  00001718  54000000	nop; delay slot nop
  730  0000171c  0800001c	j	L22_LF2
  731  00001720  54000000	nop; delay slot nop
  732  00001724          	L23_LF2:
  733  00001724  8fc20000	lw	r2,(r30)
  734  00001728  20410001	addi	r1,r2,#1
  735  0000172c  00011020	add	r2,r0,r1
  736  00001730  afc20000	sw	(r30),r2
  737  00001734  0bffffd0	j	L21_LF2
  738  00001738  54000000	nop; delay slot nop
  739  0000173c          	L22_LF2:
  740  0000173c  23bdfff8	addi	r29,r29,#-8
  741  00001740  001d0820	add	r1,r0,r29
  742  00001744  8fc20000	lw	r2,(r30)
  743  00001748  ac220000	sw	(r1),r2
  744  0000174c  8fc20004	lw	r2,4(r30)
  745  00001750  ac220004	sw	4(r1),r2
  746  00001754  0ffffe5c	jal	_dstrcpy
  747  00001758  54000000	nop; delay slot nop
  748  0000175c  23bd0008	addi	r29,r29,#8
  749  00001760  8fc1fff4	lw	r1,-12(r30)
  750  00001764  08000004	j	L20_LF2
  751  00001768  54000000	nop; delay slot nop
  752  0000176c          	L20_LF2:
  753  0000176c  8fa20000	lw	r2,0(r29)
  754  00001770  8fdffff8	lw	r31,-8(r30)
  755  00001774  001ee820	add	r29,r0,r30
  756  00001778  8fdefffc	lw	r30,-4(r30)
  757  0000177c  4be00000	jr	r31
  758  00001780  54000000	nop
  759  00001784          	.endproc _dstrcat
  760  00001784          	.align 2
  761  00001784          	.proc _dstrncmp
  762  00001784          	.global _dstrncmp
  763  00001784          	_dstrncmp:
  764                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  765  00001784  afbefffc	sw	-4(r29),r30; push fp
  766  00001788  001df020	add	r30,r0,r29; fp = sp
  767  0000178c  afbffff8	sw	-8(r29),r31; push ret addr
  768  00001790  2fbd0018	subui	r29,r29,#24; alloc local storage
  769  00001794  afa20000	sw	0(r29),r2
  770  00001798  afa30004	sw	4(r29),r3
  771  0000179c  54000000	nop
  772  000017a0  20010000	addi	r1,r0,#0
  773  000017a4  afc1fff4	sw	-12(r30),r1
  774  000017a8          	L25_LF2:
  775  000017a8  8fc1fff4	lw	r1,-12(r30)
  776  000017ac  8fc20008	lw	r2,8(r30)
  777  000017b0  0022082a	slt	r1,r1,r2
  778  000017b4  1420000c	bnez	r1,L28_LF2
  779  000017b8  54000000	nop; delay slot nop
  780  000017bc  08000088	j	L26_LF2
  781  000017c0  54000000	nop; delay slot nop
  782  000017c4          	L28_LF2:
  783  000017c4  8fc10004	lw	r1,4(r30)
  784  000017c8  90220000	lbu	r2,(r1)
  785  000017cc  64410000	snei	r1,r2,#0
  786  000017d0  14200018	bnez	r1,L29_LF2
  787  000017d4  54000000	nop; delay slot nop
  788  000017d8  20010000	addi	r1,r0,#0
  789  000017dc  080000d8	j	L24_LF2
  790  000017e0  54000000	nop; delay slot nop
  791  000017e4  08000028	j	L30_LF2
  792  000017e8  54000000	nop; delay slot nop
  793  000017ec          	L29_LF2:
  794  000017ec  8fc10000	lw	r1,(r30)
  795  000017f0  8fc20004	lw	r2,4(r30)
  796  000017f4  90210000	lbu	r1,(r1)
  797  000017f8  90420000	lbu	r2,(r2)
  798  000017fc  00220829	sne	r1,r1,r2
  799  00001800  1020000c	beqz	r1,L30_LF2
  800  00001804  54000000	nop; delay slot nop
  801  00001808  0800003c	j	L26_LF2
  802  0000180c  54000000	nop; delay slot nop
  803  00001810          	L31_LF2:
  804  00001810          	L30_LF2:
  805  00001810  8fc20000	lw	r2,(r30)
  806  00001814  20410001	addi	r1,r2,#1
  807  00001818  00011020	add	r2,r0,r1
  808  0000181c  afc20000	sw	(r30),r2
  809  00001820  8fc20004	lw	r2,4(r30)
  810  00001824  20410001	addi	r1,r2,#1
  811  00001828  00011020	add	r2,r0,r1
  812  0000182c  afc20004	sw	4(r30),r2
  813  00001830          	L27_LF2:
  814  00001830  8fc2fff4	lw	r2,-12(r30)
  815  00001834  20410001	addi	r1,r2,#1
  816  00001838  00011020	add	r2,r0,r1
  817  0000183c  afc2fff4	sw	-12(r30),r2
  818  00001840  0bffff64	j	L25_LF2
  819  00001844  54000000	nop; delay slot nop
  820  00001848          	L26_LF2:
  821  00001848  8fc1fff4	lw	r1,-12(r30)
  822  0000184c  8fc20008	lw	r2,8(r30)
  823  00001850  00220828	seq	r1,r1,r2
  824  00001854  10200018	beqz	r1,L32_LF2
  825  00001858  54000000	nop; delay slot nop
  826  0000185c  20010000	addi	r1,r0,#0
  827  00001860  08000054	j	L24_LF2
  828  00001864  54000000	nop; delay slot nop
  829  00001868  0800004c	j	L33_LF2
  830  0000186c  54000000	nop; delay slot nop
  831  00001870          	L32_LF2:
  832  00001870  8fc20000	lw	r2,(r30)
  833  00001874  90410000	lbu	r1,(r2)
  834  00001878  8fc20004	lw	r2,4(r30)
  835  0000187c  90430000	lbu	r3,(r2)
  836  00001880  00230822	sub	r1,r1,r3
  837  00001884  74220000	sgei	r2,r1,#0
  838  00001888  10400020	beqz	r2,L34_LF2
  839  0000188c  54000000	nop; delay slot nop
  840  00001890  8fc10000	lw	r1,(r30)
  841  00001894  8fc20004	lw	r2,4(r30)
  842  00001898  90210000	lbu	r1,(r1)
  843  0000189c  90420000	lbu	r2,(r2)
  844  000018a0  00220829	sne	r1,r1,r2
  845  000018a4  08000008	j	L35_LF2
  846  000018a8  54000000	nop; delay slot nop
  847  000018ac          	L34_LF2:
  848  000018ac  2001ffff	addi	r1,r0,#-1
  849  000018b0          	L35_LF2:
  850  000018b0  08000004	j	L24_LF2
  851  000018b4  54000000	nop; delay slot nop
  852  000018b8          	L33_LF2:
  853  000018b8          	L24_LF2:
  854  000018b8  8fa20000	lw	r2,0(r29)
  855  000018bc  8fa30004	lw	r3,4(r29)
  856  000018c0  8fdffff8	lw	r31,-8(r30)
  857  000018c4  001ee820	add	r29,r0,r30
  858  000018c8  8fdefffc	lw	r30,-4(r30)
  859  000018cc  4be00000	jr	r31
  860  000018d0  54000000	nop
  861  000018d4          	.endproc _dstrncmp
  862  000018d4          	.align 2
  863  000018d4          	.proc _dstrlen
  864  000018d4          	.global _dstrlen
  865  000018d4          	_dstrlen:
  866                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  867  000018d4  afbefffc	sw	-4(r29),r30; push fp
  868  000018d8  001df020	add	r30,r0,r29; fp = sp
  869  000018dc  afbffff8	sw	-8(r29),r31; push ret addr
  870  000018e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  871  000018e4  afa20000	sw	0(r29),r2
  872  000018e8  20010000	addi	r1,r0,#0
  873  000018ec  afc1fff4	sw	-12(r30),r1
  874  000018f0          	L37_LF2:
  875  000018f0  8fc10000	lw	r1,(r30)
  876  000018f4  20220001	addi	r2,r1,#1
  877  000018f8  afc20000	sw	(r30),r2
  878  000018fc  90210000	lbu	r1,(r1)
  879  00001900  64220000	snei	r2,r1,#0
  880  00001904  1440000c	bnez	r2,L39_LF2
  881  00001908  54000000	nop; delay slot nop
  882  0000190c  0800001c	j	L38_LF2
  883  00001910  54000000	nop; delay slot nop
  884  00001914          	L39_LF2:
  885  00001914  8fc2fff4	lw	r2,-12(r30)
  886  00001918  20410001	addi	r1,r2,#1
  887  0000191c  00011020	add	r2,r0,r1
  888  00001920  afc2fff4	sw	-12(r30),r2
  889  00001924  0bffffc8	j	L37_LF2
  890  00001928  54000000	nop; delay slot nop
  891  0000192c          	L38_LF2:
  892  0000192c  8fc1fff4	lw	r1,-12(r30)
  893  00001930  08000004	j	L36_LF2
  894  00001934  54000000	nop; delay slot nop
  895  00001938          	L36_LF2:
  896  00001938  8fa20000	lw	r2,0(r29)
  897  0000193c  8fdffff8	lw	r31,-8(r30)
  898  00001940  001ee820	add	r29,r0,r30
  899  00001944  8fdefffc	lw	r30,-4(r30)
  900  00001948  4be00000	jr	r31
  901  0000194c  54000000	nop
  902  00001950          	.endproc _dstrlen
  903  00001950          	.align 2
  904  00001950          	.proc _dstrstr
  905  00001950          	.global _dstrstr
  906  00001950          	_dstrstr:
  907                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  908  00001950  afbefffc	sw	-4(r29),r30; push fp
  909  00001954  001df020	add	r30,r0,r29; fp = sp
  910  00001958  afbffff8	sw	-8(r29),r31; push ret addr
  911  0000195c  2fbd0018	subui	r29,r29,#24; alloc local storage
  912  00001960  afa20000	sw	0(r29),r2
  913  00001964  23bdfff8	addi	r29,r29,#-8
  914  00001968  001d0820	add	r1,r0,r29
  915  0000196c  8fc20004	lw	r2,4(r30)
  916  00001970  ac220000	sw	(r1),r2
  917  00001974  0fffff5c	jal	_dstrlen
  918  00001978  54000000	nop; delay slot nop
  919  0000197c  23bd0008	addi	r29,r29,#8
  920  00001980  afc1fff4	sw	-12(r30),r1
  921  00001984          	L41_LF2:
  922  00001984  8fc10000	lw	r1,(r30)
  923  00001988  90220000	lbu	r2,(r1)
  924  0000198c  64410000	snei	r1,r2,#0
  925  00001990  1420000c	bnez	r1,L43_LF2
  926  00001994  54000000	nop; delay slot nop
  927  00001998  08000060	j	L42_LF2
  928  0000199c  54000000	nop; delay slot nop
  929  000019a0          	L43_LF2:
  930  000019a0  23bdfff0	addi	r29,r29,#-16
  931  000019a4  001d0820	add	r1,r0,r29
  932  000019a8  8fc20000	lw	r2,(r30)
  933  000019ac  ac220000	sw	(r1),r2
  934  000019b0  8fc20004	lw	r2,4(r30)
  935  000019b4  ac220004	sw	4(r1),r2
  936  000019b8  8fc2fff4	lw	r2,-12(r30)
  937  000019bc  ac220008	sw	8(r1),r2
  938  000019c0  0ffffdc0	jal	_dstrncmp
  939  000019c4  54000000	nop; delay slot nop
  940  000019c8  23bd0010	addi	r29,r29,#16
  941  000019cc  64220000	snei	r2,r1,#0
  942  000019d0  14400010	bnez	r2,L44_LF2
  943  000019d4  54000000	nop; delay slot nop
  944  000019d8  8fc10000	lw	r1,(r30)
  945  000019dc  08000028	j	L40_LF2
  946  000019e0  54000000	nop; delay slot nop
  947  000019e4          	L44_LF2:
  948  000019e4  8fc20000	lw	r2,(r30)
  949  000019e8  20410001	addi	r1,r2,#1
  950  000019ec  00011020	add	r2,r0,r1
  951  000019f0  afc20000	sw	(r30),r2
  952  000019f4  0bffff8c	j	L41_LF2
  953  000019f8  54000000	nop; delay slot nop
  954  000019fc          	L42_LF2:
  955  000019fc  20010000	addi	r1,r0,#0
  956  00001a00  08000004	j	L40_LF2
  957  00001a04  54000000	nop; delay slot nop
  958  00001a08          	L40_LF2:
  959  00001a08  8fa20000	lw	r2,0(r29)
  960  00001a0c  8fdffff8	lw	r31,-8(r30)
  961  00001a10  001ee820	add	r29,r0,r30
  962  00001a14  8fdefffc	lw	r30,-4(r30)
  963  00001a18  4be00000	jr	r31
  964  00001a1c  54000000	nop
  965  00001a20          	.endproc _dstrstr
  966  00001a20          	.align 2
  967  00001a20          	.proc _dmindex
  968  00001a20          	.global _dmindex
  969  00001a20          	_dmindex:
  970                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  971  00001a20  afbefffc	sw	-4(r29),r30; push fp
  972  00001a24  001df020	add	r30,r0,r29; fp = sp
  973  00001a28  afbffff8	sw	-8(r29),r31; push ret addr
  974  00001a2c  2fbd0018	subui	r29,r29,#24; alloc local storage
  975  00001a30  afa20000	sw	0(r29),r2
  976  00001a34  54000000	nop
  977  00001a38          	L46_LF2:
  978  00001a38  8fc10000	lw	r1,(r30)
  979  00001a3c  90220000	lbu	r2,(r1)
  980  00001a40  64410000	snei	r1,r2,#0
  981  00001a44  1420000c	bnez	r1,L48_LF2
  982  00001a48  54000000	nop; delay slot nop
  983  00001a4c  08000070	j	L47_LF2
  984  00001a50  54000000	nop; delay slot nop
  985  00001a54          	L48_LF2:
  986  00001a54  8fc10004	lw	r1,4(r30)
  987  00001a58  afc1fff4	sw	-12(r30),r1
  988  00001a5c          	L49_LF2:
  989  00001a5c  8fc1fff4	lw	r1,-12(r30)
  990  00001a60  90220000	lbu	r2,(r1)
  991  00001a64  64410000	snei	r1,r2,#0
  992  00001a68  1420000c	bnez	r1,L52_LF2
  993  00001a6c  54000000	nop; delay slot nop
  994  00001a70  08000044	j	L50_LF2
  995  00001a74  54000000	nop; delay slot nop
  996  00001a78          	L52_LF2:
  997  00001a78  8fc10000	lw	r1,(r30)
  998  00001a7c  8fc2fff4	lw	r2,-12(r30)
  999  00001a80  90210000	lbu	r1,(r1)
 1000  00001a84  90420000	lbu	r2,(r2)
 1001  00001a88  00220828	seq	r1,r1,r2
 1002  00001a8c  10200010	beqz	r1,L51_LF2
 1003  00001a90  54000000	nop; delay slot nop
 1004  00001a94  8fc10000	lw	r1,(r30)
 1005  00001a98  08000030	j	L45_LF2
 1006  00001a9c  54000000	nop; delay slot nop
 1007  00001aa0          	L53_LF2:
 1008  00001aa0          	L51_LF2:
 1009  00001aa0  8fc2fff4	lw	r2,-12(r30)
 1010  00001aa4  20410001	addi	r1,r2,#1
 1011  00001aa8  00011020	add	r2,r0,r1
 1012  00001aac  afc2fff4	sw	-12(r30),r2
 1013  00001ab0  0bffffa8	j	L49_LF2
 1014  00001ab4  54000000	nop; delay slot nop
 1015  00001ab8          	L50_LF2:
 1016  00001ab8  0bffff7c	j	L46_LF2
 1017  00001abc  54000000	nop; delay slot nop
 1018  00001ac0          	L47_LF2:
 1019  00001ac0  20010000	addi	r1,r0,#0
 1020  00001ac4  08000004	j	L45_LF2
 1021  00001ac8  54000000	nop; delay slot nop
 1022  00001acc          	L45_LF2:
 1023  00001acc  8fa20000	lw	r2,0(r29)
 1024  00001ad0  8fdffff8	lw	r31,-8(r30)
 1025  00001ad4  001ee820	add	r29,r0,r30
 1026  00001ad8  8fdefffc	lw	r30,-4(r30)
 1027  00001adc  4be00000	jr	r31
 1028  00001ae0  54000000	nop
 1029  00001ae4          	.endproc _dmindex
 1030  00001ae4          	.align 2
 1031  00001ae4          	.proc _dindex
 1032  00001ae4          	.global _dindex
 1033  00001ae4          	_dindex:
 1034                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1035  00001ae4  afbefffc	sw	-4(r29),r30; push fp
 1036  00001ae8  001df020	add	r30,r0,r29; fp = sp
 1037  00001aec  afbffff8	sw	-8(r29),r31; push ret addr
 1038  00001af0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1039  00001af4  afa20000	sw	0(r29),r2
 1040  00001af8  54000000	nop
 1041  00001afc          	L55_LF2:
 1042  00001afc  8fc10000	lw	r1,(r30)
 1043  00001b00  90220000	lbu	r2,(r1)
 1044  00001b04  64410000	snei	r1,r2,#0
 1045  00001b08  1420000c	bnez	r1,L57_LF2
 1046  00001b0c  54000000	nop; delay slot nop
 1047  00001b10  08000040	j	L56_LF2
 1048  00001b14  54000000	nop; delay slot nop
 1049  00001b18          	L57_LF2:
 1050  00001b18  8fc10000	lw	r1,(r30)
 1051  00001b1c  90220000	lbu	r2,(r1)
 1052  00001b20  8fc10004	lw	r1,4(r30)
 1053  00001b24  00411028	seq	r2,r2,r1
 1054  00001b28  10400010	beqz	r2,L58_LF2
 1055  00001b2c  54000000	nop; delay slot nop
 1056  00001b30  8fc10000	lw	r1,(r30)
 1057  00001b34  08000028	j	L54_LF2
 1058  00001b38  54000000	nop; delay slot nop
 1059  00001b3c          	L58_LF2:
 1060  00001b3c  8fc20000	lw	r2,(r30)
 1061  00001b40  20410001	addi	r1,r2,#1
 1062  00001b44  00011020	add	r2,r0,r1
 1063  00001b48  afc20000	sw	(r30),r2
 1064  00001b4c  0bffffac	j	L55_LF2
 1065  00001b50  54000000	nop; delay slot nop
 1066  00001b54          	L56_LF2:
 1067  00001b54  20010000	addi	r1,r0,#0
 1068  00001b58  08000004	j	L54_LF2
 1069  00001b5c  54000000	nop; delay slot nop
 1070  00001b60          	L54_LF2:
 1071  00001b60  8fa20000	lw	r2,0(r29)
 1072  00001b64  8fdffff8	lw	r31,-8(r30)
 1073  00001b68  001ee820	add	r29,r0,r30
 1074  00001b6c  8fdefffc	lw	r30,-4(r30)
 1075  00001b70  4be00000	jr	r31
 1076  00001b74  54000000	nop
 1077  00001b78          	.endproc _dindex
 1078  00001b78          	.align 2
 1079  00001b78          	.proc _ditoa
 1080  00001b78          	.global _ditoa
 1081  00001b78          	_ditoa:
 1082                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1083  00001b78  afbefffc	sw	-4(r29),r30; push fp
 1084  00001b7c  001df020	add	r30,r0,r29; fp = sp
 1085  00001b80  afbffff8	sw	-8(r29),r31; push ret addr
 1086  00001b84  2fbd0018	subui	r29,r29,#24; alloc local storage
 1087  00001b88  afa20000	sw	0(r29),r2
 1088  00001b8c  afa30004	sw	4(r29),r3
 1089  00001b90  8fc10000	lw	r1,(r30)
 1090  00001b94  68220000	slti	r2,r1,#0
 1091  00001b98  1040002c	beqz	r2,L60_LF2
 1092  00001b9c  54000000	nop; delay slot nop
 1093  00001ba0  8fc10004	lw	r1,4(r30)
 1094  00001ba4  20220001	addi	r2,r1,#1
 1095  00001ba8  afc20004	sw	4(r30),r2
 1096  00001bac  2002002d	addi	r2,r0,(#0x2d)&0xff
 1097  00001bb0  a0220000	sb	(r1),r2
 1098  00001bb4  8fc10000	lw	r1,(r30)
 1099  00001bb8  00011022	sub	r2,r0,r1
 1100  00001bbc  afc20000	sw	(r30),r2
 1101  00001bc0  08000118	j	L61_LF2
 1102  00001bc4  54000000	nop; delay slot nop
 1103  00001bc8          	L60_LF2:
 1104  00001bc8  8fc10000	lw	r1,(r30)
 1105  00001bcc  64220000	snei	r2,r1,#0
 1106  00001bd0  14400020	bnez	r2,L62_LF2
 1107  00001bd4  54000000	nop; delay slot nop
 1108  00001bd8  8fc10004	lw	r1,4(r30)
 1109  00001bdc  20220001	addi	r2,r1,#1
 1110  00001be0  afc20004	sw	4(r30),r2
 1111  00001be4  20020030	addi	r2,r0,(#0x30)&0xff
 1112  00001be8  a0220000	sb	(r1),r2
 1113  00001bec  080000ec	j	L61_LF2
 1114  00001bf0  54000000	nop; delay slot nop
 1115  00001bf4          	L62_LF2:
 1116  00001bf4  20010001	addi	r1,r0,#1
 1117  00001bf8  afc1fff4	sw	-12(r30),r1
 1118  00001bfc          	L64_LF2:
 1119  00001bfc  8fc1fff4	lw	r1,-12(r30)
 1120  00001c00  8fc20000	lw	r2,(r30)
 1121  00001c04  0022082c	sle	r1,r1,r2
 1122  00001c08  1420000c	bnez	r1,L66_LF2
 1123  00001c0c  54000000	nop; delay slot nop
 1124  00001c10  08000024	j	L65_LF2
 1125  00001c14  54000000	nop; delay slot nop
 1126  00001c18          	L67_LF2:
 1127  00001c18          	L66_LF2:
 1128  00001c18  8fc1fff4	lw	r1,-12(r30)
 1129  00001c1c  00011820	add	r3,r0,r1
 1130  00001c20  50620002	slli	r2,r3,#0x2
 1131  00001c24  00411020	add	r2,r2,r1
 1132  00001c28  50410001	slli	r1,r2,#0x1
 1133  00001c2c  afc1fff4	sw	-12(r30),r1
 1134  00001c30  0bffffc8	j	L64_LF2
 1135  00001c34  54000000	nop; delay slot nop
 1136  00001c38          	L65_LF2:
 1137  00001c38  54000000	nop
 1138  00001c3c          	L68_LF2:
 1139  00001c3c  8fc1fff4	lw	r1,-12(r30)
 1140  00001c40  2002000a	addi	r2,r0,#10
 1141  00001c44  00200035	movi2fp	f0,r1
 1142  00001c48  00400835	movi2fp	f1,r2
 1143  00001c4c  0401000f	div	f0,f0,f1
 1144  00001c50  00000834	movfp2i	r1,f0
 1145  00001c54  afc1fff4	sw	-12(r30),r1
 1146  00001c58  8fc10004	lw	r1,4(r30)
 1147  00001c5c  20220001	addi	r2,r1,#1
 1148  00001c60  afc20004	sw	4(r30),r2
 1149  00001c64  8fc20000	lw	r2,(r30)
 1150  00001c68  8fc3fff4	lw	r3,-12(r30)
 1151  00001c6c  00400035	movi2fp	f0,r2
 1152  00001c70  00600835	movi2fp	f1,r3
 1153  00001c74  0401000f	div	f0,f0,f1
 1154  00001c78  00001034	movfp2i	r2,f0
 1155  00001c7c  00021820	add	r3,r0,r2
 1156  00001c80  20620030	addi	r2,r3,#48
 1157  00001c84  a0220000	sb	(r1),r2
 1158  00001c88  8fc10000	lw	r1,(r30)
 1159  00001c8c  8fc3fff4	lw	r3,-12(r30)
 1160  00001c90  00200035	movi2fp	f0,r1
 1161  00001c94  00600835	movi2fp	f1,r3
 1162  00001c98  0401000f	div	f0,f0,f1
 1163  00001c9c  00001034	movfp2i	r2,f0
 1164  00001ca0  8fc3fff4	lw	r3,-12(r30)
 1165  00001ca4  00400035	movi2fp	f0,r2
 1166  00001ca8  00600835	movi2fp	f1,r3
 1167  00001cac  0401000e	mult	f0,f0,f1
 1168  00001cb0  00001034	movfp2i	r2,f0
 1169  00001cb4  00220822	sub	r1,r1,r2
 1170  00001cb8  afc10000	sw	(r30),r1
 1171  00001cbc          	L70_LF2:
 1172  00001cbc  8fc1fff4	lw	r1,-12(r30)
 1173  00001cc0  6c220001	sgti	r2,r1,#1
 1174  00001cc4  1440000c	bnez	r2,L71_LF2
 1175  00001cc8  54000000	nop; delay slot nop
 1176  00001ccc  0800000c	j	L61_LF2
 1177  00001cd0  54000000	nop; delay slot nop
 1178  00001cd4          	L71_LF2:
 1179  00001cd4  0bffff64	j	L68_LF2
 1180  00001cd8  54000000	nop; delay slot nop
 1181  00001cdc          	L69_LF2:
 1182  00001cdc          	L63_LF2:
 1183  00001cdc          	L61_LF2:
 1184  00001cdc  8fc10004	lw	r1,4(r30)
 1185  00001ce0  20020000	addi	r2,r0,(#0x0)&0xff
 1186  00001ce4  a0220000	sb	(r1),r2
 1187  00001ce8          	L59_LF2:
 1188  00001ce8  8fa20000	lw	r2,0(r29)
 1189  00001cec  8fa30004	lw	r3,4(r29)
 1190  00001cf0  8fdffff8	lw	r31,-8(r30)
 1191  00001cf4  001ee820	add	r29,r0,r30
 1192  00001cf8  8fdefffc	lw	r30,-4(r30)
 1193  00001cfc  4be00000	jr	r31
 1194  00001d00  54000000	nop
 1195  00001d04          	.endproc _ditoa
 1196  00001d04          	.align 2
 1197  00001d04          	.proc _dstrtol
 1198  00001d04          	.global _dstrtol
 1199  00001d04          	_dstrtol:
 1200                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1201  00001d04  afbefffc	sw	-4(r29),r30; push fp
 1202  00001d08  001df020	add	r30,r0,r29; fp = sp
 1203  00001d0c  afbffff8	sw	-8(r29),r31; push ret addr
 1204  00001d10  2fbd0020	subui	r29,r29,#32; alloc local storage
 1205  00001d14  afa20000	sw	0(r29),r2
 1206  00001d18  20010000	addi	r1,r0,#0
 1207  00001d1c  afc1fff4	sw	-12(r30),r1
 1208  00001d20          	L73_LF2:
 1209  00001d20  8fc10000	lw	r1,(r30)
 1210  00001d24  90220000	lbu	r2,(r1)
 1211  00001d28  60410020	seqi	r1,r2,#32
 1212  00001d2c  14200034	bnez	r1,L75_LF2
 1213  00001d30  54000000	nop; delay slot nop
 1214  00001d34  8fc10000	lw	r1,(r30)
 1215  00001d38  90220000	lbu	r2,(r1)
 1216  00001d3c  60410009	seqi	r1,r2,#9
 1217  00001d40  14200020	bnez	r1,L75_LF2
 1218  00001d44  54000000	nop; delay slot nop
 1219  00001d48  8fc10000	lw	r1,(r30)
 1220  00001d4c  90220000	lbu	r2,(r1)
 1221  00001d50  6041000a	seqi	r1,r2,#10
 1222  00001d54  1420000c	bnez	r1,L75_LF2
 1223  00001d58  54000000	nop; delay slot nop
 1224  00001d5c  0800001c	j	L74_LF2
 1225  00001d60  54000000	nop; delay slot nop
 1226  00001d64          	L75_LF2:
 1227  00001d64  8fc20000	lw	r2,(r30)
 1228  00001d68  20410001	addi	r1,r2,#1
 1229  00001d6c  00011020	add	r2,r0,r1
 1230  00001d70  afc20000	sw	(r30),r2
 1231  00001d74  0bffffa8	j	L73_LF2
 1232  00001d78  54000000	nop; delay slot nop
 1233  00001d7c          	L74_LF2:
 1234  00001d7c  8fc10004	lw	r1,4(r30)
 1235  00001d80  64220000	snei	r2,r1,#0
 1236  00001d84  10400010	beqz	r2,L76_LF2
 1237  00001d88  54000000	nop; delay slot nop
 1238  00001d8c  8fc10004	lw	r1,4(r30)
 1239  00001d90  8fc20000	lw	r2,(r30)
 1240  00001d94  ac220000	sw	(r1),r2
 1241  00001d98          	L76_LF2:
 1242  00001d98  8fc10000	lw	r1,(r30)
 1243  00001d9c  90220000	lbu	r2,(r1)
 1244  00001da0  64410000	snei	r1,r2,#0
 1245  00001da4  14200010	bnez	r1,L77_LF2
 1246  00001da8  54000000	nop; delay slot nop
 1247  00001dac  8fc1fff4	lw	r1,-12(r30)
 1248  00001db0  08000294	j	L72_LF2
 1249  00001db4  54000000	nop; delay slot nop
 1250  00001db8          	L77_LF2:
 1251  00001db8  8fc10000	lw	r1,(r30)
 1252  00001dbc  90220000	lbu	r2,(r1)
 1253  00001dc0  6041002d	seqi	r1,r2,#45
 1254  00001dc4  10200024	beqz	r1,L78_LF2
 1255  00001dc8  54000000	nop; delay slot nop
 1256  00001dcc  2001ffff	addi	r1,r0,#-1
 1257  00001dd0  afc1ffec	sw	-20(r30),r1
 1258  00001dd4  8fc20000	lw	r2,(r30)
 1259  00001dd8  20410001	addi	r1,r2,#1
 1260  00001ddc  00011020	add	r2,r0,r1
 1261  00001de0  afc20000	sw	(r30),r2
 1262  00001de4  0800000c	j	L79_LF2
 1263  00001de8  54000000	nop; delay slot nop
 1264  00001dec          	L78_LF2:
 1265  00001dec  20010001	addi	r1,r0,#1
 1266  00001df0  afc1ffec	sw	-20(r30),r1
 1267  00001df4          	L79_LF2:
 1268  00001df4  8fc10008	lw	r1,8(r30)
 1269  00001df8  64220000	snei	r2,r1,#0
 1270  00001dfc  14400090	bnez	r2,L80_LF2
 1271  00001e00  54000000	nop; delay slot nop
 1272  00001e04  8fc10000	lw	r1,(r30)
 1273  00001e08  90220000	lbu	r2,(r1)
 1274  00001e0c  60410030	seqi	r1,r2,#48
 1275  00001e10  10200074	beqz	r1,L81_LF2
 1276  00001e14  54000000	nop; delay slot nop
 1277  00001e18  8fc20000	lw	r2,(r30)
 1278  00001e1c  20410001	addi	r1,r2,#1
 1279  00001e20  00011020	add	r2,r0,r1
 1280  00001e24  afc20000	sw	(r30),r2
 1281  00001e28  8fc10000	lw	r1,(r30)
 1282  00001e2c  90220000	lbu	r2,(r1)
 1283  00001e30  60410078	seqi	r1,r2,#120
 1284  00001e34  14200020	bnez	r1,L83_LF2
 1285  00001e38  54000000	nop; delay slot nop
 1286  00001e3c  8fc10000	lw	r1,(r30)
 1287  00001e40  90220000	lbu	r2,(r1)
 1288  00001e44  60410058	seqi	r1,r2,#88
 1289  00001e48  1420000c	bnez	r1,L83_LF2
 1290  00001e4c  54000000	nop; delay slot nop
 1291  00001e50  08000024	j	L82_LF2
 1292  00001e54  54000000	nop; delay slot nop
 1293  00001e58          	L83_LF2:
 1294  00001e58  20010010	addi	r1,r0,#16
 1295  00001e5c  afc10008	sw	8(r30),r1
 1296  00001e60  8fc20000	lw	r2,(r30)
 1297  00001e64  20410001	addi	r1,r2,#1
 1298  00001e68  00011020	add	r2,r0,r1
 1299  00001e6c  afc20000	sw	(r30),r2
 1300  00001e70  0800000c	j	L84_LF2
 1301  00001e74  54000000	nop; delay slot nop
 1302  00001e78          	L82_LF2:
 1303  00001e78  20010008	addi	r1,r0,#8
 1304  00001e7c  afc10008	sw	8(r30),r1
 1305  00001e80          	L84_LF2:
 1306  00001e80  0800000c	j	L80_LF2
 1307  00001e84  54000000	nop; delay slot nop
 1308  00001e88          	L81_LF2:
 1309  00001e88  2001000a	addi	r1,r0,#10
 1310  00001e8c  afc10008	sw	8(r30),r1
 1311  00001e90          	L85_LF2:
 1312  00001e90          	L80_LF2:
 1313  00001e90  8fc10008	lw	r1,8(r30)
 1314  00001e94  70220000	slei	r2,r1,#0
 1315  00001e98  1440001c	bnez	r2,L87_LF2
 1316  00001e9c  54000000	nop; delay slot nop
 1317  00001ea0  8fc10008	lw	r1,8(r30)
 1318  00001ea4  6c220010	sgti	r2,r1,#16
 1319  00001ea8  1440000c	bnez	r2,L87_LF2
 1320  00001eac  54000000	nop; delay slot nop
 1321  00001eb0  08000010	j	L86_LF2
 1322  00001eb4  54000000	nop; delay slot nop
 1323  00001eb8          	L87_LF2:
 1324  00001eb8  8fc1fff4	lw	r1,-12(r30)
 1325  00001ebc  08000188	j	L72_LF2
 1326  00001ec0  54000000	nop; delay slot nop
 1327  00001ec4          	L86_LF2:
 1328  00001ec4  54000000	nop
 1329  00001ec8          	L88_LF2:
 1330  00001ec8  8fc10000	lw	r1,(r30)
 1331  00001ecc  90220000	lbu	r2,(r1)
 1332  00001ed0  6c41002f	sgtui	r1,r2,#47
 1333  00001ed4  10200030	beqz	r1,L91_LF2
 1334  00001ed8  54000000	nop; delay slot nop
 1335  00001edc  8fc10000	lw	r1,(r30)
 1336  00001ee0  90220000	lbu	r2,(r1)
 1337  00001ee4  70410039	sleui	r1,r2,#57
 1338  00001ee8  1020001c	beqz	r1,L91_LF2
 1339  00001eec  54000000	nop; delay slot nop
 1340  00001ef0  8fc10000	lw	r1,(r30)
 1341  00001ef4  90220000	lbu	r2,(r1)
 1342  00001ef8  2041ffd0	addi	r1,r2,#-48
 1343  00001efc  afc1fff0	sw	-16(r30),r1
 1344  00001f00  0800008c	j	L92_LF2
 1345  00001f04  54000000	nop; delay slot nop
 1346  00001f08          	L91_LF2:
 1347  00001f08  8fc10000	lw	r1,(r30)
 1348  00001f0c  90220000	lbu	r2,(r1)
 1349  00001f10  6c410060	sgtui	r1,r2,#96
 1350  00001f14  10200030	beqz	r1,L93_LF2
 1351  00001f18  54000000	nop; delay slot nop
 1352  00001f1c  8fc10000	lw	r1,(r30)
 1353  00001f20  90220000	lbu	r2,(r1)
 1354  00001f24  7041007a	sleui	r1,r2,#122
 1355  00001f28  1020001c	beqz	r1,L93_LF2
 1356  00001f2c  54000000	nop; delay slot nop
 1357  00001f30  8fc10000	lw	r1,(r30)
 1358  00001f34  90220000	lbu	r2,(r1)
 1359  00001f38  2041ffa9	addi	r1,r2,#-87
 1360  00001f3c  afc1fff0	sw	-16(r30),r1
 1361  00001f40  0800004c	j	L92_LF2
 1362  00001f44  54000000	nop; delay slot nop
 1363  00001f48          	L93_LF2:
 1364  00001f48  8fc10000	lw	r1,(r30)
 1365  00001f4c  90220000	lbu	r2,(r1)
 1366  00001f50  6c410040	sgtui	r1,r2,#64
 1367  00001f54  10200030	beqz	r1,L95_LF2
 1368  00001f58  54000000	nop; delay slot nop
 1369  00001f5c  8fc10000	lw	r1,(r30)
 1370  00001f60  90220000	lbu	r2,(r1)
 1371  00001f64  7041005a	sleui	r1,r2,#90
 1372  00001f68  1020001c	beqz	r1,L95_LF2
 1373  00001f6c  54000000	nop; delay slot nop
 1374  00001f70  8fc10000	lw	r1,(r30)
 1375  00001f74  90220000	lbu	r2,(r1)
 1376  00001f78  2041ffc9	addi	r1,r2,#-55
 1377  00001f7c  afc1fff0	sw	-16(r30),r1
 1378  00001f80  0800000c	j	L92_LF2
 1379  00001f84  54000000	nop; delay slot nop
 1380  00001f88          	L95_LF2:
 1381  00001f88  200103e8	addi	r1,r0,#1000
 1382  00001f8c  afc1fff0	sw	-16(r30),r1
 1383  00001f90          	L96_LF2:
 1384  00001f90          	L94_LF2:
 1385  00001f90          	L92_LF2:
 1386  00001f90  8fc1fff0	lw	r1,-16(r30)
 1387  00001f94  8fc20008	lw	r2,8(r30)
 1388  00001f98  0022082a	slt	r1,r1,r2
 1389  00001f9c  10200040	beqz	r1,L90_LF2
 1390  00001fa0  54000000	nop; delay slot nop
 1391  00001fa4  8fc1fff4	lw	r1,-12(r30)
 1392  00001fa8  8fc20008	lw	r2,8(r30)
 1393  00001fac  00200035	movi2fp	f0,r1
 1394  00001fb0  00400835	movi2fp	f1,r2
 1395  00001fb4  0401000e	mult	f0,f0,f1
 1396  00001fb8  00000834	movfp2i	r1,f0
 1397  00001fbc  afc1fff4	sw	-12(r30),r1
 1398  00001fc0  8fc1fff4	lw	r1,-12(r30)
 1399  00001fc4  8fc2fff0	lw	r2,-16(r30)
 1400  00001fc8  00220820	add	r1,r1,r2
 1401  00001fcc  afc1fff4	sw	-12(r30),r1
 1402  00001fd0  8fc20000	lw	r2,(r30)
 1403  00001fd4  20410001	addi	r1,r2,#1
 1404  00001fd8  00011020	add	r2,r0,r1
 1405  00001fdc  afc20000	sw	(r30),r2
 1406  00001fe0          	L97_LF2:
 1407  00001fe0          	L90_LF2:
 1408  00001fe0  8fc1fff0	lw	r1,-16(r30)
 1409  00001fe4  8fc20008	lw	r2,8(r30)
 1410  00001fe8  0022082a	slt	r1,r1,r2
 1411  00001fec  1420000c	bnez	r1,L98_LF2
 1412  00001ff0  54000000	nop; delay slot nop
 1413  00001ff4  0800000c	j	L89_LF2
 1414  00001ff8  54000000	nop; delay slot nop
 1415  00001ffc          	L98_LF2:
 1416  00001ffc  0bfffec8	j	L88_LF2
 1417  00002000  54000000	nop; delay slot nop
 1418  00002004          	L89_LF2:
 1419  00002004  8fc10004	lw	r1,4(r30)
 1420  00002008  64220000	snei	r2,r1,#0
 1421  0000200c  10400010	beqz	r2,L99_LF2
 1422  00002010  54000000	nop; delay slot nop
 1423  00002014  8fc10004	lw	r1,4(r30)
 1424  00002018  8fc20000	lw	r2,(r30)
 1425  0000201c  ac220000	sw	(r1),r2
 1426  00002020          	L99_LF2:
 1427  00002020  8fc1fff4	lw	r1,-12(r30)
 1428  00002024  8fc2ffec	lw	r2,-20(r30)
 1429  00002028  00200035	movi2fp	f0,r1
 1430  0000202c  00400835	movi2fp	f1,r2
 1431  00002030  0401000e	mult	f0,f0,f1
 1432  00002034  00000834	movfp2i	r1,f0
 1433  00002038  afc1fff4	sw	-12(r30),r1
 1434  0000203c  8fc1fff4	lw	r1,-12(r30)
 1435  00002040  08000004	j	L72_LF2
 1436  00002044  54000000	nop; delay slot nop
 1437  00002048          	L72_LF2:
 1438  00002048  8fa20000	lw	r2,0(r29)
 1439  0000204c  8fdffff8	lw	r31,-8(r30)
 1440  00002050  001ee820	add	r29,r0,r30
 1441  00002054  8fdefffc	lw	r30,-4(r30)
 1442  00002058  4be00000	jr	r31
 1443  0000205c  54000000	nop
 1444  00002060          	.endproc _dstrtol
 1445  00002060          	.align 2
 1446  00002060          	.proc _bcopy
 1447  00002060          	.global _bcopy
 1448  00002060          	_bcopy:
 1449                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1450  00002060  afbefffc	sw	-4(r29),r30; push fp
 1451  00002064  001df020	add	r30,r0,r29; fp = sp
 1452  00002068  afbffff8	sw	-8(r29),r31; push ret addr
 1453  0000206c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1454  00002070  afa20000	sw	0(r29),r2
 1455  00002074  afa30004	sw	4(r29),r3
 1456  00002078  54000000	nop
 1457  0000207c          	L101_LF2:
 1458  0000207c  8fc10008	lw	r1,8(r30)
 1459  00002080  2022ffff	addi	r2,r1,#-1
 1460  00002084  afc20008	sw	8(r30),r2
 1461  00002088  6c210000	sgti	r1,r1,#0
 1462  0000208c  1420000c	bnez	r1,L103_LF2
 1463  00002090  54000000	nop; delay slot nop
 1464  00002094  0800002c	j	L102_LF2
 1465  00002098  54000000	nop; delay slot nop
 1466  0000209c          	L103_LF2:
 1467  0000209c  8fc10004	lw	r1,4(r30)
 1468  000020a0  20220001	addi	r2,r1,#1
 1469  000020a4  afc20004	sw	4(r30),r2
 1470  000020a8  8fc20000	lw	r2,(r30)
 1471  000020ac  20430001	addi	r3,r2,#1
 1472  000020b0  afc30000	sw	(r30),r3
 1473  000020b4  80420000	lb	r2,(r2)
 1474  000020b8  a0220000	sb	(r1),r2
 1475  000020bc  0bffffbc	j	L101_LF2
 1476  000020c0  54000000	nop; delay slot nop
 1477  000020c4          	L102_LF2:
 1478  000020c4          	L100_LF2:
 1479  000020c4  8fa20000	lw	r2,0(r29)
 1480  000020c8  8fa30004	lw	r3,4(r29)
 1481  000020cc  8fdffff8	lw	r31,-8(r30)
 1482  000020d0  001ee820	add	r29,r0,r30
 1483  000020d4  8fdefffc	lw	r30,-4(r30)
 1484  000020d8  4be00000	jr	r31
 1485  000020dc  54000000	nop
 1486  000020e0          	.endproc _bcopy
 1487  000020e0          	.align 2
 1488  000020e0          	.proc _bzero
 1489  000020e0          	.global _bzero
 1490  000020e0          	_bzero:
 1491                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1492  000020e0  afbefffc	sw	-4(r29),r30; push fp
 1493  000020e4  001df020	add	r30,r0,r29; fp = sp
 1494  000020e8  afbffff8	sw	-8(r29),r31; push ret addr
 1495  000020ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 1496  000020f0  afa20000	sw	0(r29),r2
 1497  000020f4  54000000	nop
 1498  000020f8          	L105_LF2:
 1499  000020f8  8fc10004	lw	r1,4(r30)
 1500  000020fc  2022ffff	addi	r2,r1,#-1
 1501  00002100  afc20004	sw	4(r30),r2
 1502  00002104  6c210000	sgti	r1,r1,#0
 1503  00002108  1420000c	bnez	r1,L107_LF2
 1504  0000210c  54000000	nop; delay slot nop
 1505  00002110  08000020	j	L106_LF2
 1506  00002114  54000000	nop; delay slot nop
 1507  00002118          	L107_LF2:
 1508  00002118  8fc10000	lw	r1,(r30)
 1509  0000211c  20220001	addi	r2,r1,#1
 1510  00002120  afc20000	sw	(r30),r2
 1511  00002124  20020000	addi	r2,r0,(#0x0)&0xff
 1512  00002128  a0220000	sb	(r1),r2
 1513  0000212c  0bffffc8	j	L105_LF2
 1514  00002130  54000000	nop; delay slot nop
 1515  00002134          	L106_LF2:
 1516  00002134          	L104_LF2:
 1517  00002134  8fa20000	lw	r2,0(r29)
 1518  00002138  8fdffff8	lw	r31,-8(r30)
 1519  0000213c  001ee820	add	r29,r0,r30
 1520  00002140  8fdefffc	lw	r30,-4(r30)
 1521  00002144  4be00000	jr	r31
 1522  00002148  54000000	nop
 1523  0000214c          	.endproc _bzero
 1524  0000214c          	.align 2
 1525  0000214c          	.proc _min
 1526  0000214c          	.global _min
 1527  0000214c          	_min:
 1528                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1529  0000214c  afbefffc	sw	-4(r29),r30; push fp
 1530  00002150  001df020	add	r30,r0,r29; fp = sp
 1531  00002154  afbffff8	sw	-8(r29),r31; push ret addr
 1532  00002158  2fbd0010	subui	r29,r29,#16; alloc local storage
 1533  0000215c  afa20000	sw	0(r29),r2
 1534  00002160  afa30004	sw	4(r29),r3
 1535  00002164  8fc10000	lw	r1,(r30)
 1536  00002168  8fc20004	lw	r2,4(r30)
 1537  0000216c  0022182c	sle	r3,r1,r2
 1538  00002170  14600008	bnez	r3,L109_LF2
 1539  00002174  54000000	nop; delay slot nop
 1540  00002178  8fc10004	lw	r1,4(r30)
 1541  0000217c          	L109_LF2:
 1542  0000217c  08000004	j	L108_LF2
 1543  00002180  54000000	nop; delay slot nop
 1544  00002184          	L108_LF2:
 1545  00002184  8fa20000	lw	r2,0(r29)
 1546  00002188  8fa30004	lw	r3,4(r29)
 1547  0000218c  8fdffff8	lw	r31,-8(r30)
 1548  00002190  001ee820	add	r29,r0,r30
 1549  00002194  8fdefffc	lw	r30,-4(r30)
 1550  00002198  4be00000	jr	r31
 1551  0000219c  54000000	nop
 1552  000021a0          	.endproc _min
 1553  000021a0          	.align 2
 1554  000021a0          	.proc _max
 1555  000021a0          	.global _max
 1556  000021a0          	_max:
 1557                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1558  000021a0  afbefffc	sw	-4(r29),r30; push fp
 1559  000021a4  001df020	add	r30,r0,r29; fp = sp
 1560  000021a8  afbffff8	sw	-8(r29),r31; push ret addr
 1561  000021ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1562  000021b0  afa20000	sw	0(r29),r2
 1563  000021b4  afa30004	sw	4(r29),r3
 1564  000021b8  8fc10000	lw	r1,(r30)
 1565  000021bc  8fc20004	lw	r2,4(r30)
 1566  000021c0  0022182d	sge	r3,r1,r2
 1567  000021c4  14600008	bnez	r3,L111_LF2
 1568  000021c8  54000000	nop; delay slot nop
 1569  000021cc  8fc10004	lw	r1,4(r30)
 1570  000021d0          	L111_LF2:
 1571  000021d0  08000004	j	L110_LF2
 1572  000021d4  54000000	nop; delay slot nop
 1573  000021d8          	L110_LF2:
 1574  000021d8  8fa20000	lw	r2,0(r29)
 1575  000021dc  8fa30004	lw	r3,4(r29)
 1576  000021e0  8fdffff8	lw	r31,-8(r30)
 1577  000021e4  001ee820	add	r29,r0,r30
 1578  000021e8  8fdefffc	lw	r30,-4(r30)
 1579  000021ec  4be00000	jr	r31
 1580  000021f0  54000000	nop
 1581  000021f4          	.endproc _max
 1582                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1583                      ;;;
 1584                      ;;; Most of the traps are called in files from libtraps.
 1587  000021f4          	.align 2
 1588  000021f4          	.proc _exit
 1589  000021f4          	.global _exit
 1590  000021f4          	_exit:
 1591  000021f4  44000300	trap	#0x300
 1592  000021f8  4be00000	jr	r31
 1593  000021fc  54000000	nop
 1594  00002200          	.endproc _exit
 1596                      ; for the benefit of gcc.
 1597  00002200          	.proc ___main
 1598  00002200          	.global ___main
 1599  00002200          	___main:
 1600  00002200  4be00000	jr	r31
 1601  00002204  54000000	nop
 1602  00002208          	.endproc ___main
 1603  00002208          	.text
 1604  00002208          	.global _etext
 1605  00002208          	_etext:
 1606  00002208          	.align 3
 1607  00002208          	.data
 1608  000030f1          	.global _edata
 1609  000030f1          	_edata:
